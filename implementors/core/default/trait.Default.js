(function() {var implementors = {};
implementors["coaster"] = [{"text":"impl Default for Hardware","synthetic":false,"types":[]},{"text":"impl Default for Function","synthetic":false,"types":[]},{"text":"impl Default for Binary","synthetic":false,"types":[]},{"text":"impl Default for Device","synthetic":false,"types":[]}];
implementors["juice"] = [{"text":"impl Default for DropoutConfig","synthetic":false,"types":[]},{"text":"impl Default for Linear","synthetic":false,"types":[]},{"text":"impl Default for LogSoftmax","synthetic":false,"types":[]},{"text":"impl Default for Softmax","synthetic":false,"types":[]},{"text":"impl Default for SequentialConfig","synthetic":false,"types":[]},{"text":"impl Default for MeanSquaredError","synthetic":false,"types":[]},{"text":"impl Default for SolverConfig","synthetic":false,"types":[]},{"text":"impl Default for WeightConfig","synthetic":false,"types":[]}];
implementors["rcudnn"] = [{"text":"impl&lt;T&gt; Default for ScalParams&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Float + Zero + One + DataTypeInfo,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["rcudnn_sys"] = [{"text":"impl Default for cudnnConvolutionFwdAlgoPerf_t","synthetic":false,"types":[]},{"text":"impl Default for cudnnConvolutionBwdFilterAlgoPerf_t","synthetic":false,"types":[]},{"text":"impl Default for cudnnConvolutionBwdDataAlgoPerf_t","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
var searchIndex = JSON.parse('{\
"coaster":{"doc":"Provides a simple and unified API to run fast and highly …","i":[[0,"backend","coaster","Provides the interface for running parallel computations …",null,null],[3,"Backend","coaster::backend","Defines the main and highest struct of Coaster.",null,null],[12,"framework","","Provides the Framework.",0,null],[11,"new","","Initialize a new native Backend from a BackendConfig.",0,[[["backendconfig",3]],[["backend",3],["error",4],["result",4]]]],[11,"hardwares","","Returns the available hardware.",0,[[]]],[11,"framework","","Returns the backend framework.",0,[[]]],[11,"device","","Returns the backend device.",0,[[]]],[8,"IBackend","","Describes a Backend.",null,null],[16,"F","","Represents the Framework of a Backend.",1,null],[10,"device","","Returns the backend device.",1,[[]]],[11,"default","","Try to create a default backend.",1,[[],[["error",4],["backend",3],["result",4]]]],[11,"synchronize","","Synchronize backend.",1,[[],[["error",4],["result",4]]]],[3,"BackendConfig","","Provides Backend Configuration.",null,null],[11,"new","","Creates a new BackendConfig.",2,[[],["backendconfig",3]]],[0,"binary","coaster","Provides the generic functionality for a backend-specific …",null,null],[8,"IBinary","coaster::binary","Defines the functionality for turning a library into …",null,null],[0,"device","coaster","Provides a representation for one or many ready to use …",null,null],[8,"IMemory","coaster::device","Marker trait for backing memory.",null,null],[8,"IDevice","","Specifies Hardware behavior across frameworks.",null,null],[16,"H","","The Hardware representation for this Device.",3,null],[16,"M","","The Memory representation for this Device.",3,null],[10,"id","","Returns the unique identifier of the Device.",3,[[],["isize",15]]],[10,"hardwares","","Returns the hardwares, which define the Device.",3,[[],["vec",3]]],[10,"alloc_memory","","Allocate memory on the Device.",3,[[["usize",15]],[["error",4],["result",4]]]],[8,"MemorySync","","This trait should be implemented for <code>Device</code>. Use of <code>Any</code> …",null,null],[10,"sync_in","","FIXME",4,[[["any",8],["any",8]],[["error",4],["result",4]]]],[10,"sync_out","","FIXME",4,[[["any",8],["any",8]],[["error",4],["result",4]]]],[4,"Error","","Defines a generic set of Memory Errors.",null,null],[13,"NoMemorySyncRoute","","No route found for memory transfer between devices",5,null],[13,"MemorySyncError","","Framework error at memory synchronization.",5,null],[13,"MemoryAllocationError","","Framework error at memory allocation.",5,null],[13,"Native","","Failures related to the Native framework implementation.",5,null],[13,"Cuda","","Failures related to the Cuda framework implementation.",5,null],[0,"error","coaster","Defines the general set of error types in Coaster.",null,null],[4,"Error","coaster::error","Defines the set of available Coaster error types.",null,null],[13,"Framework","","Failure related to the Framework implementation.",6,null],[13,"Tensor","","Failure related to the Tensor.",6,null],[13,"Plugin","","Failure at Plugin Operation.",6,null],[13,"Device","","Failure related to a Device.",6,null],[0,"framework","coaster","Provides the generic functionality of a hardware …",null,null],[8,"IFramework","coaster::framework","Defines a Framework.",null,null],[16,"H","","The Hardware representation for this Framework.",7,null],[16,"D","","The Device representation for this Framework.",7,null],[16,"B","","The Binary representation for this Framework.",7,null],[10,"ID","","Defines the Framework by a Name.",7,[[],["str",15]]],[10,"new","","Initializes a new Framework.",7,[[]]],[10,"load_hardwares","","Initializes all the available hardwares.",7,[[],[["vec",3],["result",4],["error",4]]]],[10,"hardwares","","Returns the cached and available hardwares.",7,[[]]],[10,"binary","","Returns the initialized binary.",7,[[]]],[10,"new_device","","Initializes a new Device from the provided hardwares.",7,[[],[["error",4],["result",4]]]],[4,"Error","","Defines a generic set of Framework Errors.",null,null],[13,"Cuda","","Failures related to the Cuda framework implementation.",8,null],[13,"Implementation","","Failure related to the Coaster implementation of a …",8,null],[0,"frameworks","coaster","Exposes the specific Framework implementations.",null,null],[0,"cuda","coaster::frameworks","Provides informations about the software system, such as …",null,null],[0,"context","coaster::frameworks::cuda","Provides a Rust wrapper around Cuda\'s context.",null,null],[3,"Context","coaster::frameworks::cuda::context","Defines a Cuda Context.",null,null],[11,"new","","Initializes a new Cuda context.",9,[[["device",3]],[["result",4],["context",3],["drivererror",4]]]],[11,"from_c","","Initializes a new Cuda platform from its C type.",9,[[["device",3],["vec",3]],["context",3]]],[11,"id","","Returns the id as isize.",9,[[],["isize",15]]],[11,"id_c","","Returns the id as its C type.",9,[[]]],[11,"synchronize","","Synchronize this Context.",9,[[],[["drivererror",4],["result",4]]]],[0,"device","coaster::frameworks::cuda","Provides a Rust wrapper around Cuda\'s device.",null,null],[3,"Device","coaster::frameworks::cuda::device","Defines a Cuda Device.",null,null],[11,"from_isize","","Initializes a new Cuda device.",10,[[["isize",15]],["device",3]]],[11,"from_c","","Initializes a new Cuda device from its C type.",10,[[["c_int",6]],["device",3]]],[11,"id_c","","Returns the id as its C type.",10,[[],["c_int",6]]],[11,"load_name","","Loads the name of the device via a foreign Cuda call.",10,[[]]],[11,"load_device_type","","Loads the device type via a foreign Cuda call.",10,[[]]],[11,"load_compute_units","","Loads the compute units of the device via a foreign Cuda …",10,[[]]],[3,"DeviceInfo","","Defines a generic DeviceInfo container.",null,null],[11,"new","","Initializes a new Device Info",11,[[["vec",3],["u8",15]],["deviceinfo",3]]],[11,"to_isize","","",11,[[],["isize",15]]],[0,"function","coaster::frameworks::cuda","Provides a Rust wrapper around Cuda\'s Function.",null,null],[3,"Function","coaster::frameworks::cuda::function","Defines a Cuda Function.",null,null],[11,"from_isize","","Initializes a new OpenCL device.",12,[[["isize",15]],["function",3]]],[0,"memory","coaster::frameworks::cuda","Provides a Rust wrapper around Cuda\'s memory.",null,null],[3,"Memory","coaster::frameworks::cuda::memory","Defines a Cuda Memory.",null,null],[11,"new","","Initializes a new Cuda memory.",13,[[["usize",15]],[["result",4],["memory",3],["drivererror",4]]]],[11,"from_c","","Initializes a new Cuda memory from its C type.",13,[[["c_ulonglong",6]],["memory",3]]],[11,"id_c","","Returns the memory id as its C type.",13,[[],["c_ulonglong",6]]],[0,"module","coaster::frameworks::cuda","Provides a Rust wrapper around Cuda\'s Module.",null,null],[3,"Module","coaster::frameworks::cuda::module","Defines a Cuda Module.",null,null],[11,"from_isize","","Initializes a new Cuda Module.",14,[[["isize",15]],["module",3]]],[3,"Driver","coaster::frameworks::cuda","Defines the Cuda API.",null,null],[4,"DriverError","","OpenCL device errors",null,null],[13,"InvalidValue","","",15,null],[13,"OutOfMemory","","",15,null],[13,"NotInitialized","","",15,null],[13,"Deinitialized","","",15,null],[13,"ProfilerDisabled","","",15,null],[13,"ProfilerNotInitialized","","",15,null],[13,"ProfilerAlreadyStarted","","",15,null],[13,"ProfilerAlreadyStopped","","",15,null],[13,"NoDevice","","",15,null],[13,"InvalidDevice","","",15,null],[13,"InvalidImage","","",15,null],[13,"InvalidContext","","",15,null],[13,"ContextAlreadyCurrent","","",15,null],[13,"MapFailed","","",15,null],[13,"UnmapFailed","","",15,null],[13,"ArrayIsMapped","","",15,null],[13,"AlreadyMapped","","",15,null],[13,"NoBinaryForGpu","","",15,null],[13,"AlreadyAquired","","",15,null],[13,"NotMapped","","",15,null],[13,"NotMappedAsArray","","",15,null],[13,"NotMappedAsPointer","","",15,null],[13,"EccUncorrectable","","",15,null],[13,"UnsupportedLimit","","",15,null],[13,"ContextAlreadyInUse","","",15,null],[13,"PeerAccessUnsupported","","",15,null],[13,"InvalidPtx","","",15,null],[13,"InvalidGraphicsContent","","",15,null],[13,"InvalidSource","","",15,null],[13,"FileNotFound","","",15,null],[13,"SharedObjectSymbolNotFound","","",15,null],[13,"SharedObjectInitFailed","","",15,null],[13,"OperatingSystem","","",15,null],[13,"InvalidHandle","","",15,null],[13,"NotFound","","",15,null],[13,"NotReady","","",15,null],[13,"IllegalAddress","","",15,null],[13,"LaunchOutOfResources","","",15,null],[13,"LaunchTimeout","","",15,null],[13,"LauncIncompatibleTexturing","","",15,null],[13,"PeerAccessAlreadyEnabled","","",15,null],[13,"PeerAccessNotEnabled","","",15,null],[13,"PrimaryContextActive","","",15,null],[13,"ContextIsDestroyed","","",15,null],[13,"Assert","","",15,null],[13,"TooManyPeers","","",15,null],[13,"HostMemoryAlreadyRegistered","","",15,null],[13,"HostMemoryNotRegistered","","",15,null],[13,"HardwareStackError","","",15,null],[13,"IllegalInstruction","","",15,null],[13,"MisalignedAddress","","",15,null],[13,"InvalidAddressSpace","","",15,null],[13,"InvalidPc","","",15,null],[13,"LaunchFailed","","",15,null],[13,"NotPermitted","","",15,null],[13,"NotSupported","","",15,null],[13,"Unknown","","",15,null],[5,"get_cuda_backend","","Initialise the CUDA, CUBLAS, and CUDNN APIs",null,[[],[["cuda",3],["backend",3]]]],[3,"Cuda","","Provides the Cuda Framework.",null,null],[11,"initialise_cublas","","Create a handle to CUBLAS and assign it to CUDA Object",16,[[],[["error",4],["result",4]]]],[11,"initialise_cudnn","","Create a handle to CUDNN and assign it to CUDA Object",16,[[],[["error",4],["result",4]]]],[11,"cudnn","","Return a reference to the CUDNN Handle",16,[[],["cudnn",3]]],[11,"cublas","","Return a reference to the CUBLAS Handle",16,[[],["context",3]]],[0,"native","coaster::frameworks","Provides informations about the software system, such as …",null,null],[0,"binary","coaster::frameworks::native","Provides a binary on native CPU.",null,null],[3,"Binary","coaster::frameworks::native::binary","Defines a host CPU binary.",null,null],[11,"new","","Initializes the native CPU binary.",17,[[],["binary",3]]],[0,"device","coaster::frameworks::native","Provides a hardware aka. the host CPU.",null,null],[3,"Cpu","coaster::frameworks::native::device","Defines the host CPU Hardware.",null,null],[11,"new","","Initializes a new OpenCL hardware.",18,[[["vec",3],["hardware",3]],["cpu",3]]],[0,"flatbox","coaster::frameworks::native","Provides a Box without any knowledge of its underlying …",null,null],[3,"FlatBox","coaster::frameworks::native::flatbox","A Box without any knowledge of its underlying type.",null,null],[11,"from_box","","Create FlatBox from Box, consuming it.",19,[[["box",3]],["flatbox",3]]],[11,"as_slice","","Access memory as slice.",19,[[]]],[11,"as_mut_slice","","Access memory as mutable slice.",19,[[]]],[11,"byte_size","","Returns memory size of the Flatbox.",19,[[],["usize",15]]],[0,"function","coaster::frameworks::native","Provides a operation on native CPU.",null,null],[3,"Function","coaster::frameworks::native::function","Defines a host CPU operation.",null,null],[11,"new","","Initializes a native CPU hardware.",20,[[],["function",3]]],[0,"hardware","coaster::frameworks::native","Provides a hardware aka. the host CPU.",null,null],[3,"Hardware","coaster::frameworks::native::hardware","Defines the host CPU Hardware.",null,null],[11,"new","","Initializes a new OpenCL hardware.",21,[[["isize",15]],["hardware",3]]],[4,"Error","coaster::frameworks::native","Defines the Native Error.",null,null],[13,"Memory","","Failure related to allocation, syncing memory",22,null],[5,"allocate_boxed_slice","","Traditional allocation via creation of a filled Vec.",null,[[["usize",15]],["box",3]]],[5,"get_native_backend","","Initialise the Native Backend for running Tensor …",null,[[],[["native",3],["backend",3]]]],[3,"Native","","Provides the Native framework.",null,null],[8,"INative","","Provides the Native framework trait for explicit Backend …",null,null],[0,"hardware","coaster","Provides a representation for a collection of available …",null,null],[4,"HardwareType","coaster::hardware","Specifies the available Hardware types.",null,null],[13,"CPU","","CPU devices",23,null],[13,"GPU","","GPU devices",23,null],[13,"ACCELERATOR","","Hardware Accelerator devices",23,null],[13,"OTHER","","Used for anything else",23,null],[8,"IHardware","","Specifies Hardware behavior accross frameworks.",null,null],[10,"id","","Returns the ID of the Hardware",24,[[],["isize",15]]],[10,"name","","Returns the name of the Hardware",24,[[],[["string",3],["option",4]]]],[10,"set_name","","Defines the name of the Hardware",24,[[["string",3],["option",4]]]],[10,"hardware_type","","Returns the device_type of the Hardware",24,[[],[["option",4],["hardwaretype",4]]]],[10,"set_hardware_type","","Defines the hardware_type of the Hardware",24,[[["option",4],["hardwaretype",4]]]],[10,"compute_units","","Returns the compute_units of the Hardware",24,[[],[["option",4],["isize",15]]]],[10,"set_compute_units","","Defines the compute_units of the Hardware",24,[[["option",4],["isize",15]]]],[10,"build","","Build an inmutable Hardware",24,[[]]],[0,"operation","coaster","Provides the generic functionality for backend-agnostic …",null,null],[8,"IOperation","coaster::operation","Defines the functionality of an operation.",null,null],[0,"plugin","coaster","Provides helpers for explicit implementations of Backend […",null,null],[0,"numeric_helpers","coaster::plugin","Describes numeric types and traits for a Plugin.",null,null],[0,"bounds","coaster::plugin::numeric_helpers","",null,null],[8,"Bounded","coaster::plugin::numeric_helpers::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",25,[[]]],[10,"max_value","","returns the largest finite number this type can represent",25,[[]]],[0,"cast","coaster::plugin::numeric_helpers","",null,null],[8,"ToPrimitive","coaster::plugin::numeric_helpers::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",26,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",26,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",26,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",26,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",26,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",26,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",26,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",26,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",26,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",26,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",26,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",26,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. If the value cannot …",26,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. If the value cannot …",26,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",27,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",27,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",27,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",27,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",27,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",27,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",27,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",27,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",27,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",27,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",27,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",27,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",27,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",27,[[["f64",15]],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",28,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",29,[[]]],[0,"float","coaster::plugin::numeric_helpers","",null,null],[8,"FloatCore","coaster::plugin::numeric_helpers::float","Generic trait for floating point numbers that works with …",null,null],[10,"infinity","","Returns positive infinity.",30,[[]]],[10,"neg_infinity","","Returns negative infinity.",30,[[]]],[10,"nan","","Returns NaN.",30,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",30,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",30,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",30,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",30,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",30,[[]]],[11,"is_nan","","Returns <code>true</code> if the number is NaN.",30,[[],["bool",15]]],[11,"is_infinite","","Returns <code>true</code> if the number is infinite.",30,[[],["bool",15]]],[11,"is_finite","","Returns <code>true</code> if the number is neither infinite or NaN.",30,[[],["bool",15]]],[11,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",30,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",30,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a …",30,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a …",30,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way …",30,[[]]],[11,"trunc","","Return the integer part of a number.",30,[[]]],[11,"fract","","Returns the fractional part of a number.",30,[[]]],[11,"abs","","Computes the absolute value of <code>self</code>. Returns …",30,[[]]],[11,"signum","","Returns a number that represents the sign of <code>self</code>.",30,[[]]],[11,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …",30,[[],["bool",15]]],[11,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …",30,[[],["bool",15]]],[11,"min","","Returns the minimum of the two numbers.",30,[[]]],[11,"max","","Returns the maximum of the two numbers.",30,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the …",30,[[]]],[11,"powi","","Raise a number to an integer power.",30,[[["i32",15]]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",30,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",30,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",30,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",31,[[]]],[10,"infinity","","Returns the infinite value.",31,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",31,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",31,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",31,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",31,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",31,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",31,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",31,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",31,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",31,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",31,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",31,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",31,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",31,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",31,[[]]],[10,"trunc","","Return the integer part of a number.",31,[[]]],[10,"fract","","Returns the fractional part of a number.",31,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",31,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",31,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",31,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",31,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",31,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",31,[[]]],[10,"powi","","Raise a number to an integer power.",31,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",31,[[]]],[10,"sqrt","","Take the square root of a number.",31,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",31,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",31,[[]]],[10,"ln","","Returns the natural logarithm of the number.",31,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",31,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",31,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",31,[[]]],[11,"to_degrees","","Converts radians to degrees.",31,[[]]],[11,"to_radians","","Converts degrees to radians.",31,[[]]],[10,"max","","Returns the maximum of the two numbers.",31,[[]]],[10,"min","","Returns the minimum of the two numbers.",31,[[]]],[10,"abs_sub","","The positive difference of two numbers.",31,[[]]],[10,"cbrt","","Take the cubic root of a number.",31,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",31,[[]]],[10,"sin","","Computes the sine of a number (in radians).",31,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",31,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",31,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",31,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",31,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",31,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",31,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",31,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",31,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",31,[[]]],[10,"sinh","","Hyperbolic sine function.",31,[[]]],[10,"cosh","","Hyperbolic cosine function.",31,[[]]],[10,"tanh","","Hyperbolic tangent function.",31,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",31,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",31,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",31,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",31,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",32,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",32,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",32,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",32,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",32,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",32,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",32,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",32,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",32,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",32,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",32,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",32,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",32,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",32,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",32,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",32,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",32,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",32,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",32,[[]]],[0,"identities","coaster::plugin::numeric_helpers","",null,null],[8,"Zero","coaster::plugin::numeric_helpers::identities","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",33,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",33,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",33,[[],["bool",15]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",34,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",34,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",34,[[],["bool",15]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[0,"int","coaster::plugin::numeric_helpers","",null,null],[8,"PrimInt","coaster::plugin::numeric_helpers::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",35,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",35,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",35,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",35,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",35,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",35,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",35,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",35,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",35,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",35,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",35,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",35,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",35,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",35,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",35,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",35,[[["u32",15]]]],[0,"ops","coaster::plugin::numeric_helpers","",null,null],[0,"checked","coaster::plugin::numeric_helpers::ops","",null,null],[8,"CheckedAdd","coaster::plugin::numeric_helpers::ops::checked","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",36,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",37,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",38,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",39,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",40,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",41,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",42,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",43,[[["u32",15]],["option",4]]],[0,"inv","coaster::plugin::numeric_helpers::ops","",null,null],[8,"Inv","coaster::plugin::numeric_helpers::ops::inv","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",44,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",44,[[]]],[0,"mul_add","coaster::plugin::numeric_helpers::ops","",null,null],[8,"MulAdd","coaster::plugin::numeric_helpers::ops::mul_add","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",45,null],[10,"mul_add","","Performs the fused multiply-add operation.",45,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",46,[[]]],[0,"saturating","coaster::plugin::numeric_helpers::ops","",null,null],[8,"Saturating","coaster::plugin::numeric_helpers::ops::saturating","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",47,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",47,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",48,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",49,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",50,[[]]],[0,"wrapping","coaster::plugin::numeric_helpers::ops","",null,null],[8,"WrappingAdd","coaster::plugin::numeric_helpers::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",51,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",52,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",53,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",54,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",55,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",56,[[["u32",15]]]],[0,"pow","coaster::plugin::numeric_helpers","",null,null],[8,"Pow","coaster::plugin::numeric_helpers::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",57,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",57,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[0,"real","coaster::plugin::numeric_helpers","",null,null],[8,"Real","coaster::plugin::numeric_helpers::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can …",58,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",58,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",58,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",58,[[]]],[10,"floor","","Returns the largest integer less than or equal to a …",58,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",58,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",58,[[]]],[10,"trunc","","Return the integer part of a number.",58,[[]]],[10,"fract","","Returns the fractional part of a number.",58,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",58,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",58,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",58,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",58,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",58,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",58,[[]]],[10,"powi","","Raise a number to an integer power.",58,[[["i32",15]]]],[10,"powf","","Raise a number to a real number power.",58,[[]]],[10,"sqrt","","Take the square root of a number.",58,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",58,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",58,[[]]],[10,"ln","","Returns the natural logarithm of the number.",58,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",58,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",58,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",58,[[]]],[10,"to_degrees","","Converts radians to degrees.",58,[[]]],[10,"to_radians","","Converts degrees to radians.",58,[[]]],[10,"max","","Returns the maximum of the two numbers.",58,[[]]],[10,"min","","Returns the minimum of the two numbers.",58,[[]]],[10,"abs_sub","","The positive difference of two numbers.",58,[[]]],[10,"cbrt","","Take the cubic root of a number.",58,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",58,[[]]],[10,"sin","","Computes the sine of a number (in radians).",58,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",58,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",58,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",58,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",58,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",58,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",58,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",58,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",58,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",58,[[]]],[10,"sinh","","Hyperbolic sine function.",58,[[]]],[10,"cosh","","Hyperbolic cosine function.",58,[[]]],[10,"tanh","","Hyperbolic tangent function.",58,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",58,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",58,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",58,[[]]],[0,"sign","coaster::plugin::numeric_helpers","",null,null],[8,"Signed","coaster::plugin::numeric_helpers::sign","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",59,[[]]],[10,"abs_sub","","The positive difference of two numbers.",59,[[]]],[10,"signum","","Returns the sign of the number.",59,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",59,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",59,[[],["bool",15]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","coaster::plugin::numeric_helpers","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",60,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",60,[[["u32",15],["str",15]],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for <code>Num</code> types which also implement numeric …",null,null],[8,"RefNum","","The trait for references which implement numeric …",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment …",null,null],[8,"NumAssign","","The trait for <code>Num</code> types which also implement assignment …",null,null],[8,"NumAssignRef","","The trait for <code>NumAssign</code> types which also implement …",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",61,null],[13,"Invalid","","",61,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",62,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",25,[[]]],[10,"max_value","","returns the largest finite number this type can represent",25,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",31,[[]]],[10,"infinity","","Returns the infinite value.",31,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",31,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",31,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",31,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",31,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",31,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",31,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",31,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",31,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",31,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",31,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",31,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",31,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",31,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",31,[[]]],[10,"trunc","","Return the integer part of a number.",31,[[]]],[10,"fract","","Returns the fractional part of a number.",31,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",31,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",31,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",31,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",31,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",31,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",31,[[]]],[10,"powi","","Raise a number to an integer power.",31,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",31,[[]]],[10,"sqrt","","Take the square root of a number.",31,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",31,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",31,[[]]],[10,"ln","","Returns the natural logarithm of the number.",31,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",31,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",31,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",31,[[]]],[11,"to_degrees","","Converts radians to degrees.",31,[[]]],[11,"to_radians","","Converts degrees to radians.",31,[[]]],[10,"max","","Returns the maximum of the two numbers.",31,[[]]],[10,"min","","Returns the minimum of the two numbers.",31,[[]]],[10,"abs_sub","","The positive difference of two numbers.",31,[[]]],[10,"cbrt","","Take the cubic root of a number.",31,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",31,[[]]],[10,"sin","","Computes the sine of a number (in radians).",31,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",31,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",31,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",31,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",31,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",31,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",31,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",31,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",31,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",31,[[]]],[10,"sinh","","Hyperbolic sine function.",31,[[]]],[10,"cosh","","Hyperbolic cosine function.",31,[[]]],[10,"tanh","","Hyperbolic tangent function.",31,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",31,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",31,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",31,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",31,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",32,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",32,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",32,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",32,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",32,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",32,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",32,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",32,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",32,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",32,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",32,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",32,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",32,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",32,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",32,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",32,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",32,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",32,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",32,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",29,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",27,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",27,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",27,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",27,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",27,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",27,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",27,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",27,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",27,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",27,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",27,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",27,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",27,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",27,[[["f64",15]],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",28,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",26,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",26,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",26,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",26,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",26,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",26,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",26,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",26,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",26,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",26,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",26,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",26,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. If the value cannot …",26,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. If the value cannot …",26,[[],[["f64",15],["option",4]]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",34,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",34,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",34,[[],["bool",15]]],[8,"Zero","","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",33,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",33,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",33,[[],["bool",15]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",35,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",35,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",35,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",35,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",35,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",35,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",35,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",35,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",35,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",35,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",35,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",35,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",35,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",35,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",35,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",35,[[["u32",15]]]],[8,"CheckedAdd","","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",36,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",39,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",38,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",41,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",40,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",42,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",43,[[["u32",15]],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",37,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",44,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",44,[[]]],[8,"MulAdd","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",45,null],[10,"mul_add","","Performs the fused multiply-add operation.",45,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",46,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",47,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",47,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",48,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",50,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",49,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",51,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",53,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",54,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",55,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",56,[[["u32",15]]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",52,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",57,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",57,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",59,[[]]],[10,"abs_sub","","The positive difference of two numbers.",59,[[]]],[10,"signum","","Returns the sign of the number.",59,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",59,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",59,[[],["bool",15]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Float","coaster::plugin","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",31,[[]]],[10,"infinity","","Returns the infinite value.",31,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",31,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",31,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",31,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",31,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",31,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",31,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",31,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",31,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",31,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",31,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",31,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",31,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",31,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",31,[[]]],[10,"trunc","","Return the integer part of a number.",31,[[]]],[10,"fract","","Returns the fractional part of a number.",31,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",31,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",31,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",31,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",31,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",31,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",31,[[]]],[10,"powi","","Raise a number to an integer power.",31,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",31,[[]]],[10,"sqrt","","Take the square root of a number.",31,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",31,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",31,[[]]],[10,"ln","","Returns the natural logarithm of the number.",31,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",31,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",31,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",31,[[]]],[11,"to_degrees","","Converts radians to degrees.",31,[[]]],[11,"to_radians","","Converts degrees to radians.",31,[[]]],[10,"max","","Returns the maximum of the two numbers.",31,[[]]],[10,"min","","Returns the minimum of the two numbers.",31,[[]]],[10,"abs_sub","","The positive difference of two numbers.",31,[[]]],[10,"cbrt","","Take the cubic root of a number.",31,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",31,[[]]],[10,"sin","","Computes the sine of a number (in radians).",31,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",31,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",31,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",31,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",31,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",31,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",31,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",31,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",31,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",31,[[]]],[10,"sinh","","Hyperbolic sine function.",31,[[]]],[10,"cosh","","Hyperbolic cosine function.",31,[[]]],[10,"tanh","","Hyperbolic tangent function.",31,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",31,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",31,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",31,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",31,[[]]],[4,"Error","","Defines a high-level Plugin Error.",null,null],[13,"SharedTensor","","Failure related to <code>SharedTensor</code>: use of uninitialized …",63,null],[13,"Operation","","Failure at the execution of the Operation.",63,null],[13,"Plugin","","Failure at the Plugin.",63,null],[0,"tensor","coaster","Provides the functionality for memory management across …",null,null],[6,"TensorDesc","coaster::tensor","Describes the Descriptor of a SharedTensor.",null,null],[3,"SharedTensor","","Container that handles synchronization of [Memory][1] of …",null,null],[8,"ITensorDesc","","Describes the Descriptor of a Tensor.",null,null],[10,"rank","","Returns the rank of the Tensor.",64,[[],["usize",15]]],[10,"size","","Returns the summed up length of all dimensions of the …",64,[[],["usize",15]]],[10,"dims","","Returns the dimensions of the Tensor.",64,[[],["vec",3]]],[10,"dims_i32","","Returns the dimensions of the Tensor as Vec.",64,[[],[["vec",3],["i32",15]]]],[11,"default_stride","","Returns the default stride for an Rust allocated Tensor.",64,[[],[["usize",15],["vec",3]]]],[11,"default_stride_i32","","Returns the default stride for a Rust allocated Tensor as …",64,[[],[["vec",3],["i32",15]]]],[8,"IntoTensorDesc","","Describes a conversion into a Tensor Descriptor.",null,null],[10,"into","","Converts the implemented type into a TensorDesc.",65,[[],["tensordesc",6]]],[11,"new","","Create new Tensor by allocating [Memory][1] on a Device. […",66,[[],["sharedtensor",3]]],[11,"reshape","","Change the shape of the Tensor.",66,[[],[["error",4],["result",4]]]],[11,"resize","","Change the size and shape of the Tensor.",66,[[],[["error",4],["result",4]]]],[11,"read","","Get memory for reading on the specified <code>device</code>. Can fail …",66,[[],[["result",4],["error",4]]]],[11,"read_write","","Get memory for reading and writing on the specified <code>device</code>…",66,[[],[["result",4],["error",4]]]],[11,"write_only","","Get memory for writing only. This function skips …",66,[[],[["result",4],["error",4]]]],[11,"drop","","Drops memory allocation on the specified device. Returns …",66,[[],[["error",4],["result",4]]]],[11,"capacity","","Returns the number of elements for which the Tensor has …",66,[[],["usize",15]]],[11,"desc","","Returns the descriptor of the Tensor.",66,[[],["tensordesc",6]]],[11,"mem_size","","Returns the allocated Memory size in bytes.",66,[[["usize",15]],["usize",15]]],[4,"Error","","Errors than can occur when synchronizing memory.",null,null],[13,"DeviceError","","Error caused by operations with device: allocation, …",67,null],[13,"InvalidRemove","","Unable to remove Memory copy from SharedTensor.",67,null],[13,"InvalidShape","","Shape provided for reshaping is not compatible with old …",67,null],[13,"CapacityExceeded","","Maximal number of backing memories has been reached.",67,null],[13,"UninitializedMemory","","Memory is requested for reading, but it hasn\'t been …",67,null],[0,"prelude","coaster","A module meant to be glob imported when using Coaster.",null,null],[11,"from","coaster::backend","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","coaster::device","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","coaster::error","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","coaster::framework","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","coaster::frameworks::cuda","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","coaster::frameworks::cuda::context","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","coaster::frameworks::cuda::device","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","coaster::frameworks::cuda::function","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","coaster::frameworks::cuda::memory","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","coaster::frameworks::cuda::module","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","coaster::frameworks::cuda","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","coaster::frameworks::native::binary","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","coaster::frameworks::native::device","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","coaster::frameworks::native","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","coaster::frameworks::native::flatbox","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","coaster::frameworks::native::function","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","coaster::frameworks::native::hardware","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","coaster::frameworks::native","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","coaster::hardware","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","coaster::plugin::numeric_helpers","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","coaster::plugin","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","coaster::tensor","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"to_string","","",67,[[],["string",3]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"fmt","coaster::plugin::numeric_helpers","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"device","coaster::backend","",0,[[],["context",3]]],[11,"synchronize","","",0,[[],[["error",4],["result",4]]]],[11,"device","","",0,[[],["cpu",3]]],[11,"id","coaster::frameworks::cuda::context","",9,[[],["isize",15]]],[11,"hardwares","","",9,[[],["vec",3]]],[11,"alloc_memory","","",9,[[["size_t",6]],[["memory",3],["result",4],["deviceerror",4]]]],[11,"id","coaster::frameworks::native::device","",18,[[],["isize",15]]],[11,"hardwares","","",18,[[],["vec",3]]],[11,"alloc_memory","","",18,[[["usize",15]],[["result",4],["flatbox",3],["deviceerror",4]]]],[11,"sync_in","coaster::frameworks::cuda::context","",9,[[["any",8],["any",8]],[["deviceerror",4],["result",4]]]],[11,"sync_out","","",9,[[["any",8],["any",8]],[["deviceerror",4],["result",4]]]],[11,"sync_in","coaster::frameworks::native::device","",18,[[["any",8],["any",8]],[["deviceerror",4],["result",4]]]],[11,"sync_out","","",18,[[["any",8],["any",8]],[["deviceerror",4],["result",4]]]],[11,"ID","coaster::frameworks::cuda","",16,[[],["str",15]]],[11,"new","","",16,[[],["cuda",3]]],[11,"load_hardwares","","",16,[[],[["error",4],["result",4],["vec",3]]]],[11,"hardwares","","",16,[[]]],[11,"binary","","",16,[[]]],[11,"new_device","","Creates a new Cuda context for computation.",16,[[],[["result",4],["error",4]]]],[11,"ID","coaster::frameworks::native","",69,[[],["str",15]]],[11,"new","","",69,[[],["native",3]]],[11,"load_hardwares","","",69,[[],[["vec",3],["error",4],["result",4]]]],[11,"hardwares","","",69,[[]]],[11,"binary","","",69,[[],["binary",3]]],[11,"new_device","","",69,[[],[["result",4],["error",4]]]],[11,"id","coaster::frameworks::cuda::device","",10,[[],["isize",15]]],[11,"name","","",10,[[],[["string",3],["option",4]]]],[11,"set_name","","",10,[[["string",3],["option",4]]]],[11,"hardware_type","","",10,[[],[["option",4],["hardwaretype",4]]]],[11,"set_hardware_type","","",10,[[["option",4],["hardwaretype",4]]]],[11,"compute_units","","",10,[[],[["option",4],["isize",15]]]],[11,"set_compute_units","","",10,[[["option",4],["isize",15]]]],[11,"build","","",10,[[],["device",3]]],[11,"id","coaster::frameworks::native::hardware","",21,[[],["isize",15]]],[11,"name","","",21,[[],[["string",3],["option",4]]]],[11,"set_name","","",21,[[["string",3],["option",4]]]],[11,"hardware_type","","",21,[[],[["option",4],["hardwaretype",4]]]],[11,"set_hardware_type","","",21,[[["option",4],["hardwaretype",4]]]],[11,"compute_units","","",21,[[],[["option",4],["isize",15]]]],[11,"set_compute_units","","",21,[[["option",4],["isize",15]]]],[11,"build","","",21,[[],["hardware",3]]],[11,"rank","coaster","",70,[[],["usize",15]]],[11,"size","","",70,[[],["usize",15]]],[11,"dims","","",70,[[],["vec",3]]],[11,"dims_i32","","",70,[[],[["vec",3],["i32",15]]]],[11,"drop","coaster::frameworks::cuda::context","",9,[[]]],[11,"drop","coaster::frameworks::cuda::memory","",13,[[]]],[11,"drop","coaster::frameworks::native::flatbox","",19,[[]]],[11,"from","coaster::device","",5,[[["nativeerror",4]],["error",4]]],[11,"from","","",5,[[["cudaerror",4]],["error",4]]],[11,"from","coaster::framework","",8,[[["cudaerror",4]],["error",4]]],[11,"from","coaster::error","",6,[[["error",4]],["error",4]]],[11,"from","","",6,[[["error",4]],["error",4]]],[11,"from","coaster::plugin","",63,[[["error",4]],["error",4]]],[11,"from","coaster::tensor","",67,[[["deviceerror",4]],["error",4]]],[11,"from","coaster::error","",6,[[["error",4]],["error",4]]],[11,"clone","coaster::backend","",0,[[],["backend",3]]],[11,"clone","","",2,[[],["backendconfig",3]]],[11,"clone","coaster::device","",5,[[],["error",4]]],[11,"clone","coaster::frameworks::cuda","",68,[[],["api",3]]],[11,"clone","","",15,[[],["error",4]]],[11,"clone","coaster::frameworks::cuda::context","",9,[[],["context",3]]],[11,"clone","coaster::frameworks::cuda::device","",10,[[],["device",3]]],[11,"clone","","",11,[[],["deviceinfo",3]]],[11,"clone","coaster::frameworks::cuda::function","",12,[[],["function",3]]],[11,"clone","coaster::frameworks::cuda::module","",14,[[],["module",3]]],[11,"clone","coaster::frameworks::cuda","",16,[[],["cuda",3]]],[11,"clone","coaster::frameworks::native::binary","",17,[[],["binary",3]]],[11,"clone","coaster::frameworks::native::device","",18,[[],["cpu",3]]],[11,"clone","coaster::frameworks::native","",22,[[],["error",4]]],[11,"clone","coaster::frameworks::native::function","",20,[[],["function",3]]],[11,"clone","coaster::frameworks::native::hardware","",21,[[],["hardware",3]]],[11,"clone","coaster::frameworks::native","",69,[[],["native",3]]],[11,"clone","coaster::hardware","",23,[[],["hardwaretype",4]]],[11,"clone","coaster::plugin","",63,[[],["error",4]]],[11,"clone","coaster::tensor","",67,[[],["error",4]]],[11,"default","coaster::frameworks::cuda::device","",10,[[]]],[11,"default","coaster::frameworks::native::binary","",17,[[],["binary",3]]],[11,"default","coaster::frameworks::native::function","",20,[[],["function",3]]],[11,"default","coaster::frameworks::native::hardware","",21,[[]]],[11,"eq","coaster::device","",5,[[["error",4]],["bool",15]]],[11,"ne","","",5,[[["error",4]],["bool",15]]],[11,"eq","coaster::frameworks::cuda","",15,[[["error",4]],["bool",15]]],[11,"ne","","",15,[[["error",4]],["bool",15]]],[11,"eq","coaster::frameworks::cuda::context","",9,[[],["bool",15]]],[11,"eq","coaster::frameworks::cuda::device","",10,[[],["bool",15]]],[11,"eq","coaster::frameworks::native::device","",18,[[],["bool",15]]],[11,"eq","coaster::frameworks::native","",22,[[["error",4]],["bool",15]]],[11,"ne","","",22,[[["error",4]],["bool",15]]],[11,"eq","coaster::hardware","",23,[[["hardwaretype",4]],["bool",15]]],[11,"eq","coaster::tensor","",67,[[["error",4]],["bool",15]]],[11,"ne","","",67,[[["error",4]],["bool",15]]],[11,"fmt","coaster::backend","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::device","",5,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::error","",6,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::framework","",8,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::cuda","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::cuda::context","",9,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::cuda::device","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::cuda::function","",12,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::cuda::memory","",13,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::cuda::module","",14,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::cuda","",16,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::native::binary","",17,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::native::device","",18,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::native","",22,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::native::flatbox","",19,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::native::function","",20,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::native::hardware","",21,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::native","",69,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::hardware","",23,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::plugin","",63,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::tensor","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::device","",5,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::error","",6,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::framework","",8,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::cuda","",15,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::cuda::device","",11,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::native","",22,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::plugin","",63,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::tensor","",67,[[["formatter",3]],["result",6]]],[11,"hash","coaster::frameworks::cuda::context","",9,[[]]],[11,"hash","coaster::frameworks::native::device","",18,[[]]],[11,"hash","coaster::hardware","",23,[[]]],[11,"source","coaster::device","",5,[[],[["option",4],["error",8]]]],[11,"source","coaster::error","",6,[[],[["option",4],["error",8]]]],[11,"source","coaster::framework","",8,[[],[["option",4],["error",8]]]],[11,"description","coaster::frameworks::native","",22,[[],["str",15]]],[11,"cause","","",22,[[],[["error",8],["option",4]]]],[11,"source","coaster::plugin","",63,[[],[["error",8],["option",4]]]],[11,"source","coaster::tensor","",67,[[],[["option",4],["error",8]]]],[11,"create_context","coaster::frameworks::cuda","Creates a Cuda context.",68,[[["device",3]],[["result",4],["error",4]]]],[11,"destroy_context","","Removes a created Cuda context from the device.",68,[[],[["result",4],["error",4]]]],[11,"synchronize_context","","Synchronize the CUDA context associated with the current …",68,[[],[["result",4],["error",4]]]],[11,"load_devices","","Returns fully initialized devices available through Cuda.",68,[[],[["error",4],["vec",3],["result",4]]]],[11,"load_device_list","","Returns a list of available devices for the provided …",68,[[],[["error",4],["vec",3],["result",4]]]],[11,"load_device_info","","Returns the requested DeviceInfo for the provided device.",68,[[["cudevice_attribute",4],["device",3]],[["error",4],["result",4],["deviceinfo",3]]]],[11,"mem_alloc","","Allocates memory on the Cuda device.",68,[[["size_t",6]],[["result",4],["memory",3],["error",4]]]],[11,"mem_free","","Releases allocated memory from the Cuda device.",68,[[["c_ulonglong",6]],[["result",4],["error",4]]]],[11,"mem_cpy_h_to_d","","Copies memory from the Host to the Cuda device.",68,[[["flatbox",3],["memory",3]],[["result",4],["error",4]]]],[11,"mem_cpy_d_to_h","","Copies memory from the Cuda device to the Host.",68,[[["memory",3],["flatbox",3]],[["result",4],["error",4]]]],[11,"init","","Initialize the Cuda Driver API.",68,[[],[["result",4],["error",4]]]]],"p":[[3,"Backend"],[8,"IBackend"],[3,"BackendConfig"],[8,"IDevice"],[8,"MemorySync"],[4,"Error"],[4,"Error"],[8,"IFramework"],[4,"Error"],[3,"Context"],[3,"Device"],[3,"DeviceInfo"],[3,"Function"],[3,"Memory"],[3,"Module"],[4,"DriverError"],[3,"Cuda"],[3,"Binary"],[3,"Cpu"],[3,"FlatBox"],[3,"Function"],[3,"Hardware"],[4,"Error"],[4,"HardwareType"],[8,"IHardware"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[4,"Error"],[8,"ITensorDesc"],[8,"IntoTensorDesc"],[3,"SharedTensor"],[4,"Error"],[3,"Driver"],[3,"Native"],[6,"TensorDesc"]]},\
"coaster_blas":{"doc":"Provides backend-agnostic BLAS operations for Coaster.","i":[[0,"binary","coaster_blas","Provides the IBlasBinary binary trait for Coaster\'s …",null,null],[8,"IBlasBinary","coaster_blas::binary","Describes the operation binding for a Blas Binary …",null,null],[16,"Asum","","Describes the Asum Operation.",0,null],[16,"Axpy","","Describes the Axpy Operation.",0,null],[16,"Copy","","Describes the Copy Operation.",0,null],[16,"Dot","","Describes the Dot Operation.",0,null],[16,"Nrm2","","Describes the Nrm2 Operation.",0,null],[16,"Scale","","Describes the Scale Operation.",0,null],[16,"Swap","","Describes the Swap Operation.",0,null],[10,"asum","","Returns an initialized Asum operation.",0,[[]]],[10,"axpy","","Returns an initialized Axpy operation.",0,[[]]],[10,"copy","","Returns an initialized Copy operation.",0,[[]]],[10,"dot","","Returns an initialized Dot operation.",0,[[]]],[10,"nrm2","","Returns an initialized Nrm2 operation.",0,[[]]],[10,"scale","","Returns an initialized Scale operation.",0,[[]]],[10,"swap","","Returns an initialized Swap operation.",0,[[]]],[0,"frameworks","coaster_blas","Provides the specific Framework implementations for the …",null,null],[0,"cuda","coaster_blas::frameworks","Provides BLAS for a CUDA backend.",null,null],[0,"helper","coaster_blas::frameworks::cuda","",null,null],[0,"native","coaster_blas::frameworks","Provides BLAS for a Native backend.",null,null],[0,"operation","coaster_blas","Provides the IOperationX operation traits for Coaster\'s …",null,null],[8,"IOperationAsum","coaster_blas::operation","Describes a Asum Operation.",null,null],[10,"compute","","Computes the Asum operation.",1,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"IOperationAxpy","","Describes a Axpy Operation.",null,null],[10,"compute","","Computes the Axpy operation.",2,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"IOperationCopy","","Describes a Copy Operation.",null,null],[10,"compute","","Computes the Copy operation.",3,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"IOperationDot","","Describes a Dot Operation.",null,null],[10,"compute","","Computes the Dot operation.",4,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"IOperationNrm2","","Describes a Nrm2 Operation.",null,null],[10,"compute","","Computes the Nrm2 operation.",5,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"IOperationScale","","Describes a Scale Operation.",null,null],[10,"compute","","Computes the Scale operation.",6,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"IOperationSwap","","Describes a Swap Operation.",null,null],[10,"compute","","Computes the Swap operation.",7,[[["sharedtensor",3]],[["result",4],["error",4]]]],[8,"IOperationGemm","","Describes a Gemm Operation.",null,null],[10,"compute","","Computes the Gemm operation.",8,[[["sharedtensor",3],["transpose",4],["sharedtensor",3]],[["result",4],["error",4]]]],[0,"plugin","coaster_blas","Provides the IBlas library trait for Coaster …",null,null],[8,"IBlas","coaster_blas::plugin","Provides the functionality for a backend to support Basic …",null,null],[8,"Asum","","Provides the asum operation.",null,null],[10,"asum","","Computes the absolute sum of vector <code>x</code>.",9,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Axpy","","Provides the axpy operation.",null,null],[10,"axpy","","Computes a vector <code>x</code> times a constant <code>a</code> plus a vector <code>y</code> …",10,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Copy","","Provides the copy operation.",null,null],[10,"copy","","Copies <code>x.len()</code> elements of vector <code>x</code> into vector <code>y</code>.",11,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Dot","","Provides the dot operation.",null,null],[10,"dot","","Computes the [dot product][dot-product] over x and y. […",12,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Nrm2","","Provides the nrm2 operation.",null,null],[10,"nrm2","","Computes the L2 norm aka. euclidean length of vector <code>x</code>.",13,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Scal","","Provides the scal operation.",null,null],[10,"scal","","Scales a vector <code>x</code> by a constant <code>a</code> aka. <code>a * x</code>.",14,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Swap","","Provides the swap operation.",null,null],[10,"swap","","Swaps the content of vector <code>x</code> and vector <code>y</code> with complete …",15,[[["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Gbmv","","Provides the gbmv operation",null,null],[10,"gbmv","","Computes a matrix-vector product with a band matrix",16,[[["sharedtensor",3],["transpose",4],["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Gemm","","Provides the gemm operation.",null,null],[10,"gemm","","Computes a matrix-matrix product with general matrices.",17,[[["sharedtensor",3],["transpose",4],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"BlasBinaryProvider","","Allows a BlasBinary to be provided which is used for a …",null,null],[10,"binary","","Returns the binary representation",18,[[]]],[0,"transpose","coaster_blas","Provides the Transpose functionality for Matrix …",null,null],[4,"Transpose","coaster_blas::transpose","Possible transpose operations that can be applied in …",null,null],[13,"NoTrans","","Take the matrix as it is.",19,null],[13,"Trans","","Take the transpose of the matrix.",19,null],[13,"ConjTrans","","Take the conjugate transpose of the matrix.",19,null],[11,"to_rblas","","Create a rust-blas <code>Transpose</code> from coaster-blas <code>Transpose</code>.",19,[[],["transpose",4]]],[14,"iblas_asum_for_cuda","coaster_blas","asum with cuda",null,null],[14,"iblas_axpy_for_cuda","","axpy with cuda",null,null],[14,"iblas_copy_for_cuda","","copy for cuda",null,null],[14,"iblas_nrm2_for_cuda","","nrm2 for cuda",null,null],[14,"iblas_dot_for_cuda","","dot product for cuda",null,null],[14,"iblas_scal_for_cuda","","scalar mul for cuda",null,null],[14,"iblas_swap_for_cuda","","swap matrices for cuda",null,null],[14,"iblas_gbmv_for_cuda","","gbmv for cuda",null,null],[14,"iblas_gemm_for_cuda","","gemm for cuda",null,null],[11,"from","coaster_blas::transpose","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",19,[[["operation",4]]]],[11,"clone","","",19,[[],["transpose",4]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]]],"p":[[8,"IBlasBinary"],[8,"IOperationAsum"],[8,"IOperationAxpy"],[8,"IOperationCopy"],[8,"IOperationDot"],[8,"IOperationNrm2"],[8,"IOperationScale"],[8,"IOperationSwap"],[8,"IOperationGemm"],[8,"Asum"],[8,"Axpy"],[8,"Copy"],[8,"Dot"],[8,"Nrm2"],[8,"Scal"],[8,"Swap"],[8,"Gbmv"],[8,"Gemm"],[8,"BlasBinaryProvider"],[4,"Transpose"]]},\
"coaster_nn":{"doc":"Provides a Coaster Plugin, to extend Coaster with Neural …","i":[[0,"frameworks","coaster_nn","Provides the specific Framework implementations for the …",null,null],[0,"native","coaster_nn::frameworks","Provides NN for a Native backend.",null,null],[0,"helper","coaster_nn::frameworks::native","Provides useful macros for easier NN implementation for …",null,null],[3,"NormalizationConfig","coaster_nn::frameworks::native::helper","",null,null],[3,"PoolingConfig","","",null,null],[12,"window","","",0,null],[12,"padding","","",0,null],[12,"stride","","",0,null],[3,"DropoutConfig","","",null,null],[12,"probability","","",1,null],[12,"seed","","",1,null],[5,"write_to_memory","","Just a helper function until SharedTensor has a nice …",null,[[["flatbox",3],["iterator",8]]]],[5,"sigmoid","","Computes the Sigmoid Function on the CPU",null,[[["float",8]],["float",8]]],[5,"sigmoid_grad","","Computes the Sigmoid Gradient on the CPU",null,[[["float",8]],["float",8]]],[5,"relu","","Computes the ReLU Function on the CPU",null,[[["float",8]],["float",8]]],[5,"relu_grad","","Computes the ReLU Gradient on the CPU",null,[[["float",8]],["float",8]]],[5,"tanh","","Computes the Tanh Function on the CPU",null,[[["float",8]],["float",8]]],[5,"tanh_grad","","Computes the Tanh Gradient on the CPU",null,[[["float",8]],["float",8]]],[3,"ConvolutionConfig","","",null,null],[12,"filter_shape","","",2,null],[12,"stride","","",2,null],[12,"padding","","",2,null],[3,"RnnConfig","","",null,null],[12,"hidden_size","","Size of the Hidden Layer",3,null],[12,"num_layers","","Number of Hidden Layers",3,null],[12,"dropout_probability","","Dropout Probability",3,null],[12,"dropout_seed","","Dropout Seed",3,null],[12,"rnn_type","","Type of RNN",3,null],[12,"input_mode","","Input Mode",3,null],[12,"direction_mode","","RNN Direction",3,null],[0,"cuda","coaster_nn::frameworks","Provides NN for a CUDA backend.",null,null],[0,"helper","coaster_nn::frameworks::cuda","Provides useful macros for easier NN implementation for …",null,null],[4,"DataType","","Defines the available data types for the CUDA cuDNN data …",null,null],[13,"Float","","F32",4,null],[13,"Double","","F64",4,null],[13,"Half","","F16 (no native Rust support yet)",4,null],[8,"DataTypeInfo","","CuDnn type info for generic use.",null,null],[10,"cudnn_data_type","","Mostly internal.",5,[[],["datatype",4]]],[8,"ICudnnDesc","","",null,null],[10,"cudnn_tensor_desc","","",6,[[],[["tensordescriptor",3],["pluginerror",4],["result",4]]]],[10,"cudnn_tensor_desc_softmax","","Creates a TensorDescriptor similar to <code>cudnn_tensor_desc</code>, …",6,[[],[["tensordescriptor",3],["pluginerror",4],["result",4]]]],[10,"cudnn_tensor_desc_flat","","Creates a TensorDescriptor similar to <code>cudnn_tensor_desc</code>, …",6,[[],[["tensordescriptor",3],["pluginerror",4],["result",4]]]],[10,"cudnn_filter_desc","","",6,[[],[["pluginerror",4],["filterdescriptor",3],["result",4]]]],[10,"cudnn_convolution_desc","","",6,[[["sharedtensor",3]],[["convolutiondescriptor",3],["pluginerror",4],["result",4]]]],[10,"cudnn_rnn_desc","","",6,[[["cudnnrnnpaddingmode_t",6],["dropoutconfig",3],["cudnndirectionmode_t",4],["cudnn",3],["cudnnrnnalgo_t",4],["cudnnrnninputmode_t",4],["i32",15],["cudnnrnnmode_t",4]],[["pluginerror",4],["rnndescriptor",3],["result",4]]]],[3,"RnnSequenceDescriptors","","Struct to hold all Sequence Descriptors for an RNN Pass",null,null],[12,"x_desc","","Input Descriptor",7,null],[12,"y_desc","","Output Descriptor",7,null],[12,"dx_desc","","Gradient Input Descriptor",7,null],[12,"dy_desc","","Gradient Output Descriptor",7,null],[12,"hx_desc","","Hidden Input Descriptor",7,null],[12,"cx_desc","","Cell Input Descriptor",7,null],[12,"hy_desc","","Hidden Output Descriptor",7,null],[12,"cy_desc","","Cell Output Descriptor",7,null],[12,"dhx_desc","","Gradient Hidden Input Descriptor",7,null],[12,"dcx_desc","","Gradient Cell Input Descriptor",7,null],[12,"dhy_desc","","Gradient Hidden Output Descriptor",7,null],[12,"dcy_desc","","Gradient Cell Output Descriptor",7,null],[4,"ConvForwardAlgo","coaster_nn","Different algorithms to compute the convolution forward …",null,null],[13,"Auto","","Attempt to automatically find the best algorithm of all …",8,null],[13,"GEMM","","Compute the convolution as explicit matrix product.",8,null],[13,"ImplicitGEMM","","Compute the convolution as matrix product without forming …",8,null],[13,"ImplicitPrecompiledGEMM","","Similar to <code>ImplicitGEMM</code> but needs some workspace to …",8,null],[13,"FFT","","Compute the convolution as Fast-Fourier Transform.",8,null],[13,"FFTTiling","","Compute the convolution as Fast-Fourier Transform with …",8,null],[13,"Direct","","Compute the convolution without implicit or explicit …",8,null],[13,"Winograd","","Winograd  Transform",8,null],[13,"WinogradNonFused","","Winograd  Transform Non-Fused",8,null],[4,"ConvBackwardFilterAlgo","","Different algorithms to compute the gradient with respect …",null,null],[13,"Auto","","Attempt to automatically find the best algorithm of all …",9,null],[13,"ImplicitGEMM","","Compute the convolution as matrix product without forming …",9,null],[13,"ImplicitGEMMSum","","Compute the convolution as sum of matrix product without …",9,null],[13,"ImplicitPrecompiledGEMMSum","","Similar to <code>ImplicitGEMMSum</code> but needs some workspace to …",9,null],[13,"FFT","","Compute the convolution as Fast-Fourier Transform.",9,null],[13,"WinogradNonFused","","Winograd  Transform Non-Fused",9,null],[4,"ConvBackwardDataAlgo","","Different algorithms to compute the gradient with respect …",null,null],[13,"Auto","","Attempt to automatically find the best algorithm of all …",10,null],[13,"ImplicitGEMM","","Compute the convolution as matrix product without forming …",10,null],[13,"ImplicitGEMMSum","","Compute the convolution as sum of matrix product without …",10,null],[13,"FFT","","Compute the convolution as Fast-Fourier Transform.",10,null],[13,"FFTTiling","","Compute the convolution as Fast-Fourier Transform with …",10,null],[13,"Winograd","","Winograd  Transform",10,null],[13,"WinogradNonFused","","Winograd  Transform Non-Fused",10,null],[8,"NNOperationConfig","","Provides generic NN Operation Config functionality.",null,null],[8,"ConvolutionConfig","","Provides Convolution Config functionality.",null,null],[11,"workspace_size","","Returns the largest workspace size in bytes needed for …",11,[[],["usize",15]]],[8,"RnnConfig","","Provides Rnn Config functionality.",null,null],[11,"workspace_size","","Workspace Size - Overwritten by each plugin method except …",12,[[],["usize",15]]],[8,"NN","","Provides the functionality for a backend to support …",null,null],[16,"CC","","The Convolution Operation Config representation for this …",13,null],[16,"CLRN","","The LRN Operation Config representation for this Plugin.",13,null],[16,"CPOOL","","The Pooling Operation Config representation for this …",13,null],[16,"CDROP","","The Dropout Operation Config representation for this …",13,null],[16,"CRNN","","The RNN Operation Config representation for this Plugin",13,null],[10,"init_nn","","Initializes the Plugin.",13,[[]]],[8,"Sigmoid","","Provides the functionality for a Backend to support …",null,null],[10,"sigmoid","","Computes the [Sigmoid function][sigmoid] over the input …",14,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"sigmoid_grad","","Computes the gradient of a [Sigmoid function][sigmoid] …",14,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"SigmoidPointwise","","Provides the functionality for pointwise Sigmoid …",null,null],[10,"sigmoid_pointwise","","Computes the [Sigmoid function][sigmoid] over the input …",15,[[["sharedtensor",3]],[["result",4],["error",4]]]],[10,"sigmoid_pointwise_grad","","Computes the gradient of a [Sigmoid function][sigmoid] …",15,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Relu","","Provides the functionality for a Backend to support ReLU …",null,null],[10,"relu","","Computes the [Rectified linear units][relu] over the …",16,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"relu_grad","","Computes the gradient of [ReLU][relu] over the input …",16,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"ReluPointwise","","Provides the functionality for pointwise ReLU operations …",null,null],[10,"relu_pointwise","","Computes the [Rectified linear units][relu] over the …",17,[[["sharedtensor",3]],[["result",4],["error",4]]]],[10,"relu_pointwise_grad","","Computes the gradient of [ReLU][relu] over the input …",17,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Tanh","","Provides the functionality for a Backend to support TanH …",null,null],[10,"tanh","","Computes the [hyperbolic Tangent][tanh] over the input …",18,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"tanh_grad","","Computes the gradient of [hyperbolic Tangent][tanh] over …",18,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"TanhPointwise","","Provides the functionality for pointwise ReLU operations …",null,null],[10,"tanh_pointwise","","Computes the [hyperbolic Tangent][tanh] over the input …",19,[[["sharedtensor",3]],[["result",4],["error",4]]]],[10,"tanh_pointwise_grad","","Computes the gradient of [tanh][tanh] over the input …",19,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Rnn","","Provide the functionality for a Backend to support RNN …",null,null],[10,"new_rnn_config","","Create a RnnConfig",20,[[["rnninputmode",4],["rnnnetworkmode",4],["sharedtensor",3],["u64",15],["option",4],["f32",15],["option",4],["i32",15],["directionmode",4],["rnnalgorithm",4]],[["result",4],["error",4]]]],[10,"generate_rnn_weight_description","","Generate Weights for RNN",20,[[["i32",15]],[["vec",3],["error",4],["result",4]]]],[10,"rnn_forward","","Train a LSTM Network and Return Results",20,[[["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"rnn_backward_data","","Calculates RNN Gradients for Input/Hidden/Cell",20,[[["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"rnn_backward_weights","","Calculates RNN Gradients for Weights",20,[[["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[4,"RnnNetworkMode","","Network Type for RNN Networks [cudnnRNNMOde_t][1] [1]: …",null,null],[13,"ReLU","","CUDNN_RNN_RELU - Single gate RNN with a ReLU activation …",21,null],[13,"Tanh","","Single-gate RNN with a tanh activation function",21,null],[13,"LSTM","","Four-gate LSTM Network with no peephole connection",21,null],[13,"GRU","","Three-gate network with Gated Recurrent Units",21,null],[4,"RnnInputMode","","Input Modes for RNN [cudnnRNNInputMode_t][1] [1]: …",null,null],[13,"LinearInput","","CUDNN_LINEAR_INPUT - A biased matrix multiplication is …",22,null],[13,"SkipInput","","CUDNN_SKIP_INPUT - No operation is performed at the input …",22,null],[4,"DirectionMode","","Direction Mode for RNN [cudnnDirectionMode_t][1] [1]: …",null,null],[13,"UniDirectional","","CUDNN_UNIDIRECTIONAL - The network iterates from first to …",23,null],[13,"BiDirectional","","CUDNN_BIDIRECTION - Concats recurrent output of First -> …",23,null],[4,"RnnAlgorithm","","Algorithm for RNN [cudnnRNNAlgo_t][1] [1]: …",null,null],[13,"Standard","","Sequence of Operations for each RNN Layer",24,null],[13,"PersistStatic","","Uses a Persistent Kernel - fast when the first D of the …",24,null],[13,"PersistDynamic","","RNN parts use a persistent kernel. Fast when the first …",24,null],[13,"Count","","Count - Cannot find in docs but is in Generated - FIXME",24,null],[4,"RnnPaddingMode","","Enables/Disables the padded input/output […",null,null],[13,"Disabled","","Padding disabled",25,null],[13,"Enabled","","Padding enabled",25,null],[4,"MathType","","Indicate if Tensor Core Operations are permitted […",null,null],[13,"Default","","No Tensor Core ops",26,null],[13,"TensorOPMath","","Uses Tensor Core ops",26,null],[13,"TensorOPMathAllowConversion","","Uses FP32 Tensors for input/output",26,null],[8,"Convolution","","Provides the functionality for a Backend to support …",null,null],[10,"new_convolution_config","","Creates a new ConvolutionConfig, which needs to be passed …",27,[[["sharedtensor",3],["convbackwardfilteralgo",4],["convforwardalgo",4],["convbackwarddataalgo",4]],[["error",4],["result",4]]]],[10,"convolution","","Computes a [CNN convolution][convolution] over the input …",27,[[["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"convolution_grad_filter","","Computes the gradient of a [CNN convolution][convolution] …",27,[[["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"convolution_grad_data","","Computes the gradient of a [CNN convolution][convolution] …",27,[[["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Softmax","","Provides the functionality for a Backend to support …",null,null],[10,"softmax","","Computes a [Softmax][softmax] over the input Tensor <code>x</code>. […",28,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"softmax_grad","","Computes the gradient of a [Softmax][softmax] over the …",28,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"LogSoftmax","","Provides the functionality for a Backend to support …",null,null],[10,"log_softmax","","Computes a logarithmic softmax over the input Tensor <code>x</code>.",29,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"log_softmax_grad","","Computes the gradient of a logarithmic softmax over the …",29,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"LRN","","Provides the functionality for a Backend to support Local …",null,null],[10,"new_lrn_config","","Creates a new (Local Response Normalization) LRNConfig, …",30,[[["u32",15],["f64",15]],[["result",4],["error",4]]]],[10,"lrn","","Computes a [LRN][lrn] over the input Tensor <code>x</code>. [lrn]: …",30,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"lrn_grad","","Computes the gradient of a [LRN][lrn] over the input …",30,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Pooling","","Provides the functionality for a Backend to support …",null,null],[10,"new_pooling_config","","Creates a new PoolingConfig, which needs to be passed to …",31,[[],[["result",4],["error",4]]]],[10,"pooling_max","","Computes non-linear down-sampling ([max Pooling][pooling]…",31,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"pooling_max_grad","","Computes the gradient of [max Pooling][pooling] over the …",31,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"pooling_avg","","Computes non-linear down-sampling ([average Pooling][…",31,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"pooling_avg_grad","","Computes the gradient of [average Pooling][pooling] over …",31,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Dropout","","Provides the functionality for a Backend to support …",null,null],[10,"new_dropout_config","","Creates a new DropoutConfig, which needs to be passed to …",32,[[["f32",15],["u64",15]],[["result",4],["error",4]]]],[10,"dropout","","Computes non-linear down-sampling ([max Pooling][pooling]…",32,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"dropout_grad","","Computes non-linear down-sampling ([max Pooling][pooling]…",32,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[14,"impl_ops_sigmoid_for","","sigmoid impl generation macro",null,null],[14,"impl_ops_relu_for","","relu impl generation macro",null,null],[14,"impl_ops_tanh_for","","tanh impl generation macro",null,null],[14,"impl_ops_softmax_for","","softmax impl generation macro",null,null],[14,"impl_ops_log_softmax_for","","log softmax impl generation macro",null,null],[14,"impl_ops_lrn_for","","lrn impl generation macro TODO it\'s all unimplemented!() …",null,null],[11,"from","coaster_nn::frameworks::native::helper","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","coaster_nn::frameworks::cuda","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","coaster_nn","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"fmt","coaster_nn::frameworks::cuda","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",4,[[],["datatype",4]]],[11,"clone","coaster_nn::frameworks::native::helper","",33,[[],["normalizationconfig",3]]],[11,"clone","","",0,[[],["poolingconfig",3]]],[11,"clone","","",1,[[],["dropoutconfig",3]]],[11,"clone","","",2,[[],["convolutionconfig",3]]],[11,"clone","","",3,[[],["rnnconfig",3]]],[11,"clone","coaster_nn","",8,[[],["convforwardalgo",4]]],[11,"clone","","",9,[[],["convbackwardfilteralgo",4]]],[11,"clone","","",10,[[],["convbackwarddataalgo",4]]],[11,"clone","","",21,[[],["rnnnetworkmode",4]]],[11,"clone","","",22,[[],["rnninputmode",4]]],[11,"clone","","",23,[[],["directionmode",4]]],[11,"clone","","",24,[[],["rnnalgorithm",4]]],[11,"clone","","",25,[[],["rnnpaddingmode",4]]],[11,"clone","","",26,[[],["mathtype",4]]],[11,"fmt","coaster_nn::frameworks::native::helper","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","coaster_nn::frameworks::cuda","",7,[[["formatter",3]],["result",6]]],[11,"fmt","coaster_nn","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"is_auto","","Check if algorithim should be chosen automatically.",8,[[],["bool",15]]],[11,"is_auto","","Check if algorithim should be chosen automatically.",9,[[],["bool",15]]],[11,"is_auto","","Check if algorithim should be chosen automatically.",10,[[],["bool",15]]],[11,"workspace_size","","Returns the largest workspace size in bytes needed for …",11,[[],["usize",15]]],[11,"workspace_size","","Workspace Size - Overwritten by each plugin method except …",12,[[],["usize",15]]],[11,"from_string","","Convert RnnNetworkMode to String Representation",21,[[["str",15]],[["result",4],["str",15]]]],[11,"from_string","","Convert to RnnInputMode from String Representation",22,[[["str",15]],[["result",4],["str",15]]]],[11,"from_string","","Convert to DirectionMode from String Representation",23,[[["str",15]],[["result",4],["str",15]]]]],"p":[[3,"PoolingConfig"],[3,"DropoutConfig"],[3,"ConvolutionConfig"],[3,"RnnConfig"],[4,"DataType"],[8,"DataTypeInfo"],[8,"ICudnnDesc"],[3,"RnnSequenceDescriptors"],[4,"ConvForwardAlgo"],[4,"ConvBackwardFilterAlgo"],[4,"ConvBackwardDataAlgo"],[8,"ConvolutionConfig"],[8,"RnnConfig"],[8,"NN"],[8,"Sigmoid"],[8,"SigmoidPointwise"],[8,"Relu"],[8,"ReluPointwise"],[8,"Tanh"],[8,"TanhPointwise"],[8,"Rnn"],[4,"RnnNetworkMode"],[4,"RnnInputMode"],[4,"DirectionMode"],[4,"RnnAlgorithm"],[4,"RnnPaddingMode"],[4,"MathType"],[8,"Convolution"],[8,"Softmax"],[8,"LogSoftmax"],[8,"LRN"],[8,"Pooling"],[8,"Dropout"],[3,"NormalizationConfig"]]},\
"example_mnist_classification":{"doc":"","i":[[17,"MAIN_USAGE","example_mnist_classification","",null,null],[3,"Args","","",null,null],[12,"arg_dataset_name","","",0,null],[12,"arg_model_name","","",0,null],[12,"arg_batch_size","","",0,null],[12,"arg_learning_rate","","",0,null],[12,"arg_momentum","","",0,null],[12,"cmd_load_dataset","","",0,null],[12,"cmd_mnist","","",0,null],[12,"cmd_fashion","","",0,null],[4,"MnistType","","",null,null],[13,"Fashion","","",1,null],[13,"Numbers","","",1,null],[5,"main","","",null,[[]]],[5,"add_conv_net","","",null,[[["usize",15],["sequentialconfig",3]],["sequentialconfig",3]]],[5,"add_mlp","","",null,[[["usize",15],["sequentialconfig",3]],["sequentialconfig",3]]],[5,"add_linear_net","","",null,[[["sequentialconfig",3]],["sequentialconfig",3]]],[5,"run_mnist","","",null,[[["mnisttype",4],["usize",15],["option",4],["option",4],["string",3],["f32",15],["option",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[3,"Args"],[4,"MnistType"]]},\
"example_rnn_regression":{"doc":"","i":[[17,"MAIN_USAGE","example_rnn_regression","",null,null],[3,"Args","","",null,null],[12,"cmd_train","","",0,null],[12,"cmd_test","","",0,null],[12,"flag_file","","",0,null],[12,"flag_batchSize","","",0,null],[12,"flag_learningRate","","",0,null],[12,"flag_momentum","","",0,null],[4,"DataMode","","",null,null],[13,"Train","","",1,null],[13,"Test","","",1,null],[11,"as_path","","",1,[[],["str",15]]],[17,"TRAIN_ROWS","","",null,null],[17,"TEST_ROWS","","",null,null],[17,"DATA_COLUMNS","","",null,null],[5,"data_generator","","",null,[[["datamode",4]]]],[5,"create_network","","",null,[[["usize",15]],["sequentialconfig",3]]],[5,"add_solver","","",null,[[["rc",3],["usize",15],["f32",15],["sequentialconfig",3],["backend",3]],[["solver",3],["backend",3]]]],[5,"train","","",null,[[["usize",15],["f32",15],["string",3],["option",4],["option",4],["option",4]]]],[5,"test","","",null,[[["usize",15],["string",3],["option",4],["option",4]],[["box",3],["result",4]]]],[5,"main","","",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[3,"Args"],[4,"DataMode"]]},\
"greenglas":{"doc":"Greenglas provides convenient and universal Machine …","i":[[0,"image","greenglas","The Image Struct and its Modifiers",null,null],[0,"modifiers","greenglas::image","The Modifiers form <code>Image</code>",null,null],[3,"Resize","greenglas::image::modifiers","Resize Modifier for <code>Image</code>",null,null],[12,"width","","The resized width of the new Image",0,null],[12,"height","","The resized heigt of the new Image",0,null],[3,"Crop","","Crop Modifier for <code>Image</code>",null,null],[12,"x","","The x value from where the new Image should start",1,null],[12,"y","","The y value from where the new Image should start",1,null],[12,"width","","The width for the new Image",1,null],[12,"height","","The height for the new Image",1,null],[3,"Grayscale","","Grayscale Modifier for <code>Image</code>",null,null],[3,"Image","greenglas::image","The Transformable Data Type <code>Image</code>",null,null],[11,"new","","Create a new Image from a DynamicImage",2,[[["dynamicimage",4]],["image",3]]],[11,"from_path","","Create a new Image from a Path",2,[[],["image",3]]],[11,"from_buffer","","Create a new Image from Buffer",2,[[],["image",3]]],[11,"from_rgb_pixels","","Create a new Image from RGB style pixel container such as …",2,[[["u32",15],["vec",3],["u8",15]],[["transformererror",4],["result",4],["image",3]]]],[11,"from_rgba_pixels","","Create a new Image from RGBa style pixel container such …",2,[[["u32",15],["vec",3],["u8",15]],[["transformererror",4],["result",4],["image",3]]]],[11,"from_luma_pixels","","Create a new Image from Luma (greyscale) style pixel …",2,[[["u32",15],["vec",3],["u8",15]],[["transformererror",4],["result",4],["image",3]]]],[11,"from_lumaa_pixels","","Create a new Image from LumaA style pixel container such …",2,[[["u32",15],["vec",3],["u8",15]],[["transformererror",4],["result",4],["image",3]]]],[0,"transformer","greenglas","Transformer",null,null],[8,"Transformer","greenglas::transformer","The Transformer Trait",null,null],[11,"transform","","Transforms non-numeric data into a numeric <code>SharedTensor</code>",3,[[],[["result",4],["sharedtensor",3],["transformererror",4]]]],[10,"transform_to_vec","","Transforms the non-numeric data into a numeric <code>Vec</code>",3,[[],[["vec",3],["f32",15]]]],[11,"write_to_memory","","Write into a native Coaster Memory.",3,[[["flatbox",3]],[["transformererror",4],["result",4]]]],[11,"write_to_memory_offset","","Write into a native Coaster Memory with a offset.",3,[[["usize",15],["flatbox",3]],[["transformererror",4],["result",4]]]],[4,"TransformerError","","The Transformer Errors",null,null],[13,"InvalidShape","","When the speficied shape capacitiy differs from the …",4,null],[13,"InvalidRgbPixels","","When The Image Pixel Buffer can\'t be converted to a RGB …",4,null],[13,"InvalidRgbaPixels","","When The Image Pixel Buffer can\'t be converted to a RGBA …",4,null],[13,"InvalidLumaPixels","","When The Image Pixel Buffer can\'t be converted to a …",4,null],[13,"InvalidLumaAlphaPixels","","When The Image Pixel Buffer can\'t be converted to a …",4,null],[0,"word","greenglas","The Word Struct and its Modifiers",null,null],[0,"modifiers","greenglas::word","The Modifiers for <code>Word</code>",null,null],[3,"Word","","The Transformable Data Type <code>Word</code>",null,null],[11,"new","","Creates a new <code>Word</code>",5,[[["string",3]],["word",3]]],[0,"modifier","greenglas","Re-exports from the modifier crate.",null,null],[8,"Modifier","greenglas::modifier","Allows use of the implemented type as an argument to …",null,null],[10,"modify","","Modify <code>F</code> with self.",6,[[]]],[8,"Set","","A trait providing the set and set_mut methods for all …",null,null],[11,"set","","Modify self using the provided modifier.",7,[[]]],[11,"set_mut","","Modify self through a mutable reference with the provided …",7,[[]]],[8,"Set","greenglas","A trait providing the set and set_mut methods for all …",null,null],[11,"set","","Modify self using the provided modifier.",7,[[]]],[11,"set_mut","","Modify self through a mutable reference with the provided …",7,[[]]],[11,"from","greenglas::image::modifiers","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"from","greenglas::image","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","greenglas::transformer","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","greenglas::word","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"transform_to_vec","greenglas::image","",2,[[],[["vec",3],["f32",15]]]],[11,"transform_to_vec","greenglas::word","",5,[[],[["vec",3],["f32",15]]]],[11,"clone","greenglas::image::modifiers","",0,[[],["resize",3]]],[11,"clone","","",1,[[],["crop",3]]],[11,"clone","","",8,[[],["grayscale",3]]],[11,"clone","greenglas::transformer","",4,[[],["transformererror",4]]],[11,"fmt","greenglas::image::modifiers","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","greenglas::transformer","",4,[[["formatter",3]],["result",6]]],[11,"fmt","greenglas::word","",5,[[["formatter",3]],["result",6]]],[11,"modify","greenglas::image::modifiers","",0,[[["image",3]]]],[11,"modify","","",1,[[["image",3]]]],[11,"modify","","",8,[[["image",3]]]]],"p":[[3,"Resize"],[3,"Crop"],[3,"Image"],[8,"Transformer"],[4,"TransformerError"],[3,"Word"],[8,"Modifier"],[8,"Set"],[3,"Grayscale"]]},\
"juice":{"doc":"Juice is a open, modular and clear-designed Machine …","i":[[0,"layer","juice","Provides the generics and interfaces for the specific …",null,null],[3,"Layer","juice::layer","The generic Layer",null,null],[12,"name","","Identifies the Network",0,null],[12,"config","","The configuration of the Layer",0,null],[12,"worker","","The [implementation][1] of the Layer. [1]: …",0,null],[12,"weights_data","","The vector that stores shared references to the weights …",0,null],[12,"weights_gradient","","The vector that stores shared references to the weights …",0,null],[12,"input_blobs_data","","References to all the input blobs of the layer.",0,null],[12,"input_blobs_gradient","","References to all the input blobs of the layer.",0,null],[12,"input_blob_names","","Names for all the input blobs of the layer.",0,null],[12,"output_blobs_data","","References to all the output blobs of the layer.",0,null],[12,"output_blobs_gradient","","References to all the output blobs of the layer.",0,null],[12,"blob_names","","All the blobs of the layer that can be addressed by name.",0,null],[11,"connect","","Connect the layer to another layers and set up tensors …",0,[[["hashmap",3],["hashmap",3]]]],[11,"init_backprop","","Initializes layer for [backpropagation][1] [1]: …",0,[[["hashset",3]]]],[11,"init_force_backward","","Set [backpropagation][1] flags to force this layer to …",0,[[]]],[11,"forward","","Uses the underlying layer implementation to compute a …",0,[[],[["arclock",6],["vec",3]]]],[11,"backward","","Uses the underlying layer implementation to compute a …",0,[[],[["arclock",6],["vec",3]]]],[11,"backward_input","","Calculate the gradient w.r.t. input.",0,[[],[["arclock",6],["vec",3]]]],[11,"backward_parameters","","Calculate the gradient w.r.t. parameters.",0,[[]]],[11,"synchronize","","Synchronize the layers backend.",0,[[]]],[11,"update_weights","","Updates the [weights][1] with the weight update computed …",0,[[]]],[11,"clear_weights_gradients","","Clears the [weights][1] gradients and zero-inits them. [1]…",0,[[]]],[11,"save","","Serialize the Layer and it\'s weights to a Cap\'n Proto …",0,[[["path",3],["asref",8]],["result",6]]],[11,"load","","Read a Cap\'n Proto file at the specified path and …",0,[[["ibackend",8],["f32",15],["rc",3],["layerops",8],["path",3],["asref",8]],[["layer",3],["result",6]]]],[11,"set_weight_propagate_down","","Sets whether the layer should compute gradients w.r.t. a …",0,[[["usize",15],["bool",15]]]],[11,"is_using_in_place","","Returns <code>true</code> when the layer is using in-place computation.",0,[[],["bool",15]]],[11,"input_blob_names","","Returns the names of all the input blobs.",0,[[]]],[11,"loss","","Returns the [loss weight][1] associated with the weight …",0,[[["usize",15]],[["option",4],["f32",15]]]],[11,"learnable_weights_data","","Returns all the learnable weights in the layer.",0,[[],[["arclock",6],["vec",3]]]],[11,"learnable_weights_gradients","","Returns the gradients for all the learnable weights in …",0,[[],[["arclock",6],["vec",3]]]],[11,"learnable_weights_names","","Returns the names of all the learnable weights in the …",0,[[],[["vec",3],["string",3]]]],[11,"learnable_weights_lr","","Returns the learning rate for all the learnable weights …",0,[[],[["vec",3],["option",4]]]],[11,"from_config","","Creates a new Layer from a [LayerConfig][1]. [1]: …",0,[[["rc",3],["layerconfig",3]],["layer",3]]],[8,"ILayer","","A Layer in a Neural Network that can handle forward and …",null,null],[11,"init","","Initialize the layer for computation.",1,[[["rc",3]]]],[11,"reshape","","Adjust to shapes of the output blobs to fit the shapes of …",1,[[["rc",3],["vec",3]]]],[11,"resize_shared_workspace","","Adjust size of shared workspace.",1,[[["rc",3],["option",4],["arclock",6]],[["option",4],["arclock",6]]]],[11,"forward","","Compute the [feedforward][1] layer output using the …",1,[[]]],[11,"backward_input","","Compute the [backpropagation][1] input gradient using the …",1,[[]]],[11,"backward_parameters","","Compute the [backpropagation][1] parameters gradient …",1,[[]]],[11,"auto_output_blobs","","Return whether \\\"anonymous\\\" output blobs are created …",1,[[],["bool",15]]],[11,"min_output_blobs","","Returns the minimum number of output blobs required by …",1,[[],["usize",15]]],[11,"exact_num_output_blobs","","Returns the exact number of output blobs required by the …",1,[[],[["usize",15],["option",4]]]],[11,"auto_weight_blobs","","Return whether weight blobs are created automatically for …",1,[[],["bool",15]]],[11,"exact_num_input_blobs","","Returns the exact number of input blobs required by the …",1,[[],[["usize",15],["option",4]]]],[11,"allow_force_backward","","Return whether to allow force_backward for a given input …",1,[[["usize",15]],["bool",15]]],[11,"sync_native","","Return wether a simple native backend should be used to […",1,[[],["bool",15]]],[11,"compute_in_place","","Return wether the computations of a layer should be done …",1,[[],["bool",15]]],[11,"is_container","","Return wether the layer is a container.",1,[[],["bool",15]]],[11,"loss_weight","","Return the associated loss weight for a given output blob …",1,[[["usize",15]],[["option",4],["f32",15]]]],[11,"inputs_data","","Return the input tensors of the layer.",1,[[],[["option",4],["vec",3]]]],[11,"inputs_gradients","","Return the gradients of the input tensors of the layer.",1,[[],[["option",4],["vec",3]]]],[11,"outputs_data","","Return the output tensors of the layer.",1,[[],[["option",4],["vec",3]]]],[11,"outputs_gradients","","Return the gradients of the output tensors of the layer.",1,[[],[["option",4],["vec",3]]]],[11,"learnable_weights","","Return the learnable weights inside the layer.",1,[[],[["option",4],["vec",3]]]],[11,"learnable_weights_gradients","","Return the gradients for the learnable weights inside the …",1,[[],[["option",4],["vec",3]]]],[11,"learnable_weights_names","","Return the names of the learnable weights inside the …",1,[[],[["option",4],["vec",3]]]],[11,"learnable_weights_lr","","Return the learning rates for the learnable weights …",1,[[],[["option",4],["vec",3]]]],[8,"ComputeOutput","","A Layer that can compute the output for a given input.",null,null],[10,"compute_output","","Compute output for given input and write them into …",2,[[]]],[8,"ComputeInputGradient","","A Layer that can compute the gradient with respect to its …",null,null],[10,"compute_input_gradient","","Compute gradients with respect to the inputs and write …",3,[[]]],[8,"ComputeParametersGradient","","A Layer that can compute the gradient with respect to its …",null,null],[11,"compute_parameters_gradient","","Compute gradients with respect to the parameters and …",4,[[]]],[3,"LayerConfig","","Layer Configuration Struct",null,null],[12,"name","","The name of the Layer",5,null],[12,"layer_type","","The type of the Layer",5,null],[12,"outputs","","The name for each output Blob",5,null],[12,"inputs","","The name for each input Blob",5,null],[12,"params","","Specifies training configuration for each weight blob.",5,null],[12,"propagate_down","","Specifies on which inputs the backpropagation should be …",5,null],[4,"LayerType","","The Layer Types",null,null],[13,"Convolution","","Convolution Layer",6,null],[13,"Rnn","","RNN Layer",6,null],[13,"Linear","","Linear Layer",6,null],[13,"LogSoftmax","","LogSoftmax Layer",6,null],[13,"Pooling","","Pooling Layer",6,null],[13,"Sequential","","Sequential Layer",6,null],[13,"Softmax","","Softmax Layer",6,null],[13,"Dropout","","Dropout",6,null],[13,"ReLU","","ReLU Layer",6,null],[13,"TanH","","TanH Layer",6,null],[13,"Sigmoid","","Sigmoid Layer",6,null],[13,"NegativeLogLikelihood","","NegativeLogLikelihood Layer",6,null],[13,"MeanSquaredError","","MeanSquaredError Layer",6,null],[13,"Reshape","","Reshape Layer",6,null],[11,"supports_in_place","","Returns wether the LayerType supports in-place operations.",6,[[],["bool",15]]],[11,"new","","Creates a new LayerConfig",5,[[["layertype",4],["into",8],["str",15]],["layerconfig",3]]],[11,"output","","Returns the Name of the requested output Blob",5,[[["usize",15]],[["option",4],["string",3]]]],[11,"outputs_len","","Returns the number of output Blobs",5,[[],["usize",15]]],[11,"add_output","","Add a output by name",5,[[["str",15]]]],[11,"input","","Returns the Name of the requested input Blob",5,[[["usize",15]],[["option",4],["string",3]]]],[11,"inputs_len","","Returns the number of input Blobs",5,[[],["usize",15]]],[11,"add_input","","Add a input by name",5,[[["str",15]]]],[11,"param","","Returns the requested WeightConfig",5,[[["usize",15]],[["weightconfig",3],["option",4]]]],[11,"params_len","","Returns the number of params",5,[[],["usize",15]]],[11,"validate","","Check if the configured parameters make sense.",5,[[],[["result",4],["str",15]]]],[0,"layers","juice","Provides the fundamental units of computation in a Neural …",null,null],[0,"activation","juice::layers","Provides nonlinear activation methods.",null,null],[0,"relu","juice::layers::activation","Applies the nonlinear Rectified Linear Unit.",null,null],[3,"ReLU","juice::layers::activation::relu","ReLU Activation Layer",null,null],[0,"sigmoid","juice::layers::activation","Applies the nonlinear Log-Sigmoid function.",null,null],[3,"Sigmoid","juice::layers::activation::sigmoid","Sigmoid Activation Layer",null,null],[0,"tanh","juice::layers::activation","Applies the nonlinear TanH function.",null,null],[3,"TanH","juice::layers::activation::tanh","TanH Activation Layer",null,null],[0,"common","juice::layers","Provides common neural network layers.",null,null],[0,"convolution","juice::layers::common","Convolves the input tensor.",null,null],[3,"Convolution","juice::layers::common::convolution","Convolution Layer",null,null],[11,"from_config","","Create a Convolution layer from a ConvolutionConfig.",7,[[["convolutionconfig",3]],["convolution",3]]],[3,"ConvolutionConfig","","Specifies configuration parameters for a Convolution …",null,null],[12,"num_output","","The number of output feature maps",8,null],[12,"filter_shape","","The size of the kernel",8,null],[12,"stride","","The stride size",8,null],[12,"padding","","The padding size",8,null],[0,"dropout","juice::layers::common","Applies a Dropout layer to the input data <code>x</code>",null,null],[3,"Dropout","juice::layers::common::dropout","Dropout Layer",null,null],[11,"from_config","","Create a Dropout layer from a DropoutConfig.",9,[[["dropoutconfig",3]],["dropout",3]]],[3,"DropoutConfig","","Specifies configuration parameters for a Dropout Layer.",null,null],[12,"probability","","The probability to clamp a value to zero",10,null],[12,"seed","","The initial seed for the (pseudo-)random generator",10,null],[0,"linear","juice::layers::common","Applies a linear transformation to the input data …",null,null],[3,"Linear","juice::layers::common::linear","Linear Layer",null,null],[11,"from_config","","Create a Linear layer from a LinearConfig.",11,[[["linearconfig",3]],["linear",3]]],[3,"LinearConfig","","Specifies configuration parameters for a Linear Layer.",null,null],[12,"output_size","","The number of output values",12,null],[0,"log_softmax","juice::layers::common","Computes the logarithmic softmax of its input.",null,null],[3,"LogSoftmax","juice::layers::common::log_softmax","LogSoftmax Layer",null,null],[0,"pooling","juice::layers::common","Applies pooling to the input.",null,null],[3,"Pooling","juice::layers::common::pooling","Pooling Layer",null,null],[11,"from_config","","Create a Pooling layer from a PoolingConfig.",13,[[["poolingconfig",3]],["pooling",3]]],[3,"PoolingConfig","","Specifies configuration parameters for a Pooling Layer.",null,null],[12,"mode","","The PoolingMode to use",14,null],[12,"filter_shape","","The shape of the filter",14,null],[12,"stride","","The stride size",14,null],[12,"padding","","The padding size",14,null],[4,"PoolingMode","","The different modes of pooling that can be calculated.",null,null],[13,"Max","","The maximum value inside the pooling window will be used …",15,null],[13,"Average","","The average of all values inside the pooling window will …",15,null],[0,"rnn","juice::layers::common","Create a Recursive Layer",null,null],[3,"Rnn","juice::layers::common::rnn","",null,null],[11,"from_config","","Create a RNN from a RNNConfig",16,[[["rnnconfig",3]],["rnn",3]]],[3,"RnnConfig","","Specifies configuration parameters for a RNN Layer. TODO: …",null,null],[12,"hidden_size","","Size of the Hidden Layer",17,null],[12,"num_layers","","Number of Hidden Layers",17,null],[12,"rnn_type","","Type of RNN",17,null],[12,"dropout_probability","","Dropout Probability",17,null],[12,"dropout_seed","","Dropout Seed",17,null],[12,"input_mode","","Input Mode",17,null],[12,"direction_mode","","RNN Direction",17,null],[0,"softmax","juice::layers::common","Computes the softmax of its input.",null,null],[3,"Softmax","juice::layers::common::softmax","Softmax Layer",null,null],[8,"FilterLayer","juice::layers::common","Provides common utilities for Layers that utilize a …",null,null],[11,"calculate_spatial_output_dims","","Computes the shape of the spatial dimensions.",18,[[],[["usize",15],["vec",3]]]],[10,"calculate_output_shape","","Calculate output shape based on the shape of filter, …",18,[[],[["usize",15],["vec",3]]]],[10,"num_spatial_dims","","Calculates the number of spatial dimensions for the …",18,[[],["usize",15]]],[11,"spatial_filter_dims","","Retrievs the spatial dimensions for the filter based on …",18,[[["usize",15]],[["usize",15],["vec",3]]]],[11,"stride_dims","","Retrievs the stride for the convolution based on …",18,[[["usize",15]],[["usize",15],["vec",3]]]],[11,"padding_dims","","Retrievs the padding for the convolution based on …",18,[[["usize",15]],[["usize",15],["vec",3]]]],[10,"filter_shape","","The filter_shape that will be used by <code>spatial_filter_dims</code>.",18,[[]]],[10,"stride","","The stride that will be used by <code>stride_dims</code>.",18,[[]]],[10,"padding","","The padding that will be used by <code>padding_dims</code>.",18,[[]]],[0,"container","juice::layers","Provides container layers.",null,null],[0,"sequential","juice::layers::container","A container layer that runs operations sequentially on …",null,null],[3,"Sequential","juice::layers::container::sequential","Sequential Layer",null,null],[11,"empty","","Create a empty Sequential container layer.",19,[[],["sequential",3]]],[11,"from_config","","Create a Sequential layer from a SequentialConfig.",19,[[["rc",3],["sequentialconfig",3]],["sequential",3]]],[11,"init_layers","","Initializes a sequential container.",19,[[["rc",3],["sequentialconfig",3]]]],[3,"SequentialConfig","","Specifies configuration parameters for a Sequential Layer.",null,null],[12,"layers","","Defines the layers of the container via LayerConfigs.",20,null],[12,"inputs","","Defines the names and shapes of the input tensors.",20,null],[12,"force_backward","","Defines if the container will force every layer to do […",20,null],[11,"find_in_place_output","","Tries to find the output of a previous layer that is …",20,[[["usize",15]],[["string",3],["option",4]]]],[11,"add_layer","","Add layer at the end of the sequential container.",20,[[["layerconfig",3]]]],[11,"add_input","","Add a input to the network.",20,[[["str",15]]]],[0,"loss","juice::layers","Provides methods to calculate the loss (cost) of some …",null,null],[0,"mean_squared_error","juice::layers::loss","Provides Loss & Gradient for Mean Squared Error",null,null],[3,"MeanSquaredError","juice::layers::loss::mean_squared_error","Mean Squared Error Layer",null,null],[0,"negative_log_likelihood","juice::layers::loss","TODO: DOC",null,null],[3,"NegativeLogLikelihood","juice::layers::loss::negative_log_likelihood","NegativeLogLikelihood Loss Layer",null,null],[11,"from_config","","Create a NegativeLogLikelihood layer from a …",21,[[["negativeloglikelihoodconfig",3]],["negativeloglikelihood",3]]],[3,"NegativeLogLikelihoodConfig","","Specifies configuration parameters for a …",null,null],[12,"num_classes","","How many different classes can be classified.",22,null],[0,"utility","juice::layers","Provides various helpful layers, which might be not …",null,null],[0,"flatten","juice::layers::utility","Flattens the bottom Blob into a simpler top Blob.",null,null],[3,"Flatten","juice::layers::utility::flatten","Flattening Utility Layer",null,null],[0,"reshape","juice::layers::utility","Utility layer to give a tensor another shape.",null,null],[3,"Reshape","juice::layers::utility::reshape","Reshape Utility Layer",null,null],[11,"from_config","","Create a Reshape layer from a ReshapeConfig.",23,[[["reshapeconfig",3]],["reshape",3]]],[3,"ReshapeConfig","","Specifies configuration parameters for a Reshape Layer.",null,null],[12,"shape","","The target shape that the input should assume.",24,null],[11,"of_shape","","Create a ReshapeConfig that describes a Reshape layer …",24,[[],["reshapeconfig",3]]],[0,"solver","juice","Provides the generics and interfaces for the specific …",null,null],[0,"confusion_matrix","juice::solver","TODO: DOC",null,null],[3,"ConfusionMatrix","juice::solver::confusion_matrix","A ConfusionMatrix.",null,null],[11,"new","","Create a ConfusionMatrix that analyzes the prediction of …",25,[[["usize",15]],["confusionmatrix",3]]],[11,"add_sample","","Add a sample by providing the expected <code>target</code> class and …",25,[[["usize",15]]]],[11,"add_samples","","Add a batch of samples.",25,[[]]],[11,"get_predictions","","Get the predicted classes from the output of a network.",25,[[["sharedtensor",3]],[["usize",15],["vec",3]]]],[11,"set_capacity","","Set the <code>capacity</code> of the ConfusionMatrix",25,[[["usize",15],["option",4]]]],[11,"samples","","Return all collected samples.",25,[[],["vecdeque",3]]],[11,"accuracy","","Return the accuracy of the collected predictions.",25,[[],["accuracy",3]]],[3,"Sample","","A single prediction Sample.",null,null],[11,"correct","","Returns if the prediction is equal to the expected target.",26,[[],["bool",15]]],[3,"Accuracy","","The accuracy of the predictions in a ConfusionMatrix.",null,null],[0,"regression_evaluator","juice::solver","Set of Evaluators for Regression Problems",null,null],[3,"RegressionEvaluator","juice::solver::regression_evaluator","Sampled Evaluator for Regression Problems",null,null],[11,"new","","Create an evaluator for Regression Problems",27,[[["option",4],["string",3]],["regressionevaluator",3]]],[11,"add_sample","","Add a sample by providing the expected <code>target</code> value and …",27,[[["f32",15]]]],[11,"add_samples","","Add a batch of samples.",27,[[]]],[11,"get_predictions","","Get the predicted value from the output of a network.",27,[[["sharedtensor",3]],[["vec",3],["f32",15]]]],[11,"set_capacity","","Set the <code>capacity</code> of the Regression Evaluator",27,[[["usize",15],["option",4]]]],[11,"samples","","Return all collected samples.",27,[[],["vecdeque",3]]],[11,"accuracy","","Return the accuracy of the collected predictions.",27,[[]]],[3,"Sample","","A single prediction sample.",null,null],[8,"RegressionLoss","","Trait to show loss & metric for a Regression Evaluator",null,null],[10,"loss","","Loss function to produce metric",28,[[],["f32",15]]],[3,"MeanSquaredErrorAccuracy","","Provides loss calculated by Mean Squared Error for …",null,null],[3,"Solver","juice::solver","Solver that optimizes a [Layer][1] with a given objective.…",null,null],[12,"worker","","The implementation of the Solver",29,null],[11,"from_config","","Create Solver from [SolverConfig][1] [1]: …",29,[[["rc",3],["rc",3],["solverconfig",3]],["solver",3]]],[11,"train_minibatch","","Train the network with one minibatch",29,[[["sharedtensor",3],["arclock",6]],[["sharedtensor",3],["arclock",6]]]],[11,"network","","Returns the network trained by the solver.",29,[[],["layer",3]]],[11,"mut_network","","Returns the network trained by the solver.",29,[[],["layer",3]]],[8,"ISolver","","Implementation of a specific Solver.",null,null],[11,"init","","Initialize the solver, setting up any network related …",30,[[["layer",3]]]],[10,"compute_update","","Update the weights of the net with part of the gradient.",30,[[["solverconfig",3],["layer",3],["usize",15]]]],[10,"backend","","Returns the backend used by the solver.",30,[[]]],[3,"SolverConfig","","Configuration for a Solver",null,null],[12,"name","","Name of the solver.",31,null],[12,"network","","The [LayerConfig][1] that is used to initialize the …",31,null],[12,"objective","","The [LayerConfig][1] that is used to initialize the …",31,null],[12,"solver","","The [Solver implementation][1] to be used. [1]: …",31,null],[12,"minibatch_size","","Accumulate gradients over <code>minibatch_size</code> instances.",31,null],[12,"lr_policy","","The learning rate policy to be used.",31,null],[12,"base_lr","","The base learning rate.",31,null],[12,"gamma","","gamma as used in the calculation of most learning rate …",31,null],[12,"stepsize","","The stepsize used in Step and Sigmoid learning policies.",31,null],[12,"clip_gradients","","The threshold for clipping gradients.",31,null],[12,"weight_decay","","The global [weight decay][1] multiplier for […",31,null],[12,"regularization_method","","The method of [regularization][1] to use. [1]: …",31,null],[12,"momentum","","The [momentum][1] multiplier for [SGD solvers][2]. [1]: …",31,null],[11,"get_learning_rate","","Return the learning rate for a supplied iteration.",31,[[["usize",15]],["f32",15]]],[4,"SolverKind","","All available types of solvers.",null,null],[13,"SGD","","Stochastic Gradient Descent. See [SGDKind][1] for all …",32,null],[11,"with_config","","Create a Solver of the specified kind with the supplied …",32,[[["ibackend",8],["solverops",8],["rc",3],["f32",15],["solverconfig",3]],[["box",3],["isolver",8]]]],[4,"SGDKind","","All available types of Stochastic Gradient Descent …",null,null],[13,"Momentum","","Stochastic Gradient Descent with Momentum. See […",33,null],[11,"with_config","","Create a Solver of the specified kind with the supplied …",33,[[["ibackend",8],["solverops",8],["rc",3],["f32",15],["solverconfig",3]],[["box",3],["isolver",8]]]],[4,"LRPolicy","","Learning Rate Policy for a [Solver][1] [1]: …",null,null],[13,"Fixed","","always return base_lr",34,null],[13,"Step","","learning rate decays every <code>step</code> iterations. return …",34,null],[13,"Exp","","return base_lr * gamma ^ iter",34,null],[4,"RegularizationMethod","","[Regularization][1] method for a [Solver][2]. [1]: …",null,null],[13,"L2","","L2 regularization",35,null],[0,"solvers","juice","Provides the trainers for the Layers.",null,null],[0,"sgd","juice::solvers","Provides ISolver implementations based on [Stochastic …",null,null],[0,"momentum","juice::solvers::sgd","A [Stochastic Gradient Descent with Momentum][1] [1]: …",null,null],[3,"Momentum","juice::solvers::sgd::momentum","Stochastic Gradient Descent with Momentum.",null,null],[11,"new","","Create a new SGD Momentum solver.",36,[[["rc",3]],["momentum",3]]],[0,"weight","juice","Provides configuration of weights and their …",null,null],[3,"WeightConfig","juice::weight","Specifies training configuration for a weight blob.",null,null],[12,"name","","The name of the weight blob -- useful for sharing weights …",37,null],[12,"share_mode","","Whether to require shared weights to have the same shape, …",37,null],[12,"lr_mult","","The multiplier on the global learning rate for this …",37,null],[12,"decay_mult","","The multiplier on the global weight decay for this …",37,null],[12,"filler","","The filler that initializes the weights in the weight …",37,null],[11,"check_dimensions","","Checks dimensions of two blobs according to the <code>share_mode</code>…",37,[[["sharedtensor",3],["string",3]],[["result",4],["string",3]]]],[11,"lr_mult","","The multiplier on the global learning rate for this …",37,[[],["f32",15]]],[11,"decay_mult","","The multiplier on the global weight decay for this weight …",37,[[],["f32",15]]],[4,"DimCheckMode","","Enum for specifing the shared weights behaviour",null,null],[13,"Strict","","Strict requires that shapes match.",38,null],[13,"Permissive","","Permissive requires only the count of weights to match.",38,null],[4,"FillerType","","Enum for specifing the type of Filler.",null,null],[13,"Constant","","Fills the weight blob with a constant <code>value</code> (all values …",39,null],[12,"value","juice::weight::FillerType","The value that will be used to fill the blob.",40,null],[13,"Glorot","juice::weight","Fills the weight blobs based on the paper:",39,null],[12,"input_size","juice::weight::FillerType","Number of input nodes for each output.",41,null],[12,"output_size","","Number of output nodes for each input.",41,null],[11,"fill","juice::weight","Uses a filler as specified by this FillerType to fill the …",39,[[["sharedtensor",3]]]],[11,"fill_constant","","Directly use the Constant Filler.",39,[[["sharedtensor",3],["f32",15]]]],[11,"fill_glorot","","Directly use the Glorot Filler.",39,[[["usize",15],["sharedtensor",3]]]],[0,"util","juice","Provides common utility functions",null,null],[6,"ArcLock","juice::util","Shared Lock used for our tensors",null,null],[5,"native_backend","","Create a simple native backend.",null,[[],[["native",3],["backend",3]]]],[5,"write_to_memory","","Write into a native Coaster Memory.",null,[[["flatbox",3]]]],[5,"write_to_memory_offset","","Write into a native Coaster Memory with a offset.",null,[[["usize",15],["flatbox",3]]]],[5,"write_batch_sample","","Write the <code>i</code>th sample of a batch into a SharedTensor.",null,[[["usize",15],["sharedtensor",3]]]],[5,"native_scalar","","Create a Coaster SharedTensor for a scalar value.",null,[[["copy",8],["numcast",8]],[["sharedtensor",3],["copy",8],["numcast",8]]]],[5,"cast_vec_usize_to_i32","","Casts a Vec to as Vec",null,[[["usize",15],["vec",3]],[["vec",3],["i32",15]]]],[8,"Axpby","","Extends IBlas with Axpby",null,null],[11,"axpby","","Performs the operation y := a<em>x + b</em>y .",42,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"SolverOps","","Encapsulates all traits required by Solvers.",null,null],[8,"LayerOps","","Encapsulates all traits used in Layers.",null,null],[14,"impl_ilayer_activation","juice","macro helper to implement activation trait TODO see common",null,null],[14,"impl_ilayer_common","","macro to implement ilayer common TODO use Some(1) as a …",null,null],[14,"impl_ilayer_loss","","macro helper for default loss",null,null],[14,"impl_isolver_sgd","","Implement [ISolver][1] for [SGD solvers][2]. [1]: …",null,null],[11,"from","juice::layer","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","juice::layers::activation::relu","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","juice::layers::activation::sigmoid","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","juice::layers::activation::tanh","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","juice::layers::common::convolution","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","juice::layers::common::dropout","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","juice::layers::common::linear","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","juice::layers::common::log_softmax","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","juice::layers::common::pooling","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","juice::layers::common::rnn","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","juice::layers::common::softmax","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","juice::layers::container::sequential","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","juice::layers::loss::mean_squared_error","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","juice::layers::loss::negative_log_likelihood","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","juice::layers::utility::flatten","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","juice::layers::utility::reshape","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","juice::solver::confusion_matrix","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","juice::solver::regression_evaluator","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","juice::solver","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","juice::solvers::sgd::momentum","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","juice::weight","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"exact_num_output_blobs","juice::layers::activation::relu","",43,[[],[["usize",15],["option",4]]]],[11,"exact_num_input_blobs","","",43,[[],[["usize",15],["option",4]]]],[11,"compute_in_place","","",43,[[],["bool",15]]],[11,"reshape","","",43,[[["vec",3],["rc",3]]]],[11,"exact_num_output_blobs","juice::layers::activation::sigmoid","",44,[[],[["usize",15],["option",4]]]],[11,"exact_num_input_blobs","","",44,[[],[["usize",15],["option",4]]]],[11,"compute_in_place","","",44,[[],["bool",15]]],[11,"reshape","","",44,[[["vec",3],["rc",3]]]],[11,"exact_num_output_blobs","juice::layers::activation::tanh","",45,[[],[["usize",15],["option",4]]]],[11,"exact_num_input_blobs","","",45,[[],[["usize",15],["option",4]]]],[11,"compute_in_place","","",45,[[],["bool",15]]],[11,"reshape","","",45,[[["vec",3],["rc",3]]]],[11,"exact_num_output_blobs","juice::layers::common::convolution","",7,[[],[["usize",15],["option",4]]]],[11,"exact_num_input_blobs","","",7,[[],[["usize",15],["option",4]]]],[11,"auto_weight_blobs","","",7,[[],["bool",15]]],[11,"reshape","","",7,[[["rc",3],["vec",3]]]],[11,"resize_shared_workspace","","",7,[[["rc",3],["option",4],["arclock",6]],[["option",4],["arclock",6]]]],[11,"exact_num_output_blobs","juice::layers::common::dropout","",9,[[],[["usize",15],["option",4]]]],[11,"exact_num_input_blobs","","",9,[[],[["usize",15],["option",4]]]],[11,"reshape","","",9,[[["vec",3],["rc",3]]]],[11,"auto_weight_blobs","juice::layers::common::linear","",11,[[],["bool",15]]],[11,"reshape","","",11,[[["vec",3],["rc",3]]]],[11,"exact_num_output_blobs","","",11,[[],[["usize",15],["option",4]]]],[11,"reshape","juice::layers::common::log_softmax","",46,[[["vec",3],["rc",3]]]],[11,"exact_num_output_blobs","juice::layers::common::pooling","",13,[[],[["usize",15],["option",4]]]],[11,"exact_num_input_blobs","","",13,[[],[["usize",15],["option",4]]]],[11,"reshape","","",13,[[["vec",3],["rc",3]]]],[11,"exact_num_output_blobs","juice::layers::common::rnn","",16,[[],[["usize",15],["option",4]]]],[11,"exact_num_input_blobs","","",16,[[],[["usize",15],["option",4]]]],[11,"auto_weight_blobs","","",16,[[],["bool",15]]],[11,"reshape","","",16,[[["rc",3],["vec",3]]]],[11,"resize_shared_workspace","","",16,[[["rc",3],["option",4],["arclock",6]],[["option",4],["arclock",6]]]],[11,"reshape","juice::layers::common::softmax","",47,[[["vec",3],["rc",3]]]],[11,"is_container","juice::layers::container::sequential","",19,[[],["bool",15]]],[11,"inputs_data","","",19,[[],[["option",4],["vec",3]]]],[11,"inputs_gradients","","",19,[[],[["option",4],["vec",3]]]],[11,"outputs_data","","",19,[[],[["option",4],["vec",3]]]],[11,"outputs_gradients","","",19,[[],[["option",4],["vec",3]]]],[11,"learnable_weights","","",19,[[],[["option",4],["vec",3]]]],[11,"learnable_weights_gradients","","",19,[[],[["option",4],["vec",3]]]],[11,"learnable_weights_names","","",19,[[],[["option",4],["vec",3]]]],[11,"resize_shared_workspace","","",19,[[["rc",3],["option",4],["arclock",6]],[["option",4],["arclock",6]]]],[11,"forward","","",19,[[]]],[11,"backward_input","","",19,[[]]],[11,"backward_parameters","","",19,[[]]],[11,"reshape","juice::layers::loss::mean_squared_error","",48,[[["vec",3],["rc",3]]]],[11,"exact_num_output_blobs","juice::layers::loss::negative_log_likelihood","",21,[[],[["usize",15],["option",4]]]],[11,"exact_num_input_blobs","","",21,[[],[["usize",15],["option",4]]]],[11,"auto_output_blobs","","",21,[[],["bool",15]]],[11,"loss_weight","","",21,[[["usize",15]],[["option",4],["f32",15]]]],[11,"sync_native","","",21,[[],["bool",15]]],[11,"reshape","","",21,[[["vec",3],["rc",3]]]],[11,"compute_in_place","juice::layers::utility::reshape","",23,[[],["bool",15]]],[11,"auto_output_blobs","","",23,[[],["bool",15]]],[11,"reshape","","",23,[[["vec",3],["rc",3]]]],[11,"compute_output","juice::layers::activation::relu","",43,[[]]],[11,"compute_output","juice::layers::activation::sigmoid","",44,[[]]],[11,"compute_output","juice::layers::activation::tanh","",45,[[]]],[11,"compute_output","juice::layers::common::convolution","",7,[[]]],[11,"compute_output","juice::layers::common::dropout","",9,[[]]],[11,"compute_output","juice::layers::common::linear","Basically, x has the shape (k, n) where k is the batch …",11,[[]]],[11,"compute_output","juice::layers::common::log_softmax","",46,[[]]],[11,"compute_output","juice::layers::common::pooling","",13,[[]]],[11,"compute_output","juice::layers::common::rnn","",16,[[]]],[11,"compute_output","juice::layers::common::softmax","",47,[[]]],[11,"compute_output","juice::layers::container::sequential","",19,[[]]],[11,"compute_output","juice::layers::loss::mean_squared_error","",48,[[]]],[11,"compute_output","juice::layers::loss::negative_log_likelihood","",21,[[]]],[11,"compute_output","juice::layers::utility::reshape","",23,[[]]],[11,"compute_input_gradient","juice::layers::activation::relu","",43,[[]]],[11,"compute_input_gradient","juice::layers::activation::sigmoid","",44,[[]]],[11,"compute_input_gradient","juice::layers::activation::tanh","",45,[[]]],[11,"compute_input_gradient","juice::layers::common::convolution","",7,[[]]],[11,"compute_input_gradient","juice::layers::common::dropout","",9,[[]]],[11,"compute_input_gradient","juice::layers::common::linear","Since we have row vectors instead of columns, xW^T = …",11,[[]]],[11,"compute_input_gradient","juice::layers::common::log_softmax","",46,[[]]],[11,"compute_input_gradient","juice::layers::common::pooling","",13,[[]]],[11,"compute_input_gradient","juice::layers::common::rnn","",16,[[]]],[11,"compute_input_gradient","juice::layers::common::softmax","",47,[[]]],[11,"compute_input_gradient","juice::layers::container::sequential","",19,[[]]],[11,"compute_input_gradient","juice::layers::loss::mean_squared_error","",48,[[]]],[11,"compute_input_gradient","juice::layers::loss::negative_log_likelihood","",21,[[]]],[11,"compute_input_gradient","juice::layers::utility::reshape","",23,[[]]],[11,"compute_parameters_gradient","juice::layers::common::convolution","",7,[[]]],[11,"compute_parameters_gradient","juice::layers::common::linear","",11,[[]]],[11,"compute_parameters_gradient","juice::layers::common::rnn","",16,[[]]],[11,"compute_parameters_gradient","juice::layers::container::sequential","",19,[[]]],[11,"num_spatial_dims","juice::layers::common::convolution","Calculates the number of spatial dimensions for the …",7,[[],["usize",15]]],[11,"calculate_output_shape","","",7,[[],[["usize",15],["vec",3]]]],[11,"filter_shape","","",7,[[]]],[11,"stride","","",7,[[]]],[11,"padding","","",7,[[]]],[11,"num_spatial_dims","juice::layers::common::pooling","Calculates the number of spatial dimensions for the …",13,[[],["usize",15]]],[11,"calculate_output_shape","","",13,[[],[["usize",15],["vec",3]]]],[11,"filter_shape","","",13,[[]]],[11,"stride","","",13,[[]]],[11,"padding","","",13,[[]]],[11,"loss","juice::solver::regression_evaluator","",52,[[],["f32",15]]],[11,"init","juice::solvers::sgd::momentum","Initialize the SGD Momentum solver, allocating memory for …",36,[[["layer",3]]]],[11,"compute_update","","",36,[[["solverconfig",3],["layer",3],["usize",15]]]],[11,"backend","","",36,[[]]],[11,"into","juice::layers::common::convolution","",8,[[],["layertype",4]]],[11,"into","juice::layers::common::dropout","",10,[[],["layertype",4]]],[11,"into","juice::layers::common::linear","",12,[[],["layertype",4]]],[11,"into","juice::layers::common::pooling","",14,[[],["layertype",4]]],[11,"into","juice::layers::common::rnn","",17,[[],["layertype",4]]],[11,"into","juice::layers::container::sequential","",20,[[],["layertype",4]]],[11,"into","juice::layers::loss::negative_log_likelihood","",22,[[],["layertype",4]]],[11,"into","juice::layers::utility::reshape","",24,[[],["layertype",4]]],[11,"clone","juice::layer","",5,[[],["layerconfig",3]]],[11,"clone","","",6,[[],["layertype",4]]],[11,"clone","juice::layers::activation::relu","",43,[[],["relu",3]]],[11,"clone","juice::layers::activation::sigmoid","",44,[[],["sigmoid",3]]],[11,"clone","juice::layers::activation::tanh","",45,[[],["tanh",3]]],[11,"clone","juice::layers::common::convolution","",7,[[],["convolution",3]]],[11,"clone","","",8,[[],["convolutionconfig",3]]],[11,"clone","juice::layers::common::dropout","",9,[[],["dropout",3]]],[11,"clone","","",10,[[],["dropoutconfig",3]]],[11,"clone","juice::layers::common::linear","",12,[[],["linearconfig",3]]],[11,"clone","juice::layers::common::log_softmax","",46,[[],["logsoftmax",3]]],[11,"clone","juice::layers::common::pooling","",13,[[],["pooling",3]]],[11,"clone","","",14,[[],["poolingconfig",3]]],[11,"clone","","",15,[[],["poolingmode",4]]],[11,"clone","juice::layers::common::rnn","",16,[[],["rnn",3]]],[11,"clone","","",17,[[],["rnnconfig",3]]],[11,"clone","juice::layers::common::softmax","",47,[[],["softmax",3]]],[11,"clone","juice::layers::container::sequential","",20,[[],["sequentialconfig",3]]],[11,"clone","juice::layers::loss::mean_squared_error","",48,[[],["meansquarederror",3]]],[11,"clone","juice::layers::loss::negative_log_likelihood","",21,[[],["negativeloglikelihood",3]]],[11,"clone","","",22,[[],["negativeloglikelihoodconfig",3]]],[11,"clone","juice::layers::utility::flatten","",49,[[],["flatten",3]]],[11,"clone","juice::layers::utility::reshape","",23,[[],["reshape",3]]],[11,"clone","","",24,[[],["reshapeconfig",3]]],[11,"clone","juice::solver::confusion_matrix","",26,[[],["sample",3]]],[11,"clone","","",50,[[],["accuracy",3]]],[11,"clone","juice::solver::regression_evaluator","",51,[[],["sample",3]]],[11,"clone","","",52,[[],["meansquarederroraccuracy",3]]],[11,"clone","juice::solver","",31,[[],["solverconfig",3]]],[11,"clone","","",32,[[],["solverkind",4]]],[11,"clone","","",33,[[],["sgdkind",4]]],[11,"clone","","",34,[[],["lrpolicy",4]]],[11,"clone","","",35,[[],["regularizationmethod",4]]],[11,"clone","juice::weight","",37,[[],["weightconfig",3]]],[11,"clone","","",38,[[],["dimcheckmode",4]]],[11,"clone","","",39,[[],["fillertype",4]]],[11,"default","juice::layers::common::dropout","",10,[[],["dropoutconfig",3]]],[11,"default","juice::layers::common::linear","",11,[[],["linear",3]]],[11,"default","juice::layers::common::log_softmax","",46,[[],["logsoftmax",3]]],[11,"default","juice::layers::common::softmax","",47,[[],["softmax",3]]],[11,"default","juice::layers::container::sequential","",20,[[],["sequentialconfig",3]]],[11,"default","juice::layers::loss::mean_squared_error","",48,[[],["meansquarederror",3]]],[11,"default","juice::solver","",31,[[],["solverconfig",3]]],[11,"default","juice::weight","",37,[[],["weightconfig",3]]],[11,"fmt","juice::layer","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::activation::relu","",43,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::activation::sigmoid","",44,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::activation::tanh","",45,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::common::convolution","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::common::dropout","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::common::linear","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::common::log_softmax","",46,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::common::pooling","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::common::rnn","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::common::softmax","",47,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::container::sequential","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::loss::mean_squared_error","",48,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::loss::negative_log_likelihood","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::utility::flatten","",49,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::utility::reshape","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","juice::solver::confusion_matrix","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","juice::solver::regression_evaluator","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","juice::solver","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","juice::solvers::sgd::momentum","",36,[[["formatter",3]],["result",6]]],[11,"fmt","juice::weight","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","juice::solver::confusion_matrix","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","juice::solver::regression_evaluator","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]]],"p":[[3,"Layer"],[8,"ILayer"],[8,"ComputeOutput"],[8,"ComputeInputGradient"],[8,"ComputeParametersGradient"],[3,"LayerConfig"],[4,"LayerType"],[3,"Convolution"],[3,"ConvolutionConfig"],[3,"Dropout"],[3,"DropoutConfig"],[3,"Linear"],[3,"LinearConfig"],[3,"Pooling"],[3,"PoolingConfig"],[4,"PoolingMode"],[3,"Rnn"],[3,"RnnConfig"],[8,"FilterLayer"],[3,"Sequential"],[3,"SequentialConfig"],[3,"NegativeLogLikelihood"],[3,"NegativeLogLikelihoodConfig"],[3,"Reshape"],[3,"ReshapeConfig"],[3,"ConfusionMatrix"],[3,"Sample"],[3,"RegressionEvaluator"],[8,"RegressionLoss"],[3,"Solver"],[8,"ISolver"],[3,"SolverConfig"],[4,"SolverKind"],[4,"SGDKind"],[4,"LRPolicy"],[4,"RegularizationMethod"],[3,"Momentum"],[3,"WeightConfig"],[4,"DimCheckMode"],[4,"FillerType"],[13,"Constant"],[13,"Glorot"],[8,"Axpby"],[3,"ReLU"],[3,"Sigmoid"],[3,"TanH"],[3,"LogSoftmax"],[3,"Softmax"],[3,"MeanSquaredError"],[3,"Flatten"],[3,"Accuracy"],[3,"Sample"],[3,"MeanSquaredErrorAccuracy"]]},\
"juice_utils":{"doc":"","i":[[5,"download_datasets","juice_utils","",null,[[["str",15]],[["result",4],["box",3]]]],[5,"unzip_datasets","","",null,[[["str",15]],["result",6]]]],"p":[]},\
"rcublas":{"doc":"","i":[[0,"api","rcublas","",null,null],[3,"Context","rcublas::api","Provides a the low-level cuBLAS context.",null,null],[4,"Operation","","",null,null],[13,"NoTrans","","",0,null],[13,"Trans","","",0,null],[13,"ConjTrans","","",0,null],[4,"PointerMode","","",null,null],[13,"Host","","",1,null],[13,"Device","","",1,null],[0,"error","rcublas","Provides Rust Errors for every cuBLAS status.",null,null],[6,"Result","rcublas::error","",null,null],[4,"Error","","Defines cuBLAS errors.",null,null],[13,"NotInitialized","","Failure with cuBLAS initialization.",2,null],[13,"AllocFailed","","Failure with allocation.",2,null],[13,"InternalError","","Failure with cuDNN.",2,null],[13,"InvalidValue","","Failure with provided value.",2,null],[13,"ArchMismatch","","Failure with the hardware architecture.",2,null],[13,"MappingError","","Failure with memory access or internal error/bug.",2,null],[13,"ExecutionFailed","","Failure with Kernel execution.",2,null],[13,"NotSupported","","Failure with an unsupported request.",2,null],[13,"LicenseError","","Failure CUDA License.",2,null],[13,"Unknown","","Failure",2,null],[3,"Context","rcublas","Provides a the low-level cuBLAS context.",null,null],[3,"API","","Defines the cuBLAS API.",null,null],[11,"from","rcublas::api","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","rcublas::error","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","rcublas","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"drop","rcublas::api","",3,[[]]],[11,"clone","rcublas","",4,[[],["api",3]]],[11,"clone","rcublas::api","",3,[[],["context",3]]],[11,"clone","","",1,[[],["pointermode",4]]],[11,"clone","","",0,[[],["operation",4]]],[11,"clone","rcublas::error","",2,[[],["error",4]]],[11,"eq","rcublas::api","",1,[[["pointermode",4]],["bool",15]]],[11,"eq","","",0,[[["operation",4]],["bool",15]]],[11,"fmt","rcublas","",4,[[["formatter",3]],["result",6]]],[11,"fmt","rcublas::api","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","rcublas::error","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"new","rcublas::api","Create a new cuBLAS Context by calling the low-level API.",3,[[],[["error",4],["result",4],["context",3]]]],[11,"from_c","","Create a new cuBLAS Context from its C type.",3,[[["cublashandle_t",6]],["context",3]]],[11,"id_c","","Returns the cuBLAS Context as its C type.",3,[[],["cublashandle_t",6]]],[11,"pointer_mode","","",3,[[],[["pointermode",4],["result",4],["error",4]]]],[11,"set_pointer_mode","","",3,[[["pointermode",4]],[["error",4],["result",4]]]],[11,"asum","","",3,[[["i32",15],["option",4]],[["error",4],["result",4]]]],[11,"axpy","","",3,[[["i32",15],["option",4]],[["error",4],["result",4]]]],[11,"copy","","",3,[[["i32",15],["option",4]],[["error",4],["result",4]]]],[11,"dot","","",3,[[["i32",15],["option",4]],[["error",4],["result",4]]]],[11,"nrm2","","",3,[[["i32",15],["option",4]],[["error",4],["result",4]]]],[11,"scal","","",3,[[["i32",15],["option",4]],[["error",4],["result",4]]]],[11,"swap","","",3,[[["i32",15],["option",4]],[["error",4],["result",4]]]],[11,"gemm","","",3,[[["operation",4],["i32",15]],[["error",4],["result",4]]]],[11,"get_version","","",3,[[],["i32",15]]],[11,"asum","rcublas","Compute the sum of magnitudes of the provided vector …",4,[[["context",3],["i32",15],["option",4]],[["error",4],["result",4]]]],[11,"axpy","","Computes a vector-scalar product and adds the result to a …",4,[[["context",3],["i32",15],["option",4]],[["error",4],["result",4]]]],[11,"copy","","Copies a vector into another vector.",4,[[["context",3],["i32",15],["option",4]],[["error",4],["result",4]]]],[11,"dot","","TODO: DOC",4,[[["context",3],["i32",15],["option",4]],[["error",4],["result",4]]]],[11,"nrm2","","TODO: DOC",4,[[["context",3],["i32",15],["option",4]],[["error",4],["result",4]]]],[11,"scal","","TODO: DOC",4,[[["context",3],["i32",15],["option",4]],[["error",4],["result",4]]]],[11,"swap","","TODO: DOC",4,[[["context",3],["i32",15],["option",4]],[["error",4],["result",4]]]],[11,"gemm","","Performs a general matrix-matrix multiplication.",4,[[["operation",4],["context",3],["i32",15]],[["error",4],["result",4]]]],[11,"create","","Create a new cuBLAS context, allocating resources on the …",4,[[],[["error",4],["result",4],["context",3]]]],[11,"destroy","","Destroys the cuBLAS context, freeing its resources.",4,[[["context",3]],[["error",4],["result",4]]]],[11,"get_version","","Get CUBLAS Version",4,[[["context",3]],[["result",4],["error",4],["i32",15]]]],[11,"get_pointer_mode","","Retrieve the pointer mode for a given cuBLAS context.",4,[[["context",3]],[["pointermode",4],["result",4],["error",4]]]],[11,"set_pointer_mode","","Set the pointer mode for a given cuBLAS context.",4,[[["pointermode",4],["context",3]],[["error",4],["result",4]]]],[11,"from_c","rcublas::api","",1,[[["cublaspointermode_t",4]],["pointermode",4]]],[11,"as_c","","",1,[[],["cublaspointermode_t",4]]],[11,"from_c","","",0,[[["cublasoperation_t",4]],["operation",4]]],[11,"as_c","","",0,[[],["cublasoperation_t",4]]]],"p":[[4,"Operation"],[4,"PointerMode"],[4,"Error"],[3,"Context"],[3,"API"]]},\
"rcublas_sys":{"doc":"","i":[[5,"cublasCreate_v2","rcublas_sys","",null,null],[5,"cublasDestroy_v2","","",null,null],[5,"cublasGetVersion_v2","","",null,null],[5,"cublasGetProperty","","",null,null],[5,"cublasGetCudartVersion","","",null,null],[5,"cublasSetWorkspace_v2","","",null,null],[5,"cublasSetStream_v2","","",null,null],[5,"cublasGetStream_v2","","",null,null],[5,"cublasGetPointerMode_v2","","",null,null],[5,"cublasSetPointerMode_v2","","",null,null],[5,"cublasGetAtomicsMode","","",null,null],[5,"cublasSetAtomicsMode","","",null,null],[5,"cublasGetMathMode","","",null,null],[5,"cublasSetMathMode","","",null,null],[5,"cublasLoggerConfigure","","",null,null],[5,"cublasSetLoggerCallback","","",null,null],[5,"cublasGetLoggerCallback","","",null,null],[5,"cublasSetVector","","",null,null],[5,"cublasGetVector","","",null,null],[5,"cublasSetMatrix","","",null,null],[5,"cublasGetMatrix","","",null,null],[5,"cublasSetVectorAsync","","",null,null],[5,"cublasGetVectorAsync","","",null,null],[5,"cublasSetMatrixAsync","","",null,null],[5,"cublasGetMatrixAsync","","",null,null],[5,"cublasXerbla","","",null,null],[5,"cublasNrm2Ex","","",null,null],[5,"cublasSnrm2_v2","","",null,null],[5,"cublasDnrm2_v2","","",null,null],[5,"cublasScnrm2_v2","","",null,null],[5,"cublasDznrm2_v2","","",null,null],[5,"cublasDotEx","","",null,null],[5,"cublasDotcEx","","",null,null],[5,"cublasSdot_v2","","",null,null],[5,"cublasDdot_v2","","",null,null],[5,"cublasCdotu_v2","","",null,null],[5,"cublasCdotc_v2","","",null,null],[5,"cublasZdotu_v2","","",null,null],[5,"cublasZdotc_v2","","",null,null],[5,"cublasScalEx","","",null,null],[5,"cublasSscal_v2","","",null,null],[5,"cublasDscal_v2","","",null,null],[5,"cublasCscal_v2","","",null,null],[5,"cublasCsscal_v2","","",null,null],[5,"cublasZscal_v2","","",null,null],[5,"cublasZdscal_v2","","",null,null],[5,"cublasAxpyEx","","",null,null],[5,"cublasSaxpy_v2","","",null,null],[5,"cublasDaxpy_v2","","",null,null],[5,"cublasCaxpy_v2","","",null,null],[5,"cublasZaxpy_v2","","",null,null],[5,"cublasCopyEx","","",null,null],[5,"cublasScopy_v2","","",null,null],[5,"cublasDcopy_v2","","",null,null],[5,"cublasCcopy_v2","","",null,null],[5,"cublasZcopy_v2","","",null,null],[5,"cublasSswap_v2","","",null,null],[5,"cublasDswap_v2","","",null,null],[5,"cublasCswap_v2","","",null,null],[5,"cublasZswap_v2","","",null,null],[5,"cublasSwapEx","","",null,null],[5,"cublasIsamax_v2","","",null,null],[5,"cublasIdamax_v2","","",null,null],[5,"cublasIcamax_v2","","",null,null],[5,"cublasIzamax_v2","","",null,null],[5,"cublasIamaxEx","","",null,null],[5,"cublasIsamin_v2","","",null,null],[5,"cublasIdamin_v2","","",null,null],[5,"cublasIcamin_v2","","",null,null],[5,"cublasIzamin_v2","","",null,null],[5,"cublasIaminEx","","",null,null],[5,"cublasAsumEx","","",null,null],[5,"cublasSasum_v2","","",null,null],[5,"cublasDasum_v2","","",null,null],[5,"cublasScasum_v2","","",null,null],[5,"cublasDzasum_v2","","",null,null],[5,"cublasSrot_v2","","",null,null],[5,"cublasDrot_v2","","",null,null],[5,"cublasCrot_v2","","",null,null],[5,"cublasCsrot_v2","","",null,null],[5,"cublasZrot_v2","","",null,null],[5,"cublasZdrot_v2","","",null,null],[5,"cublasRotEx","","",null,null],[5,"cublasSrotg_v2","","",null,null],[5,"cublasDrotg_v2","","",null,null],[5,"cublasCrotg_v2","","",null,null],[5,"cublasZrotg_v2","","",null,null],[5,"cublasRotgEx","","",null,null],[5,"cublasSrotm_v2","","",null,null],[5,"cublasDrotm_v2","","",null,null],[5,"cublasRotmEx","","",null,null],[5,"cublasSrotmg_v2","","",null,null],[5,"cublasDrotmg_v2","","",null,null],[5,"cublasRotmgEx","","",null,null],[5,"cublasSgemv_v2","","",null,null],[5,"cublasDgemv_v2","","",null,null],[5,"cublasCgemv_v2","","",null,null],[5,"cublasZgemv_v2","","",null,null],[5,"cublasSgbmv_v2","","",null,null],[5,"cublasDgbmv_v2","","",null,null],[5,"cublasCgbmv_v2","","",null,null],[5,"cublasZgbmv_v2","","",null,null],[5,"cublasStrmv_v2","","",null,null],[5,"cublasDtrmv_v2","","",null,null],[5,"cublasCtrmv_v2","","",null,null],[5,"cublasZtrmv_v2","","",null,null],[5,"cublasStbmv_v2","","",null,null],[5,"cublasDtbmv_v2","","",null,null],[5,"cublasCtbmv_v2","","",null,null],[5,"cublasZtbmv_v2","","",null,null],[5,"cublasStpmv_v2","","",null,null],[5,"cublasDtpmv_v2","","",null,null],[5,"cublasCtpmv_v2","","",null,null],[5,"cublasZtpmv_v2","","",null,null],[5,"cublasStrsv_v2","","",null,null],[5,"cublasDtrsv_v2","","",null,null],[5,"cublasCtrsv_v2","","",null,null],[5,"cublasZtrsv_v2","","",null,null],[5,"cublasStpsv_v2","","",null,null],[5,"cublasDtpsv_v2","","",null,null],[5,"cublasCtpsv_v2","","",null,null],[5,"cublasZtpsv_v2","","",null,null],[5,"cublasStbsv_v2","","",null,null],[5,"cublasDtbsv_v2","","",null,null],[5,"cublasCtbsv_v2","","",null,null],[5,"cublasZtbsv_v2","","",null,null],[5,"cublasSsymv_v2","","",null,null],[5,"cublasDsymv_v2","","",null,null],[5,"cublasCsymv_v2","","",null,null],[5,"cublasZsymv_v2","","",null,null],[5,"cublasChemv_v2","","",null,null],[5,"cublasZhemv_v2","","",null,null],[5,"cublasSsbmv_v2","","",null,null],[5,"cublasDsbmv_v2","","",null,null],[5,"cublasChbmv_v2","","",null,null],[5,"cublasZhbmv_v2","","",null,null],[5,"cublasSspmv_v2","","",null,null],[5,"cublasDspmv_v2","","",null,null],[5,"cublasChpmv_v2","","",null,null],[5,"cublasZhpmv_v2","","",null,null],[5,"cublasSger_v2","","",null,null],[5,"cublasDger_v2","","",null,null],[5,"cublasCgeru_v2","","",null,null],[5,"cublasCgerc_v2","","",null,null],[5,"cublasZgeru_v2","","",null,null],[5,"cublasZgerc_v2","","",null,null],[5,"cublasSsyr_v2","","",null,null],[5,"cublasDsyr_v2","","",null,null],[5,"cublasCsyr_v2","","",null,null],[5,"cublasZsyr_v2","","",null,null],[5,"cublasCher_v2","","",null,null],[5,"cublasZher_v2","","",null,null],[5,"cublasSspr_v2","","",null,null],[5,"cublasDspr_v2","","",null,null],[5,"cublasChpr_v2","","",null,null],[5,"cublasZhpr_v2","","",null,null],[5,"cublasSsyr2_v2","","",null,null],[5,"cublasDsyr2_v2","","",null,null],[5,"cublasCsyr2_v2","","",null,null],[5,"cublasZsyr2_v2","","",null,null],[5,"cublasCher2_v2","","",null,null],[5,"cublasZher2_v2","","",null,null],[5,"cublasSspr2_v2","","",null,null],[5,"cublasDspr2_v2","","",null,null],[5,"cublasChpr2_v2","","",null,null],[5,"cublasZhpr2_v2","","",null,null],[5,"cublasSgemm_v2","","",null,null],[5,"cublasDgemm_v2","","",null,null],[5,"cublasCgemm_v2","","",null,null],[5,"cublasCgemm3m","","",null,null],[5,"cublasCgemm3mEx","","",null,null],[5,"cublasZgemm_v2","","",null,null],[5,"cublasZgemm3m","","",null,null],[5,"cublasSgemmEx","","",null,null],[5,"cublasGemmEx","","",null,null],[5,"cublasCgemmEx","","",null,null],[5,"cublasUint8gemmBias","","",null,null],[5,"cublasSsyrk_v2","","",null,null],[5,"cublasDsyrk_v2","","",null,null],[5,"cublasCsyrk_v2","","",null,null],[5,"cublasZsyrk_v2","","",null,null],[5,"cublasCsyrkEx","","",null,null],[5,"cublasCsyrk3mEx","","",null,null],[5,"cublasCherk_v2","","",null,null],[5,"cublasZherk_v2","","",null,null],[5,"cublasCherkEx","","",null,null],[5,"cublasCherk3mEx","","",null,null],[5,"cublasSsyr2k_v2","","",null,null],[5,"cublasDsyr2k_v2","","",null,null],[5,"cublasCsyr2k_v2","","",null,null],[5,"cublasZsyr2k_v2","","",null,null],[5,"cublasCher2k_v2","","",null,null],[5,"cublasZher2k_v2","","",null,null],[5,"cublasSsyrkx","","",null,null],[5,"cublasDsyrkx","","",null,null],[5,"cublasCsyrkx","","",null,null],[5,"cublasZsyrkx","","",null,null],[5,"cublasCherkx","","",null,null],[5,"cublasZherkx","","",null,null],[5,"cublasSsymm_v2","","",null,null],[5,"cublasDsymm_v2","","",null,null],[5,"cublasCsymm_v2","","",null,null],[5,"cublasZsymm_v2","","",null,null],[5,"cublasChemm_v2","","",null,null],[5,"cublasZhemm_v2","","",null,null],[5,"cublasStrsm_v2","","",null,null],[5,"cublasDtrsm_v2","","",null,null],[5,"cublasCtrsm_v2","","",null,null],[5,"cublasZtrsm_v2","","",null,null],[5,"cublasStrmm_v2","","",null,null],[5,"cublasDtrmm_v2","","",null,null],[5,"cublasCtrmm_v2","","",null,null],[5,"cublasZtrmm_v2","","",null,null],[5,"cublasSgemmBatched","","",null,null],[5,"cublasDgemmBatched","","",null,null],[5,"cublasCgemmBatched","","",null,null],[5,"cublasCgemm3mBatched","","",null,null],[5,"cublasZgemmBatched","","",null,null],[5,"cublasGemmBatchedEx","","",null,null],[5,"cublasGemmStridedBatchedEx","","",null,null],[5,"cublasSgemmStridedBatched","","",null,null],[5,"cublasDgemmStridedBatched","","",null,null],[5,"cublasCgemmStridedBatched","","",null,null],[5,"cublasCgemm3mStridedBatched","","",null,null],[5,"cublasZgemmStridedBatched","","",null,null],[5,"cublasSgeam","","",null,null],[5,"cublasDgeam","","",null,null],[5,"cublasCgeam","","",null,null],[5,"cublasZgeam","","",null,null],[5,"cublasSgetrfBatched","","",null,null],[5,"cublasDgetrfBatched","","",null,null],[5,"cublasCgetrfBatched","","",null,null],[5,"cublasZgetrfBatched","","",null,null],[5,"cublasSgetriBatched","","",null,null],[5,"cublasDgetriBatched","","",null,null],[5,"cublasCgetriBatched","","",null,null],[5,"cublasZgetriBatched","","",null,null],[5,"cublasSgetrsBatched","","",null,null],[5,"cublasDgetrsBatched","","",null,null],[5,"cublasCgetrsBatched","","",null,null],[5,"cublasZgetrsBatched","","",null,null],[5,"cublasStrsmBatched","","",null,null],[5,"cublasDtrsmBatched","","",null,null],[5,"cublasCtrsmBatched","","",null,null],[5,"cublasZtrsmBatched","","",null,null],[5,"cublasSmatinvBatched","","",null,null],[5,"cublasDmatinvBatched","","",null,null],[5,"cublasCmatinvBatched","","",null,null],[5,"cublasZmatinvBatched","","",null,null],[5,"cublasSgeqrfBatched","","",null,null],[5,"cublasDgeqrfBatched","","",null,null],[5,"cublasCgeqrfBatched","","",null,null],[5,"cublasZgeqrfBatched","","",null,null],[5,"cublasSgelsBatched","","",null,null],[5,"cublasDgelsBatched","","",null,null],[5,"cublasCgelsBatched","","",null,null],[5,"cublasZgelsBatched","","",null,null],[5,"cublasSdgmm","","",null,null],[5,"cublasDdgmm","","",null,null],[5,"cublasCdgmm","","",null,null],[5,"cublasZdgmm","","",null,null],[5,"cublasStpttr","","",null,null],[5,"cublasDtpttr","","",null,null],[5,"cublasCtpttr","","",null,null],[5,"cublasZtpttr","","",null,null],[5,"cublasStrttp","","",null,null],[5,"cublasDtrttp","","",null,null],[5,"cublasCtrttp","","",null,null],[5,"cublasZtrttp","","",null,null],[17,"CUBLAS_VER_MAJOR","","",null,null],[17,"CUBLAS_VER_MINOR","","",null,null],[17,"CUBLAS_VER_PATCH","","",null,null],[17,"CUBLAS_VER_BUILD","","",null,null],[17,"CUBLAS_VERSION","","",null,null],[3,"float2","","",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"double2","","",null,null],[12,"x","","",1,null],[12,"y","","",1,null],[3,"dim3","","",null,null],[12,"x","","",2,null],[12,"y","","",2,null],[12,"z","","",2,null],[4,"cudaError","","CUDA error types",null,null],[13,"cudaSuccess","","The API call returned with no errors. In the case of …",3,null],[13,"cudaErrorInvalidValue","","This indicates that one or more of the parameters passed …",3,null],[13,"cudaErrorMemoryAllocation","","The API call failed because it was unable to allocate …",3,null],[13,"cudaErrorInitializationError","","The API call failed because the CUDA driver and runtime …",3,null],[13,"cudaErrorCudartUnloading","","This indicates that a CUDA Runtime API call cannot be …",3,null],[13,"cudaErrorProfilerDisabled","","This indicates profiler is not initialized for this run. …",3,null],[13,"cudaErrorProfilerNotInitialized","","\\\\deprecated This error return is deprecated as of CUDA …",3,null],[13,"cudaErrorProfilerAlreadyStarted","","\\\\deprecated This error return is deprecated as of CUDA …",3,null],[13,"cudaErrorProfilerAlreadyStopped","","\\\\deprecated This error return is deprecated as of CUDA …",3,null],[13,"cudaErrorInvalidConfiguration","","This indicates that a kernel launch is requesting …",3,null],[13,"cudaErrorInvalidPitchValue","","This indicates that one or more of the pitch-related …",3,null],[13,"cudaErrorInvalidSymbol","","This indicates that the symbol name/identifier passed to …",3,null],[13,"cudaErrorInvalidHostPointer","","This indicates that at least one host pointer passed to …",3,null],[13,"cudaErrorInvalidDevicePointer","","This indicates that at least one device pointer passed to …",3,null],[13,"cudaErrorInvalidTexture","","This indicates that the texture passed to the API call is …",3,null],[13,"cudaErrorInvalidTextureBinding","","This indicates that the texture binding is not valid. …",3,null],[13,"cudaErrorInvalidChannelDescriptor","","This indicates that the channel descriptor passed to the …",3,null],[13,"cudaErrorInvalidMemcpyDirection","","This indicates that the direction of the memcpy passed to …",3,null],[13,"cudaErrorAddressOfConstant","","This indicated that the user has taken the address of a …",3,null],[13,"cudaErrorTextureFetchFailed","","This indicated that a texture fetch was not able to be …",3,null],[13,"cudaErrorTextureNotBound","","This indicated that a texture was not bound for access. …",3,null],[13,"cudaErrorSynchronizationError","","This indicated that a synchronization operation had …",3,null],[13,"cudaErrorInvalidFilterSetting","","This indicates that a non-float texture was being …",3,null],[13,"cudaErrorInvalidNormSetting","","This indicates that an attempt was made to read a …",3,null],[13,"cudaErrorMixedDeviceExecution","","Mixing of device and device emulation code was not …",3,null],[13,"cudaErrorNotYetImplemented","","This indicates that the API call is not yet implemented. …",3,null],[13,"cudaErrorMemoryValueTooLarge","","This indicated that an emulated device pointer exceeded …",3,null],[13,"cudaErrorStubLibrary","","This indicates that the CUDA driver that the application …",3,null],[13,"cudaErrorInsufficientDriver","","This indicates that the installed NVIDIA CUDA driver is …",3,null],[13,"cudaErrorCallRequiresNewerDriver","","This indicates that the API call requires a newer CUDA …",3,null],[13,"cudaErrorInvalidSurface","","This indicates that the surface passed to the API call is …",3,null],[13,"cudaErrorDuplicateVariableName","","This indicates that multiple global or constant variables …",3,null],[13,"cudaErrorDuplicateTextureName","","This indicates that multiple textures (across separate …",3,null],[13,"cudaErrorDuplicateSurfaceName","","This indicates that multiple surfaces (across separate …",3,null],[13,"cudaErrorDevicesUnavailable","","This indicates that all CUDA devices are busy or …",3,null],[13,"cudaErrorIncompatibleDriverContext","","This indicates that the current context is not compatible …",3,null],[13,"cudaErrorMissingConfiguration","","The device function being invoked (usually via …",3,null],[13,"cudaErrorPriorLaunchFailure","","This indicated that a previous kernel launch failed. This …",3,null],[13,"cudaErrorLaunchMaxDepthExceeded","","This error indicates that a device runtime grid launch …",3,null],[13,"cudaErrorLaunchFileScopedTex","","This error indicates that a grid launch did not occur …",3,null],[13,"cudaErrorLaunchFileScopedSurf","","This error indicates that a grid launch did not occur …",3,null],[13,"cudaErrorSyncDepthExceeded","","This error indicates that a call to …",3,null],[13,"cudaErrorLaunchPendingCountExceeded","","This error indicates that a device runtime grid launch …",3,null],[13,"cudaErrorInvalidDeviceFunction","","The requested device function does not exist or is not …",3,null],[13,"cudaErrorNoDevice","","This indicates that no CUDA-capable devices were detected …",3,null],[13,"cudaErrorInvalidDevice","","This indicates that the device ordinal supplied by the …",3,null],[13,"cudaErrorDeviceNotLicensed","","This indicates that the device doesn\'t have a valid Grid …",3,null],[13,"cudaErrorSoftwareValidityNotEstablished","","By default, the CUDA runtime may perform a minimal set of …",3,null],[13,"cudaErrorStartupFailure","","This indicates an internal startup failure in the CUDA …",3,null],[13,"cudaErrorInvalidKernelImage","","This indicates that the device kernel image is invalid.",3,null],[13,"cudaErrorDeviceUninitialized","","This most frequently indicates that there is no context …",3,null],[13,"cudaErrorMapBufferObjectFailed","","This indicates that the buffer object could not be mapped.",3,null],[13,"cudaErrorUnmapBufferObjectFailed","","This indicates that the buffer object could not be …",3,null],[13,"cudaErrorArrayIsMapped","","This indicates that the specified array is currently …",3,null],[13,"cudaErrorAlreadyMapped","","This indicates that the resource is already mapped.",3,null],[13,"cudaErrorNoKernelImageForDevice","","This indicates that there is no kernel image available …",3,null],[13,"cudaErrorAlreadyAcquired","","This indicates that a resource has already been acquired.",3,null],[13,"cudaErrorNotMapped","","This indicates that a resource is not mapped.",3,null],[13,"cudaErrorNotMappedAsArray","","This indicates that a mapped resource is not available …",3,null],[13,"cudaErrorNotMappedAsPointer","","This indicates that a mapped resource is not available …",3,null],[13,"cudaErrorECCUncorrectable","","This indicates that an uncorrectable ECC error was …",3,null],[13,"cudaErrorUnsupportedLimit","","This indicates that the ::cudaLimit passed to the API …",3,null],[13,"cudaErrorDeviceAlreadyInUse","","This indicates that a call tried to access an …",3,null],[13,"cudaErrorPeerAccessUnsupported","","This error indicates that P2P access is not supported …",3,null],[13,"cudaErrorInvalidPtx","","A PTX compilation failed. The runtime may fall back to …",3,null],[13,"cudaErrorInvalidGraphicsContext","","This indicates an error with the OpenGL or DirectX …",3,null],[13,"cudaErrorNvlinkUncorrectable","","This indicates that an uncorrectable NVLink error was …",3,null],[13,"cudaErrorJitCompilerNotFound","","This indicates that the PTX JIT compiler library was not …",3,null],[13,"cudaErrorUnsupportedPtxVersion","","This indicates that the provided PTX was compiled with an …",3,null],[13,"cudaErrorJitCompilationDisabled","","This indicates that the JIT compilation was disabled. The …",3,null],[13,"cudaErrorInvalidSource","","This indicates that the device kernel source is invalid.",3,null],[13,"cudaErrorFileNotFound","","This indicates that the file specified was not found.",3,null],[13,"cudaErrorSharedObjectSymbolNotFound","","This indicates that a link to a shared object failed to …",3,null],[13,"cudaErrorSharedObjectInitFailed","","This indicates that initialization of a shared object …",3,null],[13,"cudaErrorOperatingSystem","","This error indicates that an OS call failed.",3,null],[13,"cudaErrorInvalidResourceHandle","","This indicates that a resource handle passed to the API …",3,null],[13,"cudaErrorIllegalState","","This indicates that a resource required by the API call …",3,null],[13,"cudaErrorSymbolNotFound","","This indicates that a named symbol was not found. …",3,null],[13,"cudaErrorNotReady","","This indicates that asynchronous operations issued …",3,null],[13,"cudaErrorIllegalAddress","","The device encountered a load or store instruction on an …",3,null],[13,"cudaErrorLaunchOutOfResources","","This indicates that a launch did not occur because it did …",3,null],[13,"cudaErrorLaunchTimeout","","This indicates that the device kernel took too long to …",3,null],[13,"cudaErrorLaunchIncompatibleTexturing","","This error indicates a kernel launch that uses an …",3,null],[13,"cudaErrorPeerAccessAlreadyEnabled","","This error indicates that a call to …",3,null],[13,"cudaErrorPeerAccessNotEnabled","","This error indicates that ::cudaDeviceDisablePeerAccess() …",3,null],[13,"cudaErrorSetOnActiveProcess","","This indicates that the user has called …",3,null],[13,"cudaErrorContextIsDestroyed","","This error indicates that the context current to the …",3,null],[13,"cudaErrorAssert","","An assert triggered in device code during kernel …",3,null],[13,"cudaErrorTooManyPeers","","This error indicates that the hardware resources required …",3,null],[13,"cudaErrorHostMemoryAlreadyRegistered","","This error indicates that the memory range passed to …",3,null],[13,"cudaErrorHostMemoryNotRegistered","","This error indicates that the pointer passed to …",3,null],[13,"cudaErrorHardwareStackError","","Device encountered an error in the call stack during …",3,null],[13,"cudaErrorIllegalInstruction","","The device encountered an illegal instruction during …",3,null],[13,"cudaErrorMisalignedAddress","","The device encountered a load or store instruction on a …",3,null],[13,"cudaErrorInvalidAddressSpace","","While executing a kernel, the device encountered an …",3,null],[13,"cudaErrorInvalidPc","","The device encountered an invalid program counter. This …",3,null],[13,"cudaErrorLaunchFailure","","An exception occurred on the device while executing a …",3,null],[13,"cudaErrorCooperativeLaunchTooLarge","","This error indicates that the number of blocks launched …",3,null],[13,"cudaErrorNotPermitted","","This error indicates the attempted operation is not …",3,null],[13,"cudaErrorNotSupported","","This error indicates the attempted operation is not …",3,null],[13,"cudaErrorSystemNotReady","","This error indicates that the system is not yet ready to …",3,null],[13,"cudaErrorSystemDriverMismatch","","This error indicates that there is a mismatch between the …",3,null],[13,"cudaErrorCompatNotSupportedOnDevice","","This error indicates that the system was upgraded to run …",3,null],[13,"cudaErrorStreamCaptureUnsupported","","The operation is not permitted when the stream is …",3,null],[13,"cudaErrorStreamCaptureInvalidated","","The current capture sequence on the stream has been …",3,null],[13,"cudaErrorStreamCaptureMerge","","The operation would have resulted in a merge of two …",3,null],[13,"cudaErrorStreamCaptureUnmatched","","The capture was not initiated in this stream.",3,null],[13,"cudaErrorStreamCaptureUnjoined","","The capture sequence contains a fork that was not joined …",3,null],[13,"cudaErrorStreamCaptureIsolation","","A dependency would have been created which crosses the …",3,null],[13,"cudaErrorStreamCaptureImplicit","","The operation would have resulted in a disallowed …",3,null],[13,"cudaErrorCapturedEvent","","The operation is not permitted on an event which was last …",3,null],[13,"cudaErrorStreamCaptureWrongThread","","A stream capture sequence not initiated with the …",3,null],[13,"cudaErrorTimeout","","This indicates that the wait operation has timed out.",3,null],[13,"cudaErrorGraphExecUpdateFailure","","This error indicates that the graph update was not …",3,null],[13,"cudaErrorUnknown","","This indicates that an unknown internal error has …",3,null],[13,"cudaErrorApiFailureBase","","Any unhandled CUDA driver error is added to this value …",3,null],[4,"cudaChannelFormatKind","","Channel format kind",null,null],[13,"cudaChannelFormatKindSigned","","< Signed channel format",4,null],[13,"cudaChannelFormatKindUnsigned","","< Unsigned channel format",4,null],[13,"cudaChannelFormatKindFloat","","< Float channel format",4,null],[13,"cudaChannelFormatKindNone","","< No channel format",4,null],[13,"cudaChannelFormatKindNV12","","< Unsigned 8-bit integers, planar 4:2:0 YUV format",4,null],[3,"cudaChannelFormatDesc","","CUDA Channel format descriptor",null,null],[12,"x","","< x",5,null],[12,"y","","< y",5,null],[12,"z","","< z",5,null],[12,"w","","< w",5,null],[12,"f","","< Channel format kind",5,null],[3,"cudaArray","","",null,null],[6,"cudaArray_t","","CUDA array",null,null],[6,"cudaArray_const_t","","CUDA array (as source copy argument)",null,null],[3,"cudaMipmappedArray","","",null,null],[6,"cudaMipmappedArray_t","","CUDA mipmapped array",null,null],[6,"cudaMipmappedArray_const_t","","CUDA mipmapped array (as source argument)",null,null],[3,"cudaArraySparseProperties","","Sparse CUDA array and CUDA mipmapped array properties",null,null],[12,"tileExtent","","",6,null],[12,"miptailFirstLevel","","< First mip level at which the mip tail begins",6,null],[12,"miptailSize","","< Total size of the mip tail.",6,null],[12,"flags","","< Flags will either be zero or …",6,null],[12,"reserved","","",6,null],[3,"cudaArraySparseProperties__bindgen_ty_1","","",null,null],[12,"width","","< Tile width in elements",7,null],[12,"height","","< Tile height in elements",7,null],[12,"depth","","< Tile depth in elements",7,null],[4,"cudaMemoryType","","CUDA memory types",null,null],[13,"cudaMemoryTypeUnregistered","","< Unregistered memory",8,null],[13,"cudaMemoryTypeHost","","< Host memory",8,null],[13,"cudaMemoryTypeDevice","","< Device memory",8,null],[13,"cudaMemoryTypeManaged","","< Managed memory",8,null],[4,"cudaMemcpyKind","","CUDA memory copy types",null,null],[13,"cudaMemcpyHostToHost","","< Host   -> Host",9,null],[13,"cudaMemcpyHostToDevice","","< Host   -> Device",9,null],[13,"cudaMemcpyDeviceToHost","","< Device -> Host",9,null],[13,"cudaMemcpyDeviceToDevice","","< Device -> Device",9,null],[13,"cudaMemcpyDefault","","< Direction of the transfer is inferred from the pointer …",9,null],[3,"cudaPitchedPtr","","CUDA Pitched memory pointer",null,null],[12,"ptr","","< Pointer to allocated memory",10,null],[12,"pitch","","< Pitch of allocated memory in bytes",10,null],[12,"xsize","","< Logical width of allocation in elements",10,null],[12,"ysize","","< Logical height of allocation in elements",10,null],[3,"cudaExtent","","CUDA extent",null,null],[12,"width","","< Width in elements when referring to array memory, in …",11,null],[12,"height","","< Height in elements",11,null],[12,"depth","","< Depth in elements",11,null],[3,"cudaPos","","CUDA 3D position",null,null],[12,"x","","< x",12,null],[12,"y","","< y",12,null],[12,"z","","< z",12,null],[3,"cudaMemcpy3DParms","","CUDA 3D memory copying parameters",null,null],[12,"srcArray","","< Source memory address",13,null],[12,"srcPos","","< Source position offset",13,null],[12,"srcPtr","","< Pitched source memory address",13,null],[12,"dstArray","","< Destination memory address",13,null],[12,"dstPos","","< Destination position offset",13,null],[12,"dstPtr","","< Pitched destination memory address",13,null],[12,"extent","","< Requested memory copy size",13,null],[12,"kind","","< Type of transfer",13,null],[3,"cudaMemcpy3DPeerParms","","CUDA 3D cross-device memory copying parameters",null,null],[12,"srcArray","","< Source memory address",14,null],[12,"srcPos","","< Source position offset",14,null],[12,"srcPtr","","< Pitched source memory address",14,null],[12,"srcDevice","","< Source device",14,null],[12,"dstArray","","< Destination memory address",14,null],[12,"dstPos","","< Destination position offset",14,null],[12,"dstPtr","","< Pitched destination memory address",14,null],[12,"dstDevice","","< Destination device",14,null],[12,"extent","","< Requested memory copy size",14,null],[3,"cudaMemsetParams","","CUDA Memset node parameters",null,null],[12,"dst","","< Destination device pointer",15,null],[12,"pitch","","< Pitch of destination device pointer. Unused if height …",15,null],[12,"value","","< Value to be set",15,null],[12,"elementSize","","< Size of each element in bytes. Must be 1, 2, or 4.",15,null],[12,"width","","< Width of the row in elements",15,null],[12,"height","","< Number of rows",15,null],[4,"cudaAccessProperty","","Specifies performance hint with ::cudaAccessPolicyWindow …",null,null],[13,"cudaAccessPropertyNormal","","< Normal cache persistence.",16,null],[13,"cudaAccessPropertyStreaming","","< Streaming access is less likely to persit from cache.",16,null],[13,"cudaAccessPropertyPersisting","","< Persisting access is more likely to persist in cache.",16,null],[3,"cudaAccessPolicyWindow","","Specifies an access policy for a window, a contiguous …",null,null],[12,"base_ptr","","< Starting address of the access policy window. CUDA …",17,null],[12,"num_bytes","","< Size in bytes of the window policy. CUDA driver may …",17,null],[12,"hitRatio","","< hitRatio specifies percentage of lines assigned …",17,null],[12,"hitProp","","< ::CUaccessProperty set for hit.",17,null],[12,"missProp","","< ::CUaccessProperty set for miss. Must be either NORMAL …",17,null],[6,"cudaHostFn_t","","CUDA host function \\\\param userData Argument value passed …",null,null],[3,"cudaHostNodeParams","","CUDA host node parameters",null,null],[12,"fn_","","< The function to call when the node executes",18,null],[12,"userData","","< Argument to pass to the function",18,null],[4,"cudaStreamCaptureStatus","","Possible stream capture statuses returned by …",null,null],[13,"cudaStreamCaptureStatusNone","","< Stream is not capturing",19,null],[13,"cudaStreamCaptureStatusActive","","< Stream is actively capturing",19,null],[13,"cudaStreamCaptureStatusInvalidated","","< Stream is part of a capture sequence that has been …",19,null],[4,"cudaStreamCaptureMode","","Possible modes for stream capture thread interactions. …",null,null],[13,"cudaStreamCaptureModeGlobal","","",20,null],[13,"cudaStreamCaptureModeThreadLocal","","",20,null],[13,"cudaStreamCaptureModeRelaxed","","",20,null],[4,"cudaSynchronizationPolicy","","",null,null],[13,"cudaSyncPolicyAuto","","",21,null],[13,"cudaSyncPolicySpin","","",21,null],[13,"cudaSyncPolicyYield","","",21,null],[13,"cudaSyncPolicyBlockingSync","","",21,null],[4,"cudaStreamAttrID","","Stream Attributes",null,null],[13,"cudaStreamAttributeAccessPolicyWindow","","< Identifier for …",22,null],[13,"cudaStreamAttributeSynchronizationPolicy","","< ::cudaSynchronizationPolicy for work queued up in this …",22,null],[19,"cudaStreamAttrValue","","Stream attributes union used with …",null,null],[12,"accessPolicyWindow","","",23,null],[12,"syncPolicy","","",23,null],[3,"cudaGraphicsResource","","CUDA graphics interop resource",null,null],[4,"cudaGraphicsRegisterFlags","","CUDA graphics interop register flags",null,null],[13,"cudaGraphicsRegisterFlagsNone","","< Default",24,null],[13,"cudaGraphicsRegisterFlagsReadOnly","","< CUDA will not write to this resource",24,null],[13,"cudaGraphicsRegisterFlagsWriteDiscard","","< CUDA will only write to and will not read from this …",24,null],[13,"cudaGraphicsRegisterFlagsSurfaceLoadStore","","< CUDA will bind this resource to a surface reference",24,null],[13,"cudaGraphicsRegisterFlagsTextureGather","","< CUDA will perform texture gather operations on this …",24,null],[4,"cudaGraphicsMapFlags","","CUDA graphics interop map flags",null,null],[13,"cudaGraphicsMapFlagsNone","","< Default; Assume resource can be read/written",25,null],[13,"cudaGraphicsMapFlagsReadOnly","","< CUDA will not write to this resource",25,null],[13,"cudaGraphicsMapFlagsWriteDiscard","","< CUDA will only write to and will not read from this …",25,null],[4,"cudaGraphicsCubeFace","","CUDA graphics interop array indices for cube maps",null,null],[13,"cudaGraphicsCubeFacePositiveX","","< Positive X face of cubemap",26,null],[13,"cudaGraphicsCubeFaceNegativeX","","< Negative X face of cubemap",26,null],[13,"cudaGraphicsCubeFacePositiveY","","< Positive Y face of cubemap",26,null],[13,"cudaGraphicsCubeFaceNegativeY","","< Negative Y face of cubemap",26,null],[13,"cudaGraphicsCubeFacePositiveZ","","< Positive Z face of cubemap",26,null],[13,"cudaGraphicsCubeFaceNegativeZ","","< Negative Z face of cubemap",26,null],[4,"cudaKernelNodeAttrID","","Graph kernel node Attributes",null,null],[13,"cudaKernelNodeAttributeAccessPolicyWindow","","< Identifier for …",27,null],[13,"cudaKernelNodeAttributeCooperative","","< Allows a kernel node to be cooperative (see …",27,null],[19,"cudaKernelNodeAttrValue","","Graph kernel node attributes union, used with …",null,null],[12,"accessPolicyWindow","","< Attribute ::CUaccessPolicyWindow.",28,null],[12,"cooperative","","",28,null],[4,"cudaResourceType","","CUDA resource types",null,null],[13,"cudaResourceTypeArray","","< Array resource",29,null],[13,"cudaResourceTypeMipmappedArray","","< Mipmapped array resource",29,null],[13,"cudaResourceTypeLinear","","< Linear resource",29,null],[13,"cudaResourceTypePitch2D","","< Pitch 2D resource",29,null],[4,"cudaResourceViewFormat","","CUDA texture resource view formats",null,null],[13,"cudaResViewFormatNone","","< No resource view format (use underlying resource format)",30,null],[13,"cudaResViewFormatUnsignedChar1","","< 1 channel unsigned 8-bit integers",30,null],[13,"cudaResViewFormatUnsignedChar2","","< 2 channel unsigned 8-bit integers",30,null],[13,"cudaResViewFormatUnsignedChar4","","< 4 channel unsigned 8-bit integers",30,null],[13,"cudaResViewFormatSignedChar1","","< 1 channel signed 8-bit integers",30,null],[13,"cudaResViewFormatSignedChar2","","< 2 channel signed 8-bit integers",30,null],[13,"cudaResViewFormatSignedChar4","","< 4 channel signed 8-bit integers",30,null],[13,"cudaResViewFormatUnsignedShort1","","< 1 channel unsigned 16-bit integers",30,null],[13,"cudaResViewFormatUnsignedShort2","","< 2 channel unsigned 16-bit integers",30,null],[13,"cudaResViewFormatUnsignedShort4","","< 4 channel unsigned 16-bit integers",30,null],[13,"cudaResViewFormatSignedShort1","","< 1 channel signed 16-bit integers",30,null],[13,"cudaResViewFormatSignedShort2","","< 2 channel signed 16-bit integers",30,null],[13,"cudaResViewFormatSignedShort4","","< 4 channel signed 16-bit integers",30,null],[13,"cudaResViewFormatUnsignedInt1","","< 1 channel unsigned 32-bit integers",30,null],[13,"cudaResViewFormatUnsignedInt2","","< 2 channel unsigned 32-bit integers",30,null],[13,"cudaResViewFormatUnsignedInt4","","< 4 channel unsigned 32-bit integers",30,null],[13,"cudaResViewFormatSignedInt1","","< 1 channel signed 32-bit integers",30,null],[13,"cudaResViewFormatSignedInt2","","< 2 channel signed 32-bit integers",30,null],[13,"cudaResViewFormatSignedInt4","","< 4 channel signed 32-bit integers",30,null],[13,"cudaResViewFormatHalf1","","< 1 channel 16-bit floating point",30,null],[13,"cudaResViewFormatHalf2","","< 2 channel 16-bit floating point",30,null],[13,"cudaResViewFormatHalf4","","< 4 channel 16-bit floating point",30,null],[13,"cudaResViewFormatFloat1","","< 1 channel 32-bit floating point",30,null],[13,"cudaResViewFormatFloat2","","< 2 channel 32-bit floating point",30,null],[13,"cudaResViewFormatFloat4","","< 4 channel 32-bit floating point",30,null],[13,"cudaResViewFormatUnsignedBlockCompressed1","","< Block compressed 1",30,null],[13,"cudaResViewFormatUnsignedBlockCompressed2","","< Block compressed 2",30,null],[13,"cudaResViewFormatUnsignedBlockCompressed3","","< Block compressed 3",30,null],[13,"cudaResViewFormatUnsignedBlockCompressed4","","< Block compressed 4 unsigned",30,null],[13,"cudaResViewFormatSignedBlockCompressed4","","< Block compressed 4 signed",30,null],[13,"cudaResViewFormatUnsignedBlockCompressed5","","< Block compressed 5 unsigned",30,null],[13,"cudaResViewFormatSignedBlockCompressed5","","< Block compressed 5 signed",30,null],[13,"cudaResViewFormatUnsignedBlockCompressed6H","","< Block compressed 6 unsigned half-float",30,null],[13,"cudaResViewFormatSignedBlockCompressed6H","","< Block compressed 6 signed half-float",30,null],[13,"cudaResViewFormatUnsignedBlockCompressed7","","< Block compressed 7",30,null],[3,"cudaResourceDesc","","CUDA resource descriptor",null,null],[12,"resType","","< Resource type",31,null],[12,"res","","",31,null],[19,"cudaResourceDesc__bindgen_ty_1","","",null,null],[12,"array","","",32,null],[12,"mipmap","","",32,null],[12,"linear","","",32,null],[12,"pitch2D","","",32,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"array","","< CUDA array",33,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"mipmap","","< CUDA mipmapped array",34,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3","","",null,null],[12,"devPtr","","< Device pointer",35,null],[12,"desc","","< Channel descriptor",35,null],[12,"sizeInBytes","","< Size in bytes",35,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4","","",null,null],[12,"devPtr","","< Device pointer",36,null],[12,"desc","","< Channel descriptor",36,null],[12,"width","","< Width of the array in elements",36,null],[12,"height","","< Height of the array in elements",36,null],[12,"pitchInBytes","","< Pitch between two rows in bytes",36,null],[3,"cudaResourceViewDesc","","CUDA resource view descriptor",null,null],[12,"format","","< Resource view format",37,null],[12,"width","","< Width of the resource view",37,null],[12,"height","","< Height of the resource view",37,null],[12,"depth","","< Depth of the resource view",37,null],[12,"firstMipmapLevel","","< First defined mipmap level",37,null],[12,"lastMipmapLevel","","< Last defined mipmap level",37,null],[12,"firstLayer","","< First layer index",37,null],[12,"lastLayer","","< Last layer index",37,null],[3,"cudaPointerAttributes","","CUDA pointer attributes",null,null],[12,"type_","","The type of memory - ::cudaMemoryTypeUnregistered, …",38,null],[12,"device","","The device against which the memory was allocated or …",38,null],[12,"devicePointer","","The address which may be dereferenced on the current …",38,null],[12,"hostPointer","","The address which may be dereferenced on the host to …",38,null],[3,"cudaFuncAttributes","","CUDA function attributes",null,null],[12,"sharedSizeBytes","","The size in bytes of statically-allocated shared memory …",39,null],[12,"constSizeBytes","","The size in bytes of user-allocated constant memory …",39,null],[12,"localSizeBytes","","The size in bytes of local memory used by each thread of …",39,null],[12,"maxThreadsPerBlock","","The maximum number of threads per block, beyond which a …",39,null],[12,"numRegs","","The number of registers used by each thread of this …",39,null],[12,"ptxVersion","","The PTX virtual architecture version for which the …",39,null],[12,"binaryVersion","","The binary architecture version for which the function …",39,null],[12,"cacheModeCA","","The attribute to indicate whether the function has been …",39,null],[12,"maxDynamicSharedSizeBytes","","The maximum size in bytes of dynamic shared memory per …",39,null],[12,"preferredShmemCarveout","","On devices where the L1 cache and shared memory use the …",39,null],[4,"cudaFuncAttribute","","CUDA function attributes that can be set using …",null,null],[13,"cudaFuncAttributeMaxDynamicSharedMemorySize","","< Maximum dynamic shared memory size",40,null],[13,"cudaFuncAttributePreferredSharedMemoryCarveout","","< Preferred shared memory-L1 cache split",40,null],[13,"cudaFuncAttributeMax","","",40,null],[4,"cudaFuncCache","","CUDA function cache configurations",null,null],[13,"cudaFuncCachePreferNone","","< Default function cache configuration, no preference",41,null],[13,"cudaFuncCachePreferShared","","< Prefer larger shared memory and smaller L1 cache",41,null],[13,"cudaFuncCachePreferL1","","< Prefer larger L1 cache and smaller shared memory",41,null],[13,"cudaFuncCachePreferEqual","","< Prefer equal size L1 cache and shared memory",41,null],[4,"cudaSharedMemConfig","","CUDA shared memory configuration",null,null],[13,"cudaSharedMemBankSizeDefault","","",42,null],[13,"cudaSharedMemBankSizeFourByte","","",42,null],[13,"cudaSharedMemBankSizeEightByte","","",42,null],[4,"cudaSharedCarveout","","Shared memory carveout configurations. These may be …",null,null],[13,"cudaSharedmemCarveoutDefault","","< No preference for shared memory or L1 (default)",43,null],[13,"cudaSharedmemCarveoutMaxShared","","< Prefer maximum available shared memory, minimum L1 cache",43,null],[13,"cudaSharedmemCarveoutMaxL1","","< Prefer maximum available L1 cache, minimum shared memory",43,null],[4,"cudaComputeMode","","CUDA device compute modes",null,null],[13,"cudaComputeModeDefault","","< Default compute mode (Multiple threads can use …",44,null],[13,"cudaComputeModeExclusive","","< Compute-exclusive-thread mode (Only one thread in one …",44,null],[13,"cudaComputeModeProhibited","","< Compute-prohibited mode (No threads can use …",44,null],[13,"cudaComputeModeExclusiveProcess","","< Compute-exclusive-process mode (Many threads in one …",44,null],[4,"cudaLimit","","CUDA Limits",null,null],[13,"cudaLimitStackSize","","< GPU thread stack size",45,null],[13,"cudaLimitPrintfFifoSize","","< GPU printf FIFO size",45,null],[13,"cudaLimitMallocHeapSize","","< GPU malloc heap size",45,null],[13,"cudaLimitDevRuntimeSyncDepth","","< GPU device runtime synchronize depth",45,null],[13,"cudaLimitDevRuntimePendingLaunchCount","","< GPU device runtime pending launch count",45,null],[13,"cudaLimitMaxL2FetchGranularity","","< A value between 0 and 128 that indicates the maximum …",45,null],[13,"cudaLimitPersistingL2CacheSize","","< A size in bytes for L2 persisting lines cache size",45,null],[4,"cudaMemoryAdvise","","CUDA Memory Advise values",null,null],[13,"cudaMemAdviseSetReadMostly","","< Data will mostly be read and only occassionally be …",46,null],[13,"cudaMemAdviseUnsetReadMostly","","< Undo the effect of ::cudaMemAdviseSetReadMostly",46,null],[13,"cudaMemAdviseSetPreferredLocation","","< Set the preferred location for the data as the …",46,null],[13,"cudaMemAdviseUnsetPreferredLocation","","< Clear the preferred location for the data",46,null],[13,"cudaMemAdviseSetAccessedBy","","< Data will be accessed by the specified device, so …",46,null],[13,"cudaMemAdviseUnsetAccessedBy","","< Let the Unified Memory subsystem decide on the page …",46,null],[4,"cudaMemRangeAttribute","","CUDA range attributes",null,null],[13,"cudaMemRangeAttributeReadMostly","","< Whether the range will mostly be read and only …",47,null],[13,"cudaMemRangeAttributePreferredLocation","","< The preferred location of the range",47,null],[13,"cudaMemRangeAttributeAccessedBy","","< Memory range has ::cudaMemAdviseSetAccessedBy set for …",47,null],[13,"cudaMemRangeAttributeLastPrefetchLocation","","< The last location to which the range was prefetched",47,null],[4,"cudaOutputMode","","CUDA Profiler Output modes",null,null],[13,"cudaKeyValuePair","","< Output mode Key-Value pair format.",48,null],[13,"cudaCSV","","< Output mode Comma separated values format.",48,null],[4,"cudaDeviceAttr","","CUDA device attributes",null,null],[13,"cudaDevAttrMaxThreadsPerBlock","","< Maximum number of threads per block",49,null],[13,"cudaDevAttrMaxBlockDimX","","< Maximum block dimension X",49,null],[13,"cudaDevAttrMaxBlockDimY","","< Maximum block dimension Y",49,null],[13,"cudaDevAttrMaxBlockDimZ","","< Maximum block dimension Z",49,null],[13,"cudaDevAttrMaxGridDimX","","< Maximum grid dimension X",49,null],[13,"cudaDevAttrMaxGridDimY","","< Maximum grid dimension Y",49,null],[13,"cudaDevAttrMaxGridDimZ","","< Maximum grid dimension Z",49,null],[13,"cudaDevAttrMaxSharedMemoryPerBlock","","< Maximum shared memory available per block in bytes",49,null],[13,"cudaDevAttrTotalConstantMemory","","< Memory available on device for <strong>constant</strong> variables in a …",49,null],[13,"cudaDevAttrWarpSize","","< Warp size in threads",49,null],[13,"cudaDevAttrMaxPitch","","< Maximum pitch in bytes allowed by memory copies",49,null],[13,"cudaDevAttrMaxRegistersPerBlock","","< Maximum number of 32-bit registers available per block",49,null],[13,"cudaDevAttrClockRate","","< Peak clock frequency in kilohertz",49,null],[13,"cudaDevAttrTextureAlignment","","< Alignment requirement for textures",49,null],[13,"cudaDevAttrGpuOverlap","","< Device can possibly copy memory and execute a kernel …",49,null],[13,"cudaDevAttrMultiProcessorCount","","< Number of multiprocessors on device",49,null],[13,"cudaDevAttrKernelExecTimeout","","< Specifies whether there is a run time limit on kernels",49,null],[13,"cudaDevAttrIntegrated","","< Device is integrated with host memory",49,null],[13,"cudaDevAttrCanMapHostMemory","","< Device can map host memory into CUDA address space",49,null],[13,"cudaDevAttrComputeMode","","< Compute mode (See ::cudaComputeMode for details)",49,null],[13,"cudaDevAttrMaxTexture1DWidth","","< Maximum 1D texture width",49,null],[13,"cudaDevAttrMaxTexture2DWidth","","< Maximum 2D texture width",49,null],[13,"cudaDevAttrMaxTexture2DHeight","","< Maximum 2D texture height",49,null],[13,"cudaDevAttrMaxTexture3DWidth","","< Maximum 3D texture width",49,null],[13,"cudaDevAttrMaxTexture3DHeight","","< Maximum 3D texture height",49,null],[13,"cudaDevAttrMaxTexture3DDepth","","< Maximum 3D texture depth",49,null],[13,"cudaDevAttrMaxTexture2DLayeredWidth","","< Maximum 2D layered texture width",49,null],[13,"cudaDevAttrMaxTexture2DLayeredHeight","","< Maximum 2D layered texture height",49,null],[13,"cudaDevAttrMaxTexture2DLayeredLayers","","< Maximum layers in a 2D layered texture",49,null],[13,"cudaDevAttrSurfaceAlignment","","< Alignment requirement for surfaces",49,null],[13,"cudaDevAttrConcurrentKernels","","< Device can possibly execute multiple kernels …",49,null],[13,"cudaDevAttrEccEnabled","","< Device has ECC support enabled",49,null],[13,"cudaDevAttrPciBusId","","< PCI bus ID of the device",49,null],[13,"cudaDevAttrPciDeviceId","","< PCI device ID of the device",49,null],[13,"cudaDevAttrTccDriver","","< Device is using TCC driver model",49,null],[13,"cudaDevAttrMemoryClockRate","","< Peak memory clock frequency in kilohertz",49,null],[13,"cudaDevAttrGlobalMemoryBusWidth","","< Global memory bus width in bits",49,null],[13,"cudaDevAttrL2CacheSize","","< Size of L2 cache in bytes",49,null],[13,"cudaDevAttrMaxThreadsPerMultiProcessor","","< Maximum resident threads per multiprocessor",49,null],[13,"cudaDevAttrAsyncEngineCount","","< Number of asynchronous engines",49,null],[13,"cudaDevAttrUnifiedAddressing","","< Device shares a unified address space with the host",49,null],[13,"cudaDevAttrMaxTexture1DLayeredWidth","","< Maximum 1D layered texture width",49,null],[13,"cudaDevAttrMaxTexture1DLayeredLayers","","< Maximum layers in a 1D layered texture",49,null],[13,"cudaDevAttrMaxTexture2DGatherWidth","","< Maximum 2D texture width if cudaArrayTextureGather is …",49,null],[13,"cudaDevAttrMaxTexture2DGatherHeight","","< Maximum 2D texture height if cudaArrayTextureGather is …",49,null],[13,"cudaDevAttrMaxTexture3DWidthAlt","","< Alternate maximum 3D texture width",49,null],[13,"cudaDevAttrMaxTexture3DHeightAlt","","< Alternate maximum 3D texture height",49,null],[13,"cudaDevAttrMaxTexture3DDepthAlt","","< Alternate maximum 3D texture depth",49,null],[13,"cudaDevAttrPciDomainId","","< PCI domain ID of the device",49,null],[13,"cudaDevAttrTexturePitchAlignment","","< Pitch alignment requirement for textures",49,null],[13,"cudaDevAttrMaxTextureCubemapWidth","","< Maximum cubemap texture width/height",49,null],[13,"cudaDevAttrMaxTextureCubemapLayeredWidth","","< Maximum cubemap layered texture width/height",49,null],[13,"cudaDevAttrMaxTextureCubemapLayeredLayers","","< Maximum layers in a cubemap layered texture",49,null],[13,"cudaDevAttrMaxSurface1DWidth","","< Maximum 1D surface width",49,null],[13,"cudaDevAttrMaxSurface2DWidth","","< Maximum 2D surface width",49,null],[13,"cudaDevAttrMaxSurface2DHeight","","< Maximum 2D surface height",49,null],[13,"cudaDevAttrMaxSurface3DWidth","","< Maximum 3D surface width",49,null],[13,"cudaDevAttrMaxSurface3DHeight","","< Maximum 3D surface height",49,null],[13,"cudaDevAttrMaxSurface3DDepth","","< Maximum 3D surface depth",49,null],[13,"cudaDevAttrMaxSurface1DLayeredWidth","","< Maximum 1D layered surface width",49,null],[13,"cudaDevAttrMaxSurface1DLayeredLayers","","< Maximum layers in a 1D layered surface",49,null],[13,"cudaDevAttrMaxSurface2DLayeredWidth","","< Maximum 2D layered surface width",49,null],[13,"cudaDevAttrMaxSurface2DLayeredHeight","","< Maximum 2D layered surface height",49,null],[13,"cudaDevAttrMaxSurface2DLayeredLayers","","< Maximum layers in a 2D layered surface",49,null],[13,"cudaDevAttrMaxSurfaceCubemapWidth","","< Maximum cubemap surface width",49,null],[13,"cudaDevAttrMaxSurfaceCubemapLayeredWidth","","< Maximum cubemap layered surface width",49,null],[13,"cudaDevAttrMaxSurfaceCubemapLayeredLayers","","< Maximum layers in a cubemap layered surface",49,null],[13,"cudaDevAttrMaxTexture1DLinearWidth","","< Maximum 1D linear texture width",49,null],[13,"cudaDevAttrMaxTexture2DLinearWidth","","< Maximum 2D linear texture width",49,null],[13,"cudaDevAttrMaxTexture2DLinearHeight","","< Maximum 2D linear texture height",49,null],[13,"cudaDevAttrMaxTexture2DLinearPitch","","< Maximum 2D linear texture pitch in bytes",49,null],[13,"cudaDevAttrMaxTexture2DMipmappedWidth","","< Maximum mipmapped 2D texture width",49,null],[13,"cudaDevAttrMaxTexture2DMipmappedHeight","","< Maximum mipmapped 2D texture height",49,null],[13,"cudaDevAttrComputeCapabilityMajor","","< Major compute capability version number",49,null],[13,"cudaDevAttrComputeCapabilityMinor","","< Minor compute capability version number",49,null],[13,"cudaDevAttrMaxTexture1DMipmappedWidth","","< Maximum mipmapped 1D texture width",49,null],[13,"cudaDevAttrStreamPrioritiesSupported","","< Device supports stream priorities",49,null],[13,"cudaDevAttrGlobalL1CacheSupported","","< Device supports caching globals in L1",49,null],[13,"cudaDevAttrLocalL1CacheSupported","","< Device supports caching locals in L1",49,null],[13,"cudaDevAttrMaxSharedMemoryPerMultiprocessor","","< Maximum shared memory available per multiprocessor in …",49,null],[13,"cudaDevAttrMaxRegistersPerMultiprocessor","","< Maximum number of 32-bit registers available per …",49,null],[13,"cudaDevAttrManagedMemory","","< Device can allocate managed memory on this system",49,null],[13,"cudaDevAttrIsMultiGpuBoard","","< Device is on a multi-GPU board",49,null],[13,"cudaDevAttrMultiGpuBoardGroupID","","< Unique identifier for a group of devices on the same …",49,null],[13,"cudaDevAttrHostNativeAtomicSupported","","< Link between the device and the host supports native …",49,null],[13,"cudaDevAttrSingleToDoublePrecisionPerfRatio","","< Ratio of single precision performance (in …",49,null],[13,"cudaDevAttrPageableMemoryAccess","","< Device supports coherently accessing pageable memory …",49,null],[13,"cudaDevAttrConcurrentManagedAccess","","< Device can coherently access managed memory …",49,null],[13,"cudaDevAttrComputePreemptionSupported","","< Device supports Compute Preemption",49,null],[13,"cudaDevAttrCanUseHostPointerForRegisteredMem","","< Device can access host registered memory at the same …",49,null],[13,"cudaDevAttrReserved92","","",49,null],[13,"cudaDevAttrReserved93","","",49,null],[13,"cudaDevAttrReserved94","","",49,null],[13,"cudaDevAttrCooperativeLaunch","","< Device supports launching cooperative kernels via …",49,null],[13,"cudaDevAttrCooperativeMultiDeviceLaunch","","< Device can participate in cooperative kernels launched …",49,null],[13,"cudaDevAttrMaxSharedMemoryPerBlockOptin","","< The maximum optin shared memory per block. This value …",49,null],[13,"cudaDevAttrCanFlushRemoteWrites","","< Device supports flushing of outstanding remote writes.",49,null],[13,"cudaDevAttrHostRegisterSupported","","< Device supports host memory registration via …",49,null],[13,"cudaDevAttrPageableMemoryAccessUsesHostPageTables","","< Device accesses pageable memory via the host\'s page …",49,null],[13,"cudaDevAttrDirectManagedMemAccessFromHost","","< Host can directly access managed memory on the device …",49,null],[13,"cudaDevAttrMaxBlocksPerMultiprocessor","","< Maximum number of blocks per multiprocessor",49,null],[13,"cudaDevAttrReservedSharedMemoryPerBlock","","< Shared memory reserved by CUDA driver per block in bytes",49,null],[13,"cudaDevAttrSparseCudaArraySupported","","< Device supports sparse CUDA arrays and sparse CUDA …",49,null],[13,"cudaDevAttrHostRegisterReadOnlySupported","","< Device supports using the ::cudaHostRegister flag …",49,null],[13,"cudaDevAttrMaxTimelineSemaphoreInteropSupported","","< External timeline semaphore interop is supported on the …",49,null],[13,"cudaDevAttrMemoryPoolsSupported","","< Device supports using the ::cudaMallocAsync and …",49,null],[4,"cudaMemPoolAttr","","CUDA memory pool attributes",null,null],[13,"cudaMemPoolReuseFollowEventDependencies","","(value type = cuuint64_t) Amount of reserved memory in …",50,null],[13,"cudaMemPoolReuseAllowOpportunistic","","(value type = int) Allow cuMemAllocAsync to use memory …",50,null],[13,"cudaMemPoolReuseAllowInternalDependencies","","(value type = int) Allow reuse of already completed frees …",50,null],[13,"cudaMemPoolAttrReleaseThreshold","","(value type = int) Allow cuMemAllocAsync to insert new …",50,null],[4,"cudaMemLocationType","","",null,null],[13,"cudaMemLocationTypeInvalid","","",51,null],[13,"cudaMemLocationTypeDevice","","",51,null],[3,"cudaMemLocation","","",null,null],[12,"type_","","",52,null],[12,"id","","",52,null],[4,"cudaMemAccessFlags","","",null,null],[13,"cudaMemAccessFlagsProtNone","","",53,null],[13,"cudaMemAccessFlagsProtRead","","",53,null],[13,"cudaMemAccessFlagsProtReadWrite","","",53,null],[3,"cudaMemAccessDesc","","",null,null],[12,"location","","",54,null],[12,"flags","","",54,null],[4,"cudaMemAllocationType","","",null,null],[13,"cudaMemAllocationTypeInvalid","","",55,null],[13,"cudaMemAllocationTypePinned","","",55,null],[13,"cudaMemAllocationTypeMax","","",55,null],[4,"cudaMemAllocationHandleType","","",null,null],[13,"cudaMemHandleTypeNone","","< Does not allow any export mechanism. >",56,null],[13,"cudaMemHandleTypePosixFileDescriptor","","< Allows a file descriptor to be used for exporting. …",56,null],[13,"cudaMemHandleTypeWin32","","< Allows a Win32 NT handle to be used for exporting. …",56,null],[13,"cudaMemHandleTypeWin32Kmt","","< Allows a Win32 KMT handle to be used for exporting. …",56,null],[3,"cudaMemPoolProps","","",null,null],[12,"allocType","","",57,null],[12,"handleTypes","","",57,null],[12,"location","","",57,null],[12,"win32SecurityAttributes","","",57,null],[12,"reserved","","",57,null],[3,"cudaMemPoolPtrExportData","","",null,null],[12,"reserved","","",58,null],[4,"cudaDeviceP2PAttr","","CUDA device P2P attributes",null,null],[13,"cudaDevP2PAttrPerformanceRank","","< A relative value indicating the performance of the link …",59,null],[13,"cudaDevP2PAttrAccessSupported","","< Peer access is enabled",59,null],[13,"cudaDevP2PAttrNativeAtomicSupported","","< Native atomic operation over the link supported",59,null],[13,"cudaDevP2PAttrCudaArrayAccessSupported","","< Accessing CUDA arrays over the link supported",59,null],[3,"CUuuid_st","","",null,null],[12,"bytes","","",60,null],[6,"CUuuid","","",null,null],[6,"cudaUUID_t","","",null,null],[3,"cudaDeviceProp","","CUDA device properties",null,null],[12,"name","","< ASCII string identifying device",61,null],[12,"uuid","","< 16-byte unique identifier",61,null],[12,"luid","","< 8-byte locally unique identifier. Value is undefined on …",61,null],[12,"luidDeviceNodeMask","","< LUID device node mask. Value is undefined on TCC and …",61,null],[12,"totalGlobalMem","","< Global memory available on device in bytes",61,null],[12,"sharedMemPerBlock","","< Shared memory available per block in bytes",61,null],[12,"regsPerBlock","","< 32-bit registers available per block",61,null],[12,"warpSize","","< Warp size in threads",61,null],[12,"memPitch","","< Maximum pitch in bytes allowed by memory copies",61,null],[12,"maxThreadsPerBlock","","< Maximum number of threads per block",61,null],[12,"maxThreadsDim","","< Maximum size of each dimension of a block",61,null],[12,"maxGridSize","","< Maximum size of each dimension of a grid",61,null],[12,"clockRate","","< Clock frequency in kilohertz",61,null],[12,"totalConstMem","","< Constant memory available on device in bytes",61,null],[12,"major","","< Major compute capability",61,null],[12,"minor","","< Minor compute capability",61,null],[12,"textureAlignment","","< Alignment requirement for textures",61,null],[12,"texturePitchAlignment","","< Pitch alignment requirement for texture references …",61,null],[12,"deviceOverlap","","< Device can concurrently copy memory and execute a …",61,null],[12,"multiProcessorCount","","< Number of multiprocessors on device",61,null],[12,"kernelExecTimeoutEnabled","","< Specified whether there is a run time limit on kernels",61,null],[12,"integrated","","< Device is integrated as opposed to discrete",61,null],[12,"canMapHostMemory","","< Device can map host memory with …",61,null],[12,"computeMode","","< Compute mode (See ::cudaComputeMode)",61,null],[12,"maxTexture1D","","< Maximum 1D texture size",61,null],[12,"maxTexture1DMipmap","","< Maximum 1D mipmapped texture size",61,null],[12,"maxTexture1DLinear","","< Deprecated, do not use. Use …",61,null],[12,"maxTexture2D","","< Maximum 2D texture dimensions",61,null],[12,"maxTexture2DMipmap","","< Maximum 2D mipmapped texture dimensions",61,null],[12,"maxTexture2DLinear","","< Maximum dimensions (width, height, pitch) for 2D …",61,null],[12,"maxTexture2DGather","","< Maximum 2D texture dimensions if texture gather …",61,null],[12,"maxTexture3D","","< Maximum 3D texture dimensions",61,null],[12,"maxTexture3DAlt","","< Maximum alternate 3D texture dimensions",61,null],[12,"maxTextureCubemap","","< Maximum Cubemap texture dimensions",61,null],[12,"maxTexture1DLayered","","< Maximum 1D layered texture dimensions",61,null],[12,"maxTexture2DLayered","","< Maximum 2D layered texture dimensions",61,null],[12,"maxTextureCubemapLayered","","< Maximum Cubemap layered texture dimensions",61,null],[12,"maxSurface1D","","< Maximum 1D surface size",61,null],[12,"maxSurface2D","","< Maximum 2D surface dimensions",61,null],[12,"maxSurface3D","","< Maximum 3D surface dimensions",61,null],[12,"maxSurface1DLayered","","< Maximum 1D layered surface dimensions",61,null],[12,"maxSurface2DLayered","","< Maximum 2D layered surface dimensions",61,null],[12,"maxSurfaceCubemap","","< Maximum Cubemap surface dimensions",61,null],[12,"maxSurfaceCubemapLayered","","< Maximum Cubemap layered surface dimensions",61,null],[12,"surfaceAlignment","","< Alignment requirements for surfaces",61,null],[12,"concurrentKernels","","< Device can possibly execute multiple kernels …",61,null],[12,"ECCEnabled","","< Device has ECC support enabled",61,null],[12,"pciBusID","","< PCI bus ID of the device",61,null],[12,"pciDeviceID","","< PCI device ID of the device",61,null],[12,"pciDomainID","","< PCI domain ID of the device",61,null],[12,"tccDriver","","< 1 if device is a Tesla device using TCC driver, 0 …",61,null],[12,"asyncEngineCount","","< Number of asynchronous engines",61,null],[12,"unifiedAddressing","","< Device shares a unified address space with the host",61,null],[12,"memoryClockRate","","< Peak memory clock frequency in kilohertz",61,null],[12,"memoryBusWidth","","< Global memory bus width in bits",61,null],[12,"l2CacheSize","","< Size of L2 cache in bytes",61,null],[12,"persistingL2CacheMaxSize","","< Device\'s maximum l2 persisting lines capacity setting …",61,null],[12,"maxThreadsPerMultiProcessor","","< Maximum resident threads per multiprocessor",61,null],[12,"streamPrioritiesSupported","","< Device supports stream priorities",61,null],[12,"globalL1CacheSupported","","< Device supports caching globals in L1",61,null],[12,"localL1CacheSupported","","< Device supports caching locals in L1",61,null],[12,"sharedMemPerMultiprocessor","","< Shared memory available per multiprocessor in bytes",61,null],[12,"regsPerMultiprocessor","","< 32-bit registers available per multiprocessor",61,null],[12,"managedMemory","","< Device supports allocating managed memory on this system",61,null],[12,"isMultiGpuBoard","","< Device is on a multi-GPU board",61,null],[12,"multiGpuBoardGroupID","","< Unique identifier for a group of devices on the same …",61,null],[12,"hostNativeAtomicSupported","","< Link between the device and the host supports native …",61,null],[12,"singleToDoublePrecisionPerfRatio","","< Ratio of single precision performance (in …",61,null],[12,"pageableMemoryAccess","","< Device supports coherently accessing pageable memory …",61,null],[12,"concurrentManagedAccess","","< Device can coherently access managed memory …",61,null],[12,"computePreemptionSupported","","< Device supports Compute Preemption",61,null],[12,"canUseHostPointerForRegisteredMem","","< Device can access host registered memory at the same …",61,null],[12,"cooperativeLaunch","","< Device supports launching cooperative kernels via …",61,null],[12,"cooperativeMultiDeviceLaunch","","< Device can participate in cooperative kernels launched …",61,null],[12,"sharedMemPerBlockOptin","","< Per device maximum shared memory per block usable by …",61,null],[12,"pageableMemoryAccessUsesHostPageTables","","< Device accesses pageable memory via the host\'s page …",61,null],[12,"directManagedMemAccessFromHost","","< Host can directly access managed memory on the device …",61,null],[12,"maxBlocksPerMultiProcessor","","< Maximum number of resident blocks per multiprocessor",61,null],[12,"accessPolicyMaxWindowSize","","< The maximum value of …",61,null],[12,"reservedSharedMemPerBlock","","< Shared memory reserved by CUDA driver per block in bytes",61,null],[3,"cudaIpcEventHandle_st","","CUDA IPC event handle",null,null],[12,"reserved","","",62,null],[6,"cudaIpcEventHandle_t","","CUDA IPC event handle",null,null],[3,"cudaIpcMemHandle_st","","CUDA IPC memory handle",null,null],[12,"reserved","","",63,null],[6,"cudaIpcMemHandle_t","","CUDA IPC memory handle",null,null],[4,"cudaExternalMemoryHandleType","","External memory handle types",null,null],[13,"cudaExternalMemoryHandleTypeOpaqueFd","","Handle is an opaque file descriptor",64,null],[13,"cudaExternalMemoryHandleTypeOpaqueWin32","","Handle is an opaque shared NT handle",64,null],[13,"cudaExternalMemoryHandleTypeOpaqueWin32Kmt","","Handle is an opaque, globally shared handle",64,null],[13,"cudaExternalMemoryHandleTypeD3D12Heap","","Handle is a D3D12 heap object",64,null],[13,"cudaExternalMemoryHandleTypeD3D12Resource","","Handle is a D3D12 committed resource",64,null],[13,"cudaExternalMemoryHandleTypeD3D11Resource","","Handle is a shared NT handle to a D3D11 resource",64,null],[13,"cudaExternalMemoryHandleTypeD3D11ResourceKmt","","Handle is a globally shared handle to a D3D11 resource",64,null],[13,"cudaExternalMemoryHandleTypeNvSciBuf","","Handle is an NvSciBuf object",64,null],[3,"cudaExternalMemoryHandleDesc","","External memory handle descriptor",null,null],[12,"type_","","Type of the handle",65,null],[12,"handle","","",65,null],[12,"size","","Size of the memory allocation",65,null],[12,"flags","","Flags must either be zero or ::cudaExternalMemoryDedicated",65,null],[19,"cudaExternalMemoryHandleDesc__bindgen_ty_1","","",null,null],[12,"fd","","File descriptor referencing the memory object. Valid when …",66,null],[12,"win32","","",66,null],[12,"nvSciBufObject","","A handle representing NvSciBuf Object. Valid when type is …",66,null],[3,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1","","Win32 handle referencing the semaphore object. Valid when …",null,null],[12,"handle","","Valid NT handle. Must be NULL if \'name\' is non-NULL",67,null],[12,"name","","Name of a valid memory object. Must be NULL if \'handle\' …",67,null],[3,"cudaExternalMemoryBufferDesc","","External memory buffer descriptor",null,null],[12,"offset","","Offset into the memory object where the buffer\'s base is",68,null],[12,"size","","Size of the buffer",68,null],[12,"flags","","Flags reserved for future use. Must be zero.",68,null],[3,"cudaExternalMemoryMipmappedArrayDesc","","External memory mipmap descriptor",null,null],[12,"offset","","Offset into the memory object where the base level of the …",69,null],[12,"formatDesc","","Format of base level of the mipmap chain",69,null],[12,"extent","","Dimensions of base level of the mipmap chain",69,null],[12,"flags","","Flags associated with CUDA mipmapped arrays. See …",69,null],[12,"numLevels","","Total number of levels in the mipmap chain",69,null],[4,"cudaExternalSemaphoreHandleType","","External semaphore handle types",null,null],[13,"cudaExternalSemaphoreHandleTypeOpaqueFd","","Handle is an opaque file descriptor",70,null],[13,"cudaExternalSemaphoreHandleTypeOpaqueWin32","","Handle is an opaque shared NT handle",70,null],[13,"cudaExternalSemaphoreHandleTypeOpaqueWin32Kmt","","Handle is an opaque, globally shared handle",70,null],[13,"cudaExternalSemaphoreHandleTypeD3D12Fence","","Handle is a shared NT handle referencing a D3D12 fence …",70,null],[13,"cudaExternalSemaphoreHandleTypeD3D11Fence","","Handle is a shared NT handle referencing a D3D11 fence …",70,null],[13,"cudaExternalSemaphoreHandleTypeNvSciSync","","Opaque handle to NvSciSync Object",70,null],[13,"cudaExternalSemaphoreHandleTypeKeyedMutex","","Handle is a shared NT handle referencing a D3D11 keyed …",70,null],[13,"cudaExternalSemaphoreHandleTypeKeyedMutexKmt","","Handle is a shared KMT handle referencing a D3D11 keyed …",70,null],[13,"cudaExternalSemaphoreHandleTypeTimelineSemaphoreFd","","Handle is an opaque handle file descriptor referencing a …",70,null],[13,"cudaExternalSemaphoreHandleTypeTimelineSemaphoreWin32","","Handle is an opaque handle file descriptor referencing a …",70,null],[3,"cudaExternalSemaphoreHandleDesc","","External semaphore handle descriptor",null,null],[12,"type_","","Type of the handle",71,null],[12,"handle","","",71,null],[12,"flags","","Flags reserved for the future. Must be zero.",71,null],[19,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1","","",null,null],[12,"fd","","File descriptor referencing the semaphore object. Valid …",72,null],[12,"win32","","",72,null],[12,"nvSciSyncObj","","Valid NvSciSyncObj. Must be non NULL",72,null],[3,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1","","Win32 handle referencing the semaphore object. Valid when …",null,null],[12,"handle","","Valid NT handle. Must be NULL if \'name\' is non-NULL",73,null],[12,"name","","Name of a valid synchronization primitive. Must be NULL …",73,null],[3,"cudaExternalSemaphoreSignalParams","","External semaphore signal parameters, compatible with …",null,null],[12,"params","","",74,null],[12,"flags","","Only when ::cudaExternalSemaphoreSignalParams is used to …",74,null],[12,"reserved","","",74,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1","","",null,null],[12,"fence","","",75,null],[12,"nvSciSync","","",75,null],[12,"keyedMutex","","",75,null],[12,"reserved","","",75,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1","","Parameters for fence objects",null,null],[12,"value","","Value of fence to be signaled",76,null],[19,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"fence","","Pointer to NvSciSyncFence. Valid if …",77,null],[12,"reserved","","",77,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3","","Parameters for keyed mutex objects",null,null],[12,"key","","",78,null],[3,"cudaExternalSemaphoreWaitParams","","External semaphore wait parameters, compatible with …",null,null],[12,"params","","",79,null],[12,"flags","","Only when ::cudaExternalSemaphoreSignalParams is used to …",79,null],[12,"reserved","","",79,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1","","",null,null],[12,"fence","","",80,null],[12,"nvSciSync","","",80,null],[12,"keyedMutex","","",80,null],[12,"reserved","","",80,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1","","Parameters for fence objects",null,null],[12,"value","","Value of fence to be waited on",81,null],[19,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"fence","","Pointer to NvSciSyncFence. Valid if …",82,null],[12,"reserved","","",82,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3","","Parameters for keyed mutex objects",null,null],[12,"key","","Value of key to acquire the mutex with",83,null],[12,"timeoutMs","","Timeout in milliseconds to wait to acquire the mutex",83,null],[4,"cudaError_t","","CUDA error types",null,null],[13,"cudaSuccess","","The API call returned with no errors. In the case of …",3,null],[13,"cudaErrorInvalidValue","","This indicates that one or more of the parameters passed …",3,null],[13,"cudaErrorMemoryAllocation","","The API call failed because it was unable to allocate …",3,null],[13,"cudaErrorInitializationError","","The API call failed because the CUDA driver and runtime …",3,null],[13,"cudaErrorCudartUnloading","","This indicates that a CUDA Runtime API call cannot be …",3,null],[13,"cudaErrorProfilerDisabled","","This indicates profiler is not initialized for this run. …",3,null],[13,"cudaErrorProfilerNotInitialized","","\\\\deprecated This error return is deprecated as of CUDA …",3,null],[13,"cudaErrorProfilerAlreadyStarted","","\\\\deprecated This error return is deprecated as of CUDA …",3,null],[13,"cudaErrorProfilerAlreadyStopped","","\\\\deprecated This error return is deprecated as of CUDA …",3,null],[13,"cudaErrorInvalidConfiguration","","This indicates that a kernel launch is requesting …",3,null],[13,"cudaErrorInvalidPitchValue","","This indicates that one or more of the pitch-related …",3,null],[13,"cudaErrorInvalidSymbol","","This indicates that the symbol name/identifier passed to …",3,null],[13,"cudaErrorInvalidHostPointer","","This indicates that at least one host pointer passed to …",3,null],[13,"cudaErrorInvalidDevicePointer","","This indicates that at least one device pointer passed to …",3,null],[13,"cudaErrorInvalidTexture","","This indicates that the texture passed to the API call is …",3,null],[13,"cudaErrorInvalidTextureBinding","","This indicates that the texture binding is not valid. …",3,null],[13,"cudaErrorInvalidChannelDescriptor","","This indicates that the channel descriptor passed to the …",3,null],[13,"cudaErrorInvalidMemcpyDirection","","This indicates that the direction of the memcpy passed to …",3,null],[13,"cudaErrorAddressOfConstant","","This indicated that the user has taken the address of a …",3,null],[13,"cudaErrorTextureFetchFailed","","This indicated that a texture fetch was not able to be …",3,null],[13,"cudaErrorTextureNotBound","","This indicated that a texture was not bound for access. …",3,null],[13,"cudaErrorSynchronizationError","","This indicated that a synchronization operation had …",3,null],[13,"cudaErrorInvalidFilterSetting","","This indicates that a non-float texture was being …",3,null],[13,"cudaErrorInvalidNormSetting","","This indicates that an attempt was made to read a …",3,null],[13,"cudaErrorMixedDeviceExecution","","Mixing of device and device emulation code was not …",3,null],[13,"cudaErrorNotYetImplemented","","This indicates that the API call is not yet implemented. …",3,null],[13,"cudaErrorMemoryValueTooLarge","","This indicated that an emulated device pointer exceeded …",3,null],[13,"cudaErrorStubLibrary","","This indicates that the CUDA driver that the application …",3,null],[13,"cudaErrorInsufficientDriver","","This indicates that the installed NVIDIA CUDA driver is …",3,null],[13,"cudaErrorCallRequiresNewerDriver","","This indicates that the API call requires a newer CUDA …",3,null],[13,"cudaErrorInvalidSurface","","This indicates that the surface passed to the API call is …",3,null],[13,"cudaErrorDuplicateVariableName","","This indicates that multiple global or constant variables …",3,null],[13,"cudaErrorDuplicateTextureName","","This indicates that multiple textures (across separate …",3,null],[13,"cudaErrorDuplicateSurfaceName","","This indicates that multiple surfaces (across separate …",3,null],[13,"cudaErrorDevicesUnavailable","","This indicates that all CUDA devices are busy or …",3,null],[13,"cudaErrorIncompatibleDriverContext","","This indicates that the current context is not compatible …",3,null],[13,"cudaErrorMissingConfiguration","","The device function being invoked (usually via …",3,null],[13,"cudaErrorPriorLaunchFailure","","This indicated that a previous kernel launch failed. This …",3,null],[13,"cudaErrorLaunchMaxDepthExceeded","","This error indicates that a device runtime grid launch …",3,null],[13,"cudaErrorLaunchFileScopedTex","","This error indicates that a grid launch did not occur …",3,null],[13,"cudaErrorLaunchFileScopedSurf","","This error indicates that a grid launch did not occur …",3,null],[13,"cudaErrorSyncDepthExceeded","","This error indicates that a call to …",3,null],[13,"cudaErrorLaunchPendingCountExceeded","","This error indicates that a device runtime grid launch …",3,null],[13,"cudaErrorInvalidDeviceFunction","","The requested device function does not exist or is not …",3,null],[13,"cudaErrorNoDevice","","This indicates that no CUDA-capable devices were detected …",3,null],[13,"cudaErrorInvalidDevice","","This indicates that the device ordinal supplied by the …",3,null],[13,"cudaErrorDeviceNotLicensed","","This indicates that the device doesn\'t have a valid Grid …",3,null],[13,"cudaErrorSoftwareValidityNotEstablished","","By default, the CUDA runtime may perform a minimal set of …",3,null],[13,"cudaErrorStartupFailure","","This indicates an internal startup failure in the CUDA …",3,null],[13,"cudaErrorInvalidKernelImage","","This indicates that the device kernel image is invalid.",3,null],[13,"cudaErrorDeviceUninitialized","","This most frequently indicates that there is no context …",3,null],[13,"cudaErrorMapBufferObjectFailed","","This indicates that the buffer object could not be mapped.",3,null],[13,"cudaErrorUnmapBufferObjectFailed","","This indicates that the buffer object could not be …",3,null],[13,"cudaErrorArrayIsMapped","","This indicates that the specified array is currently …",3,null],[13,"cudaErrorAlreadyMapped","","This indicates that the resource is already mapped.",3,null],[13,"cudaErrorNoKernelImageForDevice","","This indicates that there is no kernel image available …",3,null],[13,"cudaErrorAlreadyAcquired","","This indicates that a resource has already been acquired.",3,null],[13,"cudaErrorNotMapped","","This indicates that a resource is not mapped.",3,null],[13,"cudaErrorNotMappedAsArray","","This indicates that a mapped resource is not available …",3,null],[13,"cudaErrorNotMappedAsPointer","","This indicates that a mapped resource is not available …",3,null],[13,"cudaErrorECCUncorrectable","","This indicates that an uncorrectable ECC error was …",3,null],[13,"cudaErrorUnsupportedLimit","","This indicates that the ::cudaLimit passed to the API …",3,null],[13,"cudaErrorDeviceAlreadyInUse","","This indicates that a call tried to access an …",3,null],[13,"cudaErrorPeerAccessUnsupported","","This error indicates that P2P access is not supported …",3,null],[13,"cudaErrorInvalidPtx","","A PTX compilation failed. The runtime may fall back to …",3,null],[13,"cudaErrorInvalidGraphicsContext","","This indicates an error with the OpenGL or DirectX …",3,null],[13,"cudaErrorNvlinkUncorrectable","","This indicates that an uncorrectable NVLink error was …",3,null],[13,"cudaErrorJitCompilerNotFound","","This indicates that the PTX JIT compiler library was not …",3,null],[13,"cudaErrorUnsupportedPtxVersion","","This indicates that the provided PTX was compiled with an …",3,null],[13,"cudaErrorJitCompilationDisabled","","This indicates that the JIT compilation was disabled. The …",3,null],[13,"cudaErrorInvalidSource","","This indicates that the device kernel source is invalid.",3,null],[13,"cudaErrorFileNotFound","","This indicates that the file specified was not found.",3,null],[13,"cudaErrorSharedObjectSymbolNotFound","","This indicates that a link to a shared object failed to …",3,null],[13,"cudaErrorSharedObjectInitFailed","","This indicates that initialization of a shared object …",3,null],[13,"cudaErrorOperatingSystem","","This error indicates that an OS call failed.",3,null],[13,"cudaErrorInvalidResourceHandle","","This indicates that a resource handle passed to the API …",3,null],[13,"cudaErrorIllegalState","","This indicates that a resource required by the API call …",3,null],[13,"cudaErrorSymbolNotFound","","This indicates that a named symbol was not found. …",3,null],[13,"cudaErrorNotReady","","This indicates that asynchronous operations issued …",3,null],[13,"cudaErrorIllegalAddress","","The device encountered a load or store instruction on an …",3,null],[13,"cudaErrorLaunchOutOfResources","","This indicates that a launch did not occur because it did …",3,null],[13,"cudaErrorLaunchTimeout","","This indicates that the device kernel took too long to …",3,null],[13,"cudaErrorLaunchIncompatibleTexturing","","This error indicates a kernel launch that uses an …",3,null],[13,"cudaErrorPeerAccessAlreadyEnabled","","This error indicates that a call to …",3,null],[13,"cudaErrorPeerAccessNotEnabled","","This error indicates that ::cudaDeviceDisablePeerAccess() …",3,null],[13,"cudaErrorSetOnActiveProcess","","This indicates that the user has called …",3,null],[13,"cudaErrorContextIsDestroyed","","This error indicates that the context current to the …",3,null],[13,"cudaErrorAssert","","An assert triggered in device code during kernel …",3,null],[13,"cudaErrorTooManyPeers","","This error indicates that the hardware resources required …",3,null],[13,"cudaErrorHostMemoryAlreadyRegistered","","This error indicates that the memory range passed to …",3,null],[13,"cudaErrorHostMemoryNotRegistered","","This error indicates that the pointer passed to …",3,null],[13,"cudaErrorHardwareStackError","","Device encountered an error in the call stack during …",3,null],[13,"cudaErrorIllegalInstruction","","The device encountered an illegal instruction during …",3,null],[13,"cudaErrorMisalignedAddress","","The device encountered a load or store instruction on a …",3,null],[13,"cudaErrorInvalidAddressSpace","","While executing a kernel, the device encountered an …",3,null],[13,"cudaErrorInvalidPc","","The device encountered an invalid program counter. This …",3,null],[13,"cudaErrorLaunchFailure","","An exception occurred on the device while executing a …",3,null],[13,"cudaErrorCooperativeLaunchTooLarge","","This error indicates that the number of blocks launched …",3,null],[13,"cudaErrorNotPermitted","","This error indicates the attempted operation is not …",3,null],[13,"cudaErrorNotSupported","","This error indicates the attempted operation is not …",3,null],[13,"cudaErrorSystemNotReady","","This error indicates that the system is not yet ready to …",3,null],[13,"cudaErrorSystemDriverMismatch","","This error indicates that there is a mismatch between the …",3,null],[13,"cudaErrorCompatNotSupportedOnDevice","","This error indicates that the system was upgraded to run …",3,null],[13,"cudaErrorStreamCaptureUnsupported","","The operation is not permitted when the stream is …",3,null],[13,"cudaErrorStreamCaptureInvalidated","","The current capture sequence on the stream has been …",3,null],[13,"cudaErrorStreamCaptureMerge","","The operation would have resulted in a merge of two …",3,null],[13,"cudaErrorStreamCaptureUnmatched","","The capture was not initiated in this stream.",3,null],[13,"cudaErrorStreamCaptureUnjoined","","The capture sequence contains a fork that was not joined …",3,null],[13,"cudaErrorStreamCaptureIsolation","","A dependency would have been created which crosses the …",3,null],[13,"cudaErrorStreamCaptureImplicit","","The operation would have resulted in a disallowed …",3,null],[13,"cudaErrorCapturedEvent","","The operation is not permitted on an event which was last …",3,null],[13,"cudaErrorStreamCaptureWrongThread","","A stream capture sequence not initiated with the …",3,null],[13,"cudaErrorTimeout","","This indicates that the wait operation has timed out.",3,null],[13,"cudaErrorGraphExecUpdateFailure","","This error indicates that the graph update was not …",3,null],[13,"cudaErrorUnknown","","This indicates that an unknown internal error has …",3,null],[13,"cudaErrorApiFailureBase","","Any unhandled CUDA driver error is added to this value …",3,null],[3,"CUstream_st","","",null,null],[6,"cudaStream_t","","CUDA stream",null,null],[3,"CUevent_st","","",null,null],[6,"cudaEvent_t","","CUDA event types",null,null],[6,"cudaGraphicsResource_t","","CUDA graphics resource types",null,null],[4,"cudaOutputMode_t","","CUDA Profiler Output modes",null,null],[13,"cudaKeyValuePair","","< Output mode Key-Value pair format.",48,null],[13,"cudaCSV","","< Output mode Comma separated values format.",48,null],[3,"CUexternalMemory_st","","",null,null],[6,"cudaExternalMemory_t","","CUDA external memory",null,null],[3,"CUexternalSemaphore_st","","",null,null],[6,"cudaExternalSemaphore_t","","CUDA external semaphore",null,null],[3,"CUgraph_st","","",null,null],[6,"cudaGraph_t","","CUDA graph",null,null],[3,"CUgraphNode_st","","",null,null],[6,"cudaGraphNode_t","","CUDA graph node.",null,null],[3,"CUfunc_st","","",null,null],[6,"cudaFunction_t","","CUDA function",null,null],[3,"CUmemPoolHandle_st","","",null,null],[6,"cudaMemPool_t","","CUDA memory pool",null,null],[4,"cudaCGScope","","CUDA cooperative group scope",null,null],[13,"cudaCGScopeInvalid","","< Invalid cooperative group scope",84,null],[13,"cudaCGScopeGrid","","< Scope represented by a grid_group",84,null],[13,"cudaCGScopeMultiGrid","","< Scope represented by a multi_grid_group",84,null],[3,"cudaLaunchParams","","CUDA launch parameters",null,null],[12,"func","","< Device function symbol",85,null],[12,"gridDim","","< Grid dimentions",85,null],[12,"blockDim","","< Block dimentions",85,null],[12,"args","","< Arguments",85,null],[12,"sharedMem","","< Shared memory",85,null],[12,"stream","","< Stream identifier",85,null],[3,"cudaKernelNodeParams","","CUDA GPU kernel node parameters",null,null],[12,"func","","< Kernel to launch",86,null],[12,"gridDim","","< Grid dimensions",86,null],[12,"blockDim","","< Block dimensions",86,null],[12,"sharedMemBytes","","< Dynamic shared-memory size per thread block in bytes",86,null],[12,"kernelParams","","< Array of pointers to individual kernel arguments",86,null],[12,"extra","","< Pointer to kernel arguments in the \\\"extra\\\" format",86,null],[3,"cudaExternalSemaphoreSignalNodeParams","","External semaphore signal node parameters",null,null],[12,"extSemArray","","< Array of external semaphore handles.",87,null],[12,"paramsArray","","< Array of external semaphore signal parameters.",87,null],[12,"numExtSems","","< Number of handles and parameters supplied in …",87,null],[3,"cudaExternalSemaphoreWaitNodeParams","","External semaphore wait node parameters",null,null],[12,"extSemArray","","< Array of external semaphore handles.",88,null],[12,"paramsArray","","< Array of external semaphore wait parameters.",88,null],[12,"numExtSems","","< Number of handles and parameters supplied in …",88,null],[4,"cudaGraphNodeType","","CUDA Graph node types",null,null],[13,"cudaGraphNodeTypeKernel","","< GPU kernel node",89,null],[13,"cudaGraphNodeTypeMemcpy","","< Memcpy node",89,null],[13,"cudaGraphNodeTypeMemset","","< Memset node",89,null],[13,"cudaGraphNodeTypeHost","","< Host (executable) node",89,null],[13,"cudaGraphNodeTypeGraph","","< Node which executes an embedded graph",89,null],[13,"cudaGraphNodeTypeEmpty","","< Empty (no-op) node",89,null],[13,"cudaGraphNodeTypeWaitEvent","","< External event wait node",89,null],[13,"cudaGraphNodeTypeEventRecord","","< External event record node",89,null],[13,"cudaGraphNodeTypeCount","","",89,null],[3,"CUgraphExec_st","","",null,null],[6,"cudaGraphExec_t","","CUDA executable (launchable) graph",null,null],[4,"cudaGraphExecUpdateResult","","CUDA Graph Update error types",null,null],[13,"cudaGraphExecUpdateSuccess","","< The update succeeded",90,null],[13,"cudaGraphExecUpdateError","","< The update failed for an unexpected reason which is …",90,null],[13,"cudaGraphExecUpdateErrorTopologyChanged","","< The update failed because the topology changed",90,null],[13,"cudaGraphExecUpdateErrorNodeTypeChanged","","< The update failed because a node type changed",90,null],[13,"cudaGraphExecUpdateErrorFunctionChanged","","< The update failed because the function of a kernel node …",90,null],[13,"cudaGraphExecUpdateErrorParametersChanged","","< The update failed because the parameters changed in a …",90,null],[13,"cudaGraphExecUpdateErrorNotSupported","","< The update failed because something about the node is …",90,null],[13,"cudaGraphExecUpdateErrorUnsupportedFunctionChange","","< The update failed because the function of a kernel node …",90,null],[6,"cuFloatComplex","","",null,null],[6,"cuDoubleComplex","","",null,null],[6,"cuComplex","","",null,null],[4,"cudaDataType_t","","",null,null],[13,"CUDA_R_16F","","",91,null],[13,"CUDA_C_16F","","",91,null],[13,"CUDA_R_16BF","","",91,null],[13,"CUDA_C_16BF","","",91,null],[13,"CUDA_R_32F","","",91,null],[13,"CUDA_C_32F","","",91,null],[13,"CUDA_R_64F","","",91,null],[13,"CUDA_C_64F","","",91,null],[13,"CUDA_R_4I","","",91,null],[13,"CUDA_C_4I","","",91,null],[13,"CUDA_R_4U","","",91,null],[13,"CUDA_C_4U","","",91,null],[13,"CUDA_R_8I","","",91,null],[13,"CUDA_C_8I","","",91,null],[13,"CUDA_R_8U","","",91,null],[13,"CUDA_C_8U","","",91,null],[13,"CUDA_R_16I","","",91,null],[13,"CUDA_C_16I","","",91,null],[13,"CUDA_R_16U","","",91,null],[13,"CUDA_C_16U","","",91,null],[13,"CUDA_R_32I","","",91,null],[13,"CUDA_C_32I","","",91,null],[13,"CUDA_R_32U","","",91,null],[13,"CUDA_C_32U","","",91,null],[13,"CUDA_R_64I","","",91,null],[13,"CUDA_C_64I","","",91,null],[13,"CUDA_R_64U","","",91,null],[13,"CUDA_C_64U","","",91,null],[4,"cudaDataType","","",null,null],[13,"CUDA_R_16F","","",91,null],[13,"CUDA_C_16F","","",91,null],[13,"CUDA_R_16BF","","",91,null],[13,"CUDA_C_16BF","","",91,null],[13,"CUDA_R_32F","","",91,null],[13,"CUDA_C_32F","","",91,null],[13,"CUDA_R_64F","","",91,null],[13,"CUDA_C_64F","","",91,null],[13,"CUDA_R_4I","","",91,null],[13,"CUDA_C_4I","","",91,null],[13,"CUDA_R_4U","","",91,null],[13,"CUDA_C_4U","","",91,null],[13,"CUDA_R_8I","","",91,null],[13,"CUDA_C_8I","","",91,null],[13,"CUDA_R_8U","","",91,null],[13,"CUDA_C_8U","","",91,null],[13,"CUDA_R_16I","","",91,null],[13,"CUDA_C_16I","","",91,null],[13,"CUDA_R_16U","","",91,null],[13,"CUDA_C_16U","","",91,null],[13,"CUDA_R_32I","","",91,null],[13,"CUDA_C_32I","","",91,null],[13,"CUDA_R_32U","","",91,null],[13,"CUDA_C_32U","","",91,null],[13,"CUDA_R_64I","","",91,null],[13,"CUDA_C_64I","","",91,null],[13,"CUDA_R_64U","","",91,null],[13,"CUDA_C_64U","","",91,null],[17,"libraryPropertyType_t_MAJOR_VERSION","","",null,null],[17,"libraryPropertyType_t_MINOR_VERSION","","",null,null],[17,"libraryPropertyType_t_PATCH_LEVEL","","",null,null],[6,"libraryPropertyType_t","","",null,null],[6,"libraryPropertyType","","",null,null],[4,"cublasStatus_t","","",null,null],[13,"CUBLAS_STATUS_SUCCESS","","",92,null],[13,"CUBLAS_STATUS_NOT_INITIALIZED","","",92,null],[13,"CUBLAS_STATUS_ALLOC_FAILED","","",92,null],[13,"CUBLAS_STATUS_INVALID_VALUE","","",92,null],[13,"CUBLAS_STATUS_ARCH_MISMATCH","","",92,null],[13,"CUBLAS_STATUS_MAPPING_ERROR","","",92,null],[13,"CUBLAS_STATUS_EXECUTION_FAILED","","",92,null],[13,"CUBLAS_STATUS_INTERNAL_ERROR","","",92,null],[13,"CUBLAS_STATUS_NOT_SUPPORTED","","",92,null],[13,"CUBLAS_STATUS_LICENSE_ERROR","","",92,null],[4,"cublasFillMode_t","","",null,null],[13,"CUBLAS_FILL_MODE_LOWER","","",93,null],[13,"CUBLAS_FILL_MODE_UPPER","","",93,null],[13,"CUBLAS_FILL_MODE_FULL","","",93,null],[4,"cublasDiagType_t","","",null,null],[13,"CUBLAS_DIAG_NON_UNIT","","",94,null],[13,"CUBLAS_DIAG_UNIT","","",94,null],[4,"cublasSideMode_t","","",null,null],[13,"CUBLAS_SIDE_LEFT","","",95,null],[13,"CUBLAS_SIDE_RIGHT","","",95,null],[4,"cublasOperation_t","","",null,null],[13,"CUBLAS_OP_N","","",96,null],[13,"CUBLAS_OP_T","","",96,null],[13,"CUBLAS_OP_C","","",96,null],[13,"CUBLAS_OP_CONJG","","",96,null],[4,"cublasPointerMode_t","","",null,null],[13,"CUBLAS_POINTER_MODE_HOST","","",97,null],[13,"CUBLAS_POINTER_MODE_DEVICE","","",97,null],[4,"cublasAtomicsMode_t","","",null,null],[13,"CUBLAS_ATOMICS_NOT_ALLOWED","","",98,null],[13,"CUBLAS_ATOMICS_ALLOWED","","",98,null],[4,"cublasGemmAlgo_t","","",null,null],[13,"CUBLAS_GEMM_DFALT","","",99,null],[13,"CUBLAS_GEMM_ALGO0","","",99,null],[13,"CUBLAS_GEMM_ALGO1","","",99,null],[13,"CUBLAS_GEMM_ALGO2","","",99,null],[13,"CUBLAS_GEMM_ALGO3","","",99,null],[13,"CUBLAS_GEMM_ALGO4","","",99,null],[13,"CUBLAS_GEMM_ALGO5","","",99,null],[13,"CUBLAS_GEMM_ALGO6","","",99,null],[13,"CUBLAS_GEMM_ALGO7","","",99,null],[13,"CUBLAS_GEMM_ALGO8","","",99,null],[13,"CUBLAS_GEMM_ALGO9","","",99,null],[13,"CUBLAS_GEMM_ALGO10","","",99,null],[13,"CUBLAS_GEMM_ALGO11","","",99,null],[13,"CUBLAS_GEMM_ALGO12","","",99,null],[13,"CUBLAS_GEMM_ALGO13","","",99,null],[13,"CUBLAS_GEMM_ALGO14","","",99,null],[13,"CUBLAS_GEMM_ALGO15","","",99,null],[13,"CUBLAS_GEMM_ALGO16","","",99,null],[13,"CUBLAS_GEMM_ALGO17","","",99,null],[13,"CUBLAS_GEMM_ALGO18","","",99,null],[13,"CUBLAS_GEMM_ALGO19","","",99,null],[13,"CUBLAS_GEMM_ALGO20","","",99,null],[13,"CUBLAS_GEMM_ALGO21","","",99,null],[13,"CUBLAS_GEMM_ALGO22","","",99,null],[13,"CUBLAS_GEMM_ALGO23","","",99,null],[13,"CUBLAS_GEMM_DEFAULT_TENSOR_OP","","",99,null],[13,"CUBLAS_GEMM_ALGO0_TENSOR_OP","","",99,null],[13,"CUBLAS_GEMM_ALGO1_TENSOR_OP","","",99,null],[13,"CUBLAS_GEMM_ALGO2_TENSOR_OP","","",99,null],[13,"CUBLAS_GEMM_ALGO3_TENSOR_OP","","",99,null],[13,"CUBLAS_GEMM_ALGO4_TENSOR_OP","","",99,null],[13,"CUBLAS_GEMM_ALGO5_TENSOR_OP","","",99,null],[13,"CUBLAS_GEMM_ALGO6_TENSOR_OP","","",99,null],[13,"CUBLAS_GEMM_ALGO7_TENSOR_OP","","",99,null],[13,"CUBLAS_GEMM_ALGO8_TENSOR_OP","","",99,null],[13,"CUBLAS_GEMM_ALGO9_TENSOR_OP","","",99,null],[13,"CUBLAS_GEMM_ALGO10_TENSOR_OP","","",99,null],[13,"CUBLAS_GEMM_ALGO11_TENSOR_OP","","",99,null],[13,"CUBLAS_GEMM_ALGO12_TENSOR_OP","","",99,null],[13,"CUBLAS_GEMM_ALGO13_TENSOR_OP","","",99,null],[13,"CUBLAS_GEMM_ALGO14_TENSOR_OP","","",99,null],[13,"CUBLAS_GEMM_ALGO15_TENSOR_OP","","",99,null],[4,"cublasMath_t","","",null,null],[13,"CUBLAS_DEFAULT_MATH","","",100,null],[13,"CUBLAS_TENSOR_OP_MATH","","",100,null],[13,"CUBLAS_PEDANTIC_MATH","","",100,null],[13,"CUBLAS_TF32_TENSOR_OP_MATH","","",100,null],[13,"CUBLAS_MATH_DISALLOW_REDUCED_PRECISION_REDUCTION","","",100,null],[4,"cublasDataType_t","","",null,null],[13,"CUDA_R_16F","","",91,null],[13,"CUDA_C_16F","","",91,null],[13,"CUDA_R_16BF","","",91,null],[13,"CUDA_C_16BF","","",91,null],[13,"CUDA_R_32F","","",91,null],[13,"CUDA_C_32F","","",91,null],[13,"CUDA_R_64F","","",91,null],[13,"CUDA_C_64F","","",91,null],[13,"CUDA_R_4I","","",91,null],[13,"CUDA_C_4I","","",91,null],[13,"CUDA_R_4U","","",91,null],[13,"CUDA_C_4U","","",91,null],[13,"CUDA_R_8I","","",91,null],[13,"CUDA_C_8I","","",91,null],[13,"CUDA_R_8U","","",91,null],[13,"CUDA_C_8U","","",91,null],[13,"CUDA_R_16I","","",91,null],[13,"CUDA_C_16I","","",91,null],[13,"CUDA_R_16U","","",91,null],[13,"CUDA_C_16U","","",91,null],[13,"CUDA_R_32I","","",91,null],[13,"CUDA_C_32I","","",91,null],[13,"CUDA_R_32U","","",91,null],[13,"CUDA_C_32U","","",91,null],[13,"CUDA_R_64I","","",91,null],[13,"CUDA_C_64I","","",91,null],[13,"CUDA_R_64U","","",91,null],[13,"CUDA_C_64U","","",91,null],[4,"cublasComputeType_t","","",null,null],[13,"CUBLAS_COMPUTE_16F","","",101,null],[13,"CUBLAS_COMPUTE_16F_PEDANTIC","","",101,null],[13,"CUBLAS_COMPUTE_32F","","",101,null],[13,"CUBLAS_COMPUTE_32F_PEDANTIC","","",101,null],[13,"CUBLAS_COMPUTE_32F_FAST_16F","","",101,null],[13,"CUBLAS_COMPUTE_32F_FAST_16BF","","",101,null],[13,"CUBLAS_COMPUTE_32F_FAST_TF32","","",101,null],[13,"CUBLAS_COMPUTE_64F","","",101,null],[13,"CUBLAS_COMPUTE_64F_PEDANTIC","","",101,null],[13,"CUBLAS_COMPUTE_32I","","",101,null],[13,"CUBLAS_COMPUTE_32I_PEDANTIC","","",101,null],[3,"cublasContext","","",null,null],[6,"cublasHandle_t","","",null,null],[6,"cublasLogCallback","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"clone","","",0,[[],["float2",3]]],[11,"clone","","",1,[[],["double2",3]]],[11,"clone","","",2,[[],["dim3",3]]],[11,"clone","","",3,[[],["cudaerror",4]]],[11,"clone","","",4,[[],["cudachannelformatkind",4]]],[11,"clone","","",5,[[],["cudachannelformatdesc",3]]],[11,"clone","","",102,[[],["cudaarray",3]]],[11,"clone","","",103,[[],["cudamipmappedarray",3]]],[11,"clone","","",6,[[],["cudaarraysparseproperties",3]]],[11,"clone","","",7,[[],["cudaarraysparseproperties__bindgen_ty_1",3]]],[11,"clone","","",8,[[],["cudamemorytype",4]]],[11,"clone","","",9,[[],["cudamemcpykind",4]]],[11,"clone","","",10,[[],["cudapitchedptr",3]]],[11,"clone","","",11,[[],["cudaextent",3]]],[11,"clone","","",12,[[],["cudapos",3]]],[11,"clone","","",13,[[],["cudamemcpy3dparms",3]]],[11,"clone","","",14,[[],["cudamemcpy3dpeerparms",3]]],[11,"clone","","",15,[[],["cudamemsetparams",3]]],[11,"clone","","",16,[[],["cudaaccessproperty",4]]],[11,"clone","","",17,[[],["cudaaccesspolicywindow",3]]],[11,"clone","","",18,[[],["cudahostnodeparams",3]]],[11,"clone","","",19,[[],["cudastreamcapturestatus",4]]],[11,"clone","","",20,[[],["cudastreamcapturemode",4]]],[11,"clone","","",21,[[],["cudasynchronizationpolicy",4]]],[11,"clone","","",22,[[],["cudastreamattrid",4]]],[11,"clone","","",23,[[],["cudastreamattrvalue",19]]],[11,"clone","","",104,[[],["cudagraphicsresource",3]]],[11,"clone","","",24,[[],["cudagraphicsregisterflags",4]]],[11,"clone","","",25,[[],["cudagraphicsmapflags",4]]],[11,"clone","","",26,[[],["cudagraphicscubeface",4]]],[11,"clone","","",27,[[],["cudakernelnodeattrid",4]]],[11,"clone","","",28,[[],["cudakernelnodeattrvalue",19]]],[11,"clone","","",29,[[],["cudaresourcetype",4]]],[11,"clone","","",30,[[],["cudaresourceviewformat",4]]],[11,"clone","","",31,[[],["cudaresourcedesc",3]]],[11,"clone","","",32,[[],["cudaresourcedesc__bindgen_ty_1",19]]],[11,"clone","","",33,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",34,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_2",3]]],[11,"clone","","",35,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_3",3]]],[11,"clone","","",36,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_4",3]]],[11,"clone","","",37,[[],["cudaresourceviewdesc",3]]],[11,"clone","","",38,[[],["cudapointerattributes",3]]],[11,"clone","","",39,[[],["cudafuncattributes",3]]],[11,"clone","","",40,[[],["cudafuncattribute",4]]],[11,"clone","","",41,[[],["cudafunccache",4]]],[11,"clone","","",42,[[],["cudasharedmemconfig",4]]],[11,"clone","","",43,[[],["cudasharedcarveout",4]]],[11,"clone","","",44,[[],["cudacomputemode",4]]],[11,"clone","","",45,[[],["cudalimit",4]]],[11,"clone","","",46,[[],["cudamemoryadvise",4]]],[11,"clone","","",47,[[],["cudamemrangeattribute",4]]],[11,"clone","","",48,[[],["cudaoutputmode",4]]],[11,"clone","","",49,[[],["cudadeviceattr",4]]],[11,"clone","","",50,[[],["cudamempoolattr",4]]],[11,"clone","","",51,[[],["cudamemlocationtype",4]]],[11,"clone","","",52,[[],["cudamemlocation",3]]],[11,"clone","","",53,[[],["cudamemaccessflags",4]]],[11,"clone","","",54,[[],["cudamemaccessdesc",3]]],[11,"clone","","",55,[[],["cudamemallocationtype",4]]],[11,"clone","","",56,[[],["cudamemallocationhandletype",4]]],[11,"clone","","",57,[[],["cudamempoolprops",3]]],[11,"clone","","",58,[[],["cudamempoolptrexportdata",3]]],[11,"clone","","",59,[[],["cudadevicep2pattr",4]]],[11,"clone","","",60,[[],["cuuuid_st",3]]],[11,"clone","","",61,[[],["cudadeviceprop",3]]],[11,"clone","","",62,[[],["cudaipceventhandle_st",3]]],[11,"clone","","",63,[[],["cudaipcmemhandle_st",3]]],[11,"clone","","",64,[[],["cudaexternalmemoryhandletype",4]]],[11,"clone","","",65,[[],["cudaexternalmemoryhandledesc",3]]],[11,"clone","","",66,[[],["cudaexternalmemoryhandledesc__bindgen_ty_1",19]]],[11,"clone","","",67,[[],["cudaexternalmemoryhandledesc__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",68,[[],["cudaexternalmemorybufferdesc",3]]],[11,"clone","","",69,[[],["cudaexternalmemorymipmappedarraydesc",3]]],[11,"clone","","",70,[[],["cudaexternalsemaphorehandletype",4]]],[11,"clone","","",71,[[],["cudaexternalsemaphorehandledesc",3]]],[11,"clone","","",72,[[],["cudaexternalsemaphorehandledesc__bindgen_ty_1",19]]],[11,"clone","","",73,[[],["cudaexternalsemaphorehandledesc__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",74,[[],["cudaexternalsemaphoresignalparams",3]]],[11,"clone","","",75,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1",3]]],[11,"clone","","",76,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",77,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_2",19]]],[11,"clone","","",78,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_3",3]]],[11,"clone","","",79,[[],["cudaexternalsemaphorewaitparams",3]]],[11,"clone","","",80,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1",3]]],[11,"clone","","",81,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",82,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_2",19]]],[11,"clone","","",83,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_3",3]]],[11,"clone","","",105,[[],["custream_st",3]]],[11,"clone","","",106,[[],["cuevent_st",3]]],[11,"clone","","",107,[[],["cuexternalmemory_st",3]]],[11,"clone","","",108,[[],["cuexternalsemaphore_st",3]]],[11,"clone","","",109,[[],["cugraph_st",3]]],[11,"clone","","",110,[[],["cugraphnode_st",3]]],[11,"clone","","",111,[[],["cufunc_st",3]]],[11,"clone","","",112,[[],["cumempoolhandle_st",3]]],[11,"clone","","",84,[[],["cudacgscope",4]]],[11,"clone","","",85,[[],["cudalaunchparams",3]]],[11,"clone","","",86,[[],["cudakernelnodeparams",3]]],[11,"clone","","",87,[[],["cudaexternalsemaphoresignalnodeparams",3]]],[11,"clone","","",88,[[],["cudaexternalsemaphorewaitnodeparams",3]]],[11,"clone","","",89,[[],["cudagraphnodetype",4]]],[11,"clone","","",113,[[],["cugraphexec_st",3]]],[11,"clone","","",90,[[],["cudagraphexecupdateresult",4]]],[11,"clone","","",91,[[],["cudadatatype_t",4]]],[11,"clone","","",92,[[],["cublasstatus_t",4]]],[11,"clone","","",93,[[],["cublasfillmode_t",4]]],[11,"clone","","",94,[[],["cublasdiagtype_t",4]]],[11,"clone","","",95,[[],["cublassidemode_t",4]]],[11,"clone","","",96,[[],["cublasoperation_t",4]]],[11,"clone","","",97,[[],["cublaspointermode_t",4]]],[11,"clone","","",98,[[],["cublasatomicsmode_t",4]]],[11,"clone","","",99,[[],["cublasgemmalgo_t",4]]],[11,"clone","","",100,[[],["cublasmath_t",4]]],[11,"clone","","",101,[[],["cublascomputetype_t",4]]],[11,"clone","","",114,[[],["cublascontext",3]]],[11,"eq","","",3,[[["cudaerror",4]],["bool",15]]],[11,"eq","","",4,[[["cudachannelformatkind",4]],["bool",15]]],[11,"eq","","",8,[[["cudamemorytype",4]],["bool",15]]],[11,"eq","","",9,[[["cudamemcpykind",4]],["bool",15]]],[11,"eq","","",16,[[["cudaaccessproperty",4]],["bool",15]]],[11,"eq","","",19,[[["cudastreamcapturestatus",4]],["bool",15]]],[11,"eq","","",20,[[["cudastreamcapturemode",4]],["bool",15]]],[11,"eq","","",21,[[["cudasynchronizationpolicy",4]],["bool",15]]],[11,"eq","","",22,[[["cudastreamattrid",4]],["bool",15]]],[11,"eq","","",24,[[["cudagraphicsregisterflags",4]],["bool",15]]],[11,"eq","","",25,[[["cudagraphicsmapflags",4]],["bool",15]]],[11,"eq","","",26,[[["cudagraphicscubeface",4]],["bool",15]]],[11,"eq","","",27,[[["cudakernelnodeattrid",4]],["bool",15]]],[11,"eq","","",29,[[["cudaresourcetype",4]],["bool",15]]],[11,"eq","","",30,[[["cudaresourceviewformat",4]],["bool",15]]],[11,"eq","","",40,[[["cudafuncattribute",4]],["bool",15]]],[11,"eq","","",41,[[["cudafunccache",4]],["bool",15]]],[11,"eq","","",42,[[["cudasharedmemconfig",4]],["bool",15]]],[11,"eq","","",43,[[["cudasharedcarveout",4]],["bool",15]]],[11,"eq","","",44,[[["cudacomputemode",4]],["bool",15]]],[11,"eq","","",45,[[["cudalimit",4]],["bool",15]]],[11,"eq","","",46,[[["cudamemoryadvise",4]],["bool",15]]],[11,"eq","","",47,[[["cudamemrangeattribute",4]],["bool",15]]],[11,"eq","","",48,[[["cudaoutputmode",4]],["bool",15]]],[11,"eq","","",49,[[["cudadeviceattr",4]],["bool",15]]],[11,"eq","","",50,[[["cudamempoolattr",4]],["bool",15]]],[11,"eq","","",51,[[["cudamemlocationtype",4]],["bool",15]]],[11,"eq","","",53,[[["cudamemaccessflags",4]],["bool",15]]],[11,"eq","","",55,[[["cudamemallocationtype",4]],["bool",15]]],[11,"eq","","",56,[[["cudamemallocationhandletype",4]],["bool",15]]],[11,"eq","","",59,[[["cudadevicep2pattr",4]],["bool",15]]],[11,"eq","","",64,[[["cudaexternalmemoryhandletype",4]],["bool",15]]],[11,"eq","","",70,[[["cudaexternalsemaphorehandletype",4]],["bool",15]]],[11,"eq","","",84,[[["cudacgscope",4]],["bool",15]]],[11,"eq","","",89,[[["cudagraphnodetype",4]],["bool",15]]],[11,"eq","","",90,[[["cudagraphexecupdateresult",4]],["bool",15]]],[11,"eq","","",91,[[["cudadatatype_t",4]],["bool",15]]],[11,"eq","","",92,[[["cublasstatus_t",4]],["bool",15]]],[11,"eq","","",93,[[["cublasfillmode_t",4]],["bool",15]]],[11,"eq","","",94,[[["cublasdiagtype_t",4]],["bool",15]]],[11,"eq","","",95,[[["cublassidemode_t",4]],["bool",15]]],[11,"eq","","",96,[[["cublasoperation_t",4]],["bool",15]]],[11,"eq","","",97,[[["cublaspointermode_t",4]],["bool",15]]],[11,"eq","","",98,[[["cublasatomicsmode_t",4]],["bool",15]]],[11,"eq","","",99,[[["cublasgemmalgo_t",4]],["bool",15]]],[11,"eq","","",100,[[["cublasmath_t",4]],["bool",15]]],[11,"eq","","",101,[[["cublascomputetype_t",4]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",64,[[]]],[11,"hash","","",70,[[]]],[11,"hash","","",84,[[]]],[11,"hash","","",89,[[]]],[11,"hash","","",90,[[]]],[11,"hash","","",91,[[]]],[11,"hash","","",92,[[]]],[11,"hash","","",93,[[]]],[11,"hash","","",94,[[]]],[11,"hash","","",95,[[]]],[11,"hash","","",96,[[]]],[11,"hash","","",97,[[]]],[11,"hash","","",98,[[]]],[11,"hash","","",99,[[]]],[11,"hash","","",100,[[]]],[11,"hash","","",101,[[]]],[18,"CUBLAS_OP_HERMITAN","","",96,null],[18,"CUBLAS_GEMM_DEFAULT","","",99,null],[18,"CUBLAS_GEMM_DFALT_TENSOR_OP","","",99,null]],"p":[[3,"float2"],[3,"double2"],[3,"dim3"],[4,"cudaError"],[4,"cudaChannelFormatKind"],[3,"cudaChannelFormatDesc"],[3,"cudaArraySparseProperties"],[3,"cudaArraySparseProperties__bindgen_ty_1"],[4,"cudaMemoryType"],[4,"cudaMemcpyKind"],[3,"cudaPitchedPtr"],[3,"cudaExtent"],[3,"cudaPos"],[3,"cudaMemcpy3DParms"],[3,"cudaMemcpy3DPeerParms"],[3,"cudaMemsetParams"],[4,"cudaAccessProperty"],[3,"cudaAccessPolicyWindow"],[3,"cudaHostNodeParams"],[4,"cudaStreamCaptureStatus"],[4,"cudaStreamCaptureMode"],[4,"cudaSynchronizationPolicy"],[4,"cudaStreamAttrID"],[19,"cudaStreamAttrValue"],[4,"cudaGraphicsRegisterFlags"],[4,"cudaGraphicsMapFlags"],[4,"cudaGraphicsCubeFace"],[4,"cudaKernelNodeAttrID"],[19,"cudaKernelNodeAttrValue"],[4,"cudaResourceType"],[4,"cudaResourceViewFormat"],[3,"cudaResourceDesc"],[19,"cudaResourceDesc__bindgen_ty_1"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4"],[3,"cudaResourceViewDesc"],[3,"cudaPointerAttributes"],[3,"cudaFuncAttributes"],[4,"cudaFuncAttribute"],[4,"cudaFuncCache"],[4,"cudaSharedMemConfig"],[4,"cudaSharedCarveout"],[4,"cudaComputeMode"],[4,"cudaLimit"],[4,"cudaMemoryAdvise"],[4,"cudaMemRangeAttribute"],[4,"cudaOutputMode"],[4,"cudaDeviceAttr"],[4,"cudaMemPoolAttr"],[4,"cudaMemLocationType"],[3,"cudaMemLocation"],[4,"cudaMemAccessFlags"],[3,"cudaMemAccessDesc"],[4,"cudaMemAllocationType"],[4,"cudaMemAllocationHandleType"],[3,"cudaMemPoolProps"],[3,"cudaMemPoolPtrExportData"],[4,"cudaDeviceP2PAttr"],[3,"CUuuid_st"],[3,"cudaDeviceProp"],[3,"cudaIpcEventHandle_st"],[3,"cudaIpcMemHandle_st"],[4,"cudaExternalMemoryHandleType"],[3,"cudaExternalMemoryHandleDesc"],[19,"cudaExternalMemoryHandleDesc__bindgen_ty_1"],[3,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalMemoryBufferDesc"],[3,"cudaExternalMemoryMipmappedArrayDesc"],[4,"cudaExternalSemaphoreHandleType"],[3,"cudaExternalSemaphoreHandleDesc"],[19,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1"],[3,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1"],[19,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3"],[3,"cudaExternalSemaphoreWaitParams"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1"],[19,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3"],[4,"cudaCGScope"],[3,"cudaLaunchParams"],[3,"cudaKernelNodeParams"],[3,"cudaExternalSemaphoreSignalNodeParams"],[3,"cudaExternalSemaphoreWaitNodeParams"],[4,"cudaGraphNodeType"],[4,"cudaGraphExecUpdateResult"],[4,"cudaDataType_t"],[4,"cublasStatus_t"],[4,"cublasFillMode_t"],[4,"cublasDiagType_t"],[4,"cublasSideMode_t"],[4,"cublasOperation_t"],[4,"cublasPointerMode_t"],[4,"cublasAtomicsMode_t"],[4,"cublasGemmAlgo_t"],[4,"cublasMath_t"],[4,"cublasComputeType_t"],[3,"cudaArray"],[3,"cudaMipmappedArray"],[3,"cudaGraphicsResource"],[3,"CUstream_st"],[3,"CUevent_st"],[3,"CUexternalMemory_st"],[3,"CUexternalSemaphore_st"],[3,"CUgraph_st"],[3,"CUgraphNode_st"],[3,"CUfunc_st"],[3,"CUmemPoolHandle_st"],[3,"CUgraphExec_st"],[3,"cublasContext"]]},\
"rcudnn":{"doc":"Provides a safe and convenient wrapper for the CUDA cuDNN …","i":[[0,"cuda","rcudnn","Defines Cuda Device Memory.",null,null],[3,"CudaDeviceMemory","rcudnn::cuda","A pointer to memory existing on a nvidia GPU",null,null],[11,"new","","Saw fun X Y Z",0,[[["usize",15]],[["cudadevicememory",3],["result",4],["error",4]]]],[11,"from_c","","Initializes a new CUDA Device Memory from its C type.",0,[[["usize",15]],["cudadevicememory",3]]],[11,"id_c","","Returns the CUDA Device Memory ptr as its C type.",0,[[]]],[11,"size","","Returns the size of the CUDA Device Memory chunk.",0,[[],["usize",15]]],[0,"utils","rcudnn","Describes utility functionality for CUDA cuDNN.",null,null],[4,"DataType","rcudnn::utils","Defines the available data types for the CUDA cuDNN data …",null,null],[13,"Float","","F32",1,null],[13,"Double","","F64",1,null],[13,"Half","","F16 (no native Rust support yet)",1,null],[8,"DataTypeInfo","","CuDnn type info for generic use.",null,null],[10,"cudnn_data_type","","Mostly internal.",2,[[],["datatype",4]]],[3,"ConvolutionConfig","","Provides a convenient interface to access cuDNN\'s …",null,null],[11,"new","","Returns a new ConvolutionConfig",3,[[["usize",15],["filterdescriptor",3],["convolutiondescriptor",3],["cudnnconvolutionbwddataalgo_t",4],["cudnnconvolutionbwdfilteralgo_t",4],["cudnnconvolutionfwdalgo_t",4]],["convolutionconfig",3]]],[11,"largest_workspace_size","","Returns the largest workspace size out of the three.",3,[[],["usize",15]]],[11,"forward_algo","","Returns <code>forward_algo</code>.",3,[[],["cudnnconvolutionfwdalgo_t",4]]],[11,"forward_workspace_size","","Returns <code>forward_workspace_size</code>.",3,[[],["usize",15]]],[11,"backward_filter_algo","","Returns <code>backward_filter_algo</code>.",3,[[],["cudnnconvolutionbwdfilteralgo_t",4]]],[11,"backward_filter_workspace_size","","Returns <code>backward_filter_workspace_size</code>.",3,[[],["usize",15]]],[11,"backward_data_algo","","Returns <code>backward_data_algo</code>.",3,[[],["cudnnconvolutionbwddataalgo_t",4]]],[11,"backward_data_workspace_size","","Returns <code>backward_data_workspace_size</code>.",3,[[],["usize",15]]],[11,"conv_desc","","Returns <code>conv_desc</code>.",3,[[],["convolutiondescriptor",3]]],[11,"filter_desc","","Returns <code>filter_desc</code>.",3,[[],["filterdescriptor",3]]],[3,"NormalizationConfig","","Provides a convenient interface to access cuDNN\'s …",null,null],[11,"new","","Returns a new LRN Config.",4,[[["normalizationdescriptor",3]],["normalizationconfig",3]]],[11,"lrn_desc","","Returns <code>lrn_desc</code>.",4,[[],["normalizationdescriptor",3]]],[3,"PoolingConfig","","Provides a convenient interface to access cuDNN\'s Pooling …",null,null],[11,"new","","Returns a new PoolingConfig.",5,[[["poolingdescriptor",3]],["poolingconfig",3]]],[11,"pooling_avg_desc","","Returns <code>pooling_avg_desc</code>.",5,[[],["poolingdescriptor",3]]],[11,"pooling_max_desc","","Returns <code>pooling_max_desc</code>.",5,[[],["poolingdescriptor",3]]],[3,"ActivationConfig","","Provides a convenient interface to access cuDNN\'s …",null,null],[11,"new","","Returns a new ActivationConfig.",6,[[["activationdescriptor",3]],["activationconfig",3]]],[11,"activation_sigmoid_desc","","Returns <code>activation_sigmoid_desc</code>.",6,[[],["activationdescriptor",3]]],[11,"activation_relu_desc","","Returns <code>activation_relu_desc</code>.",6,[[],["activationdescriptor",3]]],[11,"activation_clipped_relu_desc","","Returns <code>activation_clipped_relu_desc</code>.",6,[[],["activationdescriptor",3]]],[11,"activation_tanh_desc","","Returns <code>activation_tanh_desc</code>.",6,[[],["activationdescriptor",3]]],[3,"DropoutConfig","","Provides a convenient interface to access cuDNN\'s Dropout …",null,null],[11,"new","","Returns a new DropoutConfig.",7,[[["cudadevicememory",3],["dropoutdescriptor",3]],["dropoutconfig",3]]],[11,"dropout_desc","","Returns <code>dropout_desc</code>.",7,[[],["dropoutdescriptor",3]]],[11,"take_mem","","Take the Reserve Memory of the DropoutDescriptor",7,[[],["cudadevicememory",3]]],[11,"reserved_space","","Returns the reserved space.",7,[[],["cudadevicememory",3]]],[3,"RnnConfig","","Provides an interfaces for CUDNN\'s Rnn Descriptor",null,null],[12,"hidden_size","","Size of Hidden Layer",8,null],[12,"num_layers","","Number of Hidden Layers",8,null],[12,"sequence_length","","Length of Sequence",8,null],[11,"new","","Initialise a RNN Config",8,[[["usize",15],["rnndescriptor",3],["cudnnrnnmode_t",4],["cudnndirectionmode_t",4],["cudnnrnninputmode_t",4],["cudnndropoutdescriptor_t",6],["cudadevicememory",3],["i32",15],["cudnnrnnalgo_t",4],["cudnndatatype_t",4]],["rnnconfig",3]]],[11,"rnn_workspace_size","","Workspace Size required for RNN Operations",8,[[],["usize",15]]],[11,"largest_workspace_size","","Largest Workspace Size for RNN",8,[[],["usize",15]]],[11,"training_reserve_size","","Training Reserve Size for RNN",8,[[],["usize",15]]],[11,"training_reserve","","Training Reserve Space on GPU for RNN",8,[[],["cudadevicememory",3]]],[11,"rnn_desc","","Accessor function for Rnn Descriptor",8,[[],["rnndescriptor",3]]],[11,"sequence_length","","Accessor function for Sequence Length",8,[[],["i32",15]]],[3,"ScalParams","","Provides a convenient interface for cuDNN\'s scaling …",null,null],[12,"a","","Alpha",9,null],[12,"b","","Beta",9,null],[3,"ActivationDescriptor","rcudnn","Describes a ActivationDescriptor.",null,null],[3,"ConvolutionDescriptor","","Describes a Convolution Descriptor.",null,null],[3,"Cudnn","","Provides a the high-level interface to CUDA\'s cuDNN.",null,null],[3,"DropoutDescriptor","","Describes a DropoutDescriptor.",null,null],[4,"Error","","Defines CUDA\'s cuDNN errors.",null,null],[13,"NotInitialized","","Failure with CUDA cuDNN initialization.",10,null],[13,"AllocFailed","","Failure with allocation.",10,null],[13,"BadParam","","Failure with a provided parameter.",10,null],[13,"InternalError","","Failure with cuDNN.",10,null],[13,"InvalidValue","","Failure with provided value.",10,null],[13,"ArchMismatch","","Failure with the hardware architecture.",10,null],[13,"MappingError","","Failure with memory access or internal error/bug.",10,null],[13,"ExecutionFailed","","Failure with Kernel execution.",10,null],[13,"NotSupported","","Failure with an unsupported request.",10,null],[13,"LicenseError","","Failure CUDA License.",10,null],[13,"Unknown","","Failure",10,null],[3,"FilterDescriptor","","Describes a Filter Descriptor.",null,null],[3,"NormalizationDescriptor","","Describes a LRN Descriptor.",null,null],[3,"PoolingDescriptor","","Describes a Pooling Descriptor.",null,null],[3,"RnnDescriptor","","Describes a Recurrent Descriptor.",null,null],[3,"TensorDescriptor","","Describes a TensorDescriptor.",null,null],[17,"CUDNN_MAJOR","","",null,null],[17,"CUDNN_MINOR","","",null,null],[17,"CUDNN_PATCHLEVEL","","",null,null],[17,"CUDNN_VERSION","","",null,null],[17,"CUDNN_OPS_INFER_MAJOR","","",null,null],[17,"CUDNN_OPS_INFER_MINOR","","",null,null],[17,"CUDNN_OPS_INFER_PATCH","","",null,null],[17,"CUDNN_DIM_MAX","","",null,null],[17,"CUDNN_LRN_MIN_N","","",null,null],[17,"CUDNN_LRN_MAX_N","","",null,null],[17,"CUDNN_LRN_MIN_K","","",null,null],[17,"CUDNN_LRN_MIN_BETA","","",null,null],[17,"CUDNN_BN_MIN_EPSILON","","",null,null],[17,"CUDNN_OPS_TRAIN_MAJOR","","",null,null],[17,"CUDNN_OPS_TRAIN_MINOR","","",null,null],[17,"CUDNN_OPS_TRAIN_PATCH","","",null,null],[17,"CUDNN_ADV_INFER_MAJOR","","",null,null],[17,"CUDNN_ADV_INFER_MINOR","","",null,null],[17,"CUDNN_ADV_INFER_PATCH","","",null,null],[17,"CUDNN_RNN_PADDED_IO_DISABLED","","",null,null],[17,"CUDNN_RNN_PADDED_IO_ENABLED","","",null,null],[17,"CUDNN_SEQDATA_DIM_COUNT","","",null,null],[17,"CUDNN_ATTN_QUERYMAP_ALL_TO_ONE","","",null,null],[17,"CUDNN_ATTN_QUERYMAP_ONE_TO_ONE","","",null,null],[17,"CUDNN_ATTN_DISABLE_PROJ_BIASES","","",null,null],[17,"CUDNN_ATTN_ENABLE_PROJ_BIASES","","",null,null],[17,"CUDNN_ATTN_WKIND_COUNT","","",null,null],[17,"CUDNN_ADV_TRAIN_MAJOR","","",null,null],[17,"CUDNN_ADV_TRAIN_MINOR","","",null,null],[17,"CUDNN_ADV_TRAIN_PATCH","","",null,null],[17,"CUDNN_CNN_INFER_MAJOR","","",null,null],[17,"CUDNN_CNN_INFER_MINOR","","",null,null],[17,"CUDNN_CNN_INFER_PATCH","","",null,null],[17,"CUDNN_CNN_TRAIN_MAJOR","","",null,null],[17,"CUDNN_CNN_TRAIN_MINOR","","",null,null],[17,"CUDNN_CNN_TRAIN_PATCH","","",null,null],[6,"cudaArray_t","","CUDA array",null,null],[6,"cudaArray_const_t","","CUDA array (as source copy argument)",null,null],[6,"cudaMipmappedArray_t","","CUDA mipmapped array",null,null],[6,"cudaMipmappedArray_const_t","","CUDA mipmapped array (as source argument)",null,null],[6,"cudaHostFn_t","","CUDA host function \\\\param userData Argument value passed …",null,null],[6,"CUuuid","","",null,null],[6,"cudaUUID_t","","",null,null],[6,"cudaIpcEventHandle_t","","CUDA IPC event handle",null,null],[6,"cudaIpcMemHandle_t","","CUDA IPC memory handle",null,null],[6,"cudaStream_t","","CUDA stream",null,null],[6,"cudaEvent_t","","CUDA event types",null,null],[6,"cudaGraphicsResource_t","","CUDA graphics resource types",null,null],[6,"cudaExternalMemory_t","","CUDA external memory",null,null],[6,"cudaExternalSemaphore_t","","CUDA external semaphore",null,null],[6,"cudaGraph_t","","CUDA graph",null,null],[6,"cudaGraphNode_t","","CUDA graph node.",null,null],[6,"cudaFunction_t","","CUDA function",null,null],[6,"cudaMemPool_t","","CUDA memory pool",null,null],[6,"cudaGraphExec_t","","CUDA executable (launchable) graph",null,null],[6,"cudaSurfaceObject_t","","An opaque value that represents a CUDA Surface object",null,null],[6,"cudaTextureObject_t","","An opaque value that represents a CUDA texture object",null,null],[17,"libraryPropertyType_t_MAJOR_VERSION","","",null,null],[17,"libraryPropertyType_t_MINOR_VERSION","","",null,null],[17,"libraryPropertyType_t_PATCH_LEVEL","","",null,null],[6,"libraryPropertyType_t","","",null,null],[6,"libraryPropertyType","","",null,null],[5,"cudaDeviceReset","","\\\\brief Destroy all allocations and reset all state on the …",null,[[],["cudaerror",4]]],[5,"cudaDeviceSynchronize","","\\\\brief Wait for compute device to finish",null,[[],["cudaerror",4]]],[5,"cudaDeviceSetLimit","","\\\\brief Set resource limits",null,[[["cudalimit",4],["usize",15]],["cudaerror",4]]],[5,"cudaDeviceGetLimit","","\\\\brief Returns resource limits",null,[[["cudalimit",4]],["cudaerror",4]]],[5,"cudaDeviceGetTexture1DLinearMaxWidth","","",null,[[["i32",15]],["cudaerror",4]]],[5,"cudaDeviceGetCacheConfig","","\\\\brief Returns the preferred cache configuration for the …",null,[[],["cudaerror",4]]],[5,"cudaDeviceGetStreamPriorityRange","","\\\\brief Returns numerical values that correspond to the …",null,[[],["cudaerror",4]]],[5,"cudaDeviceSetCacheConfig","","\\\\brief Sets the preferred cache configuration for the …",null,[[["cudafunccache",4]],["cudaerror",4]]],[5,"cudaDeviceGetSharedMemConfig","","\\\\brief Returns the shared memory configuration for the …",null,[[],["cudaerror",4]]],[5,"cudaDeviceSetSharedMemConfig","","\\\\brief Sets the shared memory configuration for the …",null,[[["cudasharedmemconfig",4]],["cudaerror",4]]],[5,"cudaDeviceGetByPCIBusId","","\\\\brief Returns a handle to a compute device",null,[[],["cudaerror",4]]],[5,"cudaDeviceGetPCIBusId","","\\\\brief Returns a PCI Bus Id string for the device",null,[[["i32",15]],["cudaerror",4]]],[5,"cudaIpcGetEventHandle","","\\\\brief Gets an interprocess handle for a previously …",null,[[],["cudaerror",4]]],[5,"cudaIpcOpenEventHandle","","\\\\brief Opens an interprocess event handle for use in the …",null,[[["cudaipceventhandle_st",3]],["cudaerror",4]]],[5,"cudaIpcGetMemHandle","","\\\\brief Gets an interprocess memory handle for an existing …",null,[[],["cudaerror",4]]],[5,"cudaIpcOpenMemHandle","","\\\\brief Opens an interprocess memory handle exported from …",null,[[["cudaipcmemhandle_st",3],["u32",15]],["cudaerror",4]]],[5,"cudaIpcCloseMemHandle","","\\\\brief Attempts to close memory mapped with …",null,[[],["cudaerror",4]]],[5,"cudaThreadExit","","\\\\brief Exit and clean up from CUDA launches",null,[[],["cudaerror",4]]],[5,"cudaThreadSynchronize","","\\\\brief Wait for compute device to finish",null,[[],["cudaerror",4]]],[5,"cudaThreadSetLimit","","\\\\brief Set resource limits",null,[[["cudalimit",4],["usize",15]],["cudaerror",4]]],[5,"cudaThreadGetLimit","","\\\\brief Returns resource limits",null,[[["cudalimit",4]],["cudaerror",4]]],[5,"cudaThreadGetCacheConfig","","\\\\brief Returns the preferred cache configuration for the …",null,[[],["cudaerror",4]]],[5,"cudaThreadSetCacheConfig","","\\\\brief Sets the preferred cache configuration for the …",null,[[["cudafunccache",4]],["cudaerror",4]]],[5,"cudaGetLastError","","\\\\brief Returns the last error from a runtime call",null,[[],["cudaerror",4]]],[5,"cudaPeekAtLastError","","\\\\brief Returns the last error from a runtime call",null,[[],["cudaerror",4]]],[5,"cudaGetErrorName","","\\\\brief Returns the string representation of an error code …",null,[[["cudaerror",4]]]],[5,"cudaGetErrorString","","\\\\brief Returns the description string for an error code",null,[[["cudaerror",4]]]],[5,"cudaGetDeviceCount","","\\\\brief Returns the number of compute-capable devices",null,[[],["cudaerror",4]]],[5,"cudaGetDeviceProperties","","\\\\brief Returns information about the compute-device",null,[[["i32",15]],["cudaerror",4]]],[5,"cudaDeviceGetAttribute","","\\\\brief Returns information about the device",null,[[["i32",15],["cudadeviceattr",4]],["cudaerror",4]]],[5,"cudaDeviceGetDefaultMemPool","","\\\\brief Returns the default mempool of a device",null,[[["i32",15]],["cudaerror",4]]],[5,"cudaDeviceSetMemPool","","\\\\brief Sets the current memory pool of a device",null,[[["i32",15]],["cudaerror",4]]],[5,"cudaDeviceGetMemPool","","\\\\brief Gets the current mempool for a device",null,[[["i32",15]],["cudaerror",4]]],[5,"cudaDeviceGetNvSciSyncAttributes","","\\\\brief Return NvSciSync attributes that this device can …",null,[[["i32",15]],["cudaerror",4]]],[5,"cudaDeviceGetP2PAttribute","","\\\\brief Queries attributes of the link between two devices.",null,[[["i32",15],["cudadevicep2pattr",4]],["cudaerror",4]]],[5,"cudaChooseDevice","","\\\\brief Select compute-device which best matches criteria",null,[[],["cudaerror",4]]],[5,"cudaSetDevice","","\\\\brief Set device to be used for GPU executions",null,[[["i32",15]],["cudaerror",4]]],[5,"cudaGetDevice","","\\\\brief Returns which device is currently being used",null,[[],["cudaerror",4]]],[5,"cudaSetValidDevices","","\\\\brief Set a list of devices that can be used for CUDA",null,[[["i32",15]],["cudaerror",4]]],[5,"cudaSetDeviceFlags","","\\\\brief Sets flags to be used for device executions",null,[[["u32",15]],["cudaerror",4]]],[5,"cudaGetDeviceFlags","","\\\\brief Gets the flags for the current device",null,[[],["cudaerror",4]]],[5,"cudaStreamCreate","","\\\\brief Create an asynchronous stream",null,[[],["cudaerror",4]]],[5,"cudaStreamCreateWithFlags","","\\\\brief Create an asynchronous stream",null,[[["u32",15]],["cudaerror",4]]],[5,"cudaStreamCreateWithPriority","","\\\\brief Create an asynchronous stream with the specified …",null,[[["u32",15],["i32",15]],["cudaerror",4]]],[5,"cudaStreamGetPriority","","\\\\brief Query the priority of a stream",null,[[],["cudaerror",4]]],[5,"cudaStreamGetFlags","","\\\\brief Query the flags of a stream",null,[[],["cudaerror",4]]],[5,"cudaCtxResetPersistingL2Cache","","\\\\brief Resets all persisting lines in cache to normal …",null,[[],["cudaerror",4]]],[5,"cudaStreamCopyAttributes","","\\\\brief Copies attributes from source stream to …",null,[[],["cudaerror",4]]],[5,"cudaStreamGetAttribute","","\\\\brief Queries stream attribute.",null,[[["cudastreamattrid",4]],["cudaerror",4]]],[5,"cudaStreamSetAttribute","","\\\\brief Sets stream attribute.",null,[[["cudastreamattrid",4]],["cudaerror",4]]],[5,"cudaStreamDestroy","","\\\\brief Destroys and cleans up an asynchronous stream",null,[[],["cudaerror",4]]],[5,"cudaStreamWaitEvent","","\\\\brief Make a compute stream wait on an event",null,[[["u32",15]],["cudaerror",4]]],[6,"cudaStreamCallback_t","","Type of stream callback functions. \\\\param stream The …",null,null],[5,"cudaStreamAddCallback","","\\\\brief Add a callback to a compute stream",null,[[["option",4],["u32",15]],["cudaerror",4]]],[5,"cudaStreamSynchronize","","\\\\brief Waits for stream tasks to complete",null,[[],["cudaerror",4]]],[5,"cudaStreamQuery","","\\\\brief Queries an asynchronous stream for completion …",null,[[],["cudaerror",4]]],[5,"cudaStreamAttachMemAsync","","",null,[[["usize",15],["u32",15]],["cudaerror",4]]],[5,"cudaStreamBeginCapture","","\\\\brief Begins graph capture on a stream",null,[[["cudastreamcapturemode",4]],["cudaerror",4]]],[5,"cudaThreadExchangeStreamCaptureMode","","\\\\brief Swaps the stream capture interaction mode for a …",null,[[],["cudaerror",4]]],[5,"cudaStreamEndCapture","","\\\\brief Ends capture on a stream, returning the captured …",null,[[],["cudaerror",4]]],[5,"cudaStreamIsCapturing","","\\\\brief Returns a stream\'s capture status",null,[[],["cudaerror",4]]],[5,"cudaStreamGetCaptureInfo","","\\\\brief Query capture status of a stream",null,[[],["cudaerror",4]]],[5,"cudaEventCreate","","\\\\brief Creates an event object",null,[[],["cudaerror",4]]],[5,"cudaEventCreateWithFlags","","\\\\brief Creates an event object with the specified flags",null,[[["u32",15]],["cudaerror",4]]],[5,"cudaEventRecord","","\\\\brief Records an event",null,[[],["cudaerror",4]]],[5,"cudaEventRecordWithFlags","","",null,[[["u32",15]],["cudaerror",4]]],[5,"cudaEventQuery","","\\\\brief Queries an event\'s status",null,[[],["cudaerror",4]]],[5,"cudaEventSynchronize","","\\\\brief Waits for an event to complete",null,[[],["cudaerror",4]]],[5,"cudaEventDestroy","","\\\\brief Destroys an event object",null,[[],["cudaerror",4]]],[5,"cudaEventElapsedTime","","\\\\brief Computes the elapsed time between events",null,[[],["cudaerror",4]]],[5,"cudaImportExternalMemory","","\\\\brief Imports an external memory object",null,[[],["cudaerror",4]]],[5,"cudaExternalMemoryGetMappedBuffer","","\\\\brief Maps a buffer onto an imported memory object",null,[[],["cudaerror",4]]],[5,"cudaExternalMemoryGetMappedMipmappedArray","","\\\\brief Maps a CUDA mipmapped array onto an external …",null,[[],["cudaerror",4]]],[5,"cudaDestroyExternalMemory","","\\\\brief Destroys an external memory object.",null,[[],["cudaerror",4]]],[5,"cudaImportExternalSemaphore","","\\\\brief Imports an external semaphore",null,[[],["cudaerror",4]]],[5,"cudaSignalExternalSemaphoresAsync_v2","","",null,[[["u32",15]],["cudaerror",4]]],[5,"cudaWaitExternalSemaphoresAsync_v2","","",null,[[["u32",15]],["cudaerror",4]]],[5,"cudaDestroyExternalSemaphore","","\\\\brief Destroys an external semaphore",null,[[],["cudaerror",4]]],[5,"cudaLaunchKernel","","\\\\brief Launches a device function",null,[[["usize",15],["dim3",3]],["cudaerror",4]]],[5,"cudaLaunchCooperativeKernel","","\\\\brief Launches a device function where thread blocks can …",null,[[["usize",15],["dim3",3]],["cudaerror",4]]],[5,"cudaLaunchCooperativeKernelMultiDevice","","\\\\brief Launches device functions on multiple devices …",null,[[["u32",15]],["cudaerror",4]]],[5,"cudaFuncSetCacheConfig","","\\\\brief Sets the preferred cache configuration for a …",null,[[["cudafunccache",4]],["cudaerror",4]]],[5,"cudaFuncSetSharedMemConfig","","\\\\brief Sets the shared memory configuration for a device …",null,[[["cudasharedmemconfig",4]],["cudaerror",4]]],[5,"cudaFuncGetAttributes","","\\\\brief Find out attributes for a given function",null,[[],["cudaerror",4]]],[5,"cudaFuncSetAttribute","","\\\\brief Set attributes for a given function",null,[[["cudafuncattribute",4],["i32",15]],["cudaerror",4]]],[5,"cudaSetDoubleForDevice","","\\\\brief Converts a double argument to be executed on a …",null,[[],["cudaerror",4]]],[5,"cudaSetDoubleForHost","","\\\\brief Converts a double argument after execution on a …",null,[[],["cudaerror",4]]],[5,"cudaLaunchHostFunc","","\\\\brief Enqueues a host function call in a stream",null,[[["option",4]],["cudaerror",4]]],[5,"cudaOccupancyMaxActiveBlocksPerMultiprocessor","","\\\\brief Returns occupancy for a device function",null,[[["usize",15],["i32",15]],["cudaerror",4]]],[5,"cudaOccupancyAvailableDynamicSMemPerBlock","","\\\\brief Returns dynamic shared memory available per block …",null,[[["i32",15]],["cudaerror",4]]],[5,"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","","\\\\brief Returns occupancy for a device function with the …",null,[[["usize",15],["u32",15],["i32",15]],["cudaerror",4]]],[5,"cudaMallocManaged","","",null,[[["usize",15],["u32",15]],["cudaerror",4]]],[5,"cudaMalloc","","\\\\brief Allocate memory on the device",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaMallocHost","","\\\\brief Allocates page-locked memory on the host",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaMallocPitch","","\\\\brief Allocates pitched memory on the device",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaMallocArray","","\\\\brief Allocate an array on the device",null,[[["usize",15],["u32",15]],["cudaerror",4]]],[5,"cudaFree","","\\\\brief Frees memory on the device",null,[[],["cudaerror",4]]],[5,"cudaFreeHost","","\\\\brief Frees page-locked memory",null,[[],["cudaerror",4]]],[5,"cudaFreeArray","","\\\\brief Frees an array on the device",null,[[],["cudaerror",4]]],[5,"cudaFreeMipmappedArray","","\\\\brief Frees a mipmapped array on the device",null,[[],["cudaerror",4]]],[5,"cudaHostAlloc","","\\\\brief Allocates page-locked memory on the host",null,[[["usize",15],["u32",15]],["cudaerror",4]]],[5,"cudaHostRegister","","\\\\brief Registers an existing host memory range for use by …",null,[[["usize",15],["u32",15]],["cudaerror",4]]],[5,"cudaHostUnregister","","\\\\brief Unregisters a memory range that was registered …",null,[[],["cudaerror",4]]],[5,"cudaHostGetDevicePointer","","\\\\brief Passes back device pointer of mapped host memory …",null,[[["u32",15]],["cudaerror",4]]],[5,"cudaHostGetFlags","","\\\\brief Passes back flags used to allocate pinned host …",null,[[],["cudaerror",4]]],[5,"cudaMalloc3D","","\\\\brief Allocates logical 1D, 2D, or 3D memory objects on …",null,[[["cudaextent",3]],["cudaerror",4]]],[5,"cudaMalloc3DArray","","\\\\brief Allocate an array on the device",null,[[["u32",15],["cudaextent",3]],["cudaerror",4]]],[5,"cudaMallocMipmappedArray","","\\\\brief Allocate a mipmapped array on the device",null,[[["u32",15],["cudaextent",3]],["cudaerror",4]]],[5,"cudaGetMipmappedArrayLevel","","\\\\brief Gets a mipmap level of a CUDA mipmapped array",null,[[["u32",15]],["cudaerror",4]]],[5,"cudaMemcpy3D","","\\\\brief Copies data between 3D objects",null,[[],["cudaerror",4]]],[5,"cudaMemcpy3DPeer","","\\\\brief Copies memory between devices",null,[[],["cudaerror",4]]],[5,"cudaMemcpy3DAsync","","\\\\brief Copies data between 3D objects",null,[[],["cudaerror",4]]],[5,"cudaMemcpy3DPeerAsync","","\\\\brief Copies memory between devices asynchronously.",null,[[],["cudaerror",4]]],[5,"cudaMemGetInfo","","\\\\brief Gets free and total device memory",null,[[],["cudaerror",4]]],[5,"cudaArrayGetInfo","","\\\\brief Gets info about the specified cudaArray",null,[[],["cudaerror",4]]],[5,"cudaArrayGetPlane","","\\\\brief Gets a CUDA array plane from a CUDA array",null,[[["u32",15]],["cudaerror",4]]],[5,"cudaArrayGetSparseProperties","","",null,[[],["cudaerror",4]]],[5,"cudaMipmappedArrayGetSparseProperties","","",null,[[],["cudaerror",4]]],[5,"cudaMemcpy","","\\\\brief Copies data between host and device",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyPeer","","\\\\brief Copies memory between two devices",null,[[["usize",15],["i32",15]],["cudaerror",4]]],[5,"cudaMemcpy2D","","\\\\brief Copies data between host and device",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpy2DToArray","","\\\\brief Copies data between host and device",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpy2DFromArray","","\\\\brief Copies data between host and device",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpy2DArrayToArray","","\\\\brief Copies data between host and device",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyToSymbol","","\\\\brief Copies data to the given symbol on the device",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyFromSymbol","","\\\\brief Copies data from the given symbol on the device",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyAsync","","\\\\brief Copies data between host and device",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyPeerAsync","","\\\\brief Copies memory between two devices asynchronously.",null,[[["usize",15],["i32",15]],["cudaerror",4]]],[5,"cudaMemcpy2DAsync","","\\\\brief Copies data between host and device",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpy2DToArrayAsync","","\\\\brief Copies data between host and device",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpy2DFromArrayAsync","","\\\\brief Copies data between host and device",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyToSymbolAsync","","\\\\brief Copies data to the given symbol on the device",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyFromSymbolAsync","","\\\\brief Copies data from the given symbol on the device",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemset","","\\\\brief Initializes or sets device memory to a value",null,[[["usize",15],["i32",15]],["cudaerror",4]]],[5,"cudaMemset2D","","\\\\brief Initializes or sets device memory to a value",null,[[["usize",15],["i32",15]],["cudaerror",4]]],[5,"cudaMemset3D","","\\\\brief Initializes or sets device memory to a value",null,[[["cudapitchedptr",3],["cudaextent",3],["i32",15]],["cudaerror",4]]],[5,"cudaMemsetAsync","","\\\\brief Initializes or sets device memory to a value",null,[[["usize",15],["i32",15]],["cudaerror",4]]],[5,"cudaMemset2DAsync","","\\\\brief Initializes or sets device memory to a value",null,[[["usize",15],["i32",15]],["cudaerror",4]]],[5,"cudaMemset3DAsync","","\\\\brief Initializes or sets device memory to a value",null,[[["cudapitchedptr",3],["cudaextent",3],["i32",15]],["cudaerror",4]]],[5,"cudaGetSymbolAddress","","\\\\brief Finds the address associated with a CUDA symbol",null,[[],["cudaerror",4]]],[5,"cudaGetSymbolSize","","\\\\brief Finds the size of the object associated with a …",null,[[],["cudaerror",4]]],[5,"cudaMemPrefetchAsync","","\\\\brief Prefetches memory to the specified destination …",null,[[["usize",15],["i32",15]],["cudaerror",4]]],[5,"cudaMemAdvise","","\\\\brief Advise about the usage of a given memory range",null,[[["usize",15],["cudamemoryadvise",4],["i32",15]],["cudaerror",4]]],[5,"cudaMemRangeGetAttribute","","\\\\brief Query an attribute of a given memory range",null,[[["usize",15],["cudamemrangeattribute",4]],["cudaerror",4]]],[5,"cudaMemRangeGetAttributes","","\\\\brief Query attributes of a given memory range.",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaMemcpyToArray","","\\\\brief Copies data between host and device",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyFromArray","","\\\\brief Copies data between host and device",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyArrayToArray","","\\\\brief Copies data between host and device",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyToArrayAsync","","\\\\brief Copies data between host and device",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyFromArrayAsync","","\\\\brief Copies data between host and device",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMallocAsync","","\\\\brief Allocates memory with stream ordered semantics",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaFreeAsync","","\\\\brief Frees memory with stream ordered semantics",null,[[],["cudaerror",4]]],[5,"cudaMemPoolTrimTo","","\\\\brief Tries to release memory back to the OS",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaMemPoolSetAttribute","","\\\\brief Sets attributes of a memory pool",null,[[["cudamempoolattr",4]],["cudaerror",4]]],[5,"cudaMemPoolGetAttribute","","\\\\brief Gets attributes of a memory pool",null,[[["cudamempoolattr",4]],["cudaerror",4]]],[5,"cudaMemPoolSetAccess","","\\\\brief Controls visibility of pools between devices",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaMemPoolGetAccess","","\\\\brief Returns the accessibility of a pool from a device",null,[[],["cudaerror",4]]],[5,"cudaMemPoolCreate","","\\\\brief Creates a memory pool",null,[[],["cudaerror",4]]],[5,"cudaMemPoolDestroy","","\\\\brief Destroys the specified memory pool",null,[[],["cudaerror",4]]],[5,"cudaMallocFromPoolAsync","","\\\\brief Allocates memory from a specified pool with stream …",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaMemPoolExportToShareableHandle","","\\\\brief Exports a memory pool to the requested handle type.",null,[[["u32",15],["cudamemallocationhandletype",4]],["cudaerror",4]]],[5,"cudaMemPoolImportFromShareableHandle","","\\\\brief imports a memory pool from a shared handle.",null,[[["u32",15],["cudamemallocationhandletype",4]],["cudaerror",4]]],[5,"cudaMemPoolExportPointer","","\\\\brief Export data to share a memory pool allocation …",null,[[],["cudaerror",4]]],[5,"cudaMemPoolImportPointer","","\\\\brief Import a memory pool allocation from another …",null,[[],["cudaerror",4]]],[5,"cudaPointerGetAttributes","","\\\\brief Returns attributes about a specified pointer",null,[[],["cudaerror",4]]],[5,"cudaDeviceCanAccessPeer","","\\\\brief Queries if a device may directly access a peer …",null,[[["i32",15]],["cudaerror",4]]],[5,"cudaDeviceEnablePeerAccess","","\\\\brief Enables direct access to memory allocations on a …",null,[[["u32",15],["i32",15]],["cudaerror",4]]],[5,"cudaDeviceDisablePeerAccess","","\\\\brief Disables direct access to memory allocations on a …",null,[[["i32",15]],["cudaerror",4]]],[5,"cudaGraphicsUnregisterResource","","\\\\brief Unregisters a graphics resource for access by CUDA",null,[[],["cudaerror",4]]],[5,"cudaGraphicsResourceSetMapFlags","","\\\\brief Set usage flags for mapping a graphics resource",null,[[["u32",15]],["cudaerror",4]]],[5,"cudaGraphicsMapResources","","\\\\brief Map graphics resources for access by CUDA",null,[[["i32",15]],["cudaerror",4]]],[5,"cudaGraphicsUnmapResources","","\\\\brief Unmap graphics resources.",null,[[["i32",15]],["cudaerror",4]]],[5,"cudaGraphicsResourceGetMappedPointer","","\\\\brief Get an device pointer through which to access a …",null,[[],["cudaerror",4]]],[5,"cudaGraphicsSubResourceGetMappedArray","","\\\\brief Get an array through which to access a subresource …",null,[[["u32",15]],["cudaerror",4]]],[5,"cudaGraphicsResourceGetMappedMipmappedArray","","\\\\brief Get a mipmapped array through which to access a …",null,[[],["cudaerror",4]]],[5,"cudaBindTexture","","\\\\brief Binds a memory area to a texture",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaBindTexture2D","","\\\\brief Binds a 2D memory area to a texture",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaBindTextureToArray","","\\\\brief Binds an array to a texture",null,[[],["cudaerror",4]]],[5,"cudaBindTextureToMipmappedArray","","\\\\brief Binds a mipmapped array to a texture",null,[[],["cudaerror",4]]],[5,"cudaUnbindTexture","","\\\\brief Unbinds a texture",null,[[],["cudaerror",4]]],[5,"cudaGetTextureAlignmentOffset","","\\\\brief Get the alignment offset of a texture",null,[[],["cudaerror",4]]],[5,"cudaGetTextureReference","","\\\\brief Get the texture reference associated with a symbol",null,[[],["cudaerror",4]]],[5,"cudaBindSurfaceToArray","","\\\\brief Binds an array to a surface",null,[[],["cudaerror",4]]],[5,"cudaGetSurfaceReference","","\\\\brief Get the surface reference associated with a symbol",null,[[],["cudaerror",4]]],[5,"cudaGetChannelDesc","","\\\\brief Get the channel descriptor of an array",null,[[],["cudaerror",4]]],[5,"cudaCreateChannelDesc","","\\\\brief Returns a channel descriptor using the specified …",null,[[["cudachannelformatkind",4],["i32",15]],["cudachannelformatdesc",3]]],[5,"cudaCreateTextureObject","","\\\\brief Creates a texture object",null,[[],["cudaerror",4]]],[5,"cudaDestroyTextureObject","","\\\\brief Destroys a texture object",null,[[["u64",15]],["cudaerror",4]]],[5,"cudaGetTextureObjectResourceDesc","","\\\\brief Returns a texture object\'s resource descriptor",null,[[["u64",15]],["cudaerror",4]]],[5,"cudaGetTextureObjectTextureDesc","","\\\\brief Returns a texture object\'s texture descriptor",null,[[["u64",15]],["cudaerror",4]]],[5,"cudaGetTextureObjectResourceViewDesc","","\\\\brief Returns a texture object\'s resource view descriptor",null,[[["u64",15]],["cudaerror",4]]],[5,"cudaCreateSurfaceObject","","\\\\brief Creates a surface object",null,[[],["cudaerror",4]]],[5,"cudaDestroySurfaceObject","","\\\\brief Destroys a surface object",null,[[["u64",15]],["cudaerror",4]]],[5,"cudaGetSurfaceObjectResourceDesc","","\\\\brief Returns a surface object\'s resource descriptor …",null,[[["u64",15]],["cudaerror",4]]],[5,"cudaDriverGetVersion","","\\\\brief Returns the latest version of CUDA supported by …",null,[[],["cudaerror",4]]],[5,"cudaRuntimeGetVersion","","\\\\brief Returns the CUDA Runtime version",null,[[],["cudaerror",4]]],[5,"cudaGraphCreate","","\\\\brief Creates a graph",null,[[["u32",15]],["cudaerror",4]]],[5,"cudaGraphAddKernelNode","","\\\\brief Creates a kernel execution node and adds it to a …",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaGraphKernelNodeGetParams","","\\\\brief Returns a kernel node\'s parameters",null,[[],["cudaerror",4]]],[5,"cudaGraphKernelNodeSetParams","","\\\\brief Sets a kernel node\'s parameters",null,[[],["cudaerror",4]]],[5,"cudaGraphKernelNodeCopyAttributes","","\\\\brief Copies attributes from source node to destination …",null,[[],["cudaerror",4]]],[5,"cudaGraphKernelNodeGetAttribute","","\\\\brief Queries node attribute.",null,[[["cudakernelnodeattrid",4]],["cudaerror",4]]],[5,"cudaGraphKernelNodeSetAttribute","","\\\\brief Sets node attribute.",null,[[["cudakernelnodeattrid",4]],["cudaerror",4]]],[5,"cudaGraphAddMemcpyNode","","\\\\brief Creates a memcpy node and adds it to a graph",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaGraphAddMemcpyNodeToSymbol","","",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaGraphAddMemcpyNodeFromSymbol","","",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaGraphAddMemcpyNode1D","","",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaGraphMemcpyNodeGetParams","","\\\\brief Returns a memcpy node\'s parameters",null,[[],["cudaerror",4]]],[5,"cudaGraphMemcpyNodeSetParams","","\\\\brief Sets a memcpy node\'s parameters",null,[[],["cudaerror",4]]],[5,"cudaGraphMemcpyNodeSetParamsToSymbol","","",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaGraphMemcpyNodeSetParamsFromSymbol","","",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaGraphMemcpyNodeSetParams1D","","",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaGraphAddMemsetNode","","\\\\brief Creates a memset node and adds it to a graph",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaGraphMemsetNodeGetParams","","\\\\brief Returns a memset node\'s parameters",null,[[],["cudaerror",4]]],[5,"cudaGraphMemsetNodeSetParams","","\\\\brief Sets a memset node\'s parameters",null,[[],["cudaerror",4]]],[5,"cudaGraphAddHostNode","","\\\\brief Creates a host execution node and adds it to a …",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaGraphHostNodeGetParams","","\\\\brief Returns a host node\'s parameters",null,[[],["cudaerror",4]]],[5,"cudaGraphHostNodeSetParams","","\\\\brief Sets a host node\'s parameters",null,[[],["cudaerror",4]]],[5,"cudaGraphAddChildGraphNode","","\\\\brief Creates a child graph node and adds it to a graph",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaGraphChildGraphNodeGetGraph","","\\\\brief Gets a handle to the embedded graph of a child …",null,[[],["cudaerror",4]]],[5,"cudaGraphAddEmptyNode","","\\\\brief Creates an empty node and adds it to a graph",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaGraphAddEventRecordNode","","",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaGraphEventRecordNodeGetEvent","","",null,[[],["cudaerror",4]]],[5,"cudaGraphEventRecordNodeSetEvent","","",null,[[],["cudaerror",4]]],[5,"cudaGraphAddEventWaitNode","","",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaGraphEventWaitNodeGetEvent","","",null,[[],["cudaerror",4]]],[5,"cudaGraphEventWaitNodeSetEvent","","",null,[[],["cudaerror",4]]],[5,"cudaGraphAddExternalSemaphoresSignalNode","","",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaGraphExternalSemaphoresSignalNodeGetParams","","",null,[[],["cudaerror",4]]],[5,"cudaGraphExternalSemaphoresSignalNodeSetParams","","",null,[[],["cudaerror",4]]],[5,"cudaGraphAddExternalSemaphoresWaitNode","","",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaGraphExternalSemaphoresWaitNodeGetParams","","",null,[[],["cudaerror",4]]],[5,"cudaGraphExternalSemaphoresWaitNodeSetParams","","",null,[[],["cudaerror",4]]],[5,"cudaGraphClone","","\\\\brief Clones a graph",null,[[],["cudaerror",4]]],[5,"cudaGraphNodeFindInClone","","\\\\brief Finds a cloned version of a node",null,[[],["cudaerror",4]]],[5,"cudaGraphNodeGetType","","\\\\brief Returns a node\'s type",null,[[],["cudaerror",4]]],[5,"cudaGraphGetNodes","","\\\\brief Returns a graph\'s nodes",null,[[],["cudaerror",4]]],[5,"cudaGraphGetRootNodes","","\\\\brief Returns a graph\'s root nodes",null,[[],["cudaerror",4]]],[5,"cudaGraphGetEdges","","\\\\brief Returns a graph\'s dependency edges",null,[[],["cudaerror",4]]],[5,"cudaGraphNodeGetDependencies","","\\\\brief Returns a node\'s dependencies",null,[[],["cudaerror",4]]],[5,"cudaGraphNodeGetDependentNodes","","\\\\brief Returns a node\'s dependent nodes",null,[[],["cudaerror",4]]],[5,"cudaGraphAddDependencies","","\\\\brief Adds dependency edges to a graph.",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaGraphRemoveDependencies","","\\\\brief Removes dependency edges from a graph.",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaGraphDestroyNode","","\\\\brief Remove a node from the graph",null,[[],["cudaerror",4]]],[5,"cudaGraphInstantiate","","\\\\brief Creates an executable graph from a graph",null,[[["usize",15]],["cudaerror",4]]],[5,"cudaGraphExecKernelNodeSetParams","","\\\\brief Sets the parameters for a kernel node in the given …",null,[[],["cudaerror",4]]],[5,"cudaGraphExecMemcpyNodeSetParams","","\\\\brief Sets the parameters for a memcpy node in the given …",null,[[],["cudaerror",4]]],[5,"cudaGraphExecMemcpyNodeSetParamsToSymbol","","",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaGraphExecMemcpyNodeSetParamsFromSymbol","","",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaGraphExecMemcpyNodeSetParams1D","","",null,[[["usize",15],["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaGraphExecMemsetNodeSetParams","","\\\\brief Sets the parameters for a memset node in the given …",null,[[],["cudaerror",4]]],[5,"cudaGraphExecHostNodeSetParams","","\\\\brief Sets the parameters for a host node in the given …",null,[[],["cudaerror",4]]],[5,"cudaGraphExecChildGraphNodeSetParams","","",null,[[],["cudaerror",4]]],[5,"cudaGraphExecEventRecordNodeSetEvent","","",null,[[],["cudaerror",4]]],[5,"cudaGraphExecEventWaitNodeSetEvent","","",null,[[],["cudaerror",4]]],[5,"cudaGraphExecExternalSemaphoresSignalNodeSetParams","","",null,[[],["cudaerror",4]]],[5,"cudaGraphExecExternalSemaphoresWaitNodeSetParams","","",null,[[],["cudaerror",4]]],[5,"cudaGraphExecUpdate","","\\\\brief Check whether an executable graph can be updated …",null,[[],["cudaerror",4]]],[5,"cudaGraphUpload","","",null,[[],["cudaerror",4]]],[5,"cudaGraphLaunch","","\\\\brief Launches an executable graph in a stream",null,[[],["cudaerror",4]]],[5,"cudaGraphExecDestroy","","\\\\brief Destroys an executable graph",null,[[],["cudaerror",4]]],[5,"cudaGraphDestroy","","\\\\brief Destroys a graph",null,[[],["cudaerror",4]]],[5,"cudaGetExportTable","","\\\\cond impl_private",null,[[],["cudaerror",4]]],[5,"cudaGetFuncBySymbol","","\\\\brief Get pointer to device entry function that matches …",null,[[],["cudaerror",4]]],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[6,"cudnnHandle_t","","",null,null],[5,"cudnnGetVersion","","",null,[[],["usize",15]]],[5,"cudnnGetCudartVersion","","",null,[[],["usize",15]]],[5,"cudnnGetErrorString","","",null,[[["cudnnstatus_t",4]]]],[5,"cudnnQueryRuntimeError","","",null,[[["cudnnerrquerymode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetProperty","","",null,[[["u32",15]],["cudnnstatus_t",4]]],[5,"cudnnCreate","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroy","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetStream","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetStream","","",null,[[],["cudnnstatus_t",4]]],[6,"cudnnTensorDescriptor_t","","",null,null],[6,"cudnnPoolingDescriptor_t","","",null,null],[6,"cudnnFilterDescriptor_t","","",null,null],[6,"cudnnLRNDescriptor_t","","",null,null],[6,"cudnnActivationDescriptor_t","","",null,null],[6,"cudnnSpatialTransformerDescriptor_t","","",null,null],[6,"cudnnOpTensorDescriptor_t","","",null,null],[6,"cudnnReduceTensorDescriptor_t","","",null,null],[6,"cudnnCTCLossDescriptor_t","","",null,null],[6,"cudnnTensorTransformDescriptor_t","","",null,null],[5,"cudnnCreateTensorDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetTensor4dDescriptor","","",null,[[["i32",15],["cudnndatatype_t",4],["cudnntensorformat_t",4]],["cudnnstatus_t",4]]],[5,"cudnnSetTensor4dDescriptorEx","","",null,[[["cudnndatatype_t",4],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetTensor4dDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetTensorNdDescriptor","","",null,[[["i32",15],["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnSetTensorNdDescriptorEx","","",null,[[["i32",15],["cudnndatatype_t",4],["cudnntensorformat_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetTensorNdDescriptor","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetTensorSizeInBytes","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyTensorDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnInitTransformDest","","Create a destination descriptor for cudnnTransformTensor",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreateTensorTransformDescriptor","","Create an empty tensor transform descriptor",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetTensorTransformDescriptor","","Initialize a previously created tensor transform …",null,[[["u32",15],["cudnnfoldingdirection_t",4],["cudnntensorformat_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetTensorTransformDescriptor","","Retrieves the values stored in a previously initialized …",null,[[["u32",15]],["cudnnstatus_t",4]]],[5,"cudnnDestroyTensorTransformDescriptor","","Destroys a previously created tensor transform descriptor.",null,[[],["cudnnstatus_t",4]]],[5,"cudnnTransformTensor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnTransformTensorEx","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnAddTensor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreateOpTensorDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetOpTensorDescriptor","","",null,[[["cudnndatatype_t",4],["cudnnnanpropagation_t",4],["cudnnoptensorop_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetOpTensorDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyOpTensorDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnOpTensor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreateReduceTensorDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetReduceTensorDescriptor","","",null,[[["cudnnnanpropagation_t",4],["cudnndatatype_t",4],["cudnnreducetensorop_t",4],["cudnnreducetensorindices_t",4],["cudnnindicestype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetReduceTensorDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyReduceTensorDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetReductionIndicesSize","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetReductionWorkspaceSize","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnReduceTensor","","",null,[[["usize",15]],["cudnnstatus_t",4]]],[5,"cudnnSetTensor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnScaleTensor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreateFilterDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetFilter4dDescriptor","","",null,[[["i32",15],["cudnndatatype_t",4],["cudnntensorformat_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetFilter4dDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetFilterNdDescriptor","","",null,[[["i32",15],["cudnndatatype_t",4],["cudnntensorformat_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetFilterNdDescriptor","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetFilterSizeInBytes","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnTransformFilter","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyFilterDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSoftmaxForward","","",null,[[["cudnnsoftmaxalgorithm_t",4],["cudnnsoftmaxmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnCreatePoolingDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetPooling2dDescriptor","","",null,[[["cudnnnanpropagation_t",4],["i32",15],["cudnnpoolingmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetPooling2dDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetPoolingNdDescriptor","","",null,[[["cudnnnanpropagation_t",4],["i32",15],["cudnnpoolingmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetPoolingNdDescriptor","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetPoolingNdForwardOutputDim","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetPooling2dForwardOutputDim","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyPoolingDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnPoolingForward","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreateActivationDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetActivationDescriptor","","",null,[[["cudnnactivationmode_t",4],["f64",15],["cudnnnanpropagation_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetActivationDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyActivationDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnActivationForward","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreateLRNDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetLRNDescriptor","","",null,[[["u32",15],["f64",15]],["cudnnstatus_t",4]]],[5,"cudnnGetLRNDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyLRNDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnLRNCrossChannelForward","","",null,[[["cudnnlrnmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnDivisiveNormalizationForward","","",null,[[["cudnndivnormmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnDeriveBNTensorDescriptor","","",null,[[["cudnnbatchnormmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnBatchNormalizationForwardInference","","",null,[[["f64",15],["cudnnbatchnormmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnDeriveNormTensorDescriptor","","",null,[[["cudnnnormmode_t",4],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnNormalizationForwardInference","","",null,[[["cudnnnormmode_t",4],["cudnnnormops_t",4],["cudnnnormalgo_t",4],["f64",15],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnCreateSpatialTransformerDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetSpatialTransformerNdDescriptor","","",null,[[["i32",15],["cudnndatatype_t",4],["cudnnsamplertype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnDestroySpatialTransformerDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSpatialTfGridGeneratorForward","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSpatialTfSamplerForward","","",null,[[],["cudnnstatus_t",4]]],[6,"cudnnDropoutDescriptor_t","","",null,null],[5,"cudnnCreateDropoutDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyDropoutDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDropoutGetStatesSize","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDropoutGetReserveSpaceSize","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetDropoutDescriptor","","",null,[[["usize",15],["f32",15],["u64",15]],["cudnnstatus_t",4]]],[5,"cudnnRestoreDropoutDescriptor","","",null,[[["usize",15],["f32",15],["u64",15]],["cudnnstatus_t",4]]],[5,"cudnnGetDropoutDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDropoutForward","","",null,[[["usize",15]],["cudnnstatus_t",4]]],[6,"cudnnAlgorithmDescriptor_t","","",null,null],[6,"cudnnAlgorithmPerformance_t","","",null,null],[5,"cudnnCreateAlgorithmDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetAlgorithmDescriptor","","",null,[[["cudnnalgorithm_t",3]],["cudnnstatus_t",4]]],[5,"cudnnGetAlgorithmDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCopyAlgorithmDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyAlgorithmDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreateAlgorithmPerformance","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnSetAlgorithmPerformance","","",null,[[["usize",15],["cudnnstatus_t",4],["f32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetAlgorithmPerformance","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyAlgorithmPerformance","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetAlgorithmSpaceSize","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSaveAlgorithm","","",null,[[["usize",15]],["cudnnstatus_t",4]]],[5,"cudnnRestoreAlgorithm","","",null,[[["usize",15]],["cudnnstatus_t",4]]],[6,"cudnnCallback_t","","",null,null],[5,"cudnnSetCallback","","",null,[[["u32",15],["option",4]],["cudnnstatus_t",4]]],[5,"cudnnGetCallback","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnOpsInferVersionCheck","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSoftmaxBackward","","",null,[[["cudnnsoftmaxalgorithm_t",4],["cudnnsoftmaxmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnPoolingBackward","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnActivationBackward","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnLRNCrossChannelBackward","","",null,[[["cudnnlrnmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnDivisiveNormalizationBackward","","",null,[[["cudnndivnormmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetBatchNormalizationForwardTrainingExWorkspaceSize","","",null,[[["cudnnbatchnormmode_t",4],["cudnnbatchnormops_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetBatchNormalizationBackwardExWorkspaceSize","","",null,[[["cudnnbatchnormmode_t",4],["cudnnbatchnormops_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetBatchNormalizationTrainingExReserveSpaceSize","","",null,[[["cudnnbatchnormmode_t",4],["cudnnbatchnormops_t",4]],["cudnnstatus_t",4]]],[5,"cudnnBatchNormalizationForwardTraining","","",null,[[["f64",15],["cudnnbatchnormmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnBatchNormalizationForwardTrainingEx","","",null,[[["f64",15],["usize",15],["cudnnbatchnormmode_t",4],["cudnnbatchnormops_t",4]],["cudnnstatus_t",4]]],[5,"cudnnBatchNormalizationBackward","","",null,[[["f64",15],["cudnnbatchnormmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnBatchNormalizationBackwardEx","","",null,[[["f64",15],["usize",15],["cudnnbatchnormmode_t",4],["cudnnbatchnormops_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetNormalizationForwardTrainingWorkspaceSize","","",null,[[["cudnnnormmode_t",4],["cudnnnormops_t",4],["cudnnnormalgo_t",4],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetNormalizationBackwardWorkspaceSize","","",null,[[["cudnnnormmode_t",4],["cudnnnormops_t",4],["cudnnnormalgo_t",4],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetNormalizationTrainingReserveSpaceSize","","",null,[[["cudnnnormmode_t",4],["cudnnnormops_t",4],["cudnnnormalgo_t",4],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnNormalizationForwardTraining","","",null,[[["cudnnnormmode_t",4],["cudnnnormops_t",4],["cudnnnormalgo_t",4],["f64",15],["usize",15],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnNormalizationBackward","","",null,[[["cudnnnormmode_t",4],["cudnnnormops_t",4],["cudnnnormalgo_t",4],["f64",15],["usize",15],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnSpatialTfGridGeneratorBackward","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSpatialTfSamplerBackward","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDropoutBackward","","",null,[[["usize",15]],["cudnnstatus_t",4]]],[5,"cudnnOpsTrainVersionCheck","","",null,[[],["cudnnstatus_t",4]]],[6,"cudnnRNNPaddingMode_t","","",null,null],[6,"cudnnRNNDescriptor_t","","",null,null],[6,"cudnnPersistentRNNPlan_t","","",null,null],[6,"cudnnRNNDataDescriptor_t","","",null,null],[5,"cudnnCreateRNNDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyRNNDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetRNNDescriptor_v8","","",null,[[["u32",15],["cudnnmathtype_t",4],["cudnnrnnbiasmode_t",4],["cudnnrnninputmode_t",4],["cudnnrnnmode_t",4],["cudnnrnnalgo_t",4],["cudnndirectionmode_t",4],["cudnndatatype_t",4],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNDescriptor_v8","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetRNNDescriptor_v6","","",null,[[["cudnnrnninputmode_t",4],["i32",15],["cudnnrnnmode_t",4],["cudnndirectionmode_t",4],["cudnnrnnalgo_t",4],["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNDescriptor_v6","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetRNNMatrixMathType","","",null,[[["cudnnmathtype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNMatrixMathType","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetRNNBiasMode","","",null,[[["cudnnrnnbiasmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNBiasMode","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnRNNSetClip_v8","","",null,[[["f64",15],["cudnnnanpropagation_t",4],["cudnnrnnclipmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnRNNGetClip_v8","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnRNNSetClip","","",null,[[["f64",15],["cudnnnanpropagation_t",4],["cudnnrnnclipmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnRNNGetClip","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetRNNProjectionLayers","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNProjectionLayers","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreatePersistentRNNPlan","","",null,[[["cudnndatatype_t",4],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnDestroyPersistentRNNPlan","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetPersistentRNNPlan","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnBuildRNNDynamic","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNWorkspaceSize","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNTrainingReserveSize","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNTempSpaceSizes","","",null,[[["cudnnforwardmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNParamsSize","","",null,[[["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNWeightSpaceSize","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetRNNLinLayerMatrixParams","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNLinLayerBiasParams","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNWeightParams","","",null,[[["usize",15],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnRNNForwardInference","","",null,[[["usize",15],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnSetRNNPaddingMode","","",null,[[["u32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNPaddingMode","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreateRNNDataDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyRNNDataDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetRNNDataDescriptor","","",null,[[["cudnnrnndatalayout_t",4],["i32",15],["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNDataDescriptor","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnRNNForwardInferenceEx","","",null,[[["usize",15]],["cudnnstatus_t",4]]],[5,"cudnnRNNForward","","",null,[[["cudnnforwardmode_t",4],["usize",15]],["cudnnstatus_t",4]]],[5,"cudnnSetRNNAlgorithmDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetRNNForwardInferenceAlgorithmMaxCount","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnFindRNNForwardInferenceAlgorithmEx","","",null,[[["usize",15],["f32",15],["i32",15]],["cudnnstatus_t",4]]],[6,"cudnnSeqDataDescriptor_t","","",null,null],[5,"cudnnCreateSeqDataDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroySeqDataDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetSeqDataDescriptor","","",null,[[["usize",15],["i32",15],["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetSeqDataDescriptor","","",null,[[["usize",15],["i32",15]],["cudnnstatus_t",4]]],[6,"cudnnAttnQueryMap_t","","",null,null],[6,"cudnnAttnDescriptor_t","","",null,null],[5,"cudnnCreateAttnDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyAttnDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetAttnDescriptor","","",null,[[["u32",15],["f64",15],["cudnnmathtype_t",4],["i32",15],["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetAttnDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetMultiHeadAttnBuffers","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetMultiHeadAttnWeights","","",null,[[["usize",15],["cudnnmultiheadattnweightkind_t",4]],["cudnnstatus_t",4]]],[5,"cudnnMultiHeadAttnForward","","",null,[[["usize",15],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnAdvInferVersionCheck","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnRNNForwardTraining","","",null,[[["usize",15],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnRNNBackwardData","","",null,[[["usize",15],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnRNNBackwardData_v8","","",null,[[["usize",15]],["cudnnstatus_t",4]]],[5,"cudnnRNNBackwardWeights","","",null,[[["usize",15],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnRNNBackwardWeights_v8","","",null,[[["cudnnwgradmode_t",4],["usize",15]],["cudnnstatus_t",4]]],[5,"cudnnRNNForwardTrainingEx","","",null,[[["usize",15]],["cudnnstatus_t",4]]],[5,"cudnnRNNBackwardDataEx","","",null,[[["usize",15]],["cudnnstatus_t",4]]],[5,"cudnnRNNBackwardWeightsEx","","",null,[[["usize",15]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNForwardTrainingAlgorithmMaxCount","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnFindRNNForwardTrainingAlgorithmEx","","",null,[[["usize",15],["f32",15],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNBackwardDataAlgorithmMaxCount","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnFindRNNBackwardDataAlgorithmEx","","",null,[[["usize",15],["f32",15],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNBackwardWeightsAlgorithmMaxCount","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnFindRNNBackwardWeightsAlgorithmEx","","",null,[[["usize",15],["f32",15],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnMultiHeadAttnBackwardData","","",null,[[["usize",15]],["cudnnstatus_t",4]]],[5,"cudnnMultiHeadAttnBackwardWeights","","",null,[[["usize",15],["cudnnwgradmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnCreateCTCLossDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetCTCLossDescriptor","","",null,[[["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnSetCTCLossDescriptorEx","","",null,[[["cudnndatatype_t",4],["cudnnlossnormalizationmode_t",4],["cudnnnanpropagation_t",4]],["cudnnstatus_t",4]]],[5,"cudnnSetCTCLossDescriptor_v8","","",null,[[["cudnnlossnormalizationmode_t",4],["cudnnnanpropagation_t",4],["cudnndatatype_t",4],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetCTCLossDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetCTCLossDescriptorEx","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetCTCLossDescriptor_v8","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyCTCLossDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCTCLoss","","",null,[[["cudnnctclossalgo_t",4],["usize",15]],["cudnnstatus_t",4]]],[5,"cudnnCTCLoss_v8","","",null,[[["cudnnctclossalgo_t",4],["usize",15]],["cudnnstatus_t",4]]],[5,"cudnnGetCTCLossWorkspaceSize","","",null,[[["cudnnctclossalgo_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetCTCLossWorkspaceSize_v8","","",null,[[["cudnnctclossalgo_t",4]],["cudnnstatus_t",4]]],[5,"cudnnAdvTrainVersionCheck","","",null,[[],["cudnnstatus_t",4]]],[6,"cudnnConvolutionDescriptor_t","","",null,null],[5,"cudnnCreateConvolutionDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyConvolutionDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetConvolutionMathType","","",null,[[["cudnnmathtype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionMathType","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetConvolutionGroupCount","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionGroupCount","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetConvolutionReorderType","","",null,[[["cudnnreordertype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionReorderType","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetConvolution2dDescriptor","","",null,[[["cudnndatatype_t",4],["cudnnconvolutionmode_t",4],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolution2dDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetConvolutionNdDescriptor","","",null,[[["cudnnconvolutionmode_t",4],["i32",15],["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionNdDescriptor","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolution2dForwardOutputDim","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionNdForwardOutputDim","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionForwardAlgorithmMaxCount","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionForwardAlgorithm_v7","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnFindConvolutionForwardAlgorithm","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnFindConvolutionForwardAlgorithmEx","","",null,[[["usize",15],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnIm2Col","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnReorderFilterAndBias","","",null,[[["i32",15],["cudnnreordertype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionForwardWorkspaceSize","","",null,[[["cudnnconvolutionfwdalgo_t",4]],["cudnnstatus_t",4]]],[5,"cudnnConvolutionForward","","",null,[[["cudnnconvolutionfwdalgo_t",4],["usize",15]],["cudnnstatus_t",4]]],[5,"cudnnConvolutionBiasActivationForward","","",null,[[["cudnnconvolutionfwdalgo_t",4],["usize",15]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionBackwardDataAlgorithmMaxCount","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnFindConvolutionBackwardDataAlgorithm","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnFindConvolutionBackwardDataAlgorithmEx","","",null,[[["usize",15],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionBackwardDataAlgorithm_v7","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionBackwardDataWorkspaceSize","","",null,[[["cudnnconvolutionbwddataalgo_t",4]],["cudnnstatus_t",4]]],[5,"cudnnConvolutionBackwardData","","",null,[[["cudnnconvolutionbwddataalgo_t",4],["usize",15]],["cudnnstatus_t",4]]],[5,"cudnnGetFoldedConvBackwardDataDescriptors","","",null,[[["cudnntensorformat_t",4]],["cudnnstatus_t",4]]],[6,"cudnnFusedOpsConstParamPack_t","","",null,null],[6,"cudnnFusedOpsVariantParamPack_t","","",null,null],[6,"cudnnFusedOpsPlan_t","","",null,null],[5,"cudnnCnnInferVersionCheck","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionBackwardFilterAlgorithmMaxCount","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnFindConvolutionBackwardFilterAlgorithm","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnFindConvolutionBackwardFilterAlgorithmEx","","",null,[[["usize",15],["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionBackwardFilterAlgorithm_v7","","",null,[[["i32",15]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionBackwardFilterWorkspaceSize","","",null,[[["cudnnconvolutionbwdfilteralgo_t",4]],["cudnnstatus_t",4]]],[5,"cudnnConvolutionBackwardFilter","","",null,[[["usize",15],["cudnnconvolutionbwdfilteralgo_t",4]],["cudnnstatus_t",4]]],[5,"cudnnConvolutionBackwardBias","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreateFusedOpsConstParamPack","","",null,[[["cudnnfusedops_t",4]],["cudnnstatus_t",4]]],[5,"cudnnDestroyFusedOpsConstParamPack","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetFusedOpsConstParamPackAttribute","","",null,[[["cudnnfusedopsconstparamlabel_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetFusedOpsConstParamPackAttribute","","",null,[[["cudnnfusedopsconstparamlabel_t",4]],["cudnnstatus_t",4]]],[5,"cudnnCreateFusedOpsVariantParamPack","","",null,[[["cudnnfusedops_t",4]],["cudnnstatus_t",4]]],[5,"cudnnDestroyFusedOpsVariantParamPack","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetFusedOpsVariantParamPackAttribute","","",null,[[["cudnnfusedopsvariantparamlabel_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetFusedOpsVariantParamPackAttribute","","",null,[[["cudnnfusedopsvariantparamlabel_t",4]],["cudnnstatus_t",4]]],[5,"cudnnCreateFusedOpsPlan","","",null,[[["cudnnfusedops_t",4]],["cudnnstatus_t",4]]],[5,"cudnnDestroyFusedOpsPlan","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnMakeFusedOpsPlan","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnFusedOpsExecute","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCnnTrainVersionCheck","","",null,[[],["cudnnstatus_t",4]]],[6,"cudnnBackendDescriptor_t","","",null,null],[5,"cudnnBackendCreateDescriptor","","",null,[[["cudnnbackenddescriptortype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnBackendDestroyDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnBackendInitialize","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnBackendFinalize","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnBackendSetAttribute","","",null,[[["i64",15],["cudnnbackendattributename_t",4],["cudnnbackendattributetype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnBackendGetAttribute","","",null,[[["cudnnbackendattributetype_t",4],["i64",15],["cudnnbackendattributename_t",4]],["cudnnstatus_t",4]]],[5,"cudnnBackendExecute","","",null,[[],["cudnnstatus_t",4]]],[4,"cudaRoundMode","","",null,null],[13,"cudaRoundNearest","","",11,null],[13,"cudaRoundZero","","",11,null],[13,"cudaRoundPosInf","","",11,null],[13,"cudaRoundMinInf","","",11,null],[3,"dim3","","",null,null],[12,"x","","",12,null],[12,"y","","",12,null],[12,"z","","",12,null],[4,"cudaError","","CUDA error types",null,null],[13,"cudaSuccess","","The API call returned with no errors. In the case of …",13,null],[13,"cudaErrorInvalidValue","","This indicates that one or more of the parameters passed …",13,null],[13,"cudaErrorMemoryAllocation","","The API call failed because it was unable to allocate …",13,null],[13,"cudaErrorInitializationError","","The API call failed because the CUDA driver and runtime …",13,null],[13,"cudaErrorCudartUnloading","","This indicates that a CUDA Runtime API call cannot be …",13,null],[13,"cudaErrorProfilerDisabled","","This indicates profiler is not initialized for this run. …",13,null],[13,"cudaErrorProfilerNotInitialized","","\\\\deprecated This error return is deprecated as of CUDA …",13,null],[13,"cudaErrorProfilerAlreadyStarted","","\\\\deprecated This error return is deprecated as of CUDA …",13,null],[13,"cudaErrorProfilerAlreadyStopped","","\\\\deprecated This error return is deprecated as of CUDA …",13,null],[13,"cudaErrorInvalidConfiguration","","This indicates that a kernel launch is requesting …",13,null],[13,"cudaErrorInvalidPitchValue","","This indicates that one or more of the pitch-related …",13,null],[13,"cudaErrorInvalidSymbol","","This indicates that the symbol name/identifier passed to …",13,null],[13,"cudaErrorInvalidHostPointer","","This indicates that at least one host pointer passed to …",13,null],[13,"cudaErrorInvalidDevicePointer","","This indicates that at least one device pointer passed to …",13,null],[13,"cudaErrorInvalidTexture","","This indicates that the texture passed to the API call is …",13,null],[13,"cudaErrorInvalidTextureBinding","","This indicates that the texture binding is not valid. …",13,null],[13,"cudaErrorInvalidChannelDescriptor","","This indicates that the channel descriptor passed to the …",13,null],[13,"cudaErrorInvalidMemcpyDirection","","This indicates that the direction of the memcpy passed to …",13,null],[13,"cudaErrorAddressOfConstant","","This indicated that the user has taken the address of a …",13,null],[13,"cudaErrorTextureFetchFailed","","This indicated that a texture fetch was not able to be …",13,null],[13,"cudaErrorTextureNotBound","","This indicated that a texture was not bound for access. …",13,null],[13,"cudaErrorSynchronizationError","","This indicated that a synchronization operation had …",13,null],[13,"cudaErrorInvalidFilterSetting","","This indicates that a non-float texture was being …",13,null],[13,"cudaErrorInvalidNormSetting","","This indicates that an attempt was made to read a …",13,null],[13,"cudaErrorMixedDeviceExecution","","Mixing of device and device emulation code was not …",13,null],[13,"cudaErrorNotYetImplemented","","This indicates that the API call is not yet implemented. …",13,null],[13,"cudaErrorMemoryValueTooLarge","","This indicated that an emulated device pointer exceeded …",13,null],[13,"cudaErrorStubLibrary","","This indicates that the CUDA driver that the application …",13,null],[13,"cudaErrorInsufficientDriver","","This indicates that the installed NVIDIA CUDA driver is …",13,null],[13,"cudaErrorCallRequiresNewerDriver","","This indicates that the API call requires a newer CUDA …",13,null],[13,"cudaErrorInvalidSurface","","This indicates that the surface passed to the API call is …",13,null],[13,"cudaErrorDuplicateVariableName","","This indicates that multiple global or constant variables …",13,null],[13,"cudaErrorDuplicateTextureName","","This indicates that multiple textures (across separate …",13,null],[13,"cudaErrorDuplicateSurfaceName","","This indicates that multiple surfaces (across separate …",13,null],[13,"cudaErrorDevicesUnavailable","","This indicates that all CUDA devices are busy or …",13,null],[13,"cudaErrorIncompatibleDriverContext","","This indicates that the current context is not compatible …",13,null],[13,"cudaErrorMissingConfiguration","","The device function being invoked (usually via …",13,null],[13,"cudaErrorPriorLaunchFailure","","This indicated that a previous kernel launch failed. This …",13,null],[13,"cudaErrorLaunchMaxDepthExceeded","","This error indicates that a device runtime grid launch …",13,null],[13,"cudaErrorLaunchFileScopedTex","","This error indicates that a grid launch did not occur …",13,null],[13,"cudaErrorLaunchFileScopedSurf","","This error indicates that a grid launch did not occur …",13,null],[13,"cudaErrorSyncDepthExceeded","","This error indicates that a call to …",13,null],[13,"cudaErrorLaunchPendingCountExceeded","","This error indicates that a device runtime grid launch …",13,null],[13,"cudaErrorInvalidDeviceFunction","","The requested device function does not exist or is not …",13,null],[13,"cudaErrorNoDevice","","This indicates that no CUDA-capable devices were detected …",13,null],[13,"cudaErrorInvalidDevice","","This indicates that the device ordinal supplied by the …",13,null],[13,"cudaErrorDeviceNotLicensed","","This indicates that the device doesn\'t have a valid Grid …",13,null],[13,"cudaErrorSoftwareValidityNotEstablished","","By default, the CUDA runtime may perform a minimal set of …",13,null],[13,"cudaErrorStartupFailure","","This indicates an internal startup failure in the CUDA …",13,null],[13,"cudaErrorInvalidKernelImage","","This indicates that the device kernel image is invalid.",13,null],[13,"cudaErrorDeviceUninitialized","","This most frequently indicates that there is no context …",13,null],[13,"cudaErrorMapBufferObjectFailed","","This indicates that the buffer object could not be mapped.",13,null],[13,"cudaErrorUnmapBufferObjectFailed","","This indicates that the buffer object could not be …",13,null],[13,"cudaErrorArrayIsMapped","","This indicates that the specified array is currently …",13,null],[13,"cudaErrorAlreadyMapped","","This indicates that the resource is already mapped.",13,null],[13,"cudaErrorNoKernelImageForDevice","","This indicates that there is no kernel image available …",13,null],[13,"cudaErrorAlreadyAcquired","","This indicates that a resource has already been acquired.",13,null],[13,"cudaErrorNotMapped","","This indicates that a resource is not mapped.",13,null],[13,"cudaErrorNotMappedAsArray","","This indicates that a mapped resource is not available …",13,null],[13,"cudaErrorNotMappedAsPointer","","This indicates that a mapped resource is not available …",13,null],[13,"cudaErrorECCUncorrectable","","This indicates that an uncorrectable ECC error was …",13,null],[13,"cudaErrorUnsupportedLimit","","This indicates that the ::cudaLimit passed to the API …",13,null],[13,"cudaErrorDeviceAlreadyInUse","","This indicates that a call tried to access an …",13,null],[13,"cudaErrorPeerAccessUnsupported","","This error indicates that P2P access is not supported …",13,null],[13,"cudaErrorInvalidPtx","","A PTX compilation failed. The runtime may fall back to …",13,null],[13,"cudaErrorInvalidGraphicsContext","","This indicates an error with the OpenGL or DirectX …",13,null],[13,"cudaErrorNvlinkUncorrectable","","This indicates that an uncorrectable NVLink error was …",13,null],[13,"cudaErrorJitCompilerNotFound","","This indicates that the PTX JIT compiler library was not …",13,null],[13,"cudaErrorUnsupportedPtxVersion","","This indicates that the provided PTX was compiled with an …",13,null],[13,"cudaErrorJitCompilationDisabled","","This indicates that the JIT compilation was disabled. The …",13,null],[13,"cudaErrorInvalidSource","","This indicates that the device kernel source is invalid.",13,null],[13,"cudaErrorFileNotFound","","This indicates that the file specified was not found.",13,null],[13,"cudaErrorSharedObjectSymbolNotFound","","This indicates that a link to a shared object failed to …",13,null],[13,"cudaErrorSharedObjectInitFailed","","This indicates that initialization of a shared object …",13,null],[13,"cudaErrorOperatingSystem","","This error indicates that an OS call failed.",13,null],[13,"cudaErrorInvalidResourceHandle","","This indicates that a resource handle passed to the API …",13,null],[13,"cudaErrorIllegalState","","This indicates that a resource required by the API call …",13,null],[13,"cudaErrorSymbolNotFound","","This indicates that a named symbol was not found. …",13,null],[13,"cudaErrorNotReady","","This indicates that asynchronous operations issued …",13,null],[13,"cudaErrorIllegalAddress","","The device encountered a load or store instruction on an …",13,null],[13,"cudaErrorLaunchOutOfResources","","This indicates that a launch did not occur because it did …",13,null],[13,"cudaErrorLaunchTimeout","","This indicates that the device kernel took too long to …",13,null],[13,"cudaErrorLaunchIncompatibleTexturing","","This error indicates a kernel launch that uses an …",13,null],[13,"cudaErrorPeerAccessAlreadyEnabled","","This error indicates that a call to …",13,null],[13,"cudaErrorPeerAccessNotEnabled","","This error indicates that ::cudaDeviceDisablePeerAccess() …",13,null],[13,"cudaErrorSetOnActiveProcess","","This indicates that the user has called …",13,null],[13,"cudaErrorContextIsDestroyed","","This error indicates that the context current to the …",13,null],[13,"cudaErrorAssert","","An assert triggered in device code during kernel …",13,null],[13,"cudaErrorTooManyPeers","","This error indicates that the hardware resources required …",13,null],[13,"cudaErrorHostMemoryAlreadyRegistered","","This error indicates that the memory range passed to …",13,null],[13,"cudaErrorHostMemoryNotRegistered","","This error indicates that the pointer passed to …",13,null],[13,"cudaErrorHardwareStackError","","Device encountered an error in the call stack during …",13,null],[13,"cudaErrorIllegalInstruction","","The device encountered an illegal instruction during …",13,null],[13,"cudaErrorMisalignedAddress","","The device encountered a load or store instruction on a …",13,null],[13,"cudaErrorInvalidAddressSpace","","While executing a kernel, the device encountered an …",13,null],[13,"cudaErrorInvalidPc","","The device encountered an invalid program counter. This …",13,null],[13,"cudaErrorLaunchFailure","","An exception occurred on the device while executing a …",13,null],[13,"cudaErrorCooperativeLaunchTooLarge","","This error indicates that the number of blocks launched …",13,null],[13,"cudaErrorNotPermitted","","This error indicates the attempted operation is not …",13,null],[13,"cudaErrorNotSupported","","This error indicates the attempted operation is not …",13,null],[13,"cudaErrorSystemNotReady","","This error indicates that the system is not yet ready to …",13,null],[13,"cudaErrorSystemDriverMismatch","","This error indicates that there is a mismatch between the …",13,null],[13,"cudaErrorCompatNotSupportedOnDevice","","This error indicates that the system was upgraded to run …",13,null],[13,"cudaErrorStreamCaptureUnsupported","","The operation is not permitted when the stream is …",13,null],[13,"cudaErrorStreamCaptureInvalidated","","The current capture sequence on the stream has been …",13,null],[13,"cudaErrorStreamCaptureMerge","","The operation would have resulted in a merge of two …",13,null],[13,"cudaErrorStreamCaptureUnmatched","","The capture was not initiated in this stream.",13,null],[13,"cudaErrorStreamCaptureUnjoined","","The capture sequence contains a fork that was not joined …",13,null],[13,"cudaErrorStreamCaptureIsolation","","A dependency would have been created which crosses the …",13,null],[13,"cudaErrorStreamCaptureImplicit","","The operation would have resulted in a disallowed …",13,null],[13,"cudaErrorCapturedEvent","","The operation is not permitted on an event which was last …",13,null],[13,"cudaErrorStreamCaptureWrongThread","","A stream capture sequence not initiated with the …",13,null],[13,"cudaErrorTimeout","","This indicates that the wait operation has timed out.",13,null],[13,"cudaErrorGraphExecUpdateFailure","","This error indicates that the graph update was not …",13,null],[13,"cudaErrorUnknown","","This indicates that an unknown internal error has …",13,null],[13,"cudaErrorApiFailureBase","","Any unhandled CUDA driver error is added to this value …",13,null],[4,"cudaChannelFormatKind","","Channel format kind",null,null],[13,"cudaChannelFormatKindSigned","","< Signed channel format",14,null],[13,"cudaChannelFormatKindUnsigned","","< Unsigned channel format",14,null],[13,"cudaChannelFormatKindFloat","","< Float channel format",14,null],[13,"cudaChannelFormatKindNone","","< No channel format",14,null],[13,"cudaChannelFormatKindNV12","","< Unsigned 8-bit integers, planar 4:2:0 YUV format",14,null],[3,"cudaChannelFormatDesc","","CUDA Channel format descriptor",null,null],[12,"x","","< x",15,null],[12,"y","","< y",15,null],[12,"z","","< z",15,null],[12,"w","","< w",15,null],[12,"f","","< Channel format kind",15,null],[3,"cudaArray","","",null,null],[3,"cudaMipmappedArray","","",null,null],[3,"cudaArraySparseProperties","","Sparse CUDA array and CUDA mipmapped array properties",null,null],[12,"tileExtent","","",16,null],[12,"miptailFirstLevel","","< First mip level at which the mip tail begins",16,null],[12,"miptailSize","","< Total size of the mip tail.",16,null],[12,"flags","","< Flags will either be zero or …",16,null],[12,"reserved","","",16,null],[3,"cudaArraySparseProperties__bindgen_ty_1","","",null,null],[12,"width","","< Tile width in elements",17,null],[12,"height","","< Tile height in elements",17,null],[12,"depth","","< Tile depth in elements",17,null],[4,"cudaMemoryType","","CUDA memory types",null,null],[13,"cudaMemoryTypeUnregistered","","< Unregistered memory",18,null],[13,"cudaMemoryTypeHost","","< Host memory",18,null],[13,"cudaMemoryTypeDevice","","< Device memory",18,null],[13,"cudaMemoryTypeManaged","","< Managed memory",18,null],[4,"cudaMemcpyKind","","CUDA memory copy types",null,null],[13,"cudaMemcpyHostToHost","","< Host   -> Host",19,null],[13,"cudaMemcpyHostToDevice","","< Host   -> Device",19,null],[13,"cudaMemcpyDeviceToHost","","< Device -> Host",19,null],[13,"cudaMemcpyDeviceToDevice","","< Device -> Device",19,null],[13,"cudaMemcpyDefault","","< Direction of the transfer is inferred from the pointer …",19,null],[3,"cudaPitchedPtr","","CUDA Pitched memory pointer",null,null],[12,"ptr","","< Pointer to allocated memory",20,null],[12,"pitch","","< Pitch of allocated memory in bytes",20,null],[12,"xsize","","< Logical width of allocation in elements",20,null],[12,"ysize","","< Logical height of allocation in elements",20,null],[3,"cudaExtent","","CUDA extent",null,null],[12,"width","","< Width in elements when referring to array memory, in …",21,null],[12,"height","","< Height in elements",21,null],[12,"depth","","< Depth in elements",21,null],[3,"cudaPos","","CUDA 3D position",null,null],[12,"x","","< x",22,null],[12,"y","","< y",22,null],[12,"z","","< z",22,null],[3,"cudaMemcpy3DParms","","CUDA 3D memory copying parameters",null,null],[12,"srcArray","","< Source memory address",23,null],[12,"srcPos","","< Source position offset",23,null],[12,"srcPtr","","< Pitched source memory address",23,null],[12,"dstArray","","< Destination memory address",23,null],[12,"dstPos","","< Destination position offset",23,null],[12,"dstPtr","","< Pitched destination memory address",23,null],[12,"extent","","< Requested memory copy size",23,null],[12,"kind","","< Type of transfer",23,null],[3,"cudaMemcpy3DPeerParms","","CUDA 3D cross-device memory copying parameters",null,null],[12,"srcArray","","< Source memory address",24,null],[12,"srcPos","","< Source position offset",24,null],[12,"srcPtr","","< Pitched source memory address",24,null],[12,"srcDevice","","< Source device",24,null],[12,"dstArray","","< Destination memory address",24,null],[12,"dstPos","","< Destination position offset",24,null],[12,"dstPtr","","< Pitched destination memory address",24,null],[12,"dstDevice","","< Destination device",24,null],[12,"extent","","< Requested memory copy size",24,null],[3,"cudaMemsetParams","","CUDA Memset node parameters",null,null],[12,"dst","","< Destination device pointer",25,null],[12,"pitch","","< Pitch of destination device pointer. Unused if height …",25,null],[12,"value","","< Value to be set",25,null],[12,"elementSize","","< Size of each element in bytes. Must be 1, 2, or 4.",25,null],[12,"width","","< Width of the row in elements",25,null],[12,"height","","< Number of rows",25,null],[4,"cudaAccessProperty","","Specifies performance hint with ::cudaAccessPolicyWindow …",null,null],[13,"cudaAccessPropertyNormal","","< Normal cache persistence.",26,null],[13,"cudaAccessPropertyStreaming","","< Streaming access is less likely to persit from cache.",26,null],[13,"cudaAccessPropertyPersisting","","< Persisting access is more likely to persist in cache.",26,null],[3,"cudaAccessPolicyWindow","","Specifies an access policy for a window, a contiguous …",null,null],[12,"base_ptr","","< Starting address of the access policy window. CUDA …",27,null],[12,"num_bytes","","< Size in bytes of the window policy. CUDA driver may …",27,null],[12,"hitRatio","","< hitRatio specifies percentage of lines assigned …",27,null],[12,"hitProp","","< ::CUaccessProperty set for hit.",27,null],[12,"missProp","","< ::CUaccessProperty set for miss. Must be either NORMAL …",27,null],[3,"cudaHostNodeParams","","CUDA host node parameters",null,null],[12,"fn_","","< The function to call when the node executes",28,null],[12,"userData","","< Argument to pass to the function",28,null],[4,"cudaStreamCaptureStatus","","Possible stream capture statuses returned by …",null,null],[13,"cudaStreamCaptureStatusNone","","< Stream is not capturing",29,null],[13,"cudaStreamCaptureStatusActive","","< Stream is actively capturing",29,null],[13,"cudaStreamCaptureStatusInvalidated","","< Stream is part of a capture sequence that has been …",29,null],[4,"cudaStreamCaptureMode","","Possible modes for stream capture thread interactions. …",null,null],[13,"cudaStreamCaptureModeGlobal","","",30,null],[13,"cudaStreamCaptureModeThreadLocal","","",30,null],[13,"cudaStreamCaptureModeRelaxed","","",30,null],[4,"cudaSynchronizationPolicy","","",null,null],[13,"cudaSyncPolicyAuto","","",31,null],[13,"cudaSyncPolicySpin","","",31,null],[13,"cudaSyncPolicyYield","","",31,null],[13,"cudaSyncPolicyBlockingSync","","",31,null],[4,"cudaStreamAttrID","","Stream Attributes",null,null],[13,"cudaStreamAttributeAccessPolicyWindow","","< Identifier for …",32,null],[13,"cudaStreamAttributeSynchronizationPolicy","","< ::cudaSynchronizationPolicy for work queued up in this …",32,null],[19,"cudaStreamAttrValue","","Stream attributes union used with …",null,null],[12,"accessPolicyWindow","","",33,null],[12,"syncPolicy","","",33,null],[3,"cudaGraphicsResource","","CUDA graphics interop resource",null,null],[4,"cudaGraphicsRegisterFlags","","CUDA graphics interop register flags",null,null],[13,"cudaGraphicsRegisterFlagsNone","","< Default",34,null],[13,"cudaGraphicsRegisterFlagsReadOnly","","< CUDA will not write to this resource",34,null],[13,"cudaGraphicsRegisterFlagsWriteDiscard","","< CUDA will only write to and will not read from this …",34,null],[13,"cudaGraphicsRegisterFlagsSurfaceLoadStore","","< CUDA will bind this resource to a surface reference",34,null],[13,"cudaGraphicsRegisterFlagsTextureGather","","< CUDA will perform texture gather operations on this …",34,null],[4,"cudaGraphicsMapFlags","","CUDA graphics interop map flags",null,null],[13,"cudaGraphicsMapFlagsNone","","< Default; Assume resource can be read/written",35,null],[13,"cudaGraphicsMapFlagsReadOnly","","< CUDA will not write to this resource",35,null],[13,"cudaGraphicsMapFlagsWriteDiscard","","< CUDA will only write to and will not read from this …",35,null],[4,"cudaGraphicsCubeFace","","CUDA graphics interop array indices for cube maps",null,null],[13,"cudaGraphicsCubeFacePositiveX","","< Positive X face of cubemap",36,null],[13,"cudaGraphicsCubeFaceNegativeX","","< Negative X face of cubemap",36,null],[13,"cudaGraphicsCubeFacePositiveY","","< Positive Y face of cubemap",36,null],[13,"cudaGraphicsCubeFaceNegativeY","","< Negative Y face of cubemap",36,null],[13,"cudaGraphicsCubeFacePositiveZ","","< Positive Z face of cubemap",36,null],[13,"cudaGraphicsCubeFaceNegativeZ","","< Negative Z face of cubemap",36,null],[4,"cudaKernelNodeAttrID","","Graph kernel node Attributes",null,null],[13,"cudaKernelNodeAttributeAccessPolicyWindow","","< Identifier for …",37,null],[13,"cudaKernelNodeAttributeCooperative","","< Allows a kernel node to be cooperative (see …",37,null],[19,"cudaKernelNodeAttrValue","","Graph kernel node attributes union, used with …",null,null],[12,"accessPolicyWindow","","< Attribute ::CUaccessPolicyWindow.",38,null],[12,"cooperative","","",38,null],[4,"cudaResourceType","","CUDA resource types",null,null],[13,"cudaResourceTypeArray","","< Array resource",39,null],[13,"cudaResourceTypeMipmappedArray","","< Mipmapped array resource",39,null],[13,"cudaResourceTypeLinear","","< Linear resource",39,null],[13,"cudaResourceTypePitch2D","","< Pitch 2D resource",39,null],[4,"cudaResourceViewFormat","","CUDA texture resource view formats",null,null],[13,"cudaResViewFormatNone","","< No resource view format (use underlying resource format)",40,null],[13,"cudaResViewFormatUnsignedChar1","","< 1 channel unsigned 8-bit integers",40,null],[13,"cudaResViewFormatUnsignedChar2","","< 2 channel unsigned 8-bit integers",40,null],[13,"cudaResViewFormatUnsignedChar4","","< 4 channel unsigned 8-bit integers",40,null],[13,"cudaResViewFormatSignedChar1","","< 1 channel signed 8-bit integers",40,null],[13,"cudaResViewFormatSignedChar2","","< 2 channel signed 8-bit integers",40,null],[13,"cudaResViewFormatSignedChar4","","< 4 channel signed 8-bit integers",40,null],[13,"cudaResViewFormatUnsignedShort1","","< 1 channel unsigned 16-bit integers",40,null],[13,"cudaResViewFormatUnsignedShort2","","< 2 channel unsigned 16-bit integers",40,null],[13,"cudaResViewFormatUnsignedShort4","","< 4 channel unsigned 16-bit integers",40,null],[13,"cudaResViewFormatSignedShort1","","< 1 channel signed 16-bit integers",40,null],[13,"cudaResViewFormatSignedShort2","","< 2 channel signed 16-bit integers",40,null],[13,"cudaResViewFormatSignedShort4","","< 4 channel signed 16-bit integers",40,null],[13,"cudaResViewFormatUnsignedInt1","","< 1 channel unsigned 32-bit integers",40,null],[13,"cudaResViewFormatUnsignedInt2","","< 2 channel unsigned 32-bit integers",40,null],[13,"cudaResViewFormatUnsignedInt4","","< 4 channel unsigned 32-bit integers",40,null],[13,"cudaResViewFormatSignedInt1","","< 1 channel signed 32-bit integers",40,null],[13,"cudaResViewFormatSignedInt2","","< 2 channel signed 32-bit integers",40,null],[13,"cudaResViewFormatSignedInt4","","< 4 channel signed 32-bit integers",40,null],[13,"cudaResViewFormatHalf1","","< 1 channel 16-bit floating point",40,null],[13,"cudaResViewFormatHalf2","","< 2 channel 16-bit floating point",40,null],[13,"cudaResViewFormatHalf4","","< 4 channel 16-bit floating point",40,null],[13,"cudaResViewFormatFloat1","","< 1 channel 32-bit floating point",40,null],[13,"cudaResViewFormatFloat2","","< 2 channel 32-bit floating point",40,null],[13,"cudaResViewFormatFloat4","","< 4 channel 32-bit floating point",40,null],[13,"cudaResViewFormatUnsignedBlockCompressed1","","< Block compressed 1",40,null],[13,"cudaResViewFormatUnsignedBlockCompressed2","","< Block compressed 2",40,null],[13,"cudaResViewFormatUnsignedBlockCompressed3","","< Block compressed 3",40,null],[13,"cudaResViewFormatUnsignedBlockCompressed4","","< Block compressed 4 unsigned",40,null],[13,"cudaResViewFormatSignedBlockCompressed4","","< Block compressed 4 signed",40,null],[13,"cudaResViewFormatUnsignedBlockCompressed5","","< Block compressed 5 unsigned",40,null],[13,"cudaResViewFormatSignedBlockCompressed5","","< Block compressed 5 signed",40,null],[13,"cudaResViewFormatUnsignedBlockCompressed6H","","< Block compressed 6 unsigned half-float",40,null],[13,"cudaResViewFormatSignedBlockCompressed6H","","< Block compressed 6 signed half-float",40,null],[13,"cudaResViewFormatUnsignedBlockCompressed7","","< Block compressed 7",40,null],[3,"cudaResourceDesc","","CUDA resource descriptor",null,null],[12,"resType","","< Resource type",41,null],[12,"res","","",41,null],[19,"cudaResourceDesc__bindgen_ty_1","","",null,null],[12,"array","","",42,null],[12,"mipmap","","",42,null],[12,"linear","","",42,null],[12,"pitch2D","","",42,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"array","","< CUDA array",43,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"mipmap","","< CUDA mipmapped array",44,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3","","",null,null],[12,"devPtr","","< Device pointer",45,null],[12,"desc","","< Channel descriptor",45,null],[12,"sizeInBytes","","< Size in bytes",45,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4","","",null,null],[12,"devPtr","","< Device pointer",46,null],[12,"desc","","< Channel descriptor",46,null],[12,"width","","< Width of the array in elements",46,null],[12,"height","","< Height of the array in elements",46,null],[12,"pitchInBytes","","< Pitch between two rows in bytes",46,null],[3,"cudaResourceViewDesc","","CUDA resource view descriptor",null,null],[12,"format","","< Resource view format",47,null],[12,"width","","< Width of the resource view",47,null],[12,"height","","< Height of the resource view",47,null],[12,"depth","","< Depth of the resource view",47,null],[12,"firstMipmapLevel","","< First defined mipmap level",47,null],[12,"lastMipmapLevel","","< Last defined mipmap level",47,null],[12,"firstLayer","","< First layer index",47,null],[12,"lastLayer","","< Last layer index",47,null],[3,"cudaPointerAttributes","","CUDA pointer attributes",null,null],[12,"type_","","The type of memory - ::cudaMemoryTypeUnregistered, …",48,null],[12,"device","","The device against which the memory was allocated or …",48,null],[12,"devicePointer","","The address which may be dereferenced on the current …",48,null],[12,"hostPointer","","The address which may be dereferenced on the host to …",48,null],[3,"cudaFuncAttributes","","CUDA function attributes",null,null],[12,"sharedSizeBytes","","The size in bytes of statically-allocated shared memory …",49,null],[12,"constSizeBytes","","The size in bytes of user-allocated constant memory …",49,null],[12,"localSizeBytes","","The size in bytes of local memory used by each thread of …",49,null],[12,"maxThreadsPerBlock","","The maximum number of threads per block, beyond which a …",49,null],[12,"numRegs","","The number of registers used by each thread of this …",49,null],[12,"ptxVersion","","The PTX virtual architecture version for which the …",49,null],[12,"binaryVersion","","The binary architecture version for which the function …",49,null],[12,"cacheModeCA","","The attribute to indicate whether the function has been …",49,null],[12,"maxDynamicSharedSizeBytes","","The maximum size in bytes of dynamic shared memory per …",49,null],[12,"preferredShmemCarveout","","On devices where the L1 cache and shared memory use the …",49,null],[4,"cudaFuncAttribute","","CUDA function attributes that can be set using …",null,null],[13,"cudaFuncAttributeMaxDynamicSharedMemorySize","","< Maximum dynamic shared memory size",50,null],[13,"cudaFuncAttributePreferredSharedMemoryCarveout","","< Preferred shared memory-L1 cache split",50,null],[13,"cudaFuncAttributeMax","","",50,null],[4,"cudaFuncCache","","CUDA function cache configurations",null,null],[13,"cudaFuncCachePreferNone","","< Default function cache configuration, no preference",51,null],[13,"cudaFuncCachePreferShared","","< Prefer larger shared memory and smaller L1 cache",51,null],[13,"cudaFuncCachePreferL1","","< Prefer larger L1 cache and smaller shared memory",51,null],[13,"cudaFuncCachePreferEqual","","< Prefer equal size L1 cache and shared memory",51,null],[4,"cudaSharedMemConfig","","CUDA shared memory configuration",null,null],[13,"cudaSharedMemBankSizeDefault","","",52,null],[13,"cudaSharedMemBankSizeFourByte","","",52,null],[13,"cudaSharedMemBankSizeEightByte","","",52,null],[4,"cudaSharedCarveout","","Shared memory carveout configurations. These may be …",null,null],[13,"cudaSharedmemCarveoutDefault","","< No preference for shared memory or L1 (default)",53,null],[13,"cudaSharedmemCarveoutMaxShared","","< Prefer maximum available shared memory, minimum L1 cache",53,null],[13,"cudaSharedmemCarveoutMaxL1","","< Prefer maximum available L1 cache, minimum shared memory",53,null],[4,"cudaComputeMode","","CUDA device compute modes",null,null],[13,"cudaComputeModeDefault","","< Default compute mode (Multiple threads can use …",54,null],[13,"cudaComputeModeExclusive","","< Compute-exclusive-thread mode (Only one thread in one …",54,null],[13,"cudaComputeModeProhibited","","< Compute-prohibited mode (No threads can use …",54,null],[13,"cudaComputeModeExclusiveProcess","","< Compute-exclusive-process mode (Many threads in one …",54,null],[4,"cudaLimit","","CUDA Limits",null,null],[13,"cudaLimitStackSize","","< GPU thread stack size",55,null],[13,"cudaLimitPrintfFifoSize","","< GPU printf FIFO size",55,null],[13,"cudaLimitMallocHeapSize","","< GPU malloc heap size",55,null],[13,"cudaLimitDevRuntimeSyncDepth","","< GPU device runtime synchronize depth",55,null],[13,"cudaLimitDevRuntimePendingLaunchCount","","< GPU device runtime pending launch count",55,null],[13,"cudaLimitMaxL2FetchGranularity","","< A value between 0 and 128 that indicates the maximum …",55,null],[13,"cudaLimitPersistingL2CacheSize","","< A size in bytes for L2 persisting lines cache size",55,null],[4,"cudaMemoryAdvise","","CUDA Memory Advise values",null,null],[13,"cudaMemAdviseSetReadMostly","","< Data will mostly be read and only occassionally be …",56,null],[13,"cudaMemAdviseUnsetReadMostly","","< Undo the effect of ::cudaMemAdviseSetReadMostly",56,null],[13,"cudaMemAdviseSetPreferredLocation","","< Set the preferred location for the data as the …",56,null],[13,"cudaMemAdviseUnsetPreferredLocation","","< Clear the preferred location for the data",56,null],[13,"cudaMemAdviseSetAccessedBy","","< Data will be accessed by the specified device, so …",56,null],[13,"cudaMemAdviseUnsetAccessedBy","","< Let the Unified Memory subsystem decide on the page …",56,null],[4,"cudaMemRangeAttribute","","CUDA range attributes",null,null],[13,"cudaMemRangeAttributeReadMostly","","< Whether the range will mostly be read and only …",57,null],[13,"cudaMemRangeAttributePreferredLocation","","< The preferred location of the range",57,null],[13,"cudaMemRangeAttributeAccessedBy","","< Memory range has ::cudaMemAdviseSetAccessedBy set for …",57,null],[13,"cudaMemRangeAttributeLastPrefetchLocation","","< The last location to which the range was prefetched",57,null],[4,"cudaOutputMode","","CUDA Profiler Output modes",null,null],[13,"cudaKeyValuePair","","< Output mode Key-Value pair format.",58,null],[13,"cudaCSV","","< Output mode Comma separated values format.",58,null],[4,"cudaDeviceAttr","","CUDA device attributes",null,null],[13,"cudaDevAttrMaxThreadsPerBlock","","< Maximum number of threads per block",59,null],[13,"cudaDevAttrMaxBlockDimX","","< Maximum block dimension X",59,null],[13,"cudaDevAttrMaxBlockDimY","","< Maximum block dimension Y",59,null],[13,"cudaDevAttrMaxBlockDimZ","","< Maximum block dimension Z",59,null],[13,"cudaDevAttrMaxGridDimX","","< Maximum grid dimension X",59,null],[13,"cudaDevAttrMaxGridDimY","","< Maximum grid dimension Y",59,null],[13,"cudaDevAttrMaxGridDimZ","","< Maximum grid dimension Z",59,null],[13,"cudaDevAttrMaxSharedMemoryPerBlock","","< Maximum shared memory available per block in bytes",59,null],[13,"cudaDevAttrTotalConstantMemory","","< Memory available on device for <strong>constant</strong> variables in a …",59,null],[13,"cudaDevAttrWarpSize","","< Warp size in threads",59,null],[13,"cudaDevAttrMaxPitch","","< Maximum pitch in bytes allowed by memory copies",59,null],[13,"cudaDevAttrMaxRegistersPerBlock","","< Maximum number of 32-bit registers available per block",59,null],[13,"cudaDevAttrClockRate","","< Peak clock frequency in kilohertz",59,null],[13,"cudaDevAttrTextureAlignment","","< Alignment requirement for textures",59,null],[13,"cudaDevAttrGpuOverlap","","< Device can possibly copy memory and execute a kernel …",59,null],[13,"cudaDevAttrMultiProcessorCount","","< Number of multiprocessors on device",59,null],[13,"cudaDevAttrKernelExecTimeout","","< Specifies whether there is a run time limit on kernels",59,null],[13,"cudaDevAttrIntegrated","","< Device is integrated with host memory",59,null],[13,"cudaDevAttrCanMapHostMemory","","< Device can map host memory into CUDA address space",59,null],[13,"cudaDevAttrComputeMode","","< Compute mode (See ::cudaComputeMode for details)",59,null],[13,"cudaDevAttrMaxTexture1DWidth","","< Maximum 1D texture width",59,null],[13,"cudaDevAttrMaxTexture2DWidth","","< Maximum 2D texture width",59,null],[13,"cudaDevAttrMaxTexture2DHeight","","< Maximum 2D texture height",59,null],[13,"cudaDevAttrMaxTexture3DWidth","","< Maximum 3D texture width",59,null],[13,"cudaDevAttrMaxTexture3DHeight","","< Maximum 3D texture height",59,null],[13,"cudaDevAttrMaxTexture3DDepth","","< Maximum 3D texture depth",59,null],[13,"cudaDevAttrMaxTexture2DLayeredWidth","","< Maximum 2D layered texture width",59,null],[13,"cudaDevAttrMaxTexture2DLayeredHeight","","< Maximum 2D layered texture height",59,null],[13,"cudaDevAttrMaxTexture2DLayeredLayers","","< Maximum layers in a 2D layered texture",59,null],[13,"cudaDevAttrSurfaceAlignment","","< Alignment requirement for surfaces",59,null],[13,"cudaDevAttrConcurrentKernels","","< Device can possibly execute multiple kernels …",59,null],[13,"cudaDevAttrEccEnabled","","< Device has ECC support enabled",59,null],[13,"cudaDevAttrPciBusId","","< PCI bus ID of the device",59,null],[13,"cudaDevAttrPciDeviceId","","< PCI device ID of the device",59,null],[13,"cudaDevAttrTccDriver","","< Device is using TCC driver model",59,null],[13,"cudaDevAttrMemoryClockRate","","< Peak memory clock frequency in kilohertz",59,null],[13,"cudaDevAttrGlobalMemoryBusWidth","","< Global memory bus width in bits",59,null],[13,"cudaDevAttrL2CacheSize","","< Size of L2 cache in bytes",59,null],[13,"cudaDevAttrMaxThreadsPerMultiProcessor","","< Maximum resident threads per multiprocessor",59,null],[13,"cudaDevAttrAsyncEngineCount","","< Number of asynchronous engines",59,null],[13,"cudaDevAttrUnifiedAddressing","","< Device shares a unified address space with the host",59,null],[13,"cudaDevAttrMaxTexture1DLayeredWidth","","< Maximum 1D layered texture width",59,null],[13,"cudaDevAttrMaxTexture1DLayeredLayers","","< Maximum layers in a 1D layered texture",59,null],[13,"cudaDevAttrMaxTexture2DGatherWidth","","< Maximum 2D texture width if cudaArrayTextureGather is …",59,null],[13,"cudaDevAttrMaxTexture2DGatherHeight","","< Maximum 2D texture height if cudaArrayTextureGather is …",59,null],[13,"cudaDevAttrMaxTexture3DWidthAlt","","< Alternate maximum 3D texture width",59,null],[13,"cudaDevAttrMaxTexture3DHeightAlt","","< Alternate maximum 3D texture height",59,null],[13,"cudaDevAttrMaxTexture3DDepthAlt","","< Alternate maximum 3D texture depth",59,null],[13,"cudaDevAttrPciDomainId","","< PCI domain ID of the device",59,null],[13,"cudaDevAttrTexturePitchAlignment","","< Pitch alignment requirement for textures",59,null],[13,"cudaDevAttrMaxTextureCubemapWidth","","< Maximum cubemap texture width/height",59,null],[13,"cudaDevAttrMaxTextureCubemapLayeredWidth","","< Maximum cubemap layered texture width/height",59,null],[13,"cudaDevAttrMaxTextureCubemapLayeredLayers","","< Maximum layers in a cubemap layered texture",59,null],[13,"cudaDevAttrMaxSurface1DWidth","","< Maximum 1D surface width",59,null],[13,"cudaDevAttrMaxSurface2DWidth","","< Maximum 2D surface width",59,null],[13,"cudaDevAttrMaxSurface2DHeight","","< Maximum 2D surface height",59,null],[13,"cudaDevAttrMaxSurface3DWidth","","< Maximum 3D surface width",59,null],[13,"cudaDevAttrMaxSurface3DHeight","","< Maximum 3D surface height",59,null],[13,"cudaDevAttrMaxSurface3DDepth","","< Maximum 3D surface depth",59,null],[13,"cudaDevAttrMaxSurface1DLayeredWidth","","< Maximum 1D layered surface width",59,null],[13,"cudaDevAttrMaxSurface1DLayeredLayers","","< Maximum layers in a 1D layered surface",59,null],[13,"cudaDevAttrMaxSurface2DLayeredWidth","","< Maximum 2D layered surface width",59,null],[13,"cudaDevAttrMaxSurface2DLayeredHeight","","< Maximum 2D layered surface height",59,null],[13,"cudaDevAttrMaxSurface2DLayeredLayers","","< Maximum layers in a 2D layered surface",59,null],[13,"cudaDevAttrMaxSurfaceCubemapWidth","","< Maximum cubemap surface width",59,null],[13,"cudaDevAttrMaxSurfaceCubemapLayeredWidth","","< Maximum cubemap layered surface width",59,null],[13,"cudaDevAttrMaxSurfaceCubemapLayeredLayers","","< Maximum layers in a cubemap layered surface",59,null],[13,"cudaDevAttrMaxTexture1DLinearWidth","","< Maximum 1D linear texture width",59,null],[13,"cudaDevAttrMaxTexture2DLinearWidth","","< Maximum 2D linear texture width",59,null],[13,"cudaDevAttrMaxTexture2DLinearHeight","","< Maximum 2D linear texture height",59,null],[13,"cudaDevAttrMaxTexture2DLinearPitch","","< Maximum 2D linear texture pitch in bytes",59,null],[13,"cudaDevAttrMaxTexture2DMipmappedWidth","","< Maximum mipmapped 2D texture width",59,null],[13,"cudaDevAttrMaxTexture2DMipmappedHeight","","< Maximum mipmapped 2D texture height",59,null],[13,"cudaDevAttrComputeCapabilityMajor","","< Major compute capability version number",59,null],[13,"cudaDevAttrComputeCapabilityMinor","","< Minor compute capability version number",59,null],[13,"cudaDevAttrMaxTexture1DMipmappedWidth","","< Maximum mipmapped 1D texture width",59,null],[13,"cudaDevAttrStreamPrioritiesSupported","","< Device supports stream priorities",59,null],[13,"cudaDevAttrGlobalL1CacheSupported","","< Device supports caching globals in L1",59,null],[13,"cudaDevAttrLocalL1CacheSupported","","< Device supports caching locals in L1",59,null],[13,"cudaDevAttrMaxSharedMemoryPerMultiprocessor","","< Maximum shared memory available per multiprocessor in …",59,null],[13,"cudaDevAttrMaxRegistersPerMultiprocessor","","< Maximum number of 32-bit registers available per …",59,null],[13,"cudaDevAttrManagedMemory","","< Device can allocate managed memory on this system",59,null],[13,"cudaDevAttrIsMultiGpuBoard","","< Device is on a multi-GPU board",59,null],[13,"cudaDevAttrMultiGpuBoardGroupID","","< Unique identifier for a group of devices on the same …",59,null],[13,"cudaDevAttrHostNativeAtomicSupported","","< Link between the device and the host supports native …",59,null],[13,"cudaDevAttrSingleToDoublePrecisionPerfRatio","","< Ratio of single precision performance (in …",59,null],[13,"cudaDevAttrPageableMemoryAccess","","< Device supports coherently accessing pageable memory …",59,null],[13,"cudaDevAttrConcurrentManagedAccess","","< Device can coherently access managed memory …",59,null],[13,"cudaDevAttrComputePreemptionSupported","","< Device supports Compute Preemption",59,null],[13,"cudaDevAttrCanUseHostPointerForRegisteredMem","","< Device can access host registered memory at the same …",59,null],[13,"cudaDevAttrReserved92","","",59,null],[13,"cudaDevAttrReserved93","","",59,null],[13,"cudaDevAttrReserved94","","",59,null],[13,"cudaDevAttrCooperativeLaunch","","< Device supports launching cooperative kernels via …",59,null],[13,"cudaDevAttrCooperativeMultiDeviceLaunch","","< Device can participate in cooperative kernels launched …",59,null],[13,"cudaDevAttrMaxSharedMemoryPerBlockOptin","","< The maximum optin shared memory per block. This value …",59,null],[13,"cudaDevAttrCanFlushRemoteWrites","","< Device supports flushing of outstanding remote writes.",59,null],[13,"cudaDevAttrHostRegisterSupported","","< Device supports host memory registration via …",59,null],[13,"cudaDevAttrPageableMemoryAccessUsesHostPageTables","","< Device accesses pageable memory via the host\'s page …",59,null],[13,"cudaDevAttrDirectManagedMemAccessFromHost","","< Host can directly access managed memory on the device …",59,null],[13,"cudaDevAttrMaxBlocksPerMultiprocessor","","< Maximum number of blocks per multiprocessor",59,null],[13,"cudaDevAttrReservedSharedMemoryPerBlock","","< Shared memory reserved by CUDA driver per block in bytes",59,null],[13,"cudaDevAttrSparseCudaArraySupported","","< Device supports sparse CUDA arrays and sparse CUDA …",59,null],[13,"cudaDevAttrHostRegisterReadOnlySupported","","< Device supports using the ::cudaHostRegister flag …",59,null],[13,"cudaDevAttrMaxTimelineSemaphoreInteropSupported","","< External timeline semaphore interop is supported on the …",59,null],[13,"cudaDevAttrMemoryPoolsSupported","","< Device supports using the ::cudaMallocAsync and …",59,null],[4,"cudaMemPoolAttr","","CUDA memory pool attributes",null,null],[13,"cudaMemPoolReuseFollowEventDependencies","","(value type = cuuint64_t) Amount of reserved memory in …",60,null],[13,"cudaMemPoolReuseAllowOpportunistic","","(value type = int) Allow cuMemAllocAsync to use memory …",60,null],[13,"cudaMemPoolReuseAllowInternalDependencies","","(value type = int) Allow reuse of already completed frees …",60,null],[13,"cudaMemPoolAttrReleaseThreshold","","(value type = int) Allow cuMemAllocAsync to insert new …",60,null],[4,"cudaMemLocationType","","",null,null],[13,"cudaMemLocationTypeInvalid","","",61,null],[13,"cudaMemLocationTypeDevice","","",61,null],[3,"cudaMemLocation","","",null,null],[12,"type_","","",62,null],[12,"id","","",62,null],[4,"cudaMemAccessFlags","","",null,null],[13,"cudaMemAccessFlagsProtNone","","",63,null],[13,"cudaMemAccessFlagsProtRead","","",63,null],[13,"cudaMemAccessFlagsProtReadWrite","","",63,null],[3,"cudaMemAccessDesc","","",null,null],[12,"location","","",64,null],[12,"flags","","",64,null],[4,"cudaMemAllocationType","","",null,null],[13,"cudaMemAllocationTypeInvalid","","",65,null],[13,"cudaMemAllocationTypePinned","","",65,null],[13,"cudaMemAllocationTypeMax","","",65,null],[4,"cudaMemAllocationHandleType","","",null,null],[13,"cudaMemHandleTypeNone","","< Does not allow any export mechanism. >",66,null],[13,"cudaMemHandleTypePosixFileDescriptor","","< Allows a file descriptor to be used for exporting. …",66,null],[13,"cudaMemHandleTypeWin32","","< Allows a Win32 NT handle to be used for exporting. …",66,null],[13,"cudaMemHandleTypeWin32Kmt","","< Allows a Win32 KMT handle to be used for exporting. …",66,null],[3,"cudaMemPoolProps","","",null,null],[12,"allocType","","",67,null],[12,"handleTypes","","",67,null],[12,"location","","",67,null],[12,"win32SecurityAttributes","","",67,null],[12,"reserved","","",67,null],[3,"cudaMemPoolPtrExportData","","",null,null],[12,"reserved","","",68,null],[4,"cudaDeviceP2PAttr","","CUDA device P2P attributes",null,null],[13,"cudaDevP2PAttrPerformanceRank","","< A relative value indicating the performance of the link …",69,null],[13,"cudaDevP2PAttrAccessSupported","","< Peer access is enabled",69,null],[13,"cudaDevP2PAttrNativeAtomicSupported","","< Native atomic operation over the link supported",69,null],[13,"cudaDevP2PAttrCudaArrayAccessSupported","","< Accessing CUDA arrays over the link supported",69,null],[3,"CUuuid_st","","",null,null],[12,"bytes","","",70,null],[3,"cudaDeviceProp","","CUDA device properties",null,null],[12,"name","","< ASCII string identifying device",71,null],[12,"uuid","","< 16-byte unique identifier",71,null],[12,"luid","","< 8-byte locally unique identifier. Value is undefined on …",71,null],[12,"luidDeviceNodeMask","","< LUID device node mask. Value is undefined on TCC and …",71,null],[12,"totalGlobalMem","","< Global memory available on device in bytes",71,null],[12,"sharedMemPerBlock","","< Shared memory available per block in bytes",71,null],[12,"regsPerBlock","","< 32-bit registers available per block",71,null],[12,"warpSize","","< Warp size in threads",71,null],[12,"memPitch","","< Maximum pitch in bytes allowed by memory copies",71,null],[12,"maxThreadsPerBlock","","< Maximum number of threads per block",71,null],[12,"maxThreadsDim","","< Maximum size of each dimension of a block",71,null],[12,"maxGridSize","","< Maximum size of each dimension of a grid",71,null],[12,"clockRate","","< Clock frequency in kilohertz",71,null],[12,"totalConstMem","","< Constant memory available on device in bytes",71,null],[12,"major","","< Major compute capability",71,null],[12,"minor","","< Minor compute capability",71,null],[12,"textureAlignment","","< Alignment requirement for textures",71,null],[12,"texturePitchAlignment","","< Pitch alignment requirement for texture references …",71,null],[12,"deviceOverlap","","< Device can concurrently copy memory and execute a …",71,null],[12,"multiProcessorCount","","< Number of multiprocessors on device",71,null],[12,"kernelExecTimeoutEnabled","","< Specified whether there is a run time limit on kernels",71,null],[12,"integrated","","< Device is integrated as opposed to discrete",71,null],[12,"canMapHostMemory","","< Device can map host memory with …",71,null],[12,"computeMode","","< Compute mode (See ::cudaComputeMode)",71,null],[12,"maxTexture1D","","< Maximum 1D texture size",71,null],[12,"maxTexture1DMipmap","","< Maximum 1D mipmapped texture size",71,null],[12,"maxTexture1DLinear","","< Deprecated, do not use. Use …",71,null],[12,"maxTexture2D","","< Maximum 2D texture dimensions",71,null],[12,"maxTexture2DMipmap","","< Maximum 2D mipmapped texture dimensions",71,null],[12,"maxTexture2DLinear","","< Maximum dimensions (width, height, pitch) for 2D …",71,null],[12,"maxTexture2DGather","","< Maximum 2D texture dimensions if texture gather …",71,null],[12,"maxTexture3D","","< Maximum 3D texture dimensions",71,null],[12,"maxTexture3DAlt","","< Maximum alternate 3D texture dimensions",71,null],[12,"maxTextureCubemap","","< Maximum Cubemap texture dimensions",71,null],[12,"maxTexture1DLayered","","< Maximum 1D layered texture dimensions",71,null],[12,"maxTexture2DLayered","","< Maximum 2D layered texture dimensions",71,null],[12,"maxTextureCubemapLayered","","< Maximum Cubemap layered texture dimensions",71,null],[12,"maxSurface1D","","< Maximum 1D surface size",71,null],[12,"maxSurface2D","","< Maximum 2D surface dimensions",71,null],[12,"maxSurface3D","","< Maximum 3D surface dimensions",71,null],[12,"maxSurface1DLayered","","< Maximum 1D layered surface dimensions",71,null],[12,"maxSurface2DLayered","","< Maximum 2D layered surface dimensions",71,null],[12,"maxSurfaceCubemap","","< Maximum Cubemap surface dimensions",71,null],[12,"maxSurfaceCubemapLayered","","< Maximum Cubemap layered surface dimensions",71,null],[12,"surfaceAlignment","","< Alignment requirements for surfaces",71,null],[12,"concurrentKernels","","< Device can possibly execute multiple kernels …",71,null],[12,"ECCEnabled","","< Device has ECC support enabled",71,null],[12,"pciBusID","","< PCI bus ID of the device",71,null],[12,"pciDeviceID","","< PCI device ID of the device",71,null],[12,"pciDomainID","","< PCI domain ID of the device",71,null],[12,"tccDriver","","< 1 if device is a Tesla device using TCC driver, 0 …",71,null],[12,"asyncEngineCount","","< Number of asynchronous engines",71,null],[12,"unifiedAddressing","","< Device shares a unified address space with the host",71,null],[12,"memoryClockRate","","< Peak memory clock frequency in kilohertz",71,null],[12,"memoryBusWidth","","< Global memory bus width in bits",71,null],[12,"l2CacheSize","","< Size of L2 cache in bytes",71,null],[12,"persistingL2CacheMaxSize","","< Device\'s maximum l2 persisting lines capacity setting …",71,null],[12,"maxThreadsPerMultiProcessor","","< Maximum resident threads per multiprocessor",71,null],[12,"streamPrioritiesSupported","","< Device supports stream priorities",71,null],[12,"globalL1CacheSupported","","< Device supports caching globals in L1",71,null],[12,"localL1CacheSupported","","< Device supports caching locals in L1",71,null],[12,"sharedMemPerMultiprocessor","","< Shared memory available per multiprocessor in bytes",71,null],[12,"regsPerMultiprocessor","","< 32-bit registers available per multiprocessor",71,null],[12,"managedMemory","","< Device supports allocating managed memory on this system",71,null],[12,"isMultiGpuBoard","","< Device is on a multi-GPU board",71,null],[12,"multiGpuBoardGroupID","","< Unique identifier for a group of devices on the same …",71,null],[12,"hostNativeAtomicSupported","","< Link between the device and the host supports native …",71,null],[12,"singleToDoublePrecisionPerfRatio","","< Ratio of single precision performance (in …",71,null],[12,"pageableMemoryAccess","","< Device supports coherently accessing pageable memory …",71,null],[12,"concurrentManagedAccess","","< Device can coherently access managed memory …",71,null],[12,"computePreemptionSupported","","< Device supports Compute Preemption",71,null],[12,"canUseHostPointerForRegisteredMem","","< Device can access host registered memory at the same …",71,null],[12,"cooperativeLaunch","","< Device supports launching cooperative kernels via …",71,null],[12,"cooperativeMultiDeviceLaunch","","< Device can participate in cooperative kernels launched …",71,null],[12,"sharedMemPerBlockOptin","","< Per device maximum shared memory per block usable by …",71,null],[12,"pageableMemoryAccessUsesHostPageTables","","< Device accesses pageable memory via the host\'s page …",71,null],[12,"directManagedMemAccessFromHost","","< Host can directly access managed memory on the device …",71,null],[12,"maxBlocksPerMultiProcessor","","< Maximum number of resident blocks per multiprocessor",71,null],[12,"accessPolicyMaxWindowSize","","< The maximum value of …",71,null],[12,"reservedSharedMemPerBlock","","< Shared memory reserved by CUDA driver per block in bytes",71,null],[3,"cudaIpcEventHandle_st","","CUDA IPC event handle",null,null],[12,"reserved","","",72,null],[3,"cudaIpcMemHandle_st","","CUDA IPC memory handle",null,null],[12,"reserved","","",73,null],[4,"cudaExternalMemoryHandleType","","External memory handle types",null,null],[13,"cudaExternalMemoryHandleTypeOpaqueFd","","Handle is an opaque file descriptor",74,null],[13,"cudaExternalMemoryHandleTypeOpaqueWin32","","Handle is an opaque shared NT handle",74,null],[13,"cudaExternalMemoryHandleTypeOpaqueWin32Kmt","","Handle is an opaque, globally shared handle",74,null],[13,"cudaExternalMemoryHandleTypeD3D12Heap","","Handle is a D3D12 heap object",74,null],[13,"cudaExternalMemoryHandleTypeD3D12Resource","","Handle is a D3D12 committed resource",74,null],[13,"cudaExternalMemoryHandleTypeD3D11Resource","","Handle is a shared NT handle to a D3D11 resource",74,null],[13,"cudaExternalMemoryHandleTypeD3D11ResourceKmt","","Handle is a globally shared handle to a D3D11 resource",74,null],[13,"cudaExternalMemoryHandleTypeNvSciBuf","","Handle is an NvSciBuf object",74,null],[3,"cudaExternalMemoryHandleDesc","","External memory handle descriptor",null,null],[12,"type_","","Type of the handle",75,null],[12,"handle","","",75,null],[12,"size","","Size of the memory allocation",75,null],[12,"flags","","Flags must either be zero or ::cudaExternalMemoryDedicated",75,null],[19,"cudaExternalMemoryHandleDesc__bindgen_ty_1","","",null,null],[12,"fd","","File descriptor referencing the memory object. Valid when …",76,null],[12,"win32","","",76,null],[12,"nvSciBufObject","","A handle representing NvSciBuf Object. Valid when type is …",76,null],[3,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1","","Win32 handle referencing the semaphore object. Valid when …",null,null],[12,"handle","","Valid NT handle. Must be NULL if \'name\' is non-NULL",77,null],[12,"name","","Name of a valid memory object. Must be NULL if \'handle\' …",77,null],[3,"cudaExternalMemoryBufferDesc","","External memory buffer descriptor",null,null],[12,"offset","","Offset into the memory object where the buffer\'s base is",78,null],[12,"size","","Size of the buffer",78,null],[12,"flags","","Flags reserved for future use. Must be zero.",78,null],[3,"cudaExternalMemoryMipmappedArrayDesc","","External memory mipmap descriptor",null,null],[12,"offset","","Offset into the memory object where the base level of the …",79,null],[12,"formatDesc","","Format of base level of the mipmap chain",79,null],[12,"extent","","Dimensions of base level of the mipmap chain",79,null],[12,"flags","","Flags associated with CUDA mipmapped arrays. See …",79,null],[12,"numLevels","","Total number of levels in the mipmap chain",79,null],[4,"cudaExternalSemaphoreHandleType","","External semaphore handle types",null,null],[13,"cudaExternalSemaphoreHandleTypeOpaqueFd","","Handle is an opaque file descriptor",80,null],[13,"cudaExternalSemaphoreHandleTypeOpaqueWin32","","Handle is an opaque shared NT handle",80,null],[13,"cudaExternalSemaphoreHandleTypeOpaqueWin32Kmt","","Handle is an opaque, globally shared handle",80,null],[13,"cudaExternalSemaphoreHandleTypeD3D12Fence","","Handle is a shared NT handle referencing a D3D12 fence …",80,null],[13,"cudaExternalSemaphoreHandleTypeD3D11Fence","","Handle is a shared NT handle referencing a D3D11 fence …",80,null],[13,"cudaExternalSemaphoreHandleTypeNvSciSync","","Opaque handle to NvSciSync Object",80,null],[13,"cudaExternalSemaphoreHandleTypeKeyedMutex","","Handle is a shared NT handle referencing a D3D11 keyed …",80,null],[13,"cudaExternalSemaphoreHandleTypeKeyedMutexKmt","","Handle is a shared KMT handle referencing a D3D11 keyed …",80,null],[13,"cudaExternalSemaphoreHandleTypeTimelineSemaphoreFd","","Handle is an opaque handle file descriptor referencing a …",80,null],[13,"cudaExternalSemaphoreHandleTypeTimelineSemaphoreWin32","","Handle is an opaque handle file descriptor referencing a …",80,null],[3,"cudaExternalSemaphoreHandleDesc","","External semaphore handle descriptor",null,null],[12,"type_","","Type of the handle",81,null],[12,"handle","","",81,null],[12,"flags","","Flags reserved for the future. Must be zero.",81,null],[19,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1","","",null,null],[12,"fd","","File descriptor referencing the semaphore object. Valid …",82,null],[12,"win32","","",82,null],[12,"nvSciSyncObj","","Valid NvSciSyncObj. Must be non NULL",82,null],[3,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1","","Win32 handle referencing the semaphore object. Valid when …",null,null],[12,"handle","","Valid NT handle. Must be NULL if \'name\' is non-NULL",83,null],[12,"name","","Name of a valid synchronization primitive. Must be NULL …",83,null],[3,"cudaExternalSemaphoreSignalParams","","External semaphore signal parameters, compatible with …",null,null],[12,"params","","",84,null],[12,"flags","","Only when ::cudaExternalSemaphoreSignalParams is used to …",84,null],[12,"reserved","","",84,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1","","",null,null],[12,"fence","","",85,null],[12,"nvSciSync","","",85,null],[12,"keyedMutex","","",85,null],[12,"reserved","","",85,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1","","Parameters for fence objects",null,null],[12,"value","","Value of fence to be signaled",86,null],[19,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"fence","","Pointer to NvSciSyncFence. Valid if …",87,null],[12,"reserved","","",87,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3","","Parameters for keyed mutex objects",null,null],[12,"key","","",88,null],[3,"cudaExternalSemaphoreWaitParams","","External semaphore wait parameters, compatible with …",null,null],[12,"params","","",89,null],[12,"flags","","Only when ::cudaExternalSemaphoreSignalParams is used to …",89,null],[12,"reserved","","",89,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1","","",null,null],[12,"fence","","",90,null],[12,"nvSciSync","","",90,null],[12,"keyedMutex","","",90,null],[12,"reserved","","",90,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1","","Parameters for fence objects",null,null],[12,"value","","Value of fence to be waited on",91,null],[19,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"fence","","Pointer to NvSciSyncFence. Valid if …",92,null],[12,"reserved","","",92,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3","","Parameters for keyed mutex objects",null,null],[12,"key","","Value of key to acquire the mutex with",93,null],[12,"timeoutMs","","Timeout in milliseconds to wait to acquire the mutex",93,null],[3,"CUstream_st","","",null,null],[3,"CUevent_st","","",null,null],[3,"CUexternalMemory_st","","",null,null],[3,"CUexternalSemaphore_st","","",null,null],[3,"CUgraph_st","","",null,null],[3,"CUgraphNode_st","","",null,null],[3,"CUfunc_st","","",null,null],[3,"CUmemPoolHandle_st","","",null,null],[4,"cudaCGScope","","CUDA cooperative group scope",null,null],[13,"cudaCGScopeInvalid","","< Invalid cooperative group scope",94,null],[13,"cudaCGScopeGrid","","< Scope represented by a grid_group",94,null],[13,"cudaCGScopeMultiGrid","","< Scope represented by a multi_grid_group",94,null],[3,"cudaLaunchParams","","CUDA launch parameters",null,null],[12,"func","","< Device function symbol",95,null],[12,"gridDim","","< Grid dimentions",95,null],[12,"blockDim","","< Block dimentions",95,null],[12,"args","","< Arguments",95,null],[12,"sharedMem","","< Shared memory",95,null],[12,"stream","","< Stream identifier",95,null],[3,"cudaKernelNodeParams","","CUDA GPU kernel node parameters",null,null],[12,"func","","< Kernel to launch",96,null],[12,"gridDim","","< Grid dimensions",96,null],[12,"blockDim","","< Block dimensions",96,null],[12,"sharedMemBytes","","< Dynamic shared-memory size per thread block in bytes",96,null],[12,"kernelParams","","< Array of pointers to individual kernel arguments",96,null],[12,"extra","","< Pointer to kernel arguments in the \\\"extra\\\" format",96,null],[3,"cudaExternalSemaphoreSignalNodeParams","","External semaphore signal node parameters",null,null],[12,"extSemArray","","< Array of external semaphore handles.",97,null],[12,"paramsArray","","< Array of external semaphore signal parameters.",97,null],[12,"numExtSems","","< Number of handles and parameters supplied in …",97,null],[3,"cudaExternalSemaphoreWaitNodeParams","","External semaphore wait node parameters",null,null],[12,"extSemArray","","< Array of external semaphore handles.",98,null],[12,"paramsArray","","< Array of external semaphore wait parameters.",98,null],[12,"numExtSems","","< Number of handles and parameters supplied in …",98,null],[4,"cudaGraphNodeType","","CUDA Graph node types",null,null],[13,"cudaGraphNodeTypeKernel","","< GPU kernel node",99,null],[13,"cudaGraphNodeTypeMemcpy","","< Memcpy node",99,null],[13,"cudaGraphNodeTypeMemset","","< Memset node",99,null],[13,"cudaGraphNodeTypeHost","","< Host (executable) node",99,null],[13,"cudaGraphNodeTypeGraph","","< Node which executes an embedded graph",99,null],[13,"cudaGraphNodeTypeEmpty","","< Empty (no-op) node",99,null],[13,"cudaGraphNodeTypeWaitEvent","","< External event wait node",99,null],[13,"cudaGraphNodeTypeEventRecord","","< External event record node",99,null],[13,"cudaGraphNodeTypeCount","","",99,null],[3,"CUgraphExec_st","","",null,null],[4,"cudaGraphExecUpdateResult","","CUDA Graph Update error types",null,null],[13,"cudaGraphExecUpdateSuccess","","< The update succeeded",100,null],[13,"cudaGraphExecUpdateError","","< The update failed for an unexpected reason which is …",100,null],[13,"cudaGraphExecUpdateErrorTopologyChanged","","< The update failed because the topology changed",100,null],[13,"cudaGraphExecUpdateErrorNodeTypeChanged","","< The update failed because a node type changed",100,null],[13,"cudaGraphExecUpdateErrorFunctionChanged","","< The update failed because the function of a kernel node …",100,null],[13,"cudaGraphExecUpdateErrorParametersChanged","","< The update failed because the parameters changed in a …",100,null],[13,"cudaGraphExecUpdateErrorNotSupported","","< The update failed because something about the node is …",100,null],[13,"cudaGraphExecUpdateErrorUnsupportedFunctionChange","","< The update failed because the function of a kernel node …",100,null],[4,"cudaSurfaceBoundaryMode","","CUDA Surface boundary modes",null,null],[13,"cudaBoundaryModeZero","","< Zero boundary mode",101,null],[13,"cudaBoundaryModeClamp","","< Clamp boundary mode",101,null],[13,"cudaBoundaryModeTrap","","< Trap boundary mode",101,null],[4,"cudaSurfaceFormatMode","","CUDA Surface format modes",null,null],[13,"cudaFormatModeForced","","< Forced format mode",102,null],[13,"cudaFormatModeAuto","","< Auto format mode",102,null],[3,"surfaceReference","","CUDA Surface reference",null,null],[12,"channelDesc","","Channel descriptor for surface reference",103,null],[4,"cudaTextureAddressMode","","CUDA texture address modes",null,null],[13,"cudaAddressModeWrap","","< Wrapping address mode",104,null],[13,"cudaAddressModeClamp","","< Clamp to edge address mode",104,null],[13,"cudaAddressModeMirror","","< Mirror address mode",104,null],[13,"cudaAddressModeBorder","","< Border address mode",104,null],[4,"cudaTextureFilterMode","","CUDA texture filter modes",null,null],[13,"cudaFilterModePoint","","< Point filter mode",105,null],[13,"cudaFilterModeLinear","","< Linear filter mode",105,null],[4,"cudaTextureReadMode","","CUDA texture read modes",null,null],[13,"cudaReadModeElementType","","< Read texture as specified element type",106,null],[13,"cudaReadModeNormalizedFloat","","< Read texture as normalized float",106,null],[3,"textureReference","","CUDA texture reference",null,null],[12,"normalized","","Indicates whether texture reads are normalized or not",107,null],[12,"filterMode","","Texture filter mode",107,null],[12,"addressMode","","Texture address mode for up to 3 dimensions",107,null],[12,"channelDesc","","Channel descriptor for the texture reference",107,null],[12,"sRGB","","Perform sRGB->linear conversion during texture read",107,null],[12,"maxAnisotropy","","Limit to the anisotropy ratio",107,null],[12,"mipmapFilterMode","","Mipmap filter mode",107,null],[12,"mipmapLevelBias","","Offset applied to the supplied mipmap level",107,null],[12,"minMipmapLevelClamp","","Lower end of the mipmap level range to clamp access to",107,null],[12,"maxMipmapLevelClamp","","Upper end of the mipmap level range to clamp access to",107,null],[12,"disableTrilinearOptimization","","Disable any trilinear filtering optimizations.",107,null],[12,"__cudaReserved","","",107,null],[3,"cudaTextureDesc","","CUDA texture descriptor",null,null],[12,"addressMode","","Texture address mode for up to 3 dimensions",108,null],[12,"filterMode","","Texture filter mode",108,null],[12,"readMode","","Texture read mode",108,null],[12,"sRGB","","Perform sRGB->linear conversion during texture read",108,null],[12,"borderColor","","Texture Border Color",108,null],[12,"normalizedCoords","","Indicates whether texture reads are normalized or not",108,null],[12,"maxAnisotropy","","Limit to the anisotropy ratio",108,null],[12,"mipmapFilterMode","","Mipmap filter mode",108,null],[12,"mipmapLevelBias","","Offset applied to the supplied mipmap level",108,null],[12,"minMipmapLevelClamp","","Lower end of the mipmap level range to clamp access to",108,null],[12,"maxMipmapLevelClamp","","Upper end of the mipmap level range to clamp access to",108,null],[12,"disableTrilinearOptimization","","Disable any trilinear filtering optimizations.",108,null],[4,"cudaDataType_t","","",null,null],[13,"CUDA_R_16F","","",109,null],[13,"CUDA_C_16F","","",109,null],[13,"CUDA_R_16BF","","",109,null],[13,"CUDA_C_16BF","","",109,null],[13,"CUDA_R_32F","","",109,null],[13,"CUDA_C_32F","","",109,null],[13,"CUDA_R_64F","","",109,null],[13,"CUDA_C_64F","","",109,null],[13,"CUDA_R_4I","","",109,null],[13,"CUDA_C_4I","","",109,null],[13,"CUDA_R_4U","","",109,null],[13,"CUDA_C_4U","","",109,null],[13,"CUDA_R_8I","","",109,null],[13,"CUDA_C_8I","","",109,null],[13,"CUDA_R_8U","","",109,null],[13,"CUDA_C_8U","","",109,null],[13,"CUDA_R_16I","","",109,null],[13,"CUDA_C_16I","","",109,null],[13,"CUDA_R_16U","","",109,null],[13,"CUDA_C_16U","","",109,null],[13,"CUDA_R_32I","","",109,null],[13,"CUDA_C_32I","","",109,null],[13,"CUDA_R_32U","","",109,null],[13,"CUDA_C_32U","","",109,null],[13,"CUDA_R_64I","","",109,null],[13,"CUDA_C_64I","","",109,null],[13,"CUDA_R_64U","","",109,null],[13,"CUDA_C_64U","","",109,null],[3,"cudnnContext","","",null,null],[4,"cudnnStatus_t","","",null,null],[13,"CUDNN_STATUS_SUCCESS","","",110,null],[13,"CUDNN_STATUS_NOT_INITIALIZED","","",110,null],[13,"CUDNN_STATUS_ALLOC_FAILED","","",110,null],[13,"CUDNN_STATUS_BAD_PARAM","","",110,null],[13,"CUDNN_STATUS_INTERNAL_ERROR","","",110,null],[13,"CUDNN_STATUS_INVALID_VALUE","","",110,null],[13,"CUDNN_STATUS_ARCH_MISMATCH","","",110,null],[13,"CUDNN_STATUS_MAPPING_ERROR","","",110,null],[13,"CUDNN_STATUS_EXECUTION_FAILED","","",110,null],[13,"CUDNN_STATUS_NOT_SUPPORTED","","",110,null],[13,"CUDNN_STATUS_LICENSE_ERROR","","",110,null],[13,"CUDNN_STATUS_RUNTIME_PREREQUISITE_MISSING","","",110,null],[13,"CUDNN_STATUS_RUNTIME_IN_PROGRESS","","",110,null],[13,"CUDNN_STATUS_RUNTIME_FP_OVERFLOW","","",110,null],[13,"CUDNN_STATUS_VERSION_MISMATCH","","",110,null],[3,"cudnnRuntimeTag_t","","",null,null],[4,"cudnnErrQueryMode_t","","",null,null],[13,"CUDNN_ERRQUERY_RAWCODE","","",111,null],[13,"CUDNN_ERRQUERY_NONBLOCKING","","",111,null],[13,"CUDNN_ERRQUERY_BLOCKING","","",111,null],[3,"cudnnTensorStruct","","",null,null],[3,"cudnnPoolingStruct","","",null,null],[3,"cudnnFilterStruct","","",null,null],[3,"cudnnLRNStruct","","",null,null],[3,"cudnnActivationStruct","","",null,null],[3,"cudnnSpatialTransformerStruct","","",null,null],[3,"cudnnOpTensorStruct","","",null,null],[3,"cudnnReduceTensorStruct","","",null,null],[3,"cudnnCTCLossStruct","","",null,null],[3,"cudnnTensorTransformStruct","","",null,null],[4,"cudnnDataType_t","","",null,null],[13,"CUDNN_DATA_FLOAT","","",112,null],[13,"CUDNN_DATA_DOUBLE","","",112,null],[13,"CUDNN_DATA_HALF","","",112,null],[13,"CUDNN_DATA_INT8","","",112,null],[13,"CUDNN_DATA_INT32","","",112,null],[13,"CUDNN_DATA_INT8x4","","",112,null],[13,"CUDNN_DATA_UINT8","","",112,null],[13,"CUDNN_DATA_UINT8x4","","",112,null],[13,"CUDNN_DATA_INT8x32","","",112,null],[13,"CUDNN_DATA_BFLOAT16","","",112,null],[13,"CUDNN_DATA_INT64","","",112,null],[4,"cudnnMathType_t","","",null,null],[13,"CUDNN_DEFAULT_MATH","","",113,null],[13,"CUDNN_TENSOR_OP_MATH","","",113,null],[13,"CUDNN_TENSOR_OP_MATH_ALLOW_CONVERSION","","",113,null],[13,"CUDNN_FMA_MATH","","",113,null],[4,"cudnnNanPropagation_t","","",null,null],[13,"CUDNN_NOT_PROPAGATE_NAN","","",114,null],[13,"CUDNN_PROPAGATE_NAN","","",114,null],[4,"cudnnDeterminism_t","","",null,null],[13,"CUDNN_NON_DETERMINISTIC","","",115,null],[13,"CUDNN_DETERMINISTIC","","",115,null],[4,"cudnnTensorFormat_t","","",null,null],[13,"CUDNN_TENSOR_NCHW","","",116,null],[13,"CUDNN_TENSOR_NHWC","","",116,null],[13,"CUDNN_TENSOR_NCHW_VECT_C","","",116,null],[4,"cudnnFoldingDirection_t","","",null,null],[13,"CUDNN_TRANSFORM_FOLD","","",117,null],[13,"CUDNN_TRANSFORM_UNFOLD","","",117,null],[4,"cudnnOpTensorOp_t","","",null,null],[13,"CUDNN_OP_TENSOR_ADD","","",118,null],[13,"CUDNN_OP_TENSOR_MUL","","",118,null],[13,"CUDNN_OP_TENSOR_MIN","","",118,null],[13,"CUDNN_OP_TENSOR_MAX","","",118,null],[13,"CUDNN_OP_TENSOR_SQRT","","",118,null],[13,"CUDNN_OP_TENSOR_NOT","","",118,null],[4,"cudnnReduceTensorOp_t","","",null,null],[13,"CUDNN_REDUCE_TENSOR_ADD","","",119,null],[13,"CUDNN_REDUCE_TENSOR_MUL","","",119,null],[13,"CUDNN_REDUCE_TENSOR_MIN","","",119,null],[13,"CUDNN_REDUCE_TENSOR_MAX","","",119,null],[13,"CUDNN_REDUCE_TENSOR_AMAX","","",119,null],[13,"CUDNN_REDUCE_TENSOR_AVG","","",119,null],[13,"CUDNN_REDUCE_TENSOR_NORM1","","",119,null],[13,"CUDNN_REDUCE_TENSOR_NORM2","","",119,null],[13,"CUDNN_REDUCE_TENSOR_MUL_NO_ZEROS","","",119,null],[4,"cudnnReduceTensorIndices_t","","",null,null],[13,"CUDNN_REDUCE_TENSOR_NO_INDICES","","",120,null],[13,"CUDNN_REDUCE_TENSOR_FLATTENED_INDICES","","",120,null],[4,"cudnnIndicesType_t","","",null,null],[13,"CUDNN_32BIT_INDICES","","",121,null],[13,"CUDNN_64BIT_INDICES","","",121,null],[13,"CUDNN_16BIT_INDICES","","",121,null],[13,"CUDNN_8BIT_INDICES","","",121,null],[4,"cudnnSoftmaxAlgorithm_t","","",null,null],[13,"CUDNN_SOFTMAX_FAST","","",122,null],[13,"CUDNN_SOFTMAX_ACCURATE","","",122,null],[13,"CUDNN_SOFTMAX_LOG","","",122,null],[4,"cudnnSoftmaxMode_t","","",null,null],[13,"CUDNN_SOFTMAX_MODE_INSTANCE","","",123,null],[13,"CUDNN_SOFTMAX_MODE_CHANNEL","","",123,null],[4,"cudnnPoolingMode_t","","",null,null],[13,"CUDNN_POOLING_MAX","","",124,null],[13,"CUDNN_POOLING_AVERAGE_COUNT_INCLUDE_PADDING","","",124,null],[13,"CUDNN_POOLING_AVERAGE_COUNT_EXCLUDE_PADDING","","",124,null],[13,"CUDNN_POOLING_MAX_DETERMINISTIC","","",124,null],[4,"cudnnActivationMode_t","","",null,null],[13,"CUDNN_ACTIVATION_SIGMOID","","",125,null],[13,"CUDNN_ACTIVATION_RELU","","",125,null],[13,"CUDNN_ACTIVATION_TANH","","",125,null],[13,"CUDNN_ACTIVATION_CLIPPED_RELU","","",125,null],[13,"CUDNN_ACTIVATION_ELU","","",125,null],[13,"CUDNN_ACTIVATION_IDENTITY","","",125,null],[4,"cudnnLRNMode_t","","",null,null],[13,"CUDNN_LRN_CROSS_CHANNEL_DIM1","","",126,null],[4,"cudnnDivNormMode_t","","",null,null],[13,"CUDNN_DIVNORM_PRECOMPUTED_MEANS","","",127,null],[4,"cudnnBatchNormMode_t","","",null,null],[13,"CUDNN_BATCHNORM_PER_ACTIVATION","","",128,null],[13,"CUDNN_BATCHNORM_SPATIAL","","",128,null],[13,"CUDNN_BATCHNORM_SPATIAL_PERSISTENT","","",128,null],[4,"cudnnBatchNormOps_t","","",null,null],[13,"CUDNN_BATCHNORM_OPS_BN","","",129,null],[13,"CUDNN_BATCHNORM_OPS_BN_ACTIVATION","","",129,null],[13,"CUDNN_BATCHNORM_OPS_BN_ADD_ACTIVATION","","",129,null],[4,"cudnnNormMode_t","","",null,null],[13,"CUDNN_NORM_PER_ACTIVATION","","",130,null],[13,"CUDNN_NORM_PER_CHANNEL","","",130,null],[4,"cudnnNormAlgo_t","","",null,null],[13,"CUDNN_NORM_ALGO_STANDARD","","",131,null],[13,"CUDNN_NORM_ALGO_PERSIST","","",131,null],[4,"cudnnNormOps_t","","",null,null],[13,"CUDNN_NORM_OPS_NORM","","",132,null],[13,"CUDNN_NORM_OPS_NORM_ACTIVATION","","",132,null],[13,"CUDNN_NORM_OPS_NORM_ADD_ACTIVATION","","",132,null],[4,"cudnnSamplerType_t","","",null,null],[13,"CUDNN_SAMPLER_BILINEAR","","",133,null],[3,"cudnnDropoutStruct","","",null,null],[3,"cudnnAlgorithmStruct","","",null,null],[3,"cudnnAlgorithmPerformanceStruct","","",null,null],[4,"cudnnConvolutionFwdAlgo_t","","",null,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_GEMM","","",134,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM","","",134,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_GEMM","","",134,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_DIRECT","","",134,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_FFT","","",134,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_FFT_TILING","","",134,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD","","",134,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD_NONFUSED","","",134,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_COUNT","","",134,null],[4,"cudnnConvolutionBwdFilterAlgo_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_0","","",135,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_1","","",135,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT","","",135,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_3","","",135,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD","","",135,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD_NONFUSED","","",135,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT_TILING","","",135,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_COUNT","","",135,null],[4,"cudnnConvolutionBwdDataAlgo_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_0","","",136,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_1","","",136,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT","","",136,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT_TILING","","",136,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD","","",136,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD_NONFUSED","","",136,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_COUNT","","",136,null],[4,"cudnnRNNAlgo_t","","",null,null],[13,"CUDNN_RNN_ALGO_STANDARD","","",137,null],[13,"CUDNN_RNN_ALGO_PERSIST_STATIC","","",137,null],[13,"CUDNN_RNN_ALGO_PERSIST_DYNAMIC","","",137,null],[13,"CUDNN_RNN_ALGO_PERSIST_STATIC_SMALL_H","","",137,null],[13,"CUDNN_RNN_ALGO_COUNT","","",137,null],[4,"cudnnCTCLossAlgo_t","","",null,null],[13,"CUDNN_CTC_LOSS_ALGO_DETERMINISTIC","","",138,null],[13,"CUDNN_CTC_LOSS_ALGO_NON_DETERMINISTIC","","",138,null],[3,"cudnnAlgorithm_t","","",null,null],[12,"algo","","",139,null],[19,"cudnnAlgorithm_t_Algorithm","","",null,null],[12,"convFwdAlgo","","",140,null],[12,"convBwdFilterAlgo","","",140,null],[12,"convBwdDataAlgo","","",140,null],[12,"RNNAlgo","","",140,null],[12,"CTCLossAlgo","","",140,null],[4,"cudnnSeverity_t","","",null,null],[13,"CUDNN_SEV_FATAL","","",141,null],[13,"CUDNN_SEV_ERROR","","",141,null],[13,"CUDNN_SEV_WARNING","","",141,null],[13,"CUDNN_SEV_INFO","","",141,null],[3,"cudnnDebug_t","","",null,null],[12,"cudnn_version","","",142,null],[12,"cudnnStatus","","",142,null],[12,"time_sec","","",142,null],[12,"time_usec","","",142,null],[12,"time_delta","","",142,null],[12,"handle","","",142,null],[12,"stream","","",142,null],[12,"pid","","",142,null],[12,"tid","","",142,null],[12,"cudaDeviceId","","",142,null],[12,"reserved","","",142,null],[4,"cudnnForwardMode_t","","",null,null],[13,"CUDNN_FWD_MODE_INFERENCE","","",143,null],[13,"CUDNN_FWD_MODE_TRAINING","","",143,null],[4,"cudnnRNNMode_t","","",null,null],[13,"CUDNN_RNN_RELU","","",144,null],[13,"CUDNN_RNN_TANH","","",144,null],[13,"CUDNN_LSTM","","",144,null],[13,"CUDNN_GRU","","",144,null],[4,"cudnnRNNBiasMode_t","","",null,null],[13,"CUDNN_RNN_NO_BIAS","","",145,null],[13,"CUDNN_RNN_SINGLE_INP_BIAS","","",145,null],[13,"CUDNN_RNN_DOUBLE_BIAS","","",145,null],[13,"CUDNN_RNN_SINGLE_REC_BIAS","","",145,null],[4,"cudnnDirectionMode_t","","",null,null],[13,"CUDNN_UNIDIRECTIONAL","","",146,null],[13,"CUDNN_BIDIRECTIONAL","","",146,null],[4,"cudnnRNNInputMode_t","","",null,null],[13,"CUDNN_LINEAR_INPUT","","",147,null],[13,"CUDNN_SKIP_INPUT","","",147,null],[4,"cudnnRNNClipMode_t","","",null,null],[13,"CUDNN_RNN_CLIP_NONE","","",148,null],[13,"CUDNN_RNN_CLIP_MINMAX","","",148,null],[4,"cudnnRNNDataLayout_t","","",null,null],[13,"CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_UNPACKED","","",149,null],[13,"CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_PACKED","","",149,null],[13,"CUDNN_RNN_DATA_LAYOUT_BATCH_MAJOR_UNPACKED","","",149,null],[3,"cudnnRNNStruct","","",null,null],[3,"cudnnPersistentRNNPlan","","",null,null],[3,"cudnnRNNDataStruct","","",null,null],[4,"cudnnSeqDataAxis_t","","",null,null],[13,"CUDNN_SEQDATA_TIME_DIM","","",150,null],[13,"CUDNN_SEQDATA_BATCH_DIM","","",150,null],[13,"CUDNN_SEQDATA_BEAM_DIM","","",150,null],[13,"CUDNN_SEQDATA_VECT_DIM","","",150,null],[3,"cudnnSeqDataStruct","","",null,null],[3,"cudnnAttnStruct","","",null,null],[4,"cudnnMultiHeadAttnWeightKind_t","","",null,null],[13,"CUDNN_MH_ATTN_Q_WEIGHTS","","",151,null],[13,"CUDNN_MH_ATTN_K_WEIGHTS","","",151,null],[13,"CUDNN_MH_ATTN_V_WEIGHTS","","",151,null],[13,"CUDNN_MH_ATTN_O_WEIGHTS","","",151,null],[13,"CUDNN_MH_ATTN_Q_BIASES","","",151,null],[13,"CUDNN_MH_ATTN_K_BIASES","","",151,null],[13,"CUDNN_MH_ATTN_V_BIASES","","",151,null],[13,"CUDNN_MH_ATTN_O_BIASES","","",151,null],[4,"cudnnWgradMode_t","","",null,null],[13,"CUDNN_WGRAD_MODE_ADD","","",152,null],[13,"CUDNN_WGRAD_MODE_SET","","",152,null],[4,"cudnnLossNormalizationMode_t","","",null,null],[13,"CUDNN_LOSS_NORMALIZATION_NONE","","",153,null],[13,"CUDNN_LOSS_NORMALIZATION_SOFTMAX","","",153,null],[3,"cudnnConvolutionStruct","","",null,null],[4,"cudnnConvolutionMode_t","","",null,null],[13,"CUDNN_CONVOLUTION","","",154,null],[13,"CUDNN_CROSS_CORRELATION","","",154,null],[4,"cudnnReorderType_t","","",null,null],[13,"CUDNN_DEFAULT_REORDER","","",155,null],[13,"CUDNN_NO_REORDER","","",155,null],[3,"cudnnConvolutionFwdAlgoPerf_t","","",null,null],[12,"algo","","",156,null],[12,"status","","",156,null],[12,"time","","",156,null],[12,"memory","","",156,null],[12,"determinism","","",156,null],[12,"mathType","","",156,null],[12,"reserved","","",156,null],[3,"cudnnConvolutionBwdDataAlgoPerf_t","","",null,null],[12,"algo","","",157,null],[12,"status","","",157,null],[12,"time","","",157,null],[12,"memory","","",157,null],[12,"determinism","","",157,null],[12,"mathType","","",157,null],[12,"reserved","","",157,null],[3,"cudnnFusedOpsConstParamStruct","","",null,null],[3,"cudnnFusedOpsVariantParamStruct","","",null,null],[3,"cudnnFusedOpsPlanStruct","","",null,null],[4,"cudnnFusedOps_t","","",null,null],[13,"CUDNN_FUSED_SCALE_BIAS_ACTIVATION_CONV_BNSTATS","","",158,null],[13,"CUDNN_FUSED_SCALE_BIAS_ACTIVATION_WGRAD","","",158,null],[13,"CUDNN_FUSED_BN_FINALIZE_STATISTICS_TRAINING","","",158,null],[13,"CUDNN_FUSED_BN_FINALIZE_STATISTICS_INFERENCE","","",158,null],[13,"CUDNN_FUSED_CONV_SCALE_BIAS_ADD_ACTIVATION","","",158,null],[13,"CUDNN_FUSED_SCALE_BIAS_ADD_ACTIVATION_GEN_BITMASK","","",158,null],[13,"CUDNN_FUSED_DACTIVATION_FORK_DBATCHNORM","","",158,null],[4,"cudnnFusedOpsConstParamLabel_t","","",null,null],[13,"CUDNN_PARAM_XDESC","","",159,null],[13,"CUDNN_PARAM_XDATA_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_BN_MODE","","",159,null],[13,"CUDNN_PARAM_BN_EQSCALEBIAS_DESC","","",159,null],[13,"CUDNN_PARAM_BN_EQSCALE_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_BN_EQBIAS_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_ACTIVATION_DESC","","",159,null],[13,"CUDNN_PARAM_CONV_DESC","","",159,null],[13,"CUDNN_PARAM_WDESC","","",159,null],[13,"CUDNN_PARAM_WDATA_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_DWDESC","","",159,null],[13,"CUDNN_PARAM_DWDATA_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_YDESC","","",159,null],[13,"CUDNN_PARAM_YDATA_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_DYDESC","","",159,null],[13,"CUDNN_PARAM_DYDATA_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_YSTATS_DESC","","",159,null],[13,"CUDNN_PARAM_YSUM_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_YSQSUM_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_BN_SCALEBIAS_MEANVAR_DESC","","",159,null],[13,"CUDNN_PARAM_BN_SCALE_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_BN_BIAS_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_BN_SAVED_MEAN_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_BN_SAVED_INVSTD_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_BN_RUNNING_MEAN_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_BN_RUNNING_VAR_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_ZDESC","","",159,null],[13,"CUDNN_PARAM_ZDATA_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_BN_Z_EQSCALEBIAS_DESC","","",159,null],[13,"CUDNN_PARAM_BN_Z_EQSCALE_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_BN_Z_EQBIAS_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_ACTIVATION_BITMASK_DESC","","",159,null],[13,"CUDNN_PARAM_ACTIVATION_BITMASK_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_DXDESC","","",159,null],[13,"CUDNN_PARAM_DXDATA_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_DZDESC","","",159,null],[13,"CUDNN_PARAM_DZDATA_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_BN_DSCALE_PLACEHOLDER","","",159,null],[13,"CUDNN_PARAM_BN_DBIAS_PLACEHOLDER","","",159,null],[4,"cudnnFusedOpsPointerPlaceHolder_t","","",null,null],[13,"CUDNN_PTR_NULL","","",160,null],[13,"CUDNN_PTR_ELEM_ALIGNED","","",160,null],[13,"CUDNN_PTR_16B_ALIGNED","","",160,null],[4,"cudnnFusedOpsVariantParamLabel_t","","",null,null],[13,"CUDNN_PTR_XDATA","","",161,null],[13,"CUDNN_PTR_BN_EQSCALE","","",161,null],[13,"CUDNN_PTR_BN_EQBIAS","","",161,null],[13,"CUDNN_PTR_WDATA","","",161,null],[13,"CUDNN_PTR_DWDATA","","",161,null],[13,"CUDNN_PTR_YDATA","","",161,null],[13,"CUDNN_PTR_DYDATA","","",161,null],[13,"CUDNN_PTR_YSUM","","",161,null],[13,"CUDNN_PTR_YSQSUM","","",161,null],[13,"CUDNN_PTR_WORKSPACE","","",161,null],[13,"CUDNN_PTR_BN_SCALE","","",161,null],[13,"CUDNN_PTR_BN_BIAS","","",161,null],[13,"CUDNN_PTR_BN_SAVED_MEAN","","",161,null],[13,"CUDNN_PTR_BN_SAVED_INVSTD","","",161,null],[13,"CUDNN_PTR_BN_RUNNING_MEAN","","",161,null],[13,"CUDNN_PTR_BN_RUNNING_VAR","","",161,null],[13,"CUDNN_PTR_ZDATA","","",161,null],[13,"CUDNN_PTR_BN_Z_EQSCALE","","",161,null],[13,"CUDNN_PTR_BN_Z_EQBIAS","","",161,null],[13,"CUDNN_PTR_ACTIVATION_BITMASK","","",161,null],[13,"CUDNN_PTR_DXDATA","","",161,null],[13,"CUDNN_PTR_DZDATA","","",161,null],[13,"CUDNN_PTR_BN_DSCALE","","",161,null],[13,"CUDNN_PTR_BN_DBIAS","","",161,null],[13,"CUDNN_SCALAR_SIZE_T_WORKSPACE_SIZE_IN_BYTES","","",161,null],[13,"CUDNN_SCALAR_INT64_T_BN_ACCUMULATION_COUNT","","",161,null],[13,"CUDNN_SCALAR_DOUBLE_BN_EXP_AVG_FACTOR","","",161,null],[13,"CUDNN_SCALAR_DOUBLE_BN_EPSILON","","",161,null],[3,"cudnnConvolutionBwdFilterAlgoPerf_t","","",null,null],[12,"algo","","",162,null],[12,"status","","",162,null],[12,"time","","",162,null],[12,"memory","","",162,null],[12,"determinism","","",162,null],[12,"mathType","","",162,null],[12,"reserved","","",162,null],[4,"cudnnPointwiseMode_t","","",null,null],[13,"CUDNN_POINTWISE_ADD","","",163,null],[13,"CUDNN_POINTWISE_MUL","","",163,null],[13,"CUDNN_POINTWISE_MIN","","",163,null],[13,"CUDNN_POINTWISE_MAX","","",163,null],[13,"CUDNN_POINTWISE_SQRT","","",163,null],[13,"CUDNN_POINTWISE_RELU_FWD","","",163,null],[13,"CUDNN_POINTWISE_TANH_FWD","","",163,null],[13,"CUDNN_POINTWISE_SIGMOID_FWD","","",163,null],[13,"CUDNN_POINTWISE_ELU_FWD","","",163,null],[13,"CUDNN_POINTWISE_GELU_FWD","","",163,null],[13,"CUDNN_POINTWISE_SOFTPLUS_FWD","","",163,null],[13,"CUDNN_POINTWISE_SWISH_FWD","","",163,null],[13,"CUDNN_POINTWISE_RELU_BWD","","",163,null],[13,"CUDNN_POINTWISE_TANH_BWD","","",163,null],[13,"CUDNN_POINTWISE_SIGMOID_BWD","","",163,null],[13,"CUDNN_POINTWISE_ELU_BWD","","",163,null],[13,"CUDNN_POINTWISE_GELU_BWD","","",163,null],[13,"CUDNN_POINTWISE_SOFTPLUS_BWD","","",163,null],[13,"CUDNN_POINTWISE_SWISH_BWD","","",163,null],[4,"cudnnGenStatsMode_t","","",null,null],[13,"CUDNN_GENSTATS_SUM_SQSUM","","",164,null],[4,"cudnnBnFinalizeStatsMode_t","","",null,null],[13,"CUDNN_BN_FINALIZE_STATISTICS_TRAINING","","",165,null],[13,"CUDNN_BN_FINALIZE_STATISTICS_INFERENCE","","",165,null],[4,"cudnnBackendAttributeName_t","","",null,null],[13,"CUDNN_ATTR_POINTWISE_MODE","","",166,null],[13,"CUDNN_ATTR_POINTWISE_MATH_PREC","","",166,null],[13,"CUDNN_ATTR_POINTWISE_NAN_PROPAGATION","","",166,null],[13,"CUDNN_ATTR_POINTWISE_RELU_LOWER_CLIP","","",166,null],[13,"CUDNN_ATTR_POINTWISE_RELU_UPPER_CLIP","","",166,null],[13,"CUDNN_ATTR_POINTWISE_RELU_LOWER_CLIP_SLOPE","","",166,null],[13,"CUDNN_ATTR_POINTWISE_ELU_ALPHA","","",166,null],[13,"CUDNN_ATTR_POINTWISE_SOFTPLUS_BETA","","",166,null],[13,"CUDNN_ATTR_POINTWISE_SWISH_BETA","","",166,null],[13,"CUDNN_ATTR_CONVOLUTION_COMP_TYPE","","",166,null],[13,"CUDNN_ATTR_CONVOLUTION_CONV_MODE","","",166,null],[13,"CUDNN_ATTR_CONVOLUTION_DILATIONS","","",166,null],[13,"CUDNN_ATTR_CONVOLUTION_FILTER_STRIDES","","",166,null],[13,"CUDNN_ATTR_CONVOLUTION_POST_PADDINGS","","",166,null],[13,"CUDNN_ATTR_CONVOLUTION_PRE_PADDINGS","","",166,null],[13,"CUDNN_ATTR_CONVOLUTION_SPATIAL_DIMS","","",166,null],[13,"CUDNN_ATTR_ENGINEHEUR_MODE","","",166,null],[13,"CUDNN_ATTR_ENGINEHEUR_OPERATION_GRAPH","","",166,null],[13,"CUDNN_ATTR_ENGINEHEUR_RESULTS","","",166,null],[13,"CUDNN_ATTR_ENGINECFG_ENGINE","","",166,null],[13,"CUDNN_ATTR_ENGINECFG_INTERMEDIATE_INFO","","",166,null],[13,"CUDNN_ATTR_ENGINECFG_KNOB_CHOICES","","",166,null],[13,"CUDNN_ATTR_EXECUTION_PLAN_HANDLE","","",166,null],[13,"CUDNN_ATTR_EXECUTION_PLAN_ENGINE_CONFIG","","",166,null],[13,"CUDNN_ATTR_EXECUTION_PLAN_WORKSPACE_SIZE","","",166,null],[13,"CUDNN_ATTR_EXECUTION_PLAN_COMPUTED_INTERMEDIATE_UIDS","","",166,null],[13,"CUDNN_ATTR_EXECUTION_PLAN_RUN_ONLY_INTERMEDIATE_UIDS","","",166,null],[13,"CUDNN_ATTR_INTERMEDIATE_INFO_UNIQUE_ID","","",166,null],[13,"CUDNN_ATTR_INTERMEDIATE_INFO_SIZE","","",166,null],[13,"CUDNN_ATTR_INTERMEDIATE_INFO_DEPENDENT_DATA_UIDS","","",166,null],[13,"CUDNN_ATTR_INTERMEDIATE_INFO_DEPENDENT_ATTRIBUTES","","",166,null],[13,"CUDNN_ATTR_KNOB_CHOICE_KNOB_TYPE","","",166,null],[13,"CUDNN_ATTR_KNOB_CHOICE_KNOB_VALUE","","",166,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_ALPHA","","",166,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_BETA","","",166,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_CONV_DESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_W","","",166,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_X","","",166,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_Y","","",166,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_ALPHA","","",166,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_BETA","","",166,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_CONV_DESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_W","","",166,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_DX","","",166,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_DY","","",166,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_ALPHA","","",166,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_BETA","","",166,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_CONV_DESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_DW","","",166,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_X","","",166,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_DY","","",166,null],[13,"CUDNN_ATTR_OPERATION_POINTWISE_PW_DESCRIPTOR","","",166,null],[13,"CUDNN_ATTR_OPERATION_POINTWISE_XDESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_POINTWISE_BDESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_POINTWISE_YDESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_POINTWISE_ALPHA1","","",166,null],[13,"CUDNN_ATTR_OPERATION_POINTWISE_ALPHA2","","",166,null],[13,"CUDNN_ATTR_OPERATION_POINTWISE_DXDESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_POINTWISE_DYDESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_GENSTATS_MODE","","",166,null],[13,"CUDNN_ATTR_OPERATION_GENSTATS_MATH_PREC","","",166,null],[13,"CUDNN_ATTR_OPERATION_GENSTATS_XDESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_GENSTATS_SUMDESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_GENSTATS_SQSUMDESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_STATS_MODE","","",166,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_MATH_PREC","","",166,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_Y_SUM_DESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_Y_SQ_SUM_DESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_SCALE_DESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_BIAS_DESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_PREV_RUNNING_MEAN_DESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_PREV_RUNNING_VAR_DESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_UPDATED_RUNNING_MEAN_DESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_UPDATED_RUNNING_VAR_DESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_SAVED_MEAN_DESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_SAVED_INV_STD_DESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_EQ_SCALE_DESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_EQ_BIAS_DESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_ACCUM_COUNT_DESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_EPSILON_DESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_EXP_AVERATE_FACTOR_DESC","","",166,null],[13,"CUDNN_ATTR_OPERATIONGRAPH_HANDLE","","",166,null],[13,"CUDNN_ATTR_OPERATIONGRAPH_OPS","","",166,null],[13,"CUDNN_ATTR_OPERATIONGRAPH_ENGINE_GLOBAL_COUNT","","",166,null],[13,"CUDNN_ATTR_TENSOR_BYTE_ALIGNMENT","","",166,null],[13,"CUDNN_ATTR_TENSOR_DATA_TYPE","","",166,null],[13,"CUDNN_ATTR_TENSOR_DIMENSIONS","","",166,null],[13,"CUDNN_ATTR_TENSOR_STRIDES","","",166,null],[13,"CUDNN_ATTR_TENSOR_VECTOR_COUNT","","",166,null],[13,"CUDNN_ATTR_TENSOR_VECTORIZED_DIMENSION","","",166,null],[13,"CUDNN_ATTR_TENSOR_UNIQUE_ID","","",166,null],[13,"CUDNN_ATTR_TENSOR_IS_VIRTUAL","","",166,null],[13,"CUDNN_ATTR_TENSOR_IS_BY_VALUE","","",166,null],[13,"CUDNN_ATTR_VARIANT_PACK_UNIQUE_IDS","","",166,null],[13,"CUDNN_ATTR_VARIANT_PACK_DATA_POINTERS","","",166,null],[13,"CUDNN_ATTR_VARIANT_PACK_INTERMEDIATES","","",166,null],[13,"CUDNN_ATTR_VARIANT_PACK_WORKSPACE","","",166,null],[13,"CUDNN_ATTR_LAYOUT_INFO_TENSOR_UID","","",166,null],[13,"CUDNN_ATTR_LAYOUT_INFO_TYPES","","",166,null],[13,"CUDNN_ATTR_KNOB_INFO_TYPE","","",166,null],[13,"CUDNN_ATTR_KNOB_INFO_MAXIMUM_VALUE","","",166,null],[13,"CUDNN_ATTR_KNOB_INFO_MINIMUM_VALUE","","",166,null],[13,"CUDNN_ATTR_KNOB_INFO_STRIDE","","",166,null],[13,"CUDNN_ATTR_ENGINE_OPERATION_GRAPH","","",166,null],[13,"CUDNN_ATTR_ENGINE_GLOBAL_INDEX","","",166,null],[13,"CUDNN_ATTR_ENGINE_KNOB_INFO","","",166,null],[13,"CUDNN_ATTR_ENGINE_NUMERICAL_NOTE","","",166,null],[13,"CUDNN_ATTR_ENGINE_LAYOUT_INFO","","",166,null],[13,"CUDNN_ATTR_MATMUL_COMP_TYPE","","",166,null],[13,"CUDNN_ATTR_OPERATION_MATMUL_ADESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_MATMUL_BDESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_MATMUL_CDESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_MATMUL_DESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_MATMUL_IRREGULARLY_STRIDED_BATCH_COUNT","","",166,null],[13,"CUDNN_ATTR_REDUCTION_OPERATOR","","",166,null],[13,"CUDNN_ATTR_REDUCTION_COMP_TYPE","","",166,null],[13,"CUDNN_ATTR_OPERATION_REDUCTION_XDESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_REDUCTION_YDESC","","",166,null],[13,"CUDNN_ATTR_OPERATION_REDUCTION_DESC","","",166,null],[4,"cudnnBackendAttributeType_t","","",null,null],[13,"CUDNN_TYPE_HANDLE","","",167,null],[13,"CUDNN_TYPE_DATA_TYPE","","",167,null],[13,"CUDNN_TYPE_BOOLEAN","","",167,null],[13,"CUDNN_TYPE_INT64","","",167,null],[13,"CUDNN_TYPE_FLOAT","","",167,null],[13,"CUDNN_TYPE_DOUBLE","","",167,null],[13,"CUDNN_TYPE_VOID_PTR","","",167,null],[13,"CUDNN_TYPE_CONVOLUTION_MODE","","",167,null],[13,"CUDNN_TYPE_HEUR_MODE","","",167,null],[13,"CUDNN_TYPE_KNOB_TYPE","","",167,null],[13,"CUDNN_TYPE_NAN_PROPOGATION","","",167,null],[13,"CUDNN_TYPE_NUMERICAL_NOTE","","",167,null],[13,"CUDNN_TYPE_LAYOUT_TYPE","","",167,null],[13,"CUDNN_TYPE_ATTRIB_NAME","","",167,null],[13,"CUDNN_TYPE_POINTWISE_MODE","","",167,null],[13,"CUDNN_TYPE_BACKEND_DESCRIPTOR","","",167,null],[13,"CUDNN_TYPE_GENSTATS_MODE","","",167,null],[13,"CUDNN_TYPE_BN_FINALIZE_STATS_MODE","","",167,null],[13,"CUDNN_TYPE_REDUCTION_OPERATOR_TYPE","","",167,null],[4,"cudnnBackendDescriptorType_t","","",null,null],[13,"CUDNN_BACKEND_POINTWISE_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_CONVOLUTION_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_ENGINE_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_ENGINECFG_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_ENGINEHEUR_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_EXECUTION_PLAN_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_INTERMEDIATE_INFO_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_KNOB_CHOICE_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_KNOB_INFO_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_LAYOUT_INFO_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_OPERATION_CONVOLUTION_FORWARD_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_OPERATION_CONVOLUTION_BACKWARD_FILTER_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_OPERATION_CONVOLUTION_BACKWARD_DATA_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_OPERATION_POINTWISE_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_OPERATION_GEN_STATS_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_OPERATIONGRAPH_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_VARIANT_PACK_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_TENSOR_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_MATMUL_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_OPERATION_MATMUL_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_OPERATION_BN_FINALIZE_STATISTICS_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_REDUCTION_DESCRIPTOR","","",168,null],[13,"CUDNN_BACKEND_OPERATION_REDUCTION_DESCRIPTOR","","",168,null],[4,"cudnnBackendNumericalNote_t","","",null,null],[13,"CUDNN_NUMERICAL_NOTE_TENSOR_CORE","","",169,null],[13,"CUDNN_NUMERICAL_NOTE_DOWN_CONVERT_INPUTS","","",169,null],[13,"CUDNN_NUMERICAL_NOTE_REDUCED_PRECISION_REDUCTION","","",169,null],[13,"CUDNN_NUMERICAL_NOTE_FFT","","",169,null],[13,"CUDNN_NUMERICAL_NOTE_NONDETERMINISTIC","","",169,null],[13,"CUDNN_NUMERICAL_NOTE_WINOGRAD","","",169,null],[13,"CUDNN_NUMERICAL_NOTE_TYPE_COUNT","","",169,null],[4,"cudnnBackendKnobType_t","","",null,null],[13,"CUDNN_KNOB_TYPE_SPLIT_K","","",170,null],[13,"CUDNN_KNOB_TYPE_SWIZZLE","","",170,null],[13,"CUDNN_KNOB_TYPE_TILE_SIZE","","",170,null],[13,"CUDNN_KNOB_TYPE_USE_TEX","","",170,null],[13,"CUDNN_KNOB_TYPE_EDGE","","",170,null],[13,"CUDNN_KNOB_TYPE_KBLOCK","","",170,null],[13,"CUDNN_KNOB_TYPE_LDGA","","",170,null],[13,"CUDNN_KNOB_TYPE_LDGB","","",170,null],[13,"CUDNN_KNOB_TYPE_CHUNK_K","","",170,null],[13,"CUDNN_KNOB_TYPE_SPLIT_H","","",170,null],[13,"CUDNN_KNOB_TYPE_WINO_TILE","","",170,null],[13,"CUDNN_KNOB_TYPE_MULTIPLY","","",170,null],[13,"CUDNN_KNOB_TYPE_SPLIT_K_BUF","","",170,null],[13,"CUDNN_KNOB_TYPE_TILEK","","",170,null],[13,"CUDNN_KNOB_TYPE_STAGES","","",170,null],[13,"CUDNN_KNOB_TYPE_REDUCTION_MODE","","",170,null],[13,"CUDNN_KNOB_TYPE_CTA_SPLIT_K_MODE","","",170,null],[13,"CUDNN_KNOB_TYPE_SPLIT_K_SLC","","",170,null],[13,"CUDNN_KNOB_TYPE_IDX_MODE","","",170,null],[13,"CUDNN_KNOB_TYPE_SLICED","","",170,null],[13,"CUDNN_KNOB_TYPE_SPLIT_RS","","",170,null],[13,"CUDNN_KNOB_TYPE_SINGLEBUFFER","","",170,null],[13,"CUDNN_KNOB_TYPE_LDGC","","",170,null],[13,"CUDNN_KNOB_TYPE_SPECFILT","","",170,null],[13,"CUDNN_KNOB_TYPE_KERNEL_CFG","","",170,null],[13,"CUDNN_KNOB_TYPE_COUNTS","","",170,null],[4,"cudnnBackendLayoutType_t","","",null,null],[13,"CUDNN_LAYOUT_TYPE_PREFERRED_NCHW","","",171,null],[13,"CUDNN_LAYOUT_TYPE_PREFERRED_NHWC","","",171,null],[13,"CUDNN_LAYOUT_TYPE_PREFERRED_PAD4CK","","",171,null],[13,"CUDNN_LAYOUT_TYPE_PREFERRED_PAD8CK","","",171,null],[13,"CUDNN_LAYOUT_TYPE_COUNT","","",171,null],[4,"cudnnBackendHeurMode_t","","",null,null],[13,"CUDNN_HEUR_MODE_INSTANT","","",172,null],[13,"CUDNN_HEUR_MODE_B","","",172,null],[13,"CUDNN_HEUR_MODES_COUNT","","",172,null],[4,"cudaError_t","","CUDA error types",null,null],[13,"cudaSuccess","","The API call returned with no errors. In the case of …",13,null],[13,"cudaErrorInvalidValue","","This indicates that one or more of the parameters passed …",13,null],[13,"cudaErrorMemoryAllocation","","The API call failed because it was unable to allocate …",13,null],[13,"cudaErrorInitializationError","","The API call failed because the CUDA driver and runtime …",13,null],[13,"cudaErrorCudartUnloading","","This indicates that a CUDA Runtime API call cannot be …",13,null],[13,"cudaErrorProfilerDisabled","","This indicates profiler is not initialized for this run. …",13,null],[13,"cudaErrorProfilerNotInitialized","","\\\\deprecated This error return is deprecated as of CUDA …",13,null],[13,"cudaErrorProfilerAlreadyStarted","","\\\\deprecated This error return is deprecated as of CUDA …",13,null],[13,"cudaErrorProfilerAlreadyStopped","","\\\\deprecated This error return is deprecated as of CUDA …",13,null],[13,"cudaErrorInvalidConfiguration","","This indicates that a kernel launch is requesting …",13,null],[13,"cudaErrorInvalidPitchValue","","This indicates that one or more of the pitch-related …",13,null],[13,"cudaErrorInvalidSymbol","","This indicates that the symbol name/identifier passed to …",13,null],[13,"cudaErrorInvalidHostPointer","","This indicates that at least one host pointer passed to …",13,null],[13,"cudaErrorInvalidDevicePointer","","This indicates that at least one device pointer passed to …",13,null],[13,"cudaErrorInvalidTexture","","This indicates that the texture passed to the API call is …",13,null],[13,"cudaErrorInvalidTextureBinding","","This indicates that the texture binding is not valid. …",13,null],[13,"cudaErrorInvalidChannelDescriptor","","This indicates that the channel descriptor passed to the …",13,null],[13,"cudaErrorInvalidMemcpyDirection","","This indicates that the direction of the memcpy passed to …",13,null],[13,"cudaErrorAddressOfConstant","","This indicated that the user has taken the address of a …",13,null],[13,"cudaErrorTextureFetchFailed","","This indicated that a texture fetch was not able to be …",13,null],[13,"cudaErrorTextureNotBound","","This indicated that a texture was not bound for access. …",13,null],[13,"cudaErrorSynchronizationError","","This indicated that a synchronization operation had …",13,null],[13,"cudaErrorInvalidFilterSetting","","This indicates that a non-float texture was being …",13,null],[13,"cudaErrorInvalidNormSetting","","This indicates that an attempt was made to read a …",13,null],[13,"cudaErrorMixedDeviceExecution","","Mixing of device and device emulation code was not …",13,null],[13,"cudaErrorNotYetImplemented","","This indicates that the API call is not yet implemented. …",13,null],[13,"cudaErrorMemoryValueTooLarge","","This indicated that an emulated device pointer exceeded …",13,null],[13,"cudaErrorStubLibrary","","This indicates that the CUDA driver that the application …",13,null],[13,"cudaErrorInsufficientDriver","","This indicates that the installed NVIDIA CUDA driver is …",13,null],[13,"cudaErrorCallRequiresNewerDriver","","This indicates that the API call requires a newer CUDA …",13,null],[13,"cudaErrorInvalidSurface","","This indicates that the surface passed to the API call is …",13,null],[13,"cudaErrorDuplicateVariableName","","This indicates that multiple global or constant variables …",13,null],[13,"cudaErrorDuplicateTextureName","","This indicates that multiple textures (across separate …",13,null],[13,"cudaErrorDuplicateSurfaceName","","This indicates that multiple surfaces (across separate …",13,null],[13,"cudaErrorDevicesUnavailable","","This indicates that all CUDA devices are busy or …",13,null],[13,"cudaErrorIncompatibleDriverContext","","This indicates that the current context is not compatible …",13,null],[13,"cudaErrorMissingConfiguration","","The device function being invoked (usually via …",13,null],[13,"cudaErrorPriorLaunchFailure","","This indicated that a previous kernel launch failed. This …",13,null],[13,"cudaErrorLaunchMaxDepthExceeded","","This error indicates that a device runtime grid launch …",13,null],[13,"cudaErrorLaunchFileScopedTex","","This error indicates that a grid launch did not occur …",13,null],[13,"cudaErrorLaunchFileScopedSurf","","This error indicates that a grid launch did not occur …",13,null],[13,"cudaErrorSyncDepthExceeded","","This error indicates that a call to …",13,null],[13,"cudaErrorLaunchPendingCountExceeded","","This error indicates that a device runtime grid launch …",13,null],[13,"cudaErrorInvalidDeviceFunction","","The requested device function does not exist or is not …",13,null],[13,"cudaErrorNoDevice","","This indicates that no CUDA-capable devices were detected …",13,null],[13,"cudaErrorInvalidDevice","","This indicates that the device ordinal supplied by the …",13,null],[13,"cudaErrorDeviceNotLicensed","","This indicates that the device doesn\'t have a valid Grid …",13,null],[13,"cudaErrorSoftwareValidityNotEstablished","","By default, the CUDA runtime may perform a minimal set of …",13,null],[13,"cudaErrorStartupFailure","","This indicates an internal startup failure in the CUDA …",13,null],[13,"cudaErrorInvalidKernelImage","","This indicates that the device kernel image is invalid.",13,null],[13,"cudaErrorDeviceUninitialized","","This most frequently indicates that there is no context …",13,null],[13,"cudaErrorMapBufferObjectFailed","","This indicates that the buffer object could not be mapped.",13,null],[13,"cudaErrorUnmapBufferObjectFailed","","This indicates that the buffer object could not be …",13,null],[13,"cudaErrorArrayIsMapped","","This indicates that the specified array is currently …",13,null],[13,"cudaErrorAlreadyMapped","","This indicates that the resource is already mapped.",13,null],[13,"cudaErrorNoKernelImageForDevice","","This indicates that there is no kernel image available …",13,null],[13,"cudaErrorAlreadyAcquired","","This indicates that a resource has already been acquired.",13,null],[13,"cudaErrorNotMapped","","This indicates that a resource is not mapped.",13,null],[13,"cudaErrorNotMappedAsArray","","This indicates that a mapped resource is not available …",13,null],[13,"cudaErrorNotMappedAsPointer","","This indicates that a mapped resource is not available …",13,null],[13,"cudaErrorECCUncorrectable","","This indicates that an uncorrectable ECC error was …",13,null],[13,"cudaErrorUnsupportedLimit","","This indicates that the ::cudaLimit passed to the API …",13,null],[13,"cudaErrorDeviceAlreadyInUse","","This indicates that a call tried to access an …",13,null],[13,"cudaErrorPeerAccessUnsupported","","This error indicates that P2P access is not supported …",13,null],[13,"cudaErrorInvalidPtx","","A PTX compilation failed. The runtime may fall back to …",13,null],[13,"cudaErrorInvalidGraphicsContext","","This indicates an error with the OpenGL or DirectX …",13,null],[13,"cudaErrorNvlinkUncorrectable","","This indicates that an uncorrectable NVLink error was …",13,null],[13,"cudaErrorJitCompilerNotFound","","This indicates that the PTX JIT compiler library was not …",13,null],[13,"cudaErrorUnsupportedPtxVersion","","This indicates that the provided PTX was compiled with an …",13,null],[13,"cudaErrorJitCompilationDisabled","","This indicates that the JIT compilation was disabled. The …",13,null],[13,"cudaErrorInvalidSource","","This indicates that the device kernel source is invalid.",13,null],[13,"cudaErrorFileNotFound","","This indicates that the file specified was not found.",13,null],[13,"cudaErrorSharedObjectSymbolNotFound","","This indicates that a link to a shared object failed to …",13,null],[13,"cudaErrorSharedObjectInitFailed","","This indicates that initialization of a shared object …",13,null],[13,"cudaErrorOperatingSystem","","This error indicates that an OS call failed.",13,null],[13,"cudaErrorInvalidResourceHandle","","This indicates that a resource handle passed to the API …",13,null],[13,"cudaErrorIllegalState","","This indicates that a resource required by the API call …",13,null],[13,"cudaErrorSymbolNotFound","","This indicates that a named symbol was not found. …",13,null],[13,"cudaErrorNotReady","","This indicates that asynchronous operations issued …",13,null],[13,"cudaErrorIllegalAddress","","The device encountered a load or store instruction on an …",13,null],[13,"cudaErrorLaunchOutOfResources","","This indicates that a launch did not occur because it did …",13,null],[13,"cudaErrorLaunchTimeout","","This indicates that the device kernel took too long to …",13,null],[13,"cudaErrorLaunchIncompatibleTexturing","","This error indicates a kernel launch that uses an …",13,null],[13,"cudaErrorPeerAccessAlreadyEnabled","","This error indicates that a call to …",13,null],[13,"cudaErrorPeerAccessNotEnabled","","This error indicates that ::cudaDeviceDisablePeerAccess() …",13,null],[13,"cudaErrorSetOnActiveProcess","","This indicates that the user has called …",13,null],[13,"cudaErrorContextIsDestroyed","","This error indicates that the context current to the …",13,null],[13,"cudaErrorAssert","","An assert triggered in device code during kernel …",13,null],[13,"cudaErrorTooManyPeers","","This error indicates that the hardware resources required …",13,null],[13,"cudaErrorHostMemoryAlreadyRegistered","","This error indicates that the memory range passed to …",13,null],[13,"cudaErrorHostMemoryNotRegistered","","This error indicates that the pointer passed to …",13,null],[13,"cudaErrorHardwareStackError","","Device encountered an error in the call stack during …",13,null],[13,"cudaErrorIllegalInstruction","","The device encountered an illegal instruction during …",13,null],[13,"cudaErrorMisalignedAddress","","The device encountered a load or store instruction on a …",13,null],[13,"cudaErrorInvalidAddressSpace","","While executing a kernel, the device encountered an …",13,null],[13,"cudaErrorInvalidPc","","The device encountered an invalid program counter. This …",13,null],[13,"cudaErrorLaunchFailure","","An exception occurred on the device while executing a …",13,null],[13,"cudaErrorCooperativeLaunchTooLarge","","This error indicates that the number of blocks launched …",13,null],[13,"cudaErrorNotPermitted","","This error indicates the attempted operation is not …",13,null],[13,"cudaErrorNotSupported","","This error indicates the attempted operation is not …",13,null],[13,"cudaErrorSystemNotReady","","This error indicates that the system is not yet ready to …",13,null],[13,"cudaErrorSystemDriverMismatch","","This error indicates that there is a mismatch between the …",13,null],[13,"cudaErrorCompatNotSupportedOnDevice","","This error indicates that the system was upgraded to run …",13,null],[13,"cudaErrorStreamCaptureUnsupported","","The operation is not permitted when the stream is …",13,null],[13,"cudaErrorStreamCaptureInvalidated","","The current capture sequence on the stream has been …",13,null],[13,"cudaErrorStreamCaptureMerge","","The operation would have resulted in a merge of two …",13,null],[13,"cudaErrorStreamCaptureUnmatched","","The capture was not initiated in this stream.",13,null],[13,"cudaErrorStreamCaptureUnjoined","","The capture sequence contains a fork that was not joined …",13,null],[13,"cudaErrorStreamCaptureIsolation","","A dependency would have been created which crosses the …",13,null],[13,"cudaErrorStreamCaptureImplicit","","The operation would have resulted in a disallowed …",13,null],[13,"cudaErrorCapturedEvent","","The operation is not permitted on an event which was last …",13,null],[13,"cudaErrorStreamCaptureWrongThread","","A stream capture sequence not initiated with the …",13,null],[13,"cudaErrorTimeout","","This indicates that the wait operation has timed out.",13,null],[13,"cudaErrorGraphExecUpdateFailure","","This error indicates that the graph update was not …",13,null],[13,"cudaErrorUnknown","","This indicates that an unknown internal error has …",13,null],[13,"cudaErrorApiFailureBase","","Any unhandled CUDA driver error is added to this value …",13,null],[4,"cudaOutputMode_t","","CUDA Profiler Output modes",null,null],[13,"cudaKeyValuePair","","< Output mode Key-Value pair format.",58,null],[13,"cudaCSV","","< Output mode Comma separated values format.",58,null],[4,"cudaDataType","","",null,null],[13,"CUDA_R_16F","","",109,null],[13,"CUDA_C_16F","","",109,null],[13,"CUDA_R_16BF","","",109,null],[13,"CUDA_C_16BF","","",109,null],[13,"CUDA_R_32F","","",109,null],[13,"CUDA_C_32F","","",109,null],[13,"CUDA_R_64F","","",109,null],[13,"CUDA_C_64F","","",109,null],[13,"CUDA_R_4I","","",109,null],[13,"CUDA_C_4I","","",109,null],[13,"CUDA_R_4U","","",109,null],[13,"CUDA_C_4U","","",109,null],[13,"CUDA_R_8I","","",109,null],[13,"CUDA_C_8I","","",109,null],[13,"CUDA_R_8U","","",109,null],[13,"CUDA_C_8U","","",109,null],[13,"CUDA_R_16I","","",109,null],[13,"CUDA_C_16I","","",109,null],[13,"CUDA_R_16U","","",109,null],[13,"CUDA_C_16U","","",109,null],[13,"CUDA_R_32I","","",109,null],[13,"CUDA_C_32I","","",109,null],[13,"CUDA_R_32U","","",109,null],[13,"CUDA_C_32U","","",109,null],[13,"CUDA_R_64I","","",109,null],[13,"CUDA_C_64I","","",109,null],[13,"CUDA_R_64U","","",109,null],[13,"CUDA_C_64U","","",109,null],[3,"API","","Defines the Cuda cuDNN API.",null,null],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","rcudnn::cuda","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","rcudnn","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from","rcudnn::utils","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","rcudnn","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",137,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",157,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",203,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",163,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",183,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",146,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",120,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",141,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",144,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",194,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",164,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",184,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",214,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",185,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",149,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",143,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",169,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",168,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",199,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",156,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",98,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",152,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",99,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",126,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",210,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",155,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",115,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",190,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",132,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",202,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",96,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",117,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",150,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",208,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",121,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",154,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",204,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",193,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",216,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",127,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",217,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",118,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",197,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",123,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",205,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",148,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",97,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",138,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",206,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",196,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",189,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",147,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",211,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",119,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",200,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",215,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",130,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",213,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",129,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",201,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",212,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",124,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",191,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",128,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",145,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",131,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",116,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",133,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",209,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",136,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",142,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",122,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",80,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",207,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",195,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",165,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",125,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","",157,[[],["cudnnconvolutionbwddataalgoperf_t",3]]],[11,"default","","",162,[[],["cudnnconvolutionbwdfilteralgoperf_t",3]]],[11,"default","","",156,[[],["cudnnconvolutionfwdalgoperf_t",3]]],[11,"hash","","",14,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",131,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",125,[[]]],[11,"hash","","",161,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",100,[[]]],[11,"hash","","",109,[[]]],[11,"hash","","",124,[[]]],[11,"hash","","",169,[[]]],[11,"hash","","",65,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",151,[[]]],[11,"hash","","",66,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",137,[[]]],[11,"hash","","",158,[[]]],[11,"hash","","",63,[[]]],[11,"hash","","",135,[[]]],[11,"hash","","",119,[[]]],[11,"hash","","",149,[[]]],[11,"hash","","",122,[[]]],[11,"hash","","",154,[[]]],[11,"hash","","",146,[[]]],[11,"hash","","",159,[[]]],[11,"hash","","",120,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",113,[[]]],[11,"hash","","",102,[[]]],[11,"hash","","",121,[[]]],[11,"hash","","",148,[[]]],[11,"hash","","",129,[[]]],[11,"hash","","",94,[[]]],[11,"hash","","",114,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",132,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",99,[[]]],[11,"hash","","",130,[[]]],[11,"hash","","",170,[[]]],[11,"hash","","",143,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",165,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",168,[[]]],[11,"hash","","",104,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",152,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",105,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",134,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",166,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",150,[[]]],[11,"hash","","",138,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",111,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",136,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",153,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",141,[[]]],[11,"hash","","",115,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",147,[[]]],[11,"hash","","",101,[[]]],[11,"hash","","",128,[[]]],[11,"hash","","",118,[[]]],[11,"hash","","",110,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",167,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",163,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",171,[[]]],[11,"hash","","",116,[[]]],[11,"hash","","",172,[[]]],[11,"hash","","",126,[[]]],[11,"hash","","",155,[[]]],[11,"hash","","",145,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",164,[[]]],[11,"hash","","",106,[[]]],[11,"hash","","",133,[[]]],[11,"hash","","",112,[[]]],[11,"hash","","",160,[[]]],[11,"hash","","",123,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",127,[[]]],[11,"hash","","",144,[[]]],[11,"hash","","",80,[[]]],[11,"clone","","",71,[[],["cudadeviceprop",3]]],[11,"clone","","",124,[[],["cudnnpoolingmode_t",4]]],[11,"clone","","",154,[[],["cudnnconvolutionmode_t",4]]],[11,"clone","","",155,[[],["cudnnreordertype_t",4]]],[11,"clone","","",113,[[],["cudnnmathtype_t",4]]],[11,"clone","","",33,[[],["cudastreamattrvalue",19]]],[11,"clone","","",53,[[],["cudasharedcarveout",4]]],[11,"clone","","",215,[[],["cudnnfusedopsconstparamstruct",3]]],[11,"clone","","",214,[[],["cudnnconvolutionstruct",3]]],[11,"clone","","",60,[[],["cudamempoolattr",4]]],[11,"clone","","",134,[[],["cudnnconvolutionfwdalgo_t",4]]],[11,"clone","","",193,[[],["cugraphexec_st",3]]],[11,"clone","","",148,[[],["cudnnrnnclipmode_t",4]]],[11,"clone","","",102,[[],["cudasurfaceformatmode",4]]],[11,"clone","","",168,[[],["cudnnbackenddescriptortype_t",4]]],[11,"clone","","",108,[[],["cudatexturedesc",3]]],[11,"clone","","",57,[[],["cudamemrangeattribute",4]]],[11,"clone","","",103,[[],["surfacereference",3]]],[11,"clone","","",44,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_2",3]]],[11,"clone","","",171,[[],["cudnnbackendlayouttype_t",4]]],[11,"clone","","",217,[[],["cudnnfusedopsplanstruct",3]]],[11,"clone","","",37,[[],["cudakernelnodeattrid",4]]],[11,"clone","","",84,[[],["cudaexternalsemaphoresignalparams",3]]],[11,"clone","","",11,[[],["cudaroundmode",4]]],[11,"clone","","",204,[[],["cudnnctclossstruct",3]]],[11,"clone","","",23,[[],["cudamemcpy3dparms",3]]],[11,"clone","","",105,[[],["cudatexturefiltermode",4]]],[11,"clone","","",73,[[],["cudaipcmemhandle_st",3]]],[11,"clone","","",36,[[],["cudagraphicscubeface",4]]],[11,"clone","","",141,[[],["cudnnseverity_t",4]]],[11,"clone","","",99,[[],["cudagraphnodetype",4]]],[11,"clone","","",118,[[],["cudnnoptensorop_t",4]]],[11,"clone","","",94,[[],["cudacgscope",4]]],[11,"clone","","",40,[[],["cudaresourceviewformat",4]]],[11,"clone","","",183,[[],["cudamipmappedarray",3]]],[11,"clone","","",43,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",158,[[],["cudnnfusedops_t",4]]],[11,"clone","","",164,[[],["cudnngenstatsmode_t",4]]],[11,"clone","","",39,[[],["cudaresourcetype",4]]],[11,"clone","","",107,[[],["texturereference",3]]],[11,"clone","","",122,[[],["cudnnsoftmaxalgorithm_t",4]]],[11,"clone","","",21,[[],["cudaextent",3]]],[11,"clone","","",63,[[],["cudamemaccessflags",4]]],[11,"clone","","",59,[[],["cudadeviceattr",4]]],[11,"clone","","",212,[[],["cudnnseqdatastruct",3]]],[11,"clone","","",138,[[],["cudnnctclossalgo_t",4]]],[11,"clone","","",48,[[],["cudapointerattributes",3]]],[11,"clone","","",42,[[],["cudaresourcedesc__bindgen_ty_1",19]]],[11,"clone","","",52,[[],["cudasharedmemconfig",4]]],[11,"clone","","",201,[[],["cudnnspatialtransformerstruct",3]]],[11,"clone","","",111,[[],["cudnnerrquerymode_t",4]]],[11,"clone","","",132,[[],["cudnnnormops_t",4]]],[11,"clone","","",125,[[],["cudnnactivationmode_t",4]]],[11,"clone","","",216,[[],["cudnnfusedopsvariantparamstruct",3]]],[11,"clone","","",75,[[],["cudaexternalmemoryhandledesc",3]]],[11,"clone","","",129,[[],["cudnnbatchnormops_t",4]]],[11,"clone","","",70,[[],["cuuuid_st",3]]],[11,"clone","","",203,[[],["cudnnreducetensorstruct",3]]],[11,"clone","","",144,[[],["cudnnrnnmode_t",4]]],[11,"clone","","",98,[[],["cudaexternalsemaphorewaitnodeparams",3]]],[11,"clone","","",182,[[],["cudaarray",3]]],[11,"clone","","",186,[[],["cuevent_st",3]]],[11,"clone","","",210,[[],["cudnnpersistentrnnplan",3]]],[11,"clone","","",123,[[],["cudnnsoftmaxmode_t",4]]],[11,"clone","","",17,[[],["cudaarraysparseproperties__bindgen_ty_1",3]]],[11,"clone","","",191,[[],["cufunc_st",3]]],[11,"clone","","",196,[[],["cudnntensorstruct",3]]],[11,"clone","","",15,[[],["cudachannelformatdesc",3]]],[11,"clone","","",50,[[],["cudafuncattribute",4]]],[11,"clone","","",169,[[],["cudnnbackendnumericalnote_t",4]]],[11,"clone","","",110,[[],["cudnnstatus_t",4]]],[11,"clone","","",189,[[],["cugraph_st",3]]],[11,"clone","","",131,[[],["cudnnnormalgo_t",4]]],[11,"clone","","",185,[[],["custream_st",3]]],[11,"clone","","",78,[[],["cudaexternalmemorybufferdesc",3]]],[11,"clone","","",67,[[],["cudamempoolprops",3]]],[11,"clone","","",38,[[],["cudakernelnodeattrvalue",19]]],[11,"clone","","",159,[[],["cudnnfusedopsconstparamlabel_t",4]]],[11,"clone","","",151,[[],["cudnnmultiheadattnweightkind_t",4]]],[11,"clone","","",142,[[],["cudnndebug_t",3]]],[11,"clone","","",79,[[],["cudaexternalmemorymipmappedarraydesc",3]]],[11,"clone","","",133,[[],["cudnnsamplertype_t",4]]],[11,"clone","","",83,[[],["cudaexternalsemaphorehandledesc__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",205,[[],["cudnntensortransformstruct",3]]],[11,"clone","","",114,[[],["cudnnnanpropagation_t",4]]],[11,"clone","","",80,[[],["cudaexternalsemaphorehandletype",4]]],[11,"clone","","",81,[[],["cudaexternalsemaphorehandledesc",3]]],[11,"clone","","",213,[[],["cudnnattnstruct",3]]],[11,"clone","","",119,[[],["cudnnreducetensorop_t",4]]],[11,"clone","","",89,[[],["cudaexternalsemaphorewaitparams",3]]],[11,"clone","","",92,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_2",19]]],[11,"clone","","",195,[[],["cudnnruntimetag_t",3]]],[11,"clone","","",35,[[],["cudagraphicsmapflags",4]]],[11,"clone","","",30,[[],["cudastreamcapturemode",4]]],[11,"clone","","",86,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",143,[[],["cudnnforwardmode_t",4]]],[11,"clone","","",32,[[],["cudastreamattrid",4]]],[11,"clone","","",58,[[],["cudaoutputmode",4]]],[11,"clone","","",19,[[],["cudamemcpykind",4]]],[11,"clone","","",20,[[],["cudapitchedptr",3]]],[11,"clone","","",45,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_3",3]]],[11,"clone","","",100,[[],["cudagraphexecupdateresult",4]]],[11,"clone","","",190,[[],["cugraphnode_st",3]]],[11,"clone","","",197,[[],["cudnnpoolingstruct",3]]],[11,"clone","","",29,[[],["cudastreamcapturestatus",4]]],[11,"clone","","",130,[[],["cudnnnormmode_t",4]]],[11,"clone","","",198,[[],["cudnnfilterstruct",3]]],[11,"clone","","",13,[[],["cudaerror",4]]],[11,"clone","","",156,[[],["cudnnconvolutionfwdalgoperf_t",3]]],[11,"clone","","",211,[[],["cudnnrnndatastruct",3]]],[11,"clone","","",115,[[],["cudnndeterminism_t",4]]],[11,"clone","","",172,[[],["cudnnbackendheurmode_t",4]]],[11,"clone","","",51,[[],["cudafunccache",4]]],[11,"clone","","",64,[[],["cudamemaccessdesc",3]]],[11,"clone","","",66,[[],["cudamemallocationhandletype",4]]],[11,"clone","","",206,[[],["cudnndropoutstruct",3]]],[11,"clone","","",160,[[],["cudnnfusedopspointerplaceholder_t",4]]],[11,"clone","","",152,[[],["cudnnwgradmode_t",4]]],[11,"clone","","",76,[[],["cudaexternalmemoryhandledesc__bindgen_ty_1",19]]],[11,"clone","","",139,[[],["cudnnalgorithm_t",3]]],[11,"clone","","",24,[[],["cudamemcpy3dpeerparms",3]]],[11,"clone","","",150,[[],["cudnnseqdataaxis_t",4]]],[11,"clone","","",18,[[],["cudamemorytype",4]]],[11,"clone","","",209,[[],["cudnnrnnstruct",3]]],[11,"clone","","",55,[[],["cudalimit",4]]],[11,"clone","","",41,[[],["cudaresourcedesc",3]]],[11,"clone","","",120,[[],["cudnnreducetensorindices_t",4]]],[11,"clone","","",136,[[],["cudnnconvolutionbwddataalgo_t",4]]],[11,"clone","","",192,[[],["cumempoolhandle_st",3]]],[11,"clone","","",200,[[],["cudnnactivationstruct",3]]],[11,"clone","","",199,[[],["cudnnlrnstruct",3]]],[11,"clone","","",161,[[],["cudnnfusedopsvariantparamlabel_t",4]]],[11,"clone","","",31,[[],["cudasynchronizationpolicy",4]]],[11,"clone","","",104,[[],["cudatextureaddressmode",4]]],[11,"clone","","",166,[[],["cudnnbackendattributename_t",4]]],[11,"clone","","",127,[[],["cudnndivnormmode_t",4]]],[11,"clone","","",54,[[],["cudacomputemode",4]]],[11,"clone","","",88,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_3",3]]],[11,"clone","","",65,[[],["cudamemallocationtype",4]]],[11,"clone","","",157,[[],["cudnnconvolutionbwddataalgoperf_t",3]]],[11,"clone","","",207,[[],["cudnnalgorithmstruct",3]]],[11,"clone","","",22,[[],["cudapos",3]]],[11,"clone","","",87,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_2",19]]],[11,"clone","","",109,[[],["cudadatatype_t",4]]],[11,"clone","","",170,[[],["cudnnbackendknobtype_t",4]]],[11,"clone","","",184,[[],["cudagraphicsresource",3]]],[11,"clone","","",91,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",116,[[],["cudnntensorformat_t",4]]],[11,"clone","","",69,[[],["cudadevicep2pattr",4]]],[11,"clone","","",126,[[],["cudnnlrnmode_t",4]]],[11,"clone","","",61,[[],["cudamemlocationtype",4]]],[11,"clone","","",90,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1",3]]],[11,"clone","","",47,[[],["cudaresourceviewdesc",3]]],[11,"clone","","",140,[[],["cudnnalgorithm_t_algorithm",19]]],[11,"clone","","",121,[[],["cudnnindicestype_t",4]]],[11,"clone","","",147,[[],["cudnnrnninputmode_t",4]]],[11,"clone","","",85,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1",3]]],[11,"clone","","",93,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_3",3]]],[11,"clone","","",162,[[],["cudnnconvolutionbwdfilteralgoperf_t",3]]],[11,"clone","","",106,[[],["cudatexturereadmode",4]]],[11,"clone","","",137,[[],["cudnnrnnalgo_t",4]]],[11,"clone","","",56,[[],["cudamemoryadvise",4]]],[11,"clone","","",49,[[],["cudafuncattributes",3]]],[11,"clone","","",26,[[],["cudaaccessproperty",4]]],[11,"clone","","",165,[[],["cudnnbnfinalizestatsmode_t",4]]],[11,"clone","","",101,[[],["cudasurfaceboundarymode",4]]],[11,"clone","","",202,[[],["cudnnoptensorstruct",3]]],[11,"clone","","",145,[[],["cudnnrnnbiasmode_t",4]]],[11,"clone","","",208,[[],["cudnnalgorithmperformancestruct",3]]],[11,"clone","","",96,[[],["cudakernelnodeparams",3]]],[11,"clone","","",112,[[],["cudnndatatype_t",4]]],[11,"clone","","",27,[[],["cudaaccesspolicywindow",3]]],[11,"clone","","",25,[[],["cudamemsetparams",3]]],[11,"clone","","",187,[[],["cuexternalmemory_st",3]]],[11,"clone","","",153,[[],["cudnnlossnormalizationmode_t",4]]],[11,"clone","","",146,[[],["cudnndirectionmode_t",4]]],[11,"clone","","",117,[[],["cudnnfoldingdirection_t",4]]],[11,"clone","","",194,[[],["cudnncontext",3]]],[11,"clone","","",163,[[],["cudnnpointwisemode_t",4]]],[11,"clone","","",62,[[],["cudamemlocation",3]]],[11,"clone","","",34,[[],["cudagraphicsregisterflags",4]]],[11,"clone","","",97,[[],["cudaexternalsemaphoresignalnodeparams",3]]],[11,"clone","","",46,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_4",3]]],[11,"clone","","",82,[[],["cudaexternalsemaphorehandledesc__bindgen_ty_1",19]]],[11,"clone","","",72,[[],["cudaipceventhandle_st",3]]],[11,"clone","","",12,[[],["dim3",3]]],[11,"clone","","",16,[[],["cudaarraysparseproperties",3]]],[11,"clone","","",77,[[],["cudaexternalmemoryhandledesc__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",95,[[],["cudalaunchparams",3]]],[11,"clone","","",135,[[],["cudnnconvolutionbwdfilteralgo_t",4]]],[11,"clone","","",167,[[],["cudnnbackendattributetype_t",4]]],[11,"clone","","",74,[[],["cudaexternalmemoryhandletype",4]]],[11,"clone","","",14,[[],["cudachannelformatkind",4]]],[11,"clone","","",128,[[],["cudnnbatchnormmode_t",4]]],[11,"clone","","",149,[[],["cudnnrnndatalayout_t",4]]],[11,"clone","","",188,[[],["cuexternalsemaphore_st",3]]],[11,"clone","","",68,[[],["cudamempoolptrexportdata",3]]],[11,"clone","","",28,[[],["cudahostnodeparams",3]]],[11,"eq","","",34,[[["cudagraphicsregisterflags",4]],["bool",15]]],[11,"eq","","",66,[[["cudamemallocationhandletype",4]],["bool",15]]],[11,"eq","","",63,[[["cudamemaccessflags",4]],["bool",15]]],[11,"eq","","",137,[[["cudnnrnnalgo_t",4]],["bool",15]]],[11,"eq","","",172,[[["cudnnbackendheurmode_t",4]],["bool",15]]],[11,"eq","","",148,[[["cudnnrnnclipmode_t",4]],["bool",15]]],[11,"eq","","",143,[[["cudnnforwardmode_t",4]],["bool",15]]],[11,"eq","","",39,[[["cudaresourcetype",4]],["bool",15]]],[11,"eq","","",160,[[["cudnnfusedopspointerplaceholder_t",4]],["bool",15]]],[11,"eq","","",167,[[["cudnnbackendattributetype_t",4]],["bool",15]]],[11,"eq","","",105,[[["cudatexturefiltermode",4]],["bool",15]]],[11,"eq","","",161,[[["cudnnfusedopsvariantparamlabel_t",4]],["bool",15]]],[11,"eq","","",141,[[["cudnnseverity_t",4]],["bool",15]]],[11,"eq","","",117,[[["cudnnfoldingdirection_t",4]],["bool",15]]],[11,"eq","","",151,[[["cudnnmultiheadattnweightkind_t",4]],["bool",15]]],[11,"eq","","",51,[[["cudafunccache",4]],["bool",15]]],[11,"eq","","",102,[[["cudasurfaceformatmode",4]],["bool",15]]],[11,"eq","","",146,[[["cudnndirectionmode_t",4]],["bool",15]]],[11,"eq","","",18,[[["cudamemorytype",4]],["bool",15]]],[11,"eq","","",11,[[["cudaroundmode",4]],["bool",15]]],[11,"eq","","",147,[[["cudnnrnninputmode_t",4]],["bool",15]]],[11,"eq","","",126,[[["cudnnlrnmode_t",4]],["bool",15]]],[11,"eq","","",40,[[["cudaresourceviewformat",4]],["bool",15]]],[11,"eq","","",129,[[["cudnnbatchnormops_t",4]],["bool",15]]],[11,"eq","","",56,[[["cudamemoryadvise",4]],["bool",15]]],[11,"eq","","",52,[[["cudasharedmemconfig",4]],["bool",15]]],[11,"eq","","",159,[[["cudnnfusedopsconstparamlabel_t",4]],["bool",15]]],[11,"eq","","",118,[[["cudnnoptensorop_t",4]],["bool",15]]],[11,"eq","","",37,[[["cudakernelnodeattrid",4]],["bool",15]]],[11,"eq","","",101,[[["cudasurfaceboundarymode",4]],["bool",15]]],[11,"eq","","",169,[[["cudnnbackendnumericalnote_t",4]],["bool",15]]],[11,"eq","","",127,[[["cudnndivnormmode_t",4]],["bool",15]]],[11,"eq","","",115,[[["cudnndeterminism_t",4]],["bool",15]]],[11,"eq","","",158,[[["cudnnfusedops_t",4]],["bool",15]]],[11,"eq","","",145,[[["cudnnrnnbiasmode_t",4]],["bool",15]]],[11,"eq","","",119,[[["cudnnreducetensorop_t",4]],["bool",15]]],[11,"eq","","",111,[[["cudnnerrquerymode_t",4]],["bool",15]]],[11,"eq","","",54,[[["cudacomputemode",4]],["bool",15]]],[11,"eq","","",114,[[["cudnnnanpropagation_t",4]],["bool",15]]],[11,"eq","","",53,[[["cudasharedcarveout",4]],["bool",15]]],[11,"eq","","",36,[[["cudagraphicscubeface",4]],["bool",15]]],[11,"eq","","",135,[[["cudnnconvolutionbwdfilteralgo_t",4]],["bool",15]]],[11,"eq","","",144,[[["cudnnrnnmode_t",4]],["bool",15]]],[11,"eq","","",57,[[["cudamemrangeattribute",4]],["bool",15]]],[11,"eq","","",164,[[["cudnngenstatsmode_t",4]],["bool",15]]],[11,"eq","","",138,[[["cudnnctclossalgo_t",4]],["bool",15]]],[11,"eq","","",14,[[["cudachannelformatkind",4]],["bool",15]]],[11,"eq","","",132,[[["cudnnnormops_t",4]],["bool",15]]],[11,"eq","","",166,[[["cudnnbackendattributename_t",4]],["bool",15]]],[11,"eq","","",168,[[["cudnnbackenddescriptortype_t",4]],["bool",15]]],[11,"eq","","",149,[[["cudnnrnndatalayout_t",4]],["bool",15]]],[11,"eq","","",31,[[["cudasynchronizationpolicy",4]],["bool",15]]],[11,"eq","","",113,[[["cudnnmathtype_t",4]],["bool",15]]],[11,"eq","","",59,[[["cudadeviceattr",4]],["bool",15]]],[11,"eq","","",50,[[["cudafuncattribute",4]],["bool",15]]],[11,"eq","","",165,[[["cudnnbnfinalizestatsmode_t",4]],["bool",15]]],[11,"eq","","",112,[[["cudnndatatype_t",4]],["bool",15]]],[11,"eq","","",152,[[["cudnnwgradmode_t",4]],["bool",15]]],[11,"eq","","",106,[[["cudatexturereadmode",4]],["bool",15]]],[11,"eq","","",35,[[["cudagraphicsmapflags",4]],["bool",15]]],[11,"eq","","",124,[[["cudnnpoolingmode_t",4]],["bool",15]]],[11,"eq","","",131,[[["cudnnnormalgo_t",4]],["bool",15]]],[11,"eq","","",130,[[["cudnnnormmode_t",4]],["bool",15]]],[11,"eq","","",80,[[["cudaexternalsemaphorehandletype",4]],["bool",15]]],[11,"eq","","",116,[[["cudnntensorformat_t",4]],["bool",15]]],[11,"eq","","",99,[[["cudagraphnodetype",4]],["bool",15]]],[11,"eq","","",133,[[["cudnnsamplertype_t",4]],["bool",15]]],[11,"eq","","",29,[[["cudastreamcapturestatus",4]],["bool",15]]],[11,"eq","","",171,[[["cudnnbackendlayouttype_t",4]],["bool",15]]],[11,"eq","","",120,[[["cudnnreducetensorindices_t",4]],["bool",15]]],[11,"eq","","",94,[[["cudacgscope",4]],["bool",15]]],[11,"eq","","",134,[[["cudnnconvolutionfwdalgo_t",4]],["bool",15]]],[11,"eq","","",163,[[["cudnnpointwisemode_t",4]],["bool",15]]],[11,"eq","","",58,[[["cudaoutputmode",4]],["bool",15]]],[11,"eq","","",154,[[["cudnnconvolutionmode_t",4]],["bool",15]]],[11,"eq","","",170,[[["cudnnbackendknobtype_t",4]],["bool",15]]],[11,"eq","","",13,[[["cudaerror",4]],["bool",15]]],[11,"eq","","",123,[[["cudnnsoftmaxmode_t",4]],["bool",15]]],[11,"eq","","",155,[[["cudnnreordertype_t",4]],["bool",15]]],[11,"eq","","",55,[[["cudalimit",4]],["bool",15]]],[11,"eq","","",109,[[["cudadatatype_t",4]],["bool",15]]],[11,"eq","","",32,[[["cudastreamattrid",4]],["bool",15]]],[11,"eq","","",150,[[["cudnnseqdataaxis_t",4]],["bool",15]]],[11,"eq","","",30,[[["cudastreamcapturemode",4]],["bool",15]]],[11,"eq","","",104,[[["cudatextureaddressmode",4]],["bool",15]]],[11,"eq","","",19,[[["cudamemcpykind",4]],["bool",15]]],[11,"eq","","",100,[[["cudagraphexecupdateresult",4]],["bool",15]]],[11,"eq","","",26,[[["cudaaccessproperty",4]],["bool",15]]],[11,"eq","","",125,[[["cudnnactivationmode_t",4]],["bool",15]]],[11,"eq","","",110,[[["cudnnstatus_t",4]],["bool",15]]],[11,"eq","","",136,[[["cudnnconvolutionbwddataalgo_t",4]],["bool",15]]],[11,"eq","","",69,[[["cudadevicep2pattr",4]],["bool",15]]],[11,"eq","","",153,[[["cudnnlossnormalizationmode_t",4]],["bool",15]]],[11,"eq","","",121,[[["cudnnindicestype_t",4]],["bool",15]]],[11,"eq","","",60,[[["cudamempoolattr",4]],["bool",15]]],[11,"eq","","",122,[[["cudnnsoftmaxalgorithm_t",4]],["bool",15]]],[11,"eq","","",65,[[["cudamemallocationtype",4]],["bool",15]]],[11,"eq","","",74,[[["cudaexternalmemoryhandletype",4]],["bool",15]]],[11,"eq","","",128,[[["cudnnbatchnormmode_t",4]],["bool",15]]],[11,"eq","","",61,[[["cudamemlocationtype",4]],["bool",15]]],[11,"drop","","",173,[[]]],[11,"drop","","",174,[[]]],[11,"drop","rcudnn::cuda","",0,[[]]],[11,"drop","rcudnn","",175,[[]]],[11,"drop","","",176,[[]]],[11,"drop","","",177,[[]]],[11,"drop","","",178,[[]]],[11,"drop","","",179,[[]]],[11,"drop","","",180,[[]]],[11,"drop","","",181,[[]]],[11,"clone","","",218,[[],["api",3]]],[11,"clone","","",173,[[],["activationdescriptor",3]]],[11,"clone","","",174,[[],["convolutiondescriptor",3]]],[11,"clone","","",175,[[],["cudnn",3]]],[11,"clone","","",176,[[],["dropoutdescriptor",3]]],[11,"clone","","",10,[[],["error",4]]],[11,"clone","","",177,[[],["filterdescriptor",3]]],[11,"clone","","",178,[[],["normalizationdescriptor",3]]],[11,"clone","","",179,[[],["poolingdescriptor",3]]],[11,"clone","","",181,[[],["tensordescriptor",3]]],[11,"clone","rcudnn::utils","",1,[[],["datatype",4]]],[11,"default","","Provides default values for ScalParams.",9,[[],["scalparams",3]]],[11,"fmt","rcudnn","",218,[[["formatter",3]],["result",6]]],[11,"fmt","","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","rcudnn::cuda","",0,[[["formatter",3]],["result",6]]],[11,"fmt","rcudnn","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"fmt","","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","","",181,[[["formatter",3]],["result",6]]],[11,"fmt","rcudnn::utils","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","rcudnn","",10,[[["formatter",3]],["result",6]]],[11,"new","","Initializes a new CUDA cuDNN Activation Descriptor.",173,[[["cudnnactivationmode_t",4]],[["activationdescriptor",3],["error",4],["result",4]]]],[11,"from_c","","Initializes a new CUDA cuDNN Activation Descriptor from …",173,[[["cudnnactivationdescriptor_t",6]],["activationdescriptor",3]]],[11,"id_c","","Returns the CUDA cuDNN Activation Descriptor as its C …",173,[[],["cudnnactivationdescriptor_t",6]]],[11,"create_activation_descriptor","","Create a generic CUDA cuDNN ActivationDescriptor.",218,[[],[["error",4],["cudnnactivationdescriptor_t",6],["result",4]]]],[11,"destroy_activation_descriptor","","Destroys a CUDA cuDNN Activation Descriptor.",218,[[["cudnnactivationdescriptor_t",6]],[["error",4],["result",4]]]],[11,"set_activation_descriptor","","Initializes a generic CUDA cuDNN Activation Descriptor …",218,[[["cudnnnanpropagation_t",4],["f64",15],["cudnnactivationmode_t",4],["cudnnactivationdescriptor_t",6]],[["error",4],["result",4]]]],[11,"activation_forward","","Computes an activation forward function.",218,[[["cudnnhandle_t",6],["cudnntensordescriptor_t",6],["cudnnactivationdescriptor_t",6]],[["error",4],["result",4]]]],[11,"activation_backward","","Computes an activation backward function.",218,[[["cudnnhandle_t",6],["cudnntensordescriptor_t",6],["cudnnactivationdescriptor_t",6]],[["error",4],["result",4]]]],[11,"create_filter_descriptor","","Creates a generic CUDA cuDNN Filter Descriptor.",218,[[],[["error",4],["result",4],["cudnnfilterdescriptor_t",6]]]],[11,"destroy_filter_descriptor","","Destroys a CUDA cuDNN Filter Descriptor.",218,[[["cudnnfilterdescriptor_t",6]],[["error",4],["result",4]]]],[11,"set_filter_descriptor","","Initializes a generic CUDA cuDNN Filter Descriptor with …",218,[[["c_int",6],["cudnnfilterdescriptor_t",6],["cudnndatatype_t",4],["cudnntensorformat_t",4]],[["error",4],["result",4]]]],[11,"find_convolution_forward_algorithm","","cuDNN Convolution Configuration",218,[[["cudnnhandle_t",6],["cudnnconvolutiondescriptor_t",6],["cudnnfilterdescriptor_t",6],["cudnntensordescriptor_t",6]],[["vec",3],["result",4],["error",4]]]],[11,"get_convolution_forward_workspace_size","","Returns the workspace size in byte, which are needed for …",218,[[["cudnnhandle_t",6],["cudnnconvolutiondescriptor_t",6],["cudnnfilterdescriptor_t",6],["cudnntensordescriptor_t",6],["cudnnconvolutionfwdalgo_t",4]],[["usize",15],["error",4],["result",4]]]],[11,"find_convolution_backward_filter_algorithm","","Returns the most performant convolutional backward data …",218,[[["cudnnhandle_t",6],["cudnnconvolutiondescriptor_t",6],["cudnnfilterdescriptor_t",6],["cudnntensordescriptor_t",6]],[["error",4],["vec",3],["result",4]]]],[11,"get_convolution_backward_filter_workspace_size","","Returns the workspace size in byte, which are needed for …",218,[[["cudnnhandle_t",6],["cudnnconvolutiondescriptor_t",6],["cudnnconvolutionbwdfilteralgo_t",4],["cudnnfilterdescriptor_t",6],["cudnntensordescriptor_t",6]],[["usize",15],["error",4],["result",4]]]],[11,"find_convolution_backward_data_algorithm","","Returns the most performant convolutional backward data …",218,[[["cudnnhandle_t",6],["cudnnconvolutiondescriptor_t",6],["cudnnfilterdescriptor_t",6],["cudnntensordescriptor_t",6]],[["error",4],["result",4],["vec",3]]]],[11,"get_convolution_backward_data_workspace_size","","Returns the workspace size in byte, which are needed for …",218,[[["cudnnhandle_t",6],["cudnnconvolutionbwddataalgo_t",4],["cudnnconvolutiondescriptor_t",6],["cudnnfilterdescriptor_t",6],["cudnntensordescriptor_t",6]],[["usize",15],["error",4],["result",4]]]],[11,"create_convolution_descriptor","","Creates a generic CUDA cuDNN Convolution Descriptor.",218,[[],[["cudnnconvolutiondescriptor_t",6],["error",4],["result",4]]]],[11,"destroy_convolution_descriptor","","Destroys a CUDA cuDNN Convolution Descriptor.",218,[[["cudnnconvolutiondescriptor_t",6]],[["error",4],["result",4]]]],[11,"set_convolution_descriptor","","Initializes a generic CUDA cuDNN Convolution Descriptor …",218,[[["cudnnconvolutiondescriptor_t",6],["cudnndatatype_t",4],["cudnnconvolutionmode_t",4],["c_int",6]],[["error",4],["result",4]]]],[11,"convolution_forward","","Computes a convolution forward function.",218,[[["size_t",6],["cudnnhandle_t",6],["cudnnconvolutiondescriptor_t",6],["cudnntensordescriptor_t",6],["cudnnfilterdescriptor_t",6],["cudnnconvolutionfwdalgo_t",4]],[["error",4],["result",4]]]],[11,"convolution_backward_bias","","Computes a convolution backward function w.r.t the bias.",218,[[["cudnntensordescriptor_t",6],["cudnnhandle_t",6]],[["error",4],["result",4]]]],[11,"convolution_backward_filter","","Computes a convolution backward function w.r.t filter …",218,[[["cudnnfilterdescriptor_t",6],["cudnnhandle_t",6],["cudnnconvolutiondescriptor_t",6],["cudnnconvolutionbwdfilteralgo_t",4],["cudnntensordescriptor_t",6],["size_t",6]],[["error",4],["result",4]]]],[11,"convolution_backward_data","","Computes a convolution backward function w.r.t the output …",218,[[["cudnnhandle_t",6],["cudnnconvolutionbwddataalgo_t",4],["cudnnconvolutiondescriptor_t",6],["cudnnfilterdescriptor_t",6],["cudnntensordescriptor_t",6],["size_t",6]],[["error",4],["result",4]]]],[11,"cuda_allocate_device_memory","","Initialize the CUDA cuDNN API with needed context and …",218,[[["usize",15]],[["error",4],["result",4]]]],[11,"cuda_free_device_memory","","Destroys the CUDA cuDNN context and resources associated …",218,[[],[["error",4],["result",4]]]],[11,"create_dropout_descriptor","","Create a generic CUDA cuDNN DropoutDescriptor",218,[[],[["error",4],["cudnndropoutdescriptor_t",6],["result",4]]]],[11,"destroy_dropout_descriptor","","Destroys a CUDA cuDNN Dropout Descriptor.",218,[[["cudnndropoutdescriptor_t",6]],[["error",4],["result",4]]]],[11,"dropout_get_states_size","","Get the states size (GPU memory).",218,[[["cudnnhandle_t",6]],[["usize",15],["error",4],["result",4]]]],[11,"dropout_get_reserve_space_size","","Get the reserve space size.",218,[[["cudnntensordescriptor_t",6]],[["usize",15],["error",4],["result",4]]]],[11,"set_dropout_descriptor","","Initializes a generic CUDA cuDNN Activation Descriptor …",218,[[["usize",15],["cudnndropoutdescriptor_t",6],["cudnnhandle_t",6],["f32",15],["c_ulonglong",6]],[["error",4],["result",4]]]],[11,"dropout_forward","","Computes the dropout forward function.",218,[[["usize",15],["cudnnhandle_t",6],["cudnndropoutdescriptor_t",6],["cudnntensordescriptor_t",6]],[["error",4],["result",4]]]],[11,"dropout_backward","","Computes the dropout backward function.",218,[[["usize",15],["cudnnhandle_t",6],["cudnndropoutdescriptor_t",6],["cudnntensordescriptor_t",6]],[["error",4],["result",4]]]],[11,"create_lrn_descriptor","","Creates a generic CUDA cuDNN LRN Descriptor.",218,[[],[["error",4],["result",4],["cudnnlrndescriptor_t",6]]]],[11,"destroy_lrn_descriptor","","Destroys a CUDA cuDNN LRN Descriptor.",218,[[["cudnnlrndescriptor_t",6]],[["error",4],["result",4]]]],[11,"set_lrn_descriptor","","Initializes a generic CUDA cuDNN LRN Descriptor with …",218,[[["cudnnlrndescriptor_t",6],["c_uint",6],["c_double",6]],[["error",4],["result",4]]]],[11,"lrn_cross_channel_forward","","Computes an LRN cross channel forward function.",218,[[["cudnnhandle_t",6],["cudnnlrnmode_t",4],["cudnntensordescriptor_t",6],["cudnnlrndescriptor_t",6]],[["error",4],["result",4]]]],[11,"lrn_cross_channel_backward","","Computes an LRN cross channel backward function.",218,[[["cudnnhandle_t",6],["cudnnlrnmode_t",4],["cudnntensordescriptor_t",6],["cudnnlrndescriptor_t",6]],[["error",4],["result",4]]]],[11,"divisive_normalization_forward","","Computes an devisive normalization forward function.",218,[[["cudnnhandle_t",6],["cudnndivnormmode_t",4],["cudnntensordescriptor_t",6],["cudnnlrndescriptor_t",6]],[["error",4],["result",4]]]],[11,"divisive_normalization_backward","","Computes an devisive normalization backward function.",218,[[["cudnnhandle_t",6],["cudnndivnormmode_t",4],["cudnntensordescriptor_t",6],["cudnnlrndescriptor_t",6]],[["error",4],["result",4]]]],[11,"create_pooling_descriptor","","Creates a generic CUDA cuDNN Pooling Descriptor.",218,[[],[["error",4],["result",4],["cudnnpoolingdescriptor_t",6]]]],[11,"destroy_pooling_descriptor","","Destroys a CUDA cuDNN Pooling Descriptor.",218,[[["cudnnpoolingdescriptor_t",6]],[["error",4],["result",4]]]],[11,"set_pooling_descriptor","","Initializes a generic CUDA cuDNN Pooling Descriptor with …",218,[[["cudnnnanpropagation_t",4],["c_int",6],["cudnnpoolingmode_t",4],["cudnnpoolingdescriptor_t",6]],[["error",4],["result",4]]]],[11,"get_pooling_descriptor","","Return information about a generic CUDA cuDNN Pooling …",218,[[["c_int",6],["cudnnpoolingdescriptor_t",6]],[["error",4],["result",4]]]],[11,"set_pooling_2d_descriptor","","Initializes a generic CUDA cuDNN Pooling Descriptor with …",218,[[["cudnnnanpropagation_t",4],["c_int",6],["cudnnpoolingmode_t",4],["cudnnpoolingdescriptor_t",6]],[["error",4],["result",4]]]],[11,"get_pooling_2d_descriptor","","Return information about a generic CUDA cuDNN Pooling …",218,[[["cudnnpoolingdescriptor_t",6]],[["error",4],["result",4]]]],[11,"get_pooling_forward_output_dim","","Initializes a generic CUDA cuDNN Pooling Descriptor with …",218,[[["cudnntensordescriptor_t",6],["c_int",6],["cudnnpoolingdescriptor_t",6]],[["error",4],["result",4]]]],[11,"pooling_forward","","Computes a pooling forward function.",218,[[["cudnnhandle_t",6],["cudnntensordescriptor_t",6],["cudnnpoolingdescriptor_t",6]],[["error",4],["result",4]]]],[11,"pooling_backward","","Computes a pooling backward function.",218,[[["cudnnhandle_t",6],["cudnntensordescriptor_t",6],["cudnnpoolingdescriptor_t",6]],[["error",4],["result",4]]]],[11,"get_rnn_workspace_size","","Returns the workspace size in byte, which are needed for …",218,[[["cudnnhandle_t",6],["i32",15],["cudnntensordescriptor_t",6],["vec",3],["cudnnrnndescriptor_t",6]],[["usize",15],["error",4],["result",4]]]],[11,"get_rnn_training_reserve_size","","Size of Reserve Space for RNN Training […",218,[[["cudnnhandle_t",6],["cudnntensordescriptor_t",6],["vec",3],["cudnnrnndescriptor_t",6],["c_int",6]],[["usize",15],["error",4],["result",4]]]],[11,"get_rnn_params_size","","cudnnGetRNNParamsSize[1] Query the amount of parameter …",218,[[["datatype",4],["cudnnhandle_t",6],["cudnntensordescriptor_t",6],["cudnnrnndescriptor_t",6]],[["usize",15],["error",4],["result",4]]]],[11,"create_rnn_descriptor","","Creates a generic CUDA cuDNN RNN Descriptor.",218,[[],[["error",4],["result",4],["cudnnrnndescriptor_t",6]]]],[11,"create_rnn_data_descriptor","","cudnnCreateRNNDataDescriptor() …",218,[[],[["cudnnrnndatadescriptor_t",6],["error",4],["result",4]]]],[11,"destroy_rnn_descriptor","","Destroys a CUDA cuDNN RNN Descriptor.",218,[[["cudnnrnndescriptor_t",6]],[["error",4],["result",4]]]],[11,"set_rnn_descriptor","","Initializes a generic CUDA cuDNN RNN Descriptor with …",218,[[["datatype",4],["cudnnrnnmode_t",4],["cudnndirectionmode_t",4],["cudnnrnninputmode_t",4],["cudnnhandle_t",6],["cudnndropoutdescriptor_t",6],["i32",15],["cudnnrnnalgo_t",4],["cudnnrnndescriptor_t",6]],[["error",4],["result",4]]]],[11,"set_rnn_matrix_math_type","","Set RNN Matrix Math Type cudnnSetRNNMatrixMathType …",218,[[["cudnnmathtype_t",4],["cudnnrnndescriptor_t",6]],[["error",4],["result",4]]]],[11,"set_rnn_padding_mode","","Set RNN Padding Model cudnnSetRNNPaddingMode This …",218,[[["cudnnrnndescriptor_t",6],["cudnnrnnpaddingmode_t",6]],[["error",4],["result",4]]]],[11,"rnn_forward_training","","Trains a RNN through the Forward Process",218,[[["usize",15],["cudnntensordescriptor_t",6],["cudnnfilterdescriptor_t",6],["cudnnhandle_t",6],["vec",3],["cudnnrnndescriptor_t",6],["c_int",6]],[["error",4],["result",4]]]],[11,"rnn_forward_inference","","Execute a RNN without Training This routine executes the …",218,[[["size_t",6],["cudnnhandle_t",6],["cudnntensordescriptor_t",6],["cudnnfilterdescriptor_t",6],["cudnnrnndescriptor_t",6],["c_int",6]],[["error",4],["result",4]]]],[11,"rnn_backward_data","","CUDNN Rnn Backward Data This routine executes the …",218,[[["usize",15],["cudnnhandle_t",6],["cudnntensordescriptor_t",6],["cudnnfilterdescriptor_t",6],["cudnnrnndescriptor_t",6],["c_int",6]],[["error",4],["result",4]]]],[11,"rnn_backward_weights","","CUDNN Rnn Backward Weights This routine accumulates …",218,[[["usize",15],["cudnnhandle_t",6],["cudnntensordescriptor_t",6],["cudnnfilterdescriptor_t",6],["cudnnrnndescriptor_t",6],["c_int",6]],[["error",4],["result",4]]]],[11,"softmax_forward","","Computes an softmax forward function.",218,[[["cudnnhandle_t",6],["cudnnsoftmaxalgorithm_t",4],["cudnnsoftmaxmode_t",4],["cudnntensordescriptor_t",6]],[["error",4],["result",4]]]],[11,"softmax_backward","","Computes an softmax backward function.",218,[[["cudnnhandle_t",6],["cudnnsoftmaxalgorithm_t",4],["cudnnsoftmaxmode_t",4],["cudnntensordescriptor_t",6]],[["error",4],["result",4]]]],[11,"create_tensor_descriptor","","Creates a generic CUDA cuDNN Tensor Descriptor.",218,[[],[["cudnntensordescriptor_t",6],["error",4],["result",4]]]],[11,"destroy_tensor_descriptor","","Destroys a CUDA cuDNN Tensor Descriptor.",218,[[["cudnntensordescriptor_t",6]],[["error",4],["result",4]]]],[11,"set_tensor_descriptor","","Initializes a generic CUDA cuDNN Tensor Descriptor with …",218,[[["cudnntensordescriptor_t",6],["cudnndatatype_t",4],["c_int",6]],[["error",4],["result",4]]]],[11,"get_tensor_descriptor","","Returns informations about a generic CUDA cuDNN Tensor …",218,[[["cudnntensordescriptor_t",6],["c_int",6]],[["error",4],["result",4]]]],[11,"transform_tensor","","Transforms a CUDA cuDNN Tensor from to another Tensor …",218,[[["cudnntensordescriptor_t",6],["cudnnhandle_t",6]],[["error",4],["result",4]]]],[11,"add_tensor","","Adds the scaled values from one a CUDA cuDNN Tensor to …",218,[[["cudnntensordescriptor_t",6],["cudnnhandle_t",6]],[["error",4],["result",4]]]],[11,"set_tensor","","Sets all elements of a tensor to a given value.",218,[[["cudnntensordescriptor_t",6],["cudnnhandle_t",6]],[["error",4],["result",4]]]],[11,"scale_tensor","","Scales all elements of a tensor by a given factor.",218,[[["cudnntensordescriptor_t",6],["cudnnhandle_t",6]],[["error",4],["result",4]]]],[11,"init","","Initialize the CUDA cuDNN API with needed context and …",218,[[],[["error",4],["cudnnhandle_t",6],["result",4]]]],[11,"destroy","","Destroys the CUDA cuDNN context and resources associated …",218,[[["cudnnhandle_t",6]],[["error",4],["result",4]]]],[11,"get_version","","Returns the version of the CUDA cuDNN API.",218,[[],["usize",15]]],[11,"cudnn_data_type","","Convert to CUDNN Data Type",218,[[["datatype",4]],["cudnndatatype_t",4]]],[11,"new","","Initializes a new CUDA cuDNN ConvolutionDescriptor.",174,[[["datatype",4]],[["error",4],["result",4],["convolutiondescriptor",3]]]],[11,"from_c","","Initializes a new CUDA cuDNN ConvolutionDescriptor from …",174,[[["cudnnconvolutiondescriptor_t",6]],["convolutiondescriptor",3]]],[11,"id_c","","Returns the CUDA cuDNN ConvolutionDescriptor as its C …",174,[[],["cudnnconvolutiondescriptor_t",6]]],[11,"new","","Initializes a new CUDA cuDNN context.",175,[[],[["error",4],["result",4],["cudnn",3]]]],[11,"from_c","","Initializes a new CUDA cuDNN Context from its C type.",175,[[["cudnnhandle_t",6]],["cudnn",3]]],[11,"id_c","","Returns the CUDA cuDNN Context as its C type.",175,[[],["cudnnhandle_t",6]]],[11,"version","","Returns the version of the CUDA cuDNN library.",175,[[],["usize",15]]],[11,"init_convolution","","Initializes the parameters and configurations for running …",175,[[["filterdescriptor",3],["tensordescriptor",3],["convolutiondescriptor",3]],[["convolutionconfig",3],["result",4],["error",4]]]],[11,"init_normalization","","Initializes the parameters and configurations for running …",175,[[["u32",15],["f64",15]],[["error",4],["result",4],["normalizationconfig",3]]]],[11,"init_pooling","","Initializes the parameters and configurations for running …",175,[[],[["result",4],["error",4],["poolingconfig",3]]]],[11,"init_activation","","Initializes the parameters and configurations for running …",175,[[],[["activationconfig",3],["error",4],["result",4]]]],[11,"init_dropout","","Initializes the parameters and configurations for running …",175,[[["f32",15],["u64",15]],[["dropoutconfig",3],["error",4],["result",4]]]],[11,"init_rnn","","Initialize RNN",175,[[["datatype",4],["rnndescriptor",3],["cudnnrnnmode_t",4],["cudnndirectionmode_t",4],["cudnnrnninputmode_t",4],["cudnndropoutdescriptor_t",6],["i32",15],["cudnnrnnalgo_t",4],["cudnnmathtype_t",4]],[["error",4],["result",4],["rnnconfig",3]]]],[11,"rnn_forward","","Train & Return Results for RNN",175,[[["tensordescriptor",3],["vec",3],["rnnconfig",3],["tensordescriptor",3],["filterdescriptor",3]],[["error",4],["result",4]]]],[11,"rnn_backward_data","","Train & Return Results for RNN",175,[[["tensordescriptor",3],["vec",3],["rnnconfig",3],["tensordescriptor",3],["filterdescriptor",3]],[["error",4],["result",4]]]],[11,"rnn_backward_weights","","Train & Return Results for RNN",175,[[["tensordescriptor",3],["vec",3],["rnnconfig",3],["tensordescriptor",3],["filterdescriptor",3]],[["error",4],["result",4]]]],[11,"sigmoid_forward","","Computes the forward Sigmoid Activation function.",175,[[["activationconfig",3],["tensordescriptor",3],["scalparams",3]],[["error",4],["result",4]]]],[11,"sigmoid_backward","","Computes the backward Sigmoid Activation function.",175,[[["activationconfig",3],["tensordescriptor",3],["scalparams",3]],[["error",4],["result",4]]]],[11,"relu_forward","","Computes the forward Rectified Linear Activation function.",175,[[["activationconfig",3],["tensordescriptor",3],["scalparams",3]],[["error",4],["result",4]]]],[11,"relu_backward","","Computes the backward Rectified Linear Activation …",175,[[["activationconfig",3],["tensordescriptor",3],["scalparams",3]],[["error",4],["result",4]]]],[11,"tanh_forward","","Computes the forward Hyperbolic Tangent Activation …",175,[[["activationconfig",3],["tensordescriptor",3],["scalparams",3]],[["error",4],["result",4]]]],[11,"tanh_backward","","Computes the backward Hyperbolic Tangent Activation …",175,[[["activationconfig",3],["tensordescriptor",3],["scalparams",3]],[["error",4],["result",4]]]],[11,"convolution_forward","","Computes the forward Convolution function.",175,[[["convolutionconfig",3],["tensordescriptor",3],["scalparams",3]],[["error",4],["result",4]]]],[11,"convolution_backward_bias","","Computes the backward Convolution function w.r.t the bias.",175,[[["tensordescriptor",3],["scalparams",3]],[["error",4],["result",4]]]],[11,"convolution_backward_filter","","Computes the backward Convolution function w.r.t the …",175,[[["convolutionconfig",3],["tensordescriptor",3],["scalparams",3]],[["error",4],["result",4]]]],[11,"convolution_backward_data","","Computes the backward Convolution function w.r.t the data.",175,[[["convolutionconfig",3],["tensordescriptor",3],["scalparams",3]],[["error",4],["result",4]]]],[11,"softmax_forward","","Computes the forward softmax function.",175,[[["tensordescriptor",3],["scalparams",3]],[["error",4],["result",4]]]],[11,"softmax_backward","","Computes the backward softmax function.",175,[[["tensordescriptor",3],["scalparams",3]],[["error",4],["result",4]]]],[11,"log_softmax_forward","","Computes the forward logarithmic softmax function.",175,[[["tensordescriptor",3],["scalparams",3]],[["error",4],["result",4]]]],[11,"log_softmax_backward","","Computes the backward logarithmic softmax function.",175,[[["tensordescriptor",3],["scalparams",3]],[["error",4],["result",4]]]],[11,"lrn_forward","","Computes the forward local response normalization …",175,[[["scalparams",3],["normalizationconfig",3],["tensordescriptor",3]],[["error",4],["result",4]]]],[11,"lrn_backward","","Computes the backward local response normalization …",175,[[["scalparams",3],["normalizationconfig",3],["tensordescriptor",3]],[["error",4],["result",4]]]],[11,"pooling_avg_forward","","Computes the forward average pooling function.",175,[[["scalparams",3],["tensordescriptor",3],["poolingconfig",3]],[["error",4],["result",4]]]],[11,"pooling_avg_backward","","Computes the backward average pooling function.",175,[[["scalparams",3],["tensordescriptor",3],["poolingconfig",3]],[["error",4],["result",4]]]],[11,"pooling_max_forward","","Computes the forward max pooling function.",175,[[["scalparams",3],["tensordescriptor",3],["poolingconfig",3]],[["error",4],["result",4]]]],[11,"pooling_max_backward","","Computes the backward max pooling function.",175,[[["scalparams",3],["tensordescriptor",3],["poolingconfig",3]],[["error",4],["result",4]]]],[11,"dropout_forward","","Computes probability and applies it to Dropout",175,[[["dropoutconfig",3],["tensordescriptor",3]],[["error",4],["result",4]]]],[11,"dropout_backward","","Computes probability and applies it to Dropout",175,[[["dropoutconfig",3],["tensordescriptor",3]],[["error",4],["result",4]]]],[11,"new","","Initializes a new CUDA cuDNN Dropout Descriptor.",176,[[["usize",15],["f32",15],["u64",15],["cudnn",3]],[["result",4],["error",4],["dropoutdescriptor",3]]]],[11,"get_required_size","","Get the size for a tensor",176,[[],["usize",15]]],[11,"from_c","","Initializes a new CUDA cuDNN Tensor Descriptor from its C …",176,[[["cudnndropoutdescriptor_t",6]],["dropoutdescriptor",3]]],[11,"id_c","","Returns the CUDA cuDNN Tensor Descriptor as its C type.",176,[[],["cudnndropoutdescriptor_t",6]]],[11,"new","","Initializes a new CUDA cuDNN FilterDescriptor.",177,[[["datatype",4]],[["error",4],["result",4],["filterdescriptor",3]]]],[11,"from_c","","Initializes a new CUDA cuDNN FilterDescriptor from its C …",177,[[["cudnnfilterdescriptor_t",6]],["filterdescriptor",3]]],[11,"id_c","","Returns the CUDA cuDNN FilterDescriptor as its C type.",177,[[],["cudnnfilterdescriptor_t",6]]],[11,"new","","Initializes a new CUDA cuDNN LRNDescriptor.",178,[[["u32",15],["f64",15]],[["error",4],["result",4],["normalizationdescriptor",3]]]],[11,"from_c","","Initializes a new CUDA cuDNN NormalizationDescriptor from …",178,[[["cudnnlrndescriptor_t",6]],["normalizationdescriptor",3]]],[11,"id_c","","Returns the CUDA cuDNN NormalizationDescriptor as its C …",178,[[],["cudnnlrndescriptor_t",6]]],[11,"new","","Initializes a new CUDA cuDNN Pooling Descriptor.",179,[[["cudnnpoolingmode_t",4]],[["poolingdescriptor",3],["error",4],["result",4]]]],[11,"from_c","","Initializes a new CUDA cuDNN PoolingDescriptor from its C …",179,[[["cudnnpoolingdescriptor_t",6]],["poolingdescriptor",3]]],[11,"id_c","","Returns the CUDA cuDNN Pooling Descriptor as its C type.",179,[[],["cudnnpoolingdescriptor_t",6]]],[11,"new","","Initializes a new CUDA cuDNN RnnDescriptor.",180,[[["datatype",4],["cudnnrnnmode_t",4],["dropoutconfig",3],["cudnndirectionmode_t",4],["cudnn",3],["cudnnrnninputmode_t",4],["i32",15],["cudnnrnnalgo_t",4],["cudnnrnnpaddingmode_t",6]],[["error",4],["result",4],["rnndescriptor",3]]]],[11,"from_c","","Initializes a new CUDA cuDNN RnnDescriptor from its C …",180,[[["cudnnrnndescriptor_t",6],["dropoutconfig",3]],["rnndescriptor",3]]],[11,"id_c","","Returns the CUDA cuDNN RnnDescriptor as its C type.",180,[[],["cudnnrnndescriptor_t",6]]],[11,"new","","Initializes a new CUDA cuDNN Tensor Descriptor.",181,[[["datatype",4]],[["tensordescriptor",3],["result",4],["error",4]]]],[11,"from_c","","Initializes a new CUDA cuDNN Tensor Descriptor from its C …",181,[[["cudnntensordescriptor_t",6]],["tensordescriptor",3]]],[11,"id_c","","Returns the CUDA cuDNN Tensor Descriptor as its C type.",181,[[],["cudnntensordescriptor_t",6]]]],"p":[[3,"CudaDeviceMemory"],[4,"DataType"],[8,"DataTypeInfo"],[3,"ConvolutionConfig"],[3,"NormalizationConfig"],[3,"PoolingConfig"],[3,"ActivationConfig"],[3,"DropoutConfig"],[3,"RnnConfig"],[3,"ScalParams"],[4,"Error"],[4,"cudaRoundMode"],[3,"dim3"],[4,"cudaError_t"],[4,"cudaChannelFormatKind"],[3,"cudaChannelFormatDesc"],[3,"cudaArraySparseProperties"],[3,"cudaArraySparseProperties__bindgen_ty_1"],[4,"cudaMemoryType"],[4,"cudaMemcpyKind"],[3,"cudaPitchedPtr"],[3,"cudaExtent"],[3,"cudaPos"],[3,"cudaMemcpy3DParms"],[3,"cudaMemcpy3DPeerParms"],[3,"cudaMemsetParams"],[4,"cudaAccessProperty"],[3,"cudaAccessPolicyWindow"],[3,"cudaHostNodeParams"],[4,"cudaStreamCaptureStatus"],[4,"cudaStreamCaptureMode"],[4,"cudaSynchronizationPolicy"],[4,"cudaStreamAttrID"],[19,"cudaStreamAttrValue"],[4,"cudaGraphicsRegisterFlags"],[4,"cudaGraphicsMapFlags"],[4,"cudaGraphicsCubeFace"],[4,"cudaKernelNodeAttrID"],[19,"cudaKernelNodeAttrValue"],[4,"cudaResourceType"],[4,"cudaResourceViewFormat"],[3,"cudaResourceDesc"],[19,"cudaResourceDesc__bindgen_ty_1"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4"],[3,"cudaResourceViewDesc"],[3,"cudaPointerAttributes"],[3,"cudaFuncAttributes"],[4,"cudaFuncAttribute"],[4,"cudaFuncCache"],[4,"cudaSharedMemConfig"],[4,"cudaSharedCarveout"],[4,"cudaComputeMode"],[4,"cudaLimit"],[4,"cudaMemoryAdvise"],[4,"cudaMemRangeAttribute"],[4,"cudaOutputMode_t"],[4,"cudaDeviceAttr"],[4,"cudaMemPoolAttr"],[4,"cudaMemLocationType"],[3,"cudaMemLocation"],[4,"cudaMemAccessFlags"],[3,"cudaMemAccessDesc"],[4,"cudaMemAllocationType"],[4,"cudaMemAllocationHandleType"],[3,"cudaMemPoolProps"],[3,"cudaMemPoolPtrExportData"],[4,"cudaDeviceP2PAttr"],[3,"CUuuid_st"],[3,"cudaDeviceProp"],[3,"cudaIpcEventHandle_st"],[3,"cudaIpcMemHandle_st"],[4,"cudaExternalMemoryHandleType"],[3,"cudaExternalMemoryHandleDesc"],[19,"cudaExternalMemoryHandleDesc__bindgen_ty_1"],[3,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalMemoryBufferDesc"],[3,"cudaExternalMemoryMipmappedArrayDesc"],[4,"cudaExternalSemaphoreHandleType"],[3,"cudaExternalSemaphoreHandleDesc"],[19,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1"],[3,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1"],[19,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3"],[3,"cudaExternalSemaphoreWaitParams"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1"],[19,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3"],[4,"cudaCGScope"],[3,"cudaLaunchParams"],[3,"cudaKernelNodeParams"],[3,"cudaExternalSemaphoreSignalNodeParams"],[3,"cudaExternalSemaphoreWaitNodeParams"],[4,"cudaGraphNodeType"],[4,"cudaGraphExecUpdateResult"],[4,"cudaSurfaceBoundaryMode"],[4,"cudaSurfaceFormatMode"],[3,"surfaceReference"],[4,"cudaTextureAddressMode"],[4,"cudaTextureFilterMode"],[4,"cudaTextureReadMode"],[3,"textureReference"],[3,"cudaTextureDesc"],[4,"cudaDataType"],[4,"cudnnStatus_t"],[4,"cudnnErrQueryMode_t"],[4,"cudnnDataType_t"],[4,"cudnnMathType_t"],[4,"cudnnNanPropagation_t"],[4,"cudnnDeterminism_t"],[4,"cudnnTensorFormat_t"],[4,"cudnnFoldingDirection_t"],[4,"cudnnOpTensorOp_t"],[4,"cudnnReduceTensorOp_t"],[4,"cudnnReduceTensorIndices_t"],[4,"cudnnIndicesType_t"],[4,"cudnnSoftmaxAlgorithm_t"],[4,"cudnnSoftmaxMode_t"],[4,"cudnnPoolingMode_t"],[4,"cudnnActivationMode_t"],[4,"cudnnLRNMode_t"],[4,"cudnnDivNormMode_t"],[4,"cudnnBatchNormMode_t"],[4,"cudnnBatchNormOps_t"],[4,"cudnnNormMode_t"],[4,"cudnnNormAlgo_t"],[4,"cudnnNormOps_t"],[4,"cudnnSamplerType_t"],[4,"cudnnConvolutionFwdAlgo_t"],[4,"cudnnConvolutionBwdFilterAlgo_t"],[4,"cudnnConvolutionBwdDataAlgo_t"],[4,"cudnnRNNAlgo_t"],[4,"cudnnCTCLossAlgo_t"],[3,"cudnnAlgorithm_t"],[19,"cudnnAlgorithm_t_Algorithm"],[4,"cudnnSeverity_t"],[3,"cudnnDebug_t"],[4,"cudnnForwardMode_t"],[4,"cudnnRNNMode_t"],[4,"cudnnRNNBiasMode_t"],[4,"cudnnDirectionMode_t"],[4,"cudnnRNNInputMode_t"],[4,"cudnnRNNClipMode_t"],[4,"cudnnRNNDataLayout_t"],[4,"cudnnSeqDataAxis_t"],[4,"cudnnMultiHeadAttnWeightKind_t"],[4,"cudnnWgradMode_t"],[4,"cudnnLossNormalizationMode_t"],[4,"cudnnConvolutionMode_t"],[4,"cudnnReorderType_t"],[3,"cudnnConvolutionFwdAlgoPerf_t"],[3,"cudnnConvolutionBwdDataAlgoPerf_t"],[4,"cudnnFusedOps_t"],[4,"cudnnFusedOpsConstParamLabel_t"],[4,"cudnnFusedOpsPointerPlaceHolder_t"],[4,"cudnnFusedOpsVariantParamLabel_t"],[3,"cudnnConvolutionBwdFilterAlgoPerf_t"],[4,"cudnnPointwiseMode_t"],[4,"cudnnGenStatsMode_t"],[4,"cudnnBnFinalizeStatsMode_t"],[4,"cudnnBackendAttributeName_t"],[4,"cudnnBackendAttributeType_t"],[4,"cudnnBackendDescriptorType_t"],[4,"cudnnBackendNumericalNote_t"],[4,"cudnnBackendKnobType_t"],[4,"cudnnBackendLayoutType_t"],[4,"cudnnBackendHeurMode_t"],[3,"ActivationDescriptor"],[3,"ConvolutionDescriptor"],[3,"Cudnn"],[3,"DropoutDescriptor"],[3,"FilterDescriptor"],[3,"NormalizationDescriptor"],[3,"PoolingDescriptor"],[3,"RnnDescriptor"],[3,"TensorDescriptor"],[3,"cudaArray"],[3,"cudaMipmappedArray"],[3,"cudaGraphicsResource"],[3,"CUstream_st"],[3,"CUevent_st"],[3,"CUexternalMemory_st"],[3,"CUexternalSemaphore_st"],[3,"CUgraph_st"],[3,"CUgraphNode_st"],[3,"CUfunc_st"],[3,"CUmemPoolHandle_st"],[3,"CUgraphExec_st"],[3,"cudnnContext"],[3,"cudnnRuntimeTag_t"],[3,"cudnnTensorStruct"],[3,"cudnnPoolingStruct"],[3,"cudnnFilterStruct"],[3,"cudnnLRNStruct"],[3,"cudnnActivationStruct"],[3,"cudnnSpatialTransformerStruct"],[3,"cudnnOpTensorStruct"],[3,"cudnnReduceTensorStruct"],[3,"cudnnCTCLossStruct"],[3,"cudnnTensorTransformStruct"],[3,"cudnnDropoutStruct"],[3,"cudnnAlgorithmStruct"],[3,"cudnnAlgorithmPerformanceStruct"],[3,"cudnnRNNStruct"],[3,"cudnnPersistentRNNPlan"],[3,"cudnnRNNDataStruct"],[3,"cudnnSeqDataStruct"],[3,"cudnnAttnStruct"],[3,"cudnnConvolutionStruct"],[3,"cudnnFusedOpsConstParamStruct"],[3,"cudnnFusedOpsVariantParamStruct"],[3,"cudnnFusedOpsPlanStruct"],[3,"API"]]},\
"rcudnn_sys":{"doc":"","i":[[5,"cudaDeviceReset","rcudnn_sys","\\\\brief Destroy all allocations and reset all state on the …",null,null],[5,"cudaDeviceSynchronize","","\\\\brief Wait for compute device to finish",null,null],[5,"cudaDeviceSetLimit","","\\\\brief Set resource limits",null,null],[5,"cudaDeviceGetLimit","","\\\\brief Returns resource limits",null,null],[5,"cudaDeviceGetTexture1DLinearMaxWidth","","",null,null],[5,"cudaDeviceGetCacheConfig","","\\\\brief Returns the preferred cache configuration for the …",null,null],[5,"cudaDeviceGetStreamPriorityRange","","\\\\brief Returns numerical values that correspond to the …",null,null],[5,"cudaDeviceSetCacheConfig","","\\\\brief Sets the preferred cache configuration for the …",null,null],[5,"cudaDeviceGetSharedMemConfig","","\\\\brief Returns the shared memory configuration for the …",null,null],[5,"cudaDeviceSetSharedMemConfig","","\\\\brief Sets the shared memory configuration for the …",null,null],[5,"cudaDeviceGetByPCIBusId","","\\\\brief Returns a handle to a compute device",null,null],[5,"cudaDeviceGetPCIBusId","","\\\\brief Returns a PCI Bus Id string for the device",null,null],[5,"cudaIpcGetEventHandle","","\\\\brief Gets an interprocess handle for a previously …",null,null],[5,"cudaIpcOpenEventHandle","","\\\\brief Opens an interprocess event handle for use in the …",null,null],[5,"cudaIpcGetMemHandle","","\\\\brief Gets an interprocess memory handle for an existing …",null,null],[5,"cudaIpcOpenMemHandle","","\\\\brief Opens an interprocess memory handle exported from …",null,null],[5,"cudaIpcCloseMemHandle","","\\\\brief Attempts to close memory mapped with …",null,null],[5,"cudaThreadExit","","\\\\brief Exit and clean up from CUDA launches",null,null],[5,"cudaThreadSynchronize","","\\\\brief Wait for compute device to finish",null,null],[5,"cudaThreadSetLimit","","\\\\brief Set resource limits",null,null],[5,"cudaThreadGetLimit","","\\\\brief Returns resource limits",null,null],[5,"cudaThreadGetCacheConfig","","\\\\brief Returns the preferred cache configuration for the …",null,null],[5,"cudaThreadSetCacheConfig","","\\\\brief Sets the preferred cache configuration for the …",null,null],[5,"cudaGetLastError","","\\\\brief Returns the last error from a runtime call",null,null],[5,"cudaPeekAtLastError","","\\\\brief Returns the last error from a runtime call",null,null],[5,"cudaGetErrorName","","\\\\brief Returns the string representation of an error code …",null,null],[5,"cudaGetErrorString","","\\\\brief Returns the description string for an error code",null,null],[5,"cudaGetDeviceCount","","\\\\brief Returns the number of compute-capable devices",null,null],[5,"cudaGetDeviceProperties","","\\\\brief Returns information about the compute-device",null,null],[5,"cudaDeviceGetAttribute","","\\\\brief Returns information about the device",null,null],[5,"cudaDeviceGetDefaultMemPool","","\\\\brief Returns the default mempool of a device",null,null],[5,"cudaDeviceSetMemPool","","\\\\brief Sets the current memory pool of a device",null,null],[5,"cudaDeviceGetMemPool","","\\\\brief Gets the current mempool for a device",null,null],[5,"cudaDeviceGetNvSciSyncAttributes","","\\\\brief Return NvSciSync attributes that this device can …",null,null],[5,"cudaDeviceGetP2PAttribute","","\\\\brief Queries attributes of the link between two devices.",null,null],[5,"cudaChooseDevice","","\\\\brief Select compute-device which best matches criteria",null,null],[5,"cudaSetDevice","","\\\\brief Set device to be used for GPU executions",null,null],[5,"cudaGetDevice","","\\\\brief Returns which device is currently being used",null,null],[5,"cudaSetValidDevices","","\\\\brief Set a list of devices that can be used for CUDA",null,null],[5,"cudaSetDeviceFlags","","\\\\brief Sets flags to be used for device executions",null,null],[5,"cudaGetDeviceFlags","","\\\\brief Gets the flags for the current device",null,null],[5,"cudaStreamCreate","","\\\\brief Create an asynchronous stream",null,null],[5,"cudaStreamCreateWithFlags","","\\\\brief Create an asynchronous stream",null,null],[5,"cudaStreamCreateWithPriority","","\\\\brief Create an asynchronous stream with the specified …",null,null],[5,"cudaStreamGetPriority","","\\\\brief Query the priority of a stream",null,null],[5,"cudaStreamGetFlags","","\\\\brief Query the flags of a stream",null,null],[5,"cudaCtxResetPersistingL2Cache","","\\\\brief Resets all persisting lines in cache to normal …",null,null],[5,"cudaStreamCopyAttributes","","\\\\brief Copies attributes from source stream to …",null,null],[5,"cudaStreamGetAttribute","","\\\\brief Queries stream attribute.",null,null],[5,"cudaStreamSetAttribute","","\\\\brief Sets stream attribute.",null,null],[5,"cudaStreamDestroy","","\\\\brief Destroys and cleans up an asynchronous stream",null,null],[5,"cudaStreamWaitEvent","","\\\\brief Make a compute stream wait on an event",null,null],[5,"cudaStreamAddCallback","","\\\\brief Add a callback to a compute stream",null,null],[5,"cudaStreamSynchronize","","\\\\brief Waits for stream tasks to complete",null,null],[5,"cudaStreamQuery","","\\\\brief Queries an asynchronous stream for completion …",null,null],[5,"cudaStreamAttachMemAsync","","",null,null],[5,"cudaStreamBeginCapture","","\\\\brief Begins graph capture on a stream",null,null],[5,"cudaThreadExchangeStreamCaptureMode","","\\\\brief Swaps the stream capture interaction mode for a …",null,null],[5,"cudaStreamEndCapture","","\\\\brief Ends capture on a stream, returning the captured …",null,null],[5,"cudaStreamIsCapturing","","\\\\brief Returns a stream\'s capture status",null,null],[5,"cudaStreamGetCaptureInfo","","\\\\brief Query capture status of a stream",null,null],[5,"cudaEventCreate","","\\\\brief Creates an event object",null,null],[5,"cudaEventCreateWithFlags","","\\\\brief Creates an event object with the specified flags",null,null],[5,"cudaEventRecord","","\\\\brief Records an event",null,null],[5,"cudaEventRecordWithFlags","","",null,null],[5,"cudaEventQuery","","\\\\brief Queries an event\'s status",null,null],[5,"cudaEventSynchronize","","\\\\brief Waits for an event to complete",null,null],[5,"cudaEventDestroy","","\\\\brief Destroys an event object",null,null],[5,"cudaEventElapsedTime","","\\\\brief Computes the elapsed time between events",null,null],[5,"cudaImportExternalMemory","","\\\\brief Imports an external memory object",null,null],[5,"cudaExternalMemoryGetMappedBuffer","","\\\\brief Maps a buffer onto an imported memory object",null,null],[5,"cudaExternalMemoryGetMappedMipmappedArray","","\\\\brief Maps a CUDA mipmapped array onto an external …",null,null],[5,"cudaDestroyExternalMemory","","\\\\brief Destroys an external memory object.",null,null],[5,"cudaImportExternalSemaphore","","\\\\brief Imports an external semaphore",null,null],[5,"cudaSignalExternalSemaphoresAsync_v2","","",null,null],[5,"cudaWaitExternalSemaphoresAsync_v2","","",null,null],[5,"cudaDestroyExternalSemaphore","","\\\\brief Destroys an external semaphore",null,null],[5,"cudaLaunchKernel","","\\\\brief Launches a device function",null,null],[5,"cudaLaunchCooperativeKernel","","\\\\brief Launches a device function where thread blocks can …",null,null],[5,"cudaLaunchCooperativeKernelMultiDevice","","\\\\brief Launches device functions on multiple devices …",null,null],[5,"cudaFuncSetCacheConfig","","\\\\brief Sets the preferred cache configuration for a …",null,null],[5,"cudaFuncSetSharedMemConfig","","\\\\brief Sets the shared memory configuration for a device …",null,null],[5,"cudaFuncGetAttributes","","\\\\brief Find out attributes for a given function",null,null],[5,"cudaFuncSetAttribute","","\\\\brief Set attributes for a given function",null,null],[5,"cudaSetDoubleForDevice","","\\\\brief Converts a double argument to be executed on a …",null,null],[5,"cudaSetDoubleForHost","","\\\\brief Converts a double argument after execution on a …",null,null],[5,"cudaLaunchHostFunc","","\\\\brief Enqueues a host function call in a stream",null,null],[5,"cudaOccupancyMaxActiveBlocksPerMultiprocessor","","\\\\brief Returns occupancy for a device function",null,null],[5,"cudaOccupancyAvailableDynamicSMemPerBlock","","\\\\brief Returns dynamic shared memory available per block …",null,null],[5,"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","","\\\\brief Returns occupancy for a device function with the …",null,null],[5,"cudaMallocManaged","","",null,null],[5,"cudaMalloc","","\\\\brief Allocate memory on the device",null,null],[5,"cudaMallocHost","","\\\\brief Allocates page-locked memory on the host",null,null],[5,"cudaMallocPitch","","\\\\brief Allocates pitched memory on the device",null,null],[5,"cudaMallocArray","","\\\\brief Allocate an array on the device",null,null],[5,"cudaFree","","\\\\brief Frees memory on the device",null,null],[5,"cudaFreeHost","","\\\\brief Frees page-locked memory",null,null],[5,"cudaFreeArray","","\\\\brief Frees an array on the device",null,null],[5,"cudaFreeMipmappedArray","","\\\\brief Frees a mipmapped array on the device",null,null],[5,"cudaHostAlloc","","\\\\brief Allocates page-locked memory on the host",null,null],[5,"cudaHostRegister","","\\\\brief Registers an existing host memory range for use by …",null,null],[5,"cudaHostUnregister","","\\\\brief Unregisters a memory range that was registered …",null,null],[5,"cudaHostGetDevicePointer","","\\\\brief Passes back device pointer of mapped host memory …",null,null],[5,"cudaHostGetFlags","","\\\\brief Passes back flags used to allocate pinned host …",null,null],[5,"cudaMalloc3D","","\\\\brief Allocates logical 1D, 2D, or 3D memory objects on …",null,null],[5,"cudaMalloc3DArray","","\\\\brief Allocate an array on the device",null,null],[5,"cudaMallocMipmappedArray","","\\\\brief Allocate a mipmapped array on the device",null,null],[5,"cudaGetMipmappedArrayLevel","","\\\\brief Gets a mipmap level of a CUDA mipmapped array",null,null],[5,"cudaMemcpy3D","","\\\\brief Copies data between 3D objects",null,null],[5,"cudaMemcpy3DPeer","","\\\\brief Copies memory between devices",null,null],[5,"cudaMemcpy3DAsync","","\\\\brief Copies data between 3D objects",null,null],[5,"cudaMemcpy3DPeerAsync","","\\\\brief Copies memory between devices asynchronously.",null,null],[5,"cudaMemGetInfo","","\\\\brief Gets free and total device memory",null,null],[5,"cudaArrayGetInfo","","\\\\brief Gets info about the specified cudaArray",null,null],[5,"cudaArrayGetPlane","","\\\\brief Gets a CUDA array plane from a CUDA array",null,null],[5,"cudaArrayGetSparseProperties","","",null,null],[5,"cudaMipmappedArrayGetSparseProperties","","",null,null],[5,"cudaMemcpy","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpyPeer","","\\\\brief Copies memory between two devices",null,null],[5,"cudaMemcpy2D","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpy2DToArray","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpy2DFromArray","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpy2DArrayToArray","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpyToSymbol","","\\\\brief Copies data to the given symbol on the device",null,null],[5,"cudaMemcpyFromSymbol","","\\\\brief Copies data from the given symbol on the device",null,null],[5,"cudaMemcpyAsync","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpyPeerAsync","","\\\\brief Copies memory between two devices asynchronously.",null,null],[5,"cudaMemcpy2DAsync","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpy2DToArrayAsync","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpy2DFromArrayAsync","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpyToSymbolAsync","","\\\\brief Copies data to the given symbol on the device",null,null],[5,"cudaMemcpyFromSymbolAsync","","\\\\brief Copies data from the given symbol on the device",null,null],[5,"cudaMemset","","\\\\brief Initializes or sets device memory to a value",null,null],[5,"cudaMemset2D","","\\\\brief Initializes or sets device memory to a value",null,null],[5,"cudaMemset3D","","\\\\brief Initializes or sets device memory to a value",null,null],[5,"cudaMemsetAsync","","\\\\brief Initializes or sets device memory to a value",null,null],[5,"cudaMemset2DAsync","","\\\\brief Initializes or sets device memory to a value",null,null],[5,"cudaMemset3DAsync","","\\\\brief Initializes or sets device memory to a value",null,null],[5,"cudaGetSymbolAddress","","\\\\brief Finds the address associated with a CUDA symbol",null,null],[5,"cudaGetSymbolSize","","\\\\brief Finds the size of the object associated with a …",null,null],[5,"cudaMemPrefetchAsync","","\\\\brief Prefetches memory to the specified destination …",null,null],[5,"cudaMemAdvise","","\\\\brief Advise about the usage of a given memory range",null,null],[5,"cudaMemRangeGetAttribute","","\\\\brief Query an attribute of a given memory range",null,null],[5,"cudaMemRangeGetAttributes","","\\\\brief Query attributes of a given memory range.",null,null],[5,"cudaMemcpyToArray","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpyFromArray","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpyArrayToArray","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpyToArrayAsync","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpyFromArrayAsync","","\\\\brief Copies data between host and device",null,null],[5,"cudaMallocAsync","","\\\\brief Allocates memory with stream ordered semantics",null,null],[5,"cudaFreeAsync","","\\\\brief Frees memory with stream ordered semantics",null,null],[5,"cudaMemPoolTrimTo","","\\\\brief Tries to release memory back to the OS",null,null],[5,"cudaMemPoolSetAttribute","","\\\\brief Sets attributes of a memory pool",null,null],[5,"cudaMemPoolGetAttribute","","\\\\brief Gets attributes of a memory pool",null,null],[5,"cudaMemPoolSetAccess","","\\\\brief Controls visibility of pools between devices",null,null],[5,"cudaMemPoolGetAccess","","\\\\brief Returns the accessibility of a pool from a device",null,null],[5,"cudaMemPoolCreate","","\\\\brief Creates a memory pool",null,null],[5,"cudaMemPoolDestroy","","\\\\brief Destroys the specified memory pool",null,null],[5,"cudaMallocFromPoolAsync","","\\\\brief Allocates memory from a specified pool with stream …",null,null],[5,"cudaMemPoolExportToShareableHandle","","\\\\brief Exports a memory pool to the requested handle type.",null,null],[5,"cudaMemPoolImportFromShareableHandle","","\\\\brief imports a memory pool from a shared handle.",null,null],[5,"cudaMemPoolExportPointer","","\\\\brief Export data to share a memory pool allocation …",null,null],[5,"cudaMemPoolImportPointer","","\\\\brief Import a memory pool allocation from another …",null,null],[5,"cudaPointerGetAttributes","","\\\\brief Returns attributes about a specified pointer",null,null],[5,"cudaDeviceCanAccessPeer","","\\\\brief Queries if a device may directly access a peer …",null,null],[5,"cudaDeviceEnablePeerAccess","","\\\\brief Enables direct access to memory allocations on a …",null,null],[5,"cudaDeviceDisablePeerAccess","","\\\\brief Disables direct access to memory allocations on a …",null,null],[5,"cudaGraphicsUnregisterResource","","\\\\brief Unregisters a graphics resource for access by CUDA",null,null],[5,"cudaGraphicsResourceSetMapFlags","","\\\\brief Set usage flags for mapping a graphics resource",null,null],[5,"cudaGraphicsMapResources","","\\\\brief Map graphics resources for access by CUDA",null,null],[5,"cudaGraphicsUnmapResources","","\\\\brief Unmap graphics resources.",null,null],[5,"cudaGraphicsResourceGetMappedPointer","","\\\\brief Get an device pointer through which to access a …",null,null],[5,"cudaGraphicsSubResourceGetMappedArray","","\\\\brief Get an array through which to access a subresource …",null,null],[5,"cudaGraphicsResourceGetMappedMipmappedArray","","\\\\brief Get a mipmapped array through which to access a …",null,null],[5,"cudaBindTexture","","\\\\brief Binds a memory area to a texture",null,null],[5,"cudaBindTexture2D","","\\\\brief Binds a 2D memory area to a texture",null,null],[5,"cudaBindTextureToArray","","\\\\brief Binds an array to a texture",null,null],[5,"cudaBindTextureToMipmappedArray","","\\\\brief Binds a mipmapped array to a texture",null,null],[5,"cudaUnbindTexture","","\\\\brief Unbinds a texture",null,null],[5,"cudaGetTextureAlignmentOffset","","\\\\brief Get the alignment offset of a texture",null,null],[5,"cudaGetTextureReference","","\\\\brief Get the texture reference associated with a symbol",null,null],[5,"cudaBindSurfaceToArray","","\\\\brief Binds an array to a surface",null,null],[5,"cudaGetSurfaceReference","","\\\\brief Get the surface reference associated with a symbol",null,null],[5,"cudaGetChannelDesc","","\\\\brief Get the channel descriptor of an array",null,null],[5,"cudaCreateChannelDesc","","\\\\brief Returns a channel descriptor using the specified …",null,null],[5,"cudaCreateTextureObject","","\\\\brief Creates a texture object",null,null],[5,"cudaDestroyTextureObject","","\\\\brief Destroys a texture object",null,null],[5,"cudaGetTextureObjectResourceDesc","","\\\\brief Returns a texture object\'s resource descriptor",null,null],[5,"cudaGetTextureObjectTextureDesc","","\\\\brief Returns a texture object\'s texture descriptor",null,null],[5,"cudaGetTextureObjectResourceViewDesc","","\\\\brief Returns a texture object\'s resource view descriptor",null,null],[5,"cudaCreateSurfaceObject","","\\\\brief Creates a surface object",null,null],[5,"cudaDestroySurfaceObject","","\\\\brief Destroys a surface object",null,null],[5,"cudaGetSurfaceObjectResourceDesc","","\\\\brief Returns a surface object\'s resource descriptor …",null,null],[5,"cudaDriverGetVersion","","\\\\brief Returns the latest version of CUDA supported by …",null,null],[5,"cudaRuntimeGetVersion","","\\\\brief Returns the CUDA Runtime version",null,null],[5,"cudaGraphCreate","","\\\\brief Creates a graph",null,null],[5,"cudaGraphAddKernelNode","","\\\\brief Creates a kernel execution node and adds it to a …",null,null],[5,"cudaGraphKernelNodeGetParams","","\\\\brief Returns a kernel node\'s parameters",null,null],[5,"cudaGraphKernelNodeSetParams","","\\\\brief Sets a kernel node\'s parameters",null,null],[5,"cudaGraphKernelNodeCopyAttributes","","\\\\brief Copies attributes from source node to destination …",null,null],[5,"cudaGraphKernelNodeGetAttribute","","\\\\brief Queries node attribute.",null,null],[5,"cudaGraphKernelNodeSetAttribute","","\\\\brief Sets node attribute.",null,null],[5,"cudaGraphAddMemcpyNode","","\\\\brief Creates a memcpy node and adds it to a graph",null,null],[5,"cudaGraphAddMemcpyNodeToSymbol","","",null,null],[5,"cudaGraphAddMemcpyNodeFromSymbol","","",null,null],[5,"cudaGraphAddMemcpyNode1D","","",null,null],[5,"cudaGraphMemcpyNodeGetParams","","\\\\brief Returns a memcpy node\'s parameters",null,null],[5,"cudaGraphMemcpyNodeSetParams","","\\\\brief Sets a memcpy node\'s parameters",null,null],[5,"cudaGraphMemcpyNodeSetParamsToSymbol","","",null,null],[5,"cudaGraphMemcpyNodeSetParamsFromSymbol","","",null,null],[5,"cudaGraphMemcpyNodeSetParams1D","","",null,null],[5,"cudaGraphAddMemsetNode","","\\\\brief Creates a memset node and adds it to a graph",null,null],[5,"cudaGraphMemsetNodeGetParams","","\\\\brief Returns a memset node\'s parameters",null,null],[5,"cudaGraphMemsetNodeSetParams","","\\\\brief Sets a memset node\'s parameters",null,null],[5,"cudaGraphAddHostNode","","\\\\brief Creates a host execution node and adds it to a …",null,null],[5,"cudaGraphHostNodeGetParams","","\\\\brief Returns a host node\'s parameters",null,null],[5,"cudaGraphHostNodeSetParams","","\\\\brief Sets a host node\'s parameters",null,null],[5,"cudaGraphAddChildGraphNode","","\\\\brief Creates a child graph node and adds it to a graph",null,null],[5,"cudaGraphChildGraphNodeGetGraph","","\\\\brief Gets a handle to the embedded graph of a child …",null,null],[5,"cudaGraphAddEmptyNode","","\\\\brief Creates an empty node and adds it to a graph",null,null],[5,"cudaGraphAddEventRecordNode","","",null,null],[5,"cudaGraphEventRecordNodeGetEvent","","",null,null],[5,"cudaGraphEventRecordNodeSetEvent","","",null,null],[5,"cudaGraphAddEventWaitNode","","",null,null],[5,"cudaGraphEventWaitNodeGetEvent","","",null,null],[5,"cudaGraphEventWaitNodeSetEvent","","",null,null],[5,"cudaGraphAddExternalSemaphoresSignalNode","","",null,null],[5,"cudaGraphExternalSemaphoresSignalNodeGetParams","","",null,null],[5,"cudaGraphExternalSemaphoresSignalNodeSetParams","","",null,null],[5,"cudaGraphAddExternalSemaphoresWaitNode","","",null,null],[5,"cudaGraphExternalSemaphoresWaitNodeGetParams","","",null,null],[5,"cudaGraphExternalSemaphoresWaitNodeSetParams","","",null,null],[5,"cudaGraphClone","","\\\\brief Clones a graph",null,null],[5,"cudaGraphNodeFindInClone","","\\\\brief Finds a cloned version of a node",null,null],[5,"cudaGraphNodeGetType","","\\\\brief Returns a node\'s type",null,null],[5,"cudaGraphGetNodes","","\\\\brief Returns a graph\'s nodes",null,null],[5,"cudaGraphGetRootNodes","","\\\\brief Returns a graph\'s root nodes",null,null],[5,"cudaGraphGetEdges","","\\\\brief Returns a graph\'s dependency edges",null,null],[5,"cudaGraphNodeGetDependencies","","\\\\brief Returns a node\'s dependencies",null,null],[5,"cudaGraphNodeGetDependentNodes","","\\\\brief Returns a node\'s dependent nodes",null,null],[5,"cudaGraphAddDependencies","","\\\\brief Adds dependency edges to a graph.",null,null],[5,"cudaGraphRemoveDependencies","","\\\\brief Removes dependency edges from a graph.",null,null],[5,"cudaGraphDestroyNode","","\\\\brief Remove a node from the graph",null,null],[5,"cudaGraphInstantiate","","\\\\brief Creates an executable graph from a graph",null,null],[5,"cudaGraphExecKernelNodeSetParams","","\\\\brief Sets the parameters for a kernel node in the given …",null,null],[5,"cudaGraphExecMemcpyNodeSetParams","","\\\\brief Sets the parameters for a memcpy node in the given …",null,null],[5,"cudaGraphExecMemcpyNodeSetParamsToSymbol","","",null,null],[5,"cudaGraphExecMemcpyNodeSetParamsFromSymbol","","",null,null],[5,"cudaGraphExecMemcpyNodeSetParams1D","","",null,null],[5,"cudaGraphExecMemsetNodeSetParams","","\\\\brief Sets the parameters for a memset node in the given …",null,null],[5,"cudaGraphExecHostNodeSetParams","","\\\\brief Sets the parameters for a host node in the given …",null,null],[5,"cudaGraphExecChildGraphNodeSetParams","","",null,null],[5,"cudaGraphExecEventRecordNodeSetEvent","","",null,null],[5,"cudaGraphExecEventWaitNodeSetEvent","","",null,null],[5,"cudaGraphExecExternalSemaphoresSignalNodeSetParams","","",null,null],[5,"cudaGraphExecExternalSemaphoresWaitNodeSetParams","","",null,null],[5,"cudaGraphExecUpdate","","\\\\brief Check whether an executable graph can be updated …",null,null],[5,"cudaGraphUpload","","",null,null],[5,"cudaGraphLaunch","","\\\\brief Launches an executable graph in a stream",null,null],[5,"cudaGraphExecDestroy","","\\\\brief Destroys an executable graph",null,null],[5,"cudaGraphDestroy","","\\\\brief Destroys a graph",null,null],[5,"cudaGetExportTable","","\\\\cond impl_private",null,null],[5,"cudaGetFuncBySymbol","","\\\\brief Get pointer to device entry function that matches …",null,null],[5,"cudnnGetVersion","","",null,null],[5,"cudnnGetCudartVersion","","",null,null],[5,"cudnnGetErrorString","","",null,null],[5,"cudnnQueryRuntimeError","","",null,null],[5,"cudnnGetProperty","","",null,null],[5,"cudnnCreate","","",null,null],[5,"cudnnDestroy","","",null,null],[5,"cudnnSetStream","","",null,null],[5,"cudnnGetStream","","",null,null],[5,"cudnnCreateTensorDescriptor","","",null,null],[5,"cudnnSetTensor4dDescriptor","","",null,null],[5,"cudnnSetTensor4dDescriptorEx","","",null,null],[5,"cudnnGetTensor4dDescriptor","","",null,null],[5,"cudnnSetTensorNdDescriptor","","",null,null],[5,"cudnnSetTensorNdDescriptorEx","","",null,null],[5,"cudnnGetTensorNdDescriptor","","",null,null],[5,"cudnnGetTensorSizeInBytes","","",null,null],[5,"cudnnDestroyTensorDescriptor","","",null,null],[5,"cudnnInitTransformDest","","Create a destination descriptor for cudnnTransformTensor",null,null],[5,"cudnnCreateTensorTransformDescriptor","","Create an empty tensor transform descriptor",null,null],[5,"cudnnSetTensorTransformDescriptor","","Initialize a previously created tensor transform …",null,null],[5,"cudnnGetTensorTransformDescriptor","","Retrieves the values stored in a previously initialized …",null,null],[5,"cudnnDestroyTensorTransformDescriptor","","Destroys a previously created tensor transform descriptor.",null,null],[5,"cudnnTransformTensor","","",null,null],[5,"cudnnTransformTensorEx","","",null,null],[5,"cudnnAddTensor","","",null,null],[5,"cudnnCreateOpTensorDescriptor","","",null,null],[5,"cudnnSetOpTensorDescriptor","","",null,null],[5,"cudnnGetOpTensorDescriptor","","",null,null],[5,"cudnnDestroyOpTensorDescriptor","","",null,null],[5,"cudnnOpTensor","","",null,null],[5,"cudnnCreateReduceTensorDescriptor","","",null,null],[5,"cudnnSetReduceTensorDescriptor","","",null,null],[5,"cudnnGetReduceTensorDescriptor","","",null,null],[5,"cudnnDestroyReduceTensorDescriptor","","",null,null],[5,"cudnnGetReductionIndicesSize","","",null,null],[5,"cudnnGetReductionWorkspaceSize","","",null,null],[5,"cudnnReduceTensor","","",null,null],[5,"cudnnSetTensor","","",null,null],[5,"cudnnScaleTensor","","",null,null],[5,"cudnnCreateFilterDescriptor","","",null,null],[5,"cudnnSetFilter4dDescriptor","","",null,null],[5,"cudnnGetFilter4dDescriptor","","",null,null],[5,"cudnnSetFilterNdDescriptor","","",null,null],[5,"cudnnGetFilterNdDescriptor","","",null,null],[5,"cudnnGetFilterSizeInBytes","","",null,null],[5,"cudnnTransformFilter","","",null,null],[5,"cudnnDestroyFilterDescriptor","","",null,null],[5,"cudnnSoftmaxForward","","",null,null],[5,"cudnnCreatePoolingDescriptor","","",null,null],[5,"cudnnSetPooling2dDescriptor","","",null,null],[5,"cudnnGetPooling2dDescriptor","","",null,null],[5,"cudnnSetPoolingNdDescriptor","","",null,null],[5,"cudnnGetPoolingNdDescriptor","","",null,null],[5,"cudnnGetPoolingNdForwardOutputDim","","",null,null],[5,"cudnnGetPooling2dForwardOutputDim","","",null,null],[5,"cudnnDestroyPoolingDescriptor","","",null,null],[5,"cudnnPoolingForward","","",null,null],[5,"cudnnCreateActivationDescriptor","","",null,null],[5,"cudnnSetActivationDescriptor","","",null,null],[5,"cudnnGetActivationDescriptor","","",null,null],[5,"cudnnDestroyActivationDescriptor","","",null,null],[5,"cudnnActivationForward","","",null,null],[5,"cudnnCreateLRNDescriptor","","",null,null],[5,"cudnnSetLRNDescriptor","","",null,null],[5,"cudnnGetLRNDescriptor","","",null,null],[5,"cudnnDestroyLRNDescriptor","","",null,null],[5,"cudnnLRNCrossChannelForward","","",null,null],[5,"cudnnDivisiveNormalizationForward","","",null,null],[5,"cudnnDeriveBNTensorDescriptor","","",null,null],[5,"cudnnBatchNormalizationForwardInference","","",null,null],[5,"cudnnDeriveNormTensorDescriptor","","",null,null],[5,"cudnnNormalizationForwardInference","","",null,null],[5,"cudnnCreateSpatialTransformerDescriptor","","",null,null],[5,"cudnnSetSpatialTransformerNdDescriptor","","",null,null],[5,"cudnnDestroySpatialTransformerDescriptor","","",null,null],[5,"cudnnSpatialTfGridGeneratorForward","","",null,null],[5,"cudnnSpatialTfSamplerForward","","",null,null],[5,"cudnnCreateDropoutDescriptor","","",null,null],[5,"cudnnDestroyDropoutDescriptor","","",null,null],[5,"cudnnDropoutGetStatesSize","","",null,null],[5,"cudnnDropoutGetReserveSpaceSize","","",null,null],[5,"cudnnSetDropoutDescriptor","","",null,null],[5,"cudnnRestoreDropoutDescriptor","","",null,null],[5,"cudnnGetDropoutDescriptor","","",null,null],[5,"cudnnDropoutForward","","",null,null],[5,"cudnnCreateAlgorithmDescriptor","","",null,null],[5,"cudnnSetAlgorithmDescriptor","","",null,null],[5,"cudnnGetAlgorithmDescriptor","","",null,null],[5,"cudnnCopyAlgorithmDescriptor","","",null,null],[5,"cudnnDestroyAlgorithmDescriptor","","",null,null],[5,"cudnnCreateAlgorithmPerformance","","",null,null],[5,"cudnnSetAlgorithmPerformance","","",null,null],[5,"cudnnGetAlgorithmPerformance","","",null,null],[5,"cudnnDestroyAlgorithmPerformance","","",null,null],[5,"cudnnGetAlgorithmSpaceSize","","",null,null],[5,"cudnnSaveAlgorithm","","",null,null],[5,"cudnnRestoreAlgorithm","","",null,null],[5,"cudnnSetCallback","","",null,null],[5,"cudnnGetCallback","","",null,null],[5,"cudnnOpsInferVersionCheck","","",null,null],[5,"cudnnSoftmaxBackward","","",null,null],[5,"cudnnPoolingBackward","","",null,null],[5,"cudnnActivationBackward","","",null,null],[5,"cudnnLRNCrossChannelBackward","","",null,null],[5,"cudnnDivisiveNormalizationBackward","","",null,null],[5,"cudnnGetBatchNormalizationForwardTrainingExWorkspaceSize","","",null,null],[5,"cudnnGetBatchNormalizationBackwardExWorkspaceSize","","",null,null],[5,"cudnnGetBatchNormalizationTrainingExReserveSpaceSize","","",null,null],[5,"cudnnBatchNormalizationForwardTraining","","",null,null],[5,"cudnnBatchNormalizationForwardTrainingEx","","",null,null],[5,"cudnnBatchNormalizationBackward","","",null,null],[5,"cudnnBatchNormalizationBackwardEx","","",null,null],[5,"cudnnGetNormalizationForwardTrainingWorkspaceSize","","",null,null],[5,"cudnnGetNormalizationBackwardWorkspaceSize","","",null,null],[5,"cudnnGetNormalizationTrainingReserveSpaceSize","","",null,null],[5,"cudnnNormalizationForwardTraining","","",null,null],[5,"cudnnNormalizationBackward","","",null,null],[5,"cudnnSpatialTfGridGeneratorBackward","","",null,null],[5,"cudnnSpatialTfSamplerBackward","","",null,null],[5,"cudnnDropoutBackward","","",null,null],[5,"cudnnOpsTrainVersionCheck","","",null,null],[5,"cudnnCreateRNNDescriptor","","",null,null],[5,"cudnnDestroyRNNDescriptor","","",null,null],[5,"cudnnSetRNNDescriptor_v8","","",null,null],[5,"cudnnGetRNNDescriptor_v8","","",null,null],[5,"cudnnSetRNNDescriptor_v6","","",null,null],[5,"cudnnGetRNNDescriptor_v6","","",null,null],[5,"cudnnSetRNNMatrixMathType","","",null,null],[5,"cudnnGetRNNMatrixMathType","","",null,null],[5,"cudnnSetRNNBiasMode","","",null,null],[5,"cudnnGetRNNBiasMode","","",null,null],[5,"cudnnRNNSetClip_v8","","",null,null],[5,"cudnnRNNGetClip_v8","","",null,null],[5,"cudnnRNNSetClip","","",null,null],[5,"cudnnRNNGetClip","","",null,null],[5,"cudnnSetRNNProjectionLayers","","",null,null],[5,"cudnnGetRNNProjectionLayers","","",null,null],[5,"cudnnCreatePersistentRNNPlan","","",null,null],[5,"cudnnDestroyPersistentRNNPlan","","",null,null],[5,"cudnnSetPersistentRNNPlan","","",null,null],[5,"cudnnBuildRNNDynamic","","",null,null],[5,"cudnnGetRNNWorkspaceSize","","",null,null],[5,"cudnnGetRNNTrainingReserveSize","","",null,null],[5,"cudnnGetRNNTempSpaceSizes","","",null,null],[5,"cudnnGetRNNParamsSize","","",null,null],[5,"cudnnGetRNNWeightSpaceSize","","",null,null],[5,"cudnnGetRNNLinLayerMatrixParams","","",null,null],[5,"cudnnGetRNNLinLayerBiasParams","","",null,null],[5,"cudnnGetRNNWeightParams","","",null,null],[5,"cudnnRNNForwardInference","","",null,null],[5,"cudnnSetRNNPaddingMode","","",null,null],[5,"cudnnGetRNNPaddingMode","","",null,null],[5,"cudnnCreateRNNDataDescriptor","","",null,null],[5,"cudnnDestroyRNNDataDescriptor","","",null,null],[5,"cudnnSetRNNDataDescriptor","","",null,null],[5,"cudnnGetRNNDataDescriptor","","",null,null],[5,"cudnnRNNForwardInferenceEx","","",null,null],[5,"cudnnRNNForward","","",null,null],[5,"cudnnSetRNNAlgorithmDescriptor","","",null,null],[5,"cudnnGetRNNForwardInferenceAlgorithmMaxCount","","",null,null],[5,"cudnnFindRNNForwardInferenceAlgorithmEx","","",null,null],[5,"cudnnCreateSeqDataDescriptor","","",null,null],[5,"cudnnDestroySeqDataDescriptor","","",null,null],[5,"cudnnSetSeqDataDescriptor","","",null,null],[5,"cudnnGetSeqDataDescriptor","","",null,null],[5,"cudnnCreateAttnDescriptor","","",null,null],[5,"cudnnDestroyAttnDescriptor","","",null,null],[5,"cudnnSetAttnDescriptor","","",null,null],[5,"cudnnGetAttnDescriptor","","",null,null],[5,"cudnnGetMultiHeadAttnBuffers","","",null,null],[5,"cudnnGetMultiHeadAttnWeights","","",null,null],[5,"cudnnMultiHeadAttnForward","","",null,null],[5,"cudnnAdvInferVersionCheck","","",null,null],[5,"cudnnRNNForwardTraining","","",null,null],[5,"cudnnRNNBackwardData","","",null,null],[5,"cudnnRNNBackwardData_v8","","",null,null],[5,"cudnnRNNBackwardWeights","","",null,null],[5,"cudnnRNNBackwardWeights_v8","","",null,null],[5,"cudnnRNNForwardTrainingEx","","",null,null],[5,"cudnnRNNBackwardDataEx","","",null,null],[5,"cudnnRNNBackwardWeightsEx","","",null,null],[5,"cudnnGetRNNForwardTrainingAlgorithmMaxCount","","",null,null],[5,"cudnnFindRNNForwardTrainingAlgorithmEx","","",null,null],[5,"cudnnGetRNNBackwardDataAlgorithmMaxCount","","",null,null],[5,"cudnnFindRNNBackwardDataAlgorithmEx","","",null,null],[5,"cudnnGetRNNBackwardWeightsAlgorithmMaxCount","","",null,null],[5,"cudnnFindRNNBackwardWeightsAlgorithmEx","","",null,null],[5,"cudnnMultiHeadAttnBackwardData","","",null,null],[5,"cudnnMultiHeadAttnBackwardWeights","","",null,null],[5,"cudnnCreateCTCLossDescriptor","","",null,null],[5,"cudnnSetCTCLossDescriptor","","",null,null],[5,"cudnnSetCTCLossDescriptorEx","","",null,null],[5,"cudnnSetCTCLossDescriptor_v8","","",null,null],[5,"cudnnGetCTCLossDescriptor","","",null,null],[5,"cudnnGetCTCLossDescriptorEx","","",null,null],[5,"cudnnGetCTCLossDescriptor_v8","","",null,null],[5,"cudnnDestroyCTCLossDescriptor","","",null,null],[5,"cudnnCTCLoss","","",null,null],[5,"cudnnCTCLoss_v8","","",null,null],[5,"cudnnGetCTCLossWorkspaceSize","","",null,null],[5,"cudnnGetCTCLossWorkspaceSize_v8","","",null,null],[5,"cudnnAdvTrainVersionCheck","","",null,null],[5,"cudnnCreateConvolutionDescriptor","","",null,null],[5,"cudnnDestroyConvolutionDescriptor","","",null,null],[5,"cudnnSetConvolutionMathType","","",null,null],[5,"cudnnGetConvolutionMathType","","",null,null],[5,"cudnnSetConvolutionGroupCount","","",null,null],[5,"cudnnGetConvolutionGroupCount","","",null,null],[5,"cudnnSetConvolutionReorderType","","",null,null],[5,"cudnnGetConvolutionReorderType","","",null,null],[5,"cudnnSetConvolution2dDescriptor","","",null,null],[5,"cudnnGetConvolution2dDescriptor","","",null,null],[5,"cudnnSetConvolutionNdDescriptor","","",null,null],[5,"cudnnGetConvolutionNdDescriptor","","",null,null],[5,"cudnnGetConvolution2dForwardOutputDim","","",null,null],[5,"cudnnGetConvolutionNdForwardOutputDim","","",null,null],[5,"cudnnGetConvolutionForwardAlgorithmMaxCount","","",null,null],[5,"cudnnGetConvolutionForwardAlgorithm_v7","","",null,null],[5,"cudnnFindConvolutionForwardAlgorithm","","",null,null],[5,"cudnnFindConvolutionForwardAlgorithmEx","","",null,null],[5,"cudnnIm2Col","","",null,null],[5,"cudnnReorderFilterAndBias","","",null,null],[5,"cudnnGetConvolutionForwardWorkspaceSize","","",null,null],[5,"cudnnConvolutionForward","","",null,null],[5,"cudnnConvolutionBiasActivationForward","","",null,null],[5,"cudnnGetConvolutionBackwardDataAlgorithmMaxCount","","",null,null],[5,"cudnnFindConvolutionBackwardDataAlgorithm","","",null,null],[5,"cudnnFindConvolutionBackwardDataAlgorithmEx","","",null,null],[5,"cudnnGetConvolutionBackwardDataAlgorithm_v7","","",null,null],[5,"cudnnGetConvolutionBackwardDataWorkspaceSize","","",null,null],[5,"cudnnConvolutionBackwardData","","",null,null],[5,"cudnnGetFoldedConvBackwardDataDescriptors","","",null,null],[5,"cudnnCnnInferVersionCheck","","",null,null],[5,"cudnnGetConvolutionBackwardFilterAlgorithmMaxCount","","",null,null],[5,"cudnnFindConvolutionBackwardFilterAlgorithm","","",null,null],[5,"cudnnFindConvolutionBackwardFilterAlgorithmEx","","",null,null],[5,"cudnnGetConvolutionBackwardFilterAlgorithm_v7","","",null,null],[5,"cudnnGetConvolutionBackwardFilterWorkspaceSize","","",null,null],[5,"cudnnConvolutionBackwardFilter","","",null,null],[5,"cudnnConvolutionBackwardBias","","",null,null],[5,"cudnnCreateFusedOpsConstParamPack","","",null,null],[5,"cudnnDestroyFusedOpsConstParamPack","","",null,null],[5,"cudnnSetFusedOpsConstParamPackAttribute","","",null,null],[5,"cudnnGetFusedOpsConstParamPackAttribute","","",null,null],[5,"cudnnCreateFusedOpsVariantParamPack","","",null,null],[5,"cudnnDestroyFusedOpsVariantParamPack","","",null,null],[5,"cudnnSetFusedOpsVariantParamPackAttribute","","",null,null],[5,"cudnnGetFusedOpsVariantParamPackAttribute","","",null,null],[5,"cudnnCreateFusedOpsPlan","","",null,null],[5,"cudnnDestroyFusedOpsPlan","","",null,null],[5,"cudnnMakeFusedOpsPlan","","",null,null],[5,"cudnnFusedOpsExecute","","",null,null],[5,"cudnnCnnTrainVersionCheck","","",null,null],[5,"cudnnBackendCreateDescriptor","","",null,null],[5,"cudnnBackendDestroyDescriptor","","",null,null],[5,"cudnnBackendInitialize","","",null,null],[5,"cudnnBackendFinalize","","",null,null],[5,"cudnnBackendSetAttribute","","",null,null],[5,"cudnnBackendGetAttribute","","",null,null],[5,"cudnnBackendExecute","","",null,null],[17,"CUDNN_MAJOR","","",null,null],[17,"CUDNN_MINOR","","",null,null],[17,"CUDNN_PATCHLEVEL","","",null,null],[17,"CUDNN_VERSION","","",null,null],[17,"CUDNN_OPS_INFER_MAJOR","","",null,null],[17,"CUDNN_OPS_INFER_MINOR","","",null,null],[17,"CUDNN_OPS_INFER_PATCH","","",null,null],[17,"CUDNN_DIM_MAX","","",null,null],[17,"CUDNN_LRN_MIN_N","","",null,null],[17,"CUDNN_LRN_MAX_N","","",null,null],[17,"CUDNN_LRN_MIN_K","","",null,null],[17,"CUDNN_LRN_MIN_BETA","","",null,null],[17,"CUDNN_BN_MIN_EPSILON","","",null,null],[17,"CUDNN_OPS_TRAIN_MAJOR","","",null,null],[17,"CUDNN_OPS_TRAIN_MINOR","","",null,null],[17,"CUDNN_OPS_TRAIN_PATCH","","",null,null],[17,"CUDNN_ADV_INFER_MAJOR","","",null,null],[17,"CUDNN_ADV_INFER_MINOR","","",null,null],[17,"CUDNN_ADV_INFER_PATCH","","",null,null],[17,"CUDNN_RNN_PADDED_IO_DISABLED","","",null,null],[17,"CUDNN_RNN_PADDED_IO_ENABLED","","",null,null],[17,"CUDNN_SEQDATA_DIM_COUNT","","",null,null],[17,"CUDNN_ATTN_QUERYMAP_ALL_TO_ONE","","",null,null],[17,"CUDNN_ATTN_QUERYMAP_ONE_TO_ONE","","",null,null],[17,"CUDNN_ATTN_DISABLE_PROJ_BIASES","","",null,null],[17,"CUDNN_ATTN_ENABLE_PROJ_BIASES","","",null,null],[17,"CUDNN_ATTN_WKIND_COUNT","","",null,null],[17,"CUDNN_ADV_TRAIN_MAJOR","","",null,null],[17,"CUDNN_ADV_TRAIN_MINOR","","",null,null],[17,"CUDNN_ADV_TRAIN_PATCH","","",null,null],[17,"CUDNN_CNN_INFER_MAJOR","","",null,null],[17,"CUDNN_CNN_INFER_MINOR","","",null,null],[17,"CUDNN_CNN_INFER_PATCH","","",null,null],[17,"CUDNN_CNN_TRAIN_MAJOR","","",null,null],[17,"CUDNN_CNN_TRAIN_MINOR","","",null,null],[17,"CUDNN_CNN_TRAIN_PATCH","","",null,null],[4,"cudaRoundMode","","",null,null],[13,"cudaRoundNearest","","",0,null],[13,"cudaRoundZero","","",0,null],[13,"cudaRoundPosInf","","",0,null],[13,"cudaRoundMinInf","","",0,null],[3,"dim3","","",null,null],[12,"x","","",1,null],[12,"y","","",1,null],[12,"z","","",1,null],[4,"cudaError","","CUDA error types",null,null],[13,"cudaSuccess","","The API call returned with no errors. In the case of …",2,null],[13,"cudaErrorInvalidValue","","This indicates that one or more of the parameters passed …",2,null],[13,"cudaErrorMemoryAllocation","","The API call failed because it was unable to allocate …",2,null],[13,"cudaErrorInitializationError","","The API call failed because the CUDA driver and runtime …",2,null],[13,"cudaErrorCudartUnloading","","This indicates that a CUDA Runtime API call cannot be …",2,null],[13,"cudaErrorProfilerDisabled","","This indicates profiler is not initialized for this run. …",2,null],[13,"cudaErrorProfilerNotInitialized","","\\\\deprecated This error return is deprecated as of CUDA …",2,null],[13,"cudaErrorProfilerAlreadyStarted","","\\\\deprecated This error return is deprecated as of CUDA …",2,null],[13,"cudaErrorProfilerAlreadyStopped","","\\\\deprecated This error return is deprecated as of CUDA …",2,null],[13,"cudaErrorInvalidConfiguration","","This indicates that a kernel launch is requesting …",2,null],[13,"cudaErrorInvalidPitchValue","","This indicates that one or more of the pitch-related …",2,null],[13,"cudaErrorInvalidSymbol","","This indicates that the symbol name/identifier passed to …",2,null],[13,"cudaErrorInvalidHostPointer","","This indicates that at least one host pointer passed to …",2,null],[13,"cudaErrorInvalidDevicePointer","","This indicates that at least one device pointer passed to …",2,null],[13,"cudaErrorInvalidTexture","","This indicates that the texture passed to the API call is …",2,null],[13,"cudaErrorInvalidTextureBinding","","This indicates that the texture binding is not valid. …",2,null],[13,"cudaErrorInvalidChannelDescriptor","","This indicates that the channel descriptor passed to the …",2,null],[13,"cudaErrorInvalidMemcpyDirection","","This indicates that the direction of the memcpy passed to …",2,null],[13,"cudaErrorAddressOfConstant","","This indicated that the user has taken the address of a …",2,null],[13,"cudaErrorTextureFetchFailed","","This indicated that a texture fetch was not able to be …",2,null],[13,"cudaErrorTextureNotBound","","This indicated that a texture was not bound for access. …",2,null],[13,"cudaErrorSynchronizationError","","This indicated that a synchronization operation had …",2,null],[13,"cudaErrorInvalidFilterSetting","","This indicates that a non-float texture was being …",2,null],[13,"cudaErrorInvalidNormSetting","","This indicates that an attempt was made to read a …",2,null],[13,"cudaErrorMixedDeviceExecution","","Mixing of device and device emulation code was not …",2,null],[13,"cudaErrorNotYetImplemented","","This indicates that the API call is not yet implemented. …",2,null],[13,"cudaErrorMemoryValueTooLarge","","This indicated that an emulated device pointer exceeded …",2,null],[13,"cudaErrorStubLibrary","","This indicates that the CUDA driver that the application …",2,null],[13,"cudaErrorInsufficientDriver","","This indicates that the installed NVIDIA CUDA driver is …",2,null],[13,"cudaErrorCallRequiresNewerDriver","","This indicates that the API call requires a newer CUDA …",2,null],[13,"cudaErrorInvalidSurface","","This indicates that the surface passed to the API call is …",2,null],[13,"cudaErrorDuplicateVariableName","","This indicates that multiple global or constant variables …",2,null],[13,"cudaErrorDuplicateTextureName","","This indicates that multiple textures (across separate …",2,null],[13,"cudaErrorDuplicateSurfaceName","","This indicates that multiple surfaces (across separate …",2,null],[13,"cudaErrorDevicesUnavailable","","This indicates that all CUDA devices are busy or …",2,null],[13,"cudaErrorIncompatibleDriverContext","","This indicates that the current context is not compatible …",2,null],[13,"cudaErrorMissingConfiguration","","The device function being invoked (usually via …",2,null],[13,"cudaErrorPriorLaunchFailure","","This indicated that a previous kernel launch failed. This …",2,null],[13,"cudaErrorLaunchMaxDepthExceeded","","This error indicates that a device runtime grid launch …",2,null],[13,"cudaErrorLaunchFileScopedTex","","This error indicates that a grid launch did not occur …",2,null],[13,"cudaErrorLaunchFileScopedSurf","","This error indicates that a grid launch did not occur …",2,null],[13,"cudaErrorSyncDepthExceeded","","This error indicates that a call to …",2,null],[13,"cudaErrorLaunchPendingCountExceeded","","This error indicates that a device runtime grid launch …",2,null],[13,"cudaErrorInvalidDeviceFunction","","The requested device function does not exist or is not …",2,null],[13,"cudaErrorNoDevice","","This indicates that no CUDA-capable devices were detected …",2,null],[13,"cudaErrorInvalidDevice","","This indicates that the device ordinal supplied by the …",2,null],[13,"cudaErrorDeviceNotLicensed","","This indicates that the device doesn\'t have a valid Grid …",2,null],[13,"cudaErrorSoftwareValidityNotEstablished","","By default, the CUDA runtime may perform a minimal set of …",2,null],[13,"cudaErrorStartupFailure","","This indicates an internal startup failure in the CUDA …",2,null],[13,"cudaErrorInvalidKernelImage","","This indicates that the device kernel image is invalid.",2,null],[13,"cudaErrorDeviceUninitialized","","This most frequently indicates that there is no context …",2,null],[13,"cudaErrorMapBufferObjectFailed","","This indicates that the buffer object could not be mapped.",2,null],[13,"cudaErrorUnmapBufferObjectFailed","","This indicates that the buffer object could not be …",2,null],[13,"cudaErrorArrayIsMapped","","This indicates that the specified array is currently …",2,null],[13,"cudaErrorAlreadyMapped","","This indicates that the resource is already mapped.",2,null],[13,"cudaErrorNoKernelImageForDevice","","This indicates that there is no kernel image available …",2,null],[13,"cudaErrorAlreadyAcquired","","This indicates that a resource has already been acquired.",2,null],[13,"cudaErrorNotMapped","","This indicates that a resource is not mapped.",2,null],[13,"cudaErrorNotMappedAsArray","","This indicates that a mapped resource is not available …",2,null],[13,"cudaErrorNotMappedAsPointer","","This indicates that a mapped resource is not available …",2,null],[13,"cudaErrorECCUncorrectable","","This indicates that an uncorrectable ECC error was …",2,null],[13,"cudaErrorUnsupportedLimit","","This indicates that the ::cudaLimit passed to the API …",2,null],[13,"cudaErrorDeviceAlreadyInUse","","This indicates that a call tried to access an …",2,null],[13,"cudaErrorPeerAccessUnsupported","","This error indicates that P2P access is not supported …",2,null],[13,"cudaErrorInvalidPtx","","A PTX compilation failed. The runtime may fall back to …",2,null],[13,"cudaErrorInvalidGraphicsContext","","This indicates an error with the OpenGL or DirectX …",2,null],[13,"cudaErrorNvlinkUncorrectable","","This indicates that an uncorrectable NVLink error was …",2,null],[13,"cudaErrorJitCompilerNotFound","","This indicates that the PTX JIT compiler library was not …",2,null],[13,"cudaErrorUnsupportedPtxVersion","","This indicates that the provided PTX was compiled with an …",2,null],[13,"cudaErrorJitCompilationDisabled","","This indicates that the JIT compilation was disabled. The …",2,null],[13,"cudaErrorInvalidSource","","This indicates that the device kernel source is invalid.",2,null],[13,"cudaErrorFileNotFound","","This indicates that the file specified was not found.",2,null],[13,"cudaErrorSharedObjectSymbolNotFound","","This indicates that a link to a shared object failed to …",2,null],[13,"cudaErrorSharedObjectInitFailed","","This indicates that initialization of a shared object …",2,null],[13,"cudaErrorOperatingSystem","","This error indicates that an OS call failed.",2,null],[13,"cudaErrorInvalidResourceHandle","","This indicates that a resource handle passed to the API …",2,null],[13,"cudaErrorIllegalState","","This indicates that a resource required by the API call …",2,null],[13,"cudaErrorSymbolNotFound","","This indicates that a named symbol was not found. …",2,null],[13,"cudaErrorNotReady","","This indicates that asynchronous operations issued …",2,null],[13,"cudaErrorIllegalAddress","","The device encountered a load or store instruction on an …",2,null],[13,"cudaErrorLaunchOutOfResources","","This indicates that a launch did not occur because it did …",2,null],[13,"cudaErrorLaunchTimeout","","This indicates that the device kernel took too long to …",2,null],[13,"cudaErrorLaunchIncompatibleTexturing","","This error indicates a kernel launch that uses an …",2,null],[13,"cudaErrorPeerAccessAlreadyEnabled","","This error indicates that a call to …",2,null],[13,"cudaErrorPeerAccessNotEnabled","","This error indicates that ::cudaDeviceDisablePeerAccess() …",2,null],[13,"cudaErrorSetOnActiveProcess","","This indicates that the user has called …",2,null],[13,"cudaErrorContextIsDestroyed","","This error indicates that the context current to the …",2,null],[13,"cudaErrorAssert","","An assert triggered in device code during kernel …",2,null],[13,"cudaErrorTooManyPeers","","This error indicates that the hardware resources required …",2,null],[13,"cudaErrorHostMemoryAlreadyRegistered","","This error indicates that the memory range passed to …",2,null],[13,"cudaErrorHostMemoryNotRegistered","","This error indicates that the pointer passed to …",2,null],[13,"cudaErrorHardwareStackError","","Device encountered an error in the call stack during …",2,null],[13,"cudaErrorIllegalInstruction","","The device encountered an illegal instruction during …",2,null],[13,"cudaErrorMisalignedAddress","","The device encountered a load or store instruction on a …",2,null],[13,"cudaErrorInvalidAddressSpace","","While executing a kernel, the device encountered an …",2,null],[13,"cudaErrorInvalidPc","","The device encountered an invalid program counter. This …",2,null],[13,"cudaErrorLaunchFailure","","An exception occurred on the device while executing a …",2,null],[13,"cudaErrorCooperativeLaunchTooLarge","","This error indicates that the number of blocks launched …",2,null],[13,"cudaErrorNotPermitted","","This error indicates the attempted operation is not …",2,null],[13,"cudaErrorNotSupported","","This error indicates the attempted operation is not …",2,null],[13,"cudaErrorSystemNotReady","","This error indicates that the system is not yet ready to …",2,null],[13,"cudaErrorSystemDriverMismatch","","This error indicates that there is a mismatch between the …",2,null],[13,"cudaErrorCompatNotSupportedOnDevice","","This error indicates that the system was upgraded to run …",2,null],[13,"cudaErrorStreamCaptureUnsupported","","The operation is not permitted when the stream is …",2,null],[13,"cudaErrorStreamCaptureInvalidated","","The current capture sequence on the stream has been …",2,null],[13,"cudaErrorStreamCaptureMerge","","The operation would have resulted in a merge of two …",2,null],[13,"cudaErrorStreamCaptureUnmatched","","The capture was not initiated in this stream.",2,null],[13,"cudaErrorStreamCaptureUnjoined","","The capture sequence contains a fork that was not joined …",2,null],[13,"cudaErrorStreamCaptureIsolation","","A dependency would have been created which crosses the …",2,null],[13,"cudaErrorStreamCaptureImplicit","","The operation would have resulted in a disallowed …",2,null],[13,"cudaErrorCapturedEvent","","The operation is not permitted on an event which was last …",2,null],[13,"cudaErrorStreamCaptureWrongThread","","A stream capture sequence not initiated with the …",2,null],[13,"cudaErrorTimeout","","This indicates that the wait operation has timed out.",2,null],[13,"cudaErrorGraphExecUpdateFailure","","This error indicates that the graph update was not …",2,null],[13,"cudaErrorUnknown","","This indicates that an unknown internal error has …",2,null],[13,"cudaErrorApiFailureBase","","Any unhandled CUDA driver error is added to this value …",2,null],[4,"cudaChannelFormatKind","","Channel format kind",null,null],[13,"cudaChannelFormatKindSigned","","< Signed channel format",3,null],[13,"cudaChannelFormatKindUnsigned","","< Unsigned channel format",3,null],[13,"cudaChannelFormatKindFloat","","< Float channel format",3,null],[13,"cudaChannelFormatKindNone","","< No channel format",3,null],[13,"cudaChannelFormatKindNV12","","< Unsigned 8-bit integers, planar 4:2:0 YUV format",3,null],[3,"cudaChannelFormatDesc","","CUDA Channel format descriptor",null,null],[12,"x","","< x",4,null],[12,"y","","< y",4,null],[12,"z","","< z",4,null],[12,"w","","< w",4,null],[12,"f","","< Channel format kind",4,null],[3,"cudaArray","","",null,null],[6,"cudaArray_t","","CUDA array",null,null],[6,"cudaArray_const_t","","CUDA array (as source copy argument)",null,null],[3,"cudaMipmappedArray","","",null,null],[6,"cudaMipmappedArray_t","","CUDA mipmapped array",null,null],[6,"cudaMipmappedArray_const_t","","CUDA mipmapped array (as source argument)",null,null],[3,"cudaArraySparseProperties","","Sparse CUDA array and CUDA mipmapped array properties",null,null],[12,"tileExtent","","",5,null],[12,"miptailFirstLevel","","< First mip level at which the mip tail begins",5,null],[12,"miptailSize","","< Total size of the mip tail.",5,null],[12,"flags","","< Flags will either be zero or …",5,null],[12,"reserved","","",5,null],[3,"cudaArraySparseProperties__bindgen_ty_1","","",null,null],[12,"width","","< Tile width in elements",6,null],[12,"height","","< Tile height in elements",6,null],[12,"depth","","< Tile depth in elements",6,null],[4,"cudaMemoryType","","CUDA memory types",null,null],[13,"cudaMemoryTypeUnregistered","","< Unregistered memory",7,null],[13,"cudaMemoryTypeHost","","< Host memory",7,null],[13,"cudaMemoryTypeDevice","","< Device memory",7,null],[13,"cudaMemoryTypeManaged","","< Managed memory",7,null],[4,"cudaMemcpyKind","","CUDA memory copy types",null,null],[13,"cudaMemcpyHostToHost","","< Host   -> Host",8,null],[13,"cudaMemcpyHostToDevice","","< Host   -> Device",8,null],[13,"cudaMemcpyDeviceToHost","","< Device -> Host",8,null],[13,"cudaMemcpyDeviceToDevice","","< Device -> Device",8,null],[13,"cudaMemcpyDefault","","< Direction of the transfer is inferred from the pointer …",8,null],[3,"cudaPitchedPtr","","CUDA Pitched memory pointer",null,null],[12,"ptr","","< Pointer to allocated memory",9,null],[12,"pitch","","< Pitch of allocated memory in bytes",9,null],[12,"xsize","","< Logical width of allocation in elements",9,null],[12,"ysize","","< Logical height of allocation in elements",9,null],[3,"cudaExtent","","CUDA extent",null,null],[12,"width","","< Width in elements when referring to array memory, in …",10,null],[12,"height","","< Height in elements",10,null],[12,"depth","","< Depth in elements",10,null],[3,"cudaPos","","CUDA 3D position",null,null],[12,"x","","< x",11,null],[12,"y","","< y",11,null],[12,"z","","< z",11,null],[3,"cudaMemcpy3DParms","","CUDA 3D memory copying parameters",null,null],[12,"srcArray","","< Source memory address",12,null],[12,"srcPos","","< Source position offset",12,null],[12,"srcPtr","","< Pitched source memory address",12,null],[12,"dstArray","","< Destination memory address",12,null],[12,"dstPos","","< Destination position offset",12,null],[12,"dstPtr","","< Pitched destination memory address",12,null],[12,"extent","","< Requested memory copy size",12,null],[12,"kind","","< Type of transfer",12,null],[3,"cudaMemcpy3DPeerParms","","CUDA 3D cross-device memory copying parameters",null,null],[12,"srcArray","","< Source memory address",13,null],[12,"srcPos","","< Source position offset",13,null],[12,"srcPtr","","< Pitched source memory address",13,null],[12,"srcDevice","","< Source device",13,null],[12,"dstArray","","< Destination memory address",13,null],[12,"dstPos","","< Destination position offset",13,null],[12,"dstPtr","","< Pitched destination memory address",13,null],[12,"dstDevice","","< Destination device",13,null],[12,"extent","","< Requested memory copy size",13,null],[3,"cudaMemsetParams","","CUDA Memset node parameters",null,null],[12,"dst","","< Destination device pointer",14,null],[12,"pitch","","< Pitch of destination device pointer. Unused if height …",14,null],[12,"value","","< Value to be set",14,null],[12,"elementSize","","< Size of each element in bytes. Must be 1, 2, or 4.",14,null],[12,"width","","< Width of the row in elements",14,null],[12,"height","","< Number of rows",14,null],[4,"cudaAccessProperty","","Specifies performance hint with ::cudaAccessPolicyWindow …",null,null],[13,"cudaAccessPropertyNormal","","< Normal cache persistence.",15,null],[13,"cudaAccessPropertyStreaming","","< Streaming access is less likely to persit from cache.",15,null],[13,"cudaAccessPropertyPersisting","","< Persisting access is more likely to persist in cache.",15,null],[3,"cudaAccessPolicyWindow","","Specifies an access policy for a window, a contiguous …",null,null],[12,"base_ptr","","< Starting address of the access policy window. CUDA …",16,null],[12,"num_bytes","","< Size in bytes of the window policy. CUDA driver may …",16,null],[12,"hitRatio","","< hitRatio specifies percentage of lines assigned …",16,null],[12,"hitProp","","< ::CUaccessProperty set for hit.",16,null],[12,"missProp","","< ::CUaccessProperty set for miss. Must be either NORMAL …",16,null],[6,"cudaHostFn_t","","CUDA host function \\\\param userData Argument value passed …",null,null],[3,"cudaHostNodeParams","","CUDA host node parameters",null,null],[12,"fn_","","< The function to call when the node executes",17,null],[12,"userData","","< Argument to pass to the function",17,null],[4,"cudaStreamCaptureStatus","","Possible stream capture statuses returned by …",null,null],[13,"cudaStreamCaptureStatusNone","","< Stream is not capturing",18,null],[13,"cudaStreamCaptureStatusActive","","< Stream is actively capturing",18,null],[13,"cudaStreamCaptureStatusInvalidated","","< Stream is part of a capture sequence that has been …",18,null],[4,"cudaStreamCaptureMode","","Possible modes for stream capture thread interactions. …",null,null],[13,"cudaStreamCaptureModeGlobal","","",19,null],[13,"cudaStreamCaptureModeThreadLocal","","",19,null],[13,"cudaStreamCaptureModeRelaxed","","",19,null],[4,"cudaSynchronizationPolicy","","",null,null],[13,"cudaSyncPolicyAuto","","",20,null],[13,"cudaSyncPolicySpin","","",20,null],[13,"cudaSyncPolicyYield","","",20,null],[13,"cudaSyncPolicyBlockingSync","","",20,null],[4,"cudaStreamAttrID","","Stream Attributes",null,null],[13,"cudaStreamAttributeAccessPolicyWindow","","< Identifier for …",21,null],[13,"cudaStreamAttributeSynchronizationPolicy","","< ::cudaSynchronizationPolicy for work queued up in this …",21,null],[19,"cudaStreamAttrValue","","Stream attributes union used with …",null,null],[12,"accessPolicyWindow","","",22,null],[12,"syncPolicy","","",22,null],[3,"cudaGraphicsResource","","CUDA graphics interop resource",null,null],[4,"cudaGraphicsRegisterFlags","","CUDA graphics interop register flags",null,null],[13,"cudaGraphicsRegisterFlagsNone","","< Default",23,null],[13,"cudaGraphicsRegisterFlagsReadOnly","","< CUDA will not write to this resource",23,null],[13,"cudaGraphicsRegisterFlagsWriteDiscard","","< CUDA will only write to and will not read from this …",23,null],[13,"cudaGraphicsRegisterFlagsSurfaceLoadStore","","< CUDA will bind this resource to a surface reference",23,null],[13,"cudaGraphicsRegisterFlagsTextureGather","","< CUDA will perform texture gather operations on this …",23,null],[4,"cudaGraphicsMapFlags","","CUDA graphics interop map flags",null,null],[13,"cudaGraphicsMapFlagsNone","","< Default; Assume resource can be read/written",24,null],[13,"cudaGraphicsMapFlagsReadOnly","","< CUDA will not write to this resource",24,null],[13,"cudaGraphicsMapFlagsWriteDiscard","","< CUDA will only write to and will not read from this …",24,null],[4,"cudaGraphicsCubeFace","","CUDA graphics interop array indices for cube maps",null,null],[13,"cudaGraphicsCubeFacePositiveX","","< Positive X face of cubemap",25,null],[13,"cudaGraphicsCubeFaceNegativeX","","< Negative X face of cubemap",25,null],[13,"cudaGraphicsCubeFacePositiveY","","< Positive Y face of cubemap",25,null],[13,"cudaGraphicsCubeFaceNegativeY","","< Negative Y face of cubemap",25,null],[13,"cudaGraphicsCubeFacePositiveZ","","< Positive Z face of cubemap",25,null],[13,"cudaGraphicsCubeFaceNegativeZ","","< Negative Z face of cubemap",25,null],[4,"cudaKernelNodeAttrID","","Graph kernel node Attributes",null,null],[13,"cudaKernelNodeAttributeAccessPolicyWindow","","< Identifier for …",26,null],[13,"cudaKernelNodeAttributeCooperative","","< Allows a kernel node to be cooperative (see …",26,null],[19,"cudaKernelNodeAttrValue","","Graph kernel node attributes union, used with …",null,null],[12,"accessPolicyWindow","","< Attribute ::CUaccessPolicyWindow.",27,null],[12,"cooperative","","",27,null],[4,"cudaResourceType","","CUDA resource types",null,null],[13,"cudaResourceTypeArray","","< Array resource",28,null],[13,"cudaResourceTypeMipmappedArray","","< Mipmapped array resource",28,null],[13,"cudaResourceTypeLinear","","< Linear resource",28,null],[13,"cudaResourceTypePitch2D","","< Pitch 2D resource",28,null],[4,"cudaResourceViewFormat","","CUDA texture resource view formats",null,null],[13,"cudaResViewFormatNone","","< No resource view format (use underlying resource format)",29,null],[13,"cudaResViewFormatUnsignedChar1","","< 1 channel unsigned 8-bit integers",29,null],[13,"cudaResViewFormatUnsignedChar2","","< 2 channel unsigned 8-bit integers",29,null],[13,"cudaResViewFormatUnsignedChar4","","< 4 channel unsigned 8-bit integers",29,null],[13,"cudaResViewFormatSignedChar1","","< 1 channel signed 8-bit integers",29,null],[13,"cudaResViewFormatSignedChar2","","< 2 channel signed 8-bit integers",29,null],[13,"cudaResViewFormatSignedChar4","","< 4 channel signed 8-bit integers",29,null],[13,"cudaResViewFormatUnsignedShort1","","< 1 channel unsigned 16-bit integers",29,null],[13,"cudaResViewFormatUnsignedShort2","","< 2 channel unsigned 16-bit integers",29,null],[13,"cudaResViewFormatUnsignedShort4","","< 4 channel unsigned 16-bit integers",29,null],[13,"cudaResViewFormatSignedShort1","","< 1 channel signed 16-bit integers",29,null],[13,"cudaResViewFormatSignedShort2","","< 2 channel signed 16-bit integers",29,null],[13,"cudaResViewFormatSignedShort4","","< 4 channel signed 16-bit integers",29,null],[13,"cudaResViewFormatUnsignedInt1","","< 1 channel unsigned 32-bit integers",29,null],[13,"cudaResViewFormatUnsignedInt2","","< 2 channel unsigned 32-bit integers",29,null],[13,"cudaResViewFormatUnsignedInt4","","< 4 channel unsigned 32-bit integers",29,null],[13,"cudaResViewFormatSignedInt1","","< 1 channel signed 32-bit integers",29,null],[13,"cudaResViewFormatSignedInt2","","< 2 channel signed 32-bit integers",29,null],[13,"cudaResViewFormatSignedInt4","","< 4 channel signed 32-bit integers",29,null],[13,"cudaResViewFormatHalf1","","< 1 channel 16-bit floating point",29,null],[13,"cudaResViewFormatHalf2","","< 2 channel 16-bit floating point",29,null],[13,"cudaResViewFormatHalf4","","< 4 channel 16-bit floating point",29,null],[13,"cudaResViewFormatFloat1","","< 1 channel 32-bit floating point",29,null],[13,"cudaResViewFormatFloat2","","< 2 channel 32-bit floating point",29,null],[13,"cudaResViewFormatFloat4","","< 4 channel 32-bit floating point",29,null],[13,"cudaResViewFormatUnsignedBlockCompressed1","","< Block compressed 1",29,null],[13,"cudaResViewFormatUnsignedBlockCompressed2","","< Block compressed 2",29,null],[13,"cudaResViewFormatUnsignedBlockCompressed3","","< Block compressed 3",29,null],[13,"cudaResViewFormatUnsignedBlockCompressed4","","< Block compressed 4 unsigned",29,null],[13,"cudaResViewFormatSignedBlockCompressed4","","< Block compressed 4 signed",29,null],[13,"cudaResViewFormatUnsignedBlockCompressed5","","< Block compressed 5 unsigned",29,null],[13,"cudaResViewFormatSignedBlockCompressed5","","< Block compressed 5 signed",29,null],[13,"cudaResViewFormatUnsignedBlockCompressed6H","","< Block compressed 6 unsigned half-float",29,null],[13,"cudaResViewFormatSignedBlockCompressed6H","","< Block compressed 6 signed half-float",29,null],[13,"cudaResViewFormatUnsignedBlockCompressed7","","< Block compressed 7",29,null],[3,"cudaResourceDesc","","CUDA resource descriptor",null,null],[12,"resType","","< Resource type",30,null],[12,"res","","",30,null],[19,"cudaResourceDesc__bindgen_ty_1","","",null,null],[12,"array","","",31,null],[12,"mipmap","","",31,null],[12,"linear","","",31,null],[12,"pitch2D","","",31,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"array","","< CUDA array",32,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"mipmap","","< CUDA mipmapped array",33,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3","","",null,null],[12,"devPtr","","< Device pointer",34,null],[12,"desc","","< Channel descriptor",34,null],[12,"sizeInBytes","","< Size in bytes",34,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4","","",null,null],[12,"devPtr","","< Device pointer",35,null],[12,"desc","","< Channel descriptor",35,null],[12,"width","","< Width of the array in elements",35,null],[12,"height","","< Height of the array in elements",35,null],[12,"pitchInBytes","","< Pitch between two rows in bytes",35,null],[3,"cudaResourceViewDesc","","CUDA resource view descriptor",null,null],[12,"format","","< Resource view format",36,null],[12,"width","","< Width of the resource view",36,null],[12,"height","","< Height of the resource view",36,null],[12,"depth","","< Depth of the resource view",36,null],[12,"firstMipmapLevel","","< First defined mipmap level",36,null],[12,"lastMipmapLevel","","< Last defined mipmap level",36,null],[12,"firstLayer","","< First layer index",36,null],[12,"lastLayer","","< Last layer index",36,null],[3,"cudaPointerAttributes","","CUDA pointer attributes",null,null],[12,"type_","","The type of memory - ::cudaMemoryTypeUnregistered, …",37,null],[12,"device","","The device against which the memory was allocated or …",37,null],[12,"devicePointer","","The address which may be dereferenced on the current …",37,null],[12,"hostPointer","","The address which may be dereferenced on the host to …",37,null],[3,"cudaFuncAttributes","","CUDA function attributes",null,null],[12,"sharedSizeBytes","","The size in bytes of statically-allocated shared memory …",38,null],[12,"constSizeBytes","","The size in bytes of user-allocated constant memory …",38,null],[12,"localSizeBytes","","The size in bytes of local memory used by each thread of …",38,null],[12,"maxThreadsPerBlock","","The maximum number of threads per block, beyond which a …",38,null],[12,"numRegs","","The number of registers used by each thread of this …",38,null],[12,"ptxVersion","","The PTX virtual architecture version for which the …",38,null],[12,"binaryVersion","","The binary architecture version for which the function …",38,null],[12,"cacheModeCA","","The attribute to indicate whether the function has been …",38,null],[12,"maxDynamicSharedSizeBytes","","The maximum size in bytes of dynamic shared memory per …",38,null],[12,"preferredShmemCarveout","","On devices where the L1 cache and shared memory use the …",38,null],[4,"cudaFuncAttribute","","CUDA function attributes that can be set using …",null,null],[13,"cudaFuncAttributeMaxDynamicSharedMemorySize","","< Maximum dynamic shared memory size",39,null],[13,"cudaFuncAttributePreferredSharedMemoryCarveout","","< Preferred shared memory-L1 cache split",39,null],[13,"cudaFuncAttributeMax","","",39,null],[4,"cudaFuncCache","","CUDA function cache configurations",null,null],[13,"cudaFuncCachePreferNone","","< Default function cache configuration, no preference",40,null],[13,"cudaFuncCachePreferShared","","< Prefer larger shared memory and smaller L1 cache",40,null],[13,"cudaFuncCachePreferL1","","< Prefer larger L1 cache and smaller shared memory",40,null],[13,"cudaFuncCachePreferEqual","","< Prefer equal size L1 cache and shared memory",40,null],[4,"cudaSharedMemConfig","","CUDA shared memory configuration",null,null],[13,"cudaSharedMemBankSizeDefault","","",41,null],[13,"cudaSharedMemBankSizeFourByte","","",41,null],[13,"cudaSharedMemBankSizeEightByte","","",41,null],[4,"cudaSharedCarveout","","Shared memory carveout configurations. These may be …",null,null],[13,"cudaSharedmemCarveoutDefault","","< No preference for shared memory or L1 (default)",42,null],[13,"cudaSharedmemCarveoutMaxShared","","< Prefer maximum available shared memory, minimum L1 cache",42,null],[13,"cudaSharedmemCarveoutMaxL1","","< Prefer maximum available L1 cache, minimum shared memory",42,null],[4,"cudaComputeMode","","CUDA device compute modes",null,null],[13,"cudaComputeModeDefault","","< Default compute mode (Multiple threads can use …",43,null],[13,"cudaComputeModeExclusive","","< Compute-exclusive-thread mode (Only one thread in one …",43,null],[13,"cudaComputeModeProhibited","","< Compute-prohibited mode (No threads can use …",43,null],[13,"cudaComputeModeExclusiveProcess","","< Compute-exclusive-process mode (Many threads in one …",43,null],[4,"cudaLimit","","CUDA Limits",null,null],[13,"cudaLimitStackSize","","< GPU thread stack size",44,null],[13,"cudaLimitPrintfFifoSize","","< GPU printf FIFO size",44,null],[13,"cudaLimitMallocHeapSize","","< GPU malloc heap size",44,null],[13,"cudaLimitDevRuntimeSyncDepth","","< GPU device runtime synchronize depth",44,null],[13,"cudaLimitDevRuntimePendingLaunchCount","","< GPU device runtime pending launch count",44,null],[13,"cudaLimitMaxL2FetchGranularity","","< A value between 0 and 128 that indicates the maximum …",44,null],[13,"cudaLimitPersistingL2CacheSize","","< A size in bytes for L2 persisting lines cache size",44,null],[4,"cudaMemoryAdvise","","CUDA Memory Advise values",null,null],[13,"cudaMemAdviseSetReadMostly","","< Data will mostly be read and only occassionally be …",45,null],[13,"cudaMemAdviseUnsetReadMostly","","< Undo the effect of ::cudaMemAdviseSetReadMostly",45,null],[13,"cudaMemAdviseSetPreferredLocation","","< Set the preferred location for the data as the …",45,null],[13,"cudaMemAdviseUnsetPreferredLocation","","< Clear the preferred location for the data",45,null],[13,"cudaMemAdviseSetAccessedBy","","< Data will be accessed by the specified device, so …",45,null],[13,"cudaMemAdviseUnsetAccessedBy","","< Let the Unified Memory subsystem decide on the page …",45,null],[4,"cudaMemRangeAttribute","","CUDA range attributes",null,null],[13,"cudaMemRangeAttributeReadMostly","","< Whether the range will mostly be read and only …",46,null],[13,"cudaMemRangeAttributePreferredLocation","","< The preferred location of the range",46,null],[13,"cudaMemRangeAttributeAccessedBy","","< Memory range has ::cudaMemAdviseSetAccessedBy set for …",46,null],[13,"cudaMemRangeAttributeLastPrefetchLocation","","< The last location to which the range was prefetched",46,null],[4,"cudaOutputMode","","CUDA Profiler Output modes",null,null],[13,"cudaKeyValuePair","","< Output mode Key-Value pair format.",47,null],[13,"cudaCSV","","< Output mode Comma separated values format.",47,null],[4,"cudaDeviceAttr","","CUDA device attributes",null,null],[13,"cudaDevAttrMaxThreadsPerBlock","","< Maximum number of threads per block",48,null],[13,"cudaDevAttrMaxBlockDimX","","< Maximum block dimension X",48,null],[13,"cudaDevAttrMaxBlockDimY","","< Maximum block dimension Y",48,null],[13,"cudaDevAttrMaxBlockDimZ","","< Maximum block dimension Z",48,null],[13,"cudaDevAttrMaxGridDimX","","< Maximum grid dimension X",48,null],[13,"cudaDevAttrMaxGridDimY","","< Maximum grid dimension Y",48,null],[13,"cudaDevAttrMaxGridDimZ","","< Maximum grid dimension Z",48,null],[13,"cudaDevAttrMaxSharedMemoryPerBlock","","< Maximum shared memory available per block in bytes",48,null],[13,"cudaDevAttrTotalConstantMemory","","< Memory available on device for <strong>constant</strong> variables in a …",48,null],[13,"cudaDevAttrWarpSize","","< Warp size in threads",48,null],[13,"cudaDevAttrMaxPitch","","< Maximum pitch in bytes allowed by memory copies",48,null],[13,"cudaDevAttrMaxRegistersPerBlock","","< Maximum number of 32-bit registers available per block",48,null],[13,"cudaDevAttrClockRate","","< Peak clock frequency in kilohertz",48,null],[13,"cudaDevAttrTextureAlignment","","< Alignment requirement for textures",48,null],[13,"cudaDevAttrGpuOverlap","","< Device can possibly copy memory and execute a kernel …",48,null],[13,"cudaDevAttrMultiProcessorCount","","< Number of multiprocessors on device",48,null],[13,"cudaDevAttrKernelExecTimeout","","< Specifies whether there is a run time limit on kernels",48,null],[13,"cudaDevAttrIntegrated","","< Device is integrated with host memory",48,null],[13,"cudaDevAttrCanMapHostMemory","","< Device can map host memory into CUDA address space",48,null],[13,"cudaDevAttrComputeMode","","< Compute mode (See ::cudaComputeMode for details)",48,null],[13,"cudaDevAttrMaxTexture1DWidth","","< Maximum 1D texture width",48,null],[13,"cudaDevAttrMaxTexture2DWidth","","< Maximum 2D texture width",48,null],[13,"cudaDevAttrMaxTexture2DHeight","","< Maximum 2D texture height",48,null],[13,"cudaDevAttrMaxTexture3DWidth","","< Maximum 3D texture width",48,null],[13,"cudaDevAttrMaxTexture3DHeight","","< Maximum 3D texture height",48,null],[13,"cudaDevAttrMaxTexture3DDepth","","< Maximum 3D texture depth",48,null],[13,"cudaDevAttrMaxTexture2DLayeredWidth","","< Maximum 2D layered texture width",48,null],[13,"cudaDevAttrMaxTexture2DLayeredHeight","","< Maximum 2D layered texture height",48,null],[13,"cudaDevAttrMaxTexture2DLayeredLayers","","< Maximum layers in a 2D layered texture",48,null],[13,"cudaDevAttrSurfaceAlignment","","< Alignment requirement for surfaces",48,null],[13,"cudaDevAttrConcurrentKernels","","< Device can possibly execute multiple kernels …",48,null],[13,"cudaDevAttrEccEnabled","","< Device has ECC support enabled",48,null],[13,"cudaDevAttrPciBusId","","< PCI bus ID of the device",48,null],[13,"cudaDevAttrPciDeviceId","","< PCI device ID of the device",48,null],[13,"cudaDevAttrTccDriver","","< Device is using TCC driver model",48,null],[13,"cudaDevAttrMemoryClockRate","","< Peak memory clock frequency in kilohertz",48,null],[13,"cudaDevAttrGlobalMemoryBusWidth","","< Global memory bus width in bits",48,null],[13,"cudaDevAttrL2CacheSize","","< Size of L2 cache in bytes",48,null],[13,"cudaDevAttrMaxThreadsPerMultiProcessor","","< Maximum resident threads per multiprocessor",48,null],[13,"cudaDevAttrAsyncEngineCount","","< Number of asynchronous engines",48,null],[13,"cudaDevAttrUnifiedAddressing","","< Device shares a unified address space with the host",48,null],[13,"cudaDevAttrMaxTexture1DLayeredWidth","","< Maximum 1D layered texture width",48,null],[13,"cudaDevAttrMaxTexture1DLayeredLayers","","< Maximum layers in a 1D layered texture",48,null],[13,"cudaDevAttrMaxTexture2DGatherWidth","","< Maximum 2D texture width if cudaArrayTextureGather is …",48,null],[13,"cudaDevAttrMaxTexture2DGatherHeight","","< Maximum 2D texture height if cudaArrayTextureGather is …",48,null],[13,"cudaDevAttrMaxTexture3DWidthAlt","","< Alternate maximum 3D texture width",48,null],[13,"cudaDevAttrMaxTexture3DHeightAlt","","< Alternate maximum 3D texture height",48,null],[13,"cudaDevAttrMaxTexture3DDepthAlt","","< Alternate maximum 3D texture depth",48,null],[13,"cudaDevAttrPciDomainId","","< PCI domain ID of the device",48,null],[13,"cudaDevAttrTexturePitchAlignment","","< Pitch alignment requirement for textures",48,null],[13,"cudaDevAttrMaxTextureCubemapWidth","","< Maximum cubemap texture width/height",48,null],[13,"cudaDevAttrMaxTextureCubemapLayeredWidth","","< Maximum cubemap layered texture width/height",48,null],[13,"cudaDevAttrMaxTextureCubemapLayeredLayers","","< Maximum layers in a cubemap layered texture",48,null],[13,"cudaDevAttrMaxSurface1DWidth","","< Maximum 1D surface width",48,null],[13,"cudaDevAttrMaxSurface2DWidth","","< Maximum 2D surface width",48,null],[13,"cudaDevAttrMaxSurface2DHeight","","< Maximum 2D surface height",48,null],[13,"cudaDevAttrMaxSurface3DWidth","","< Maximum 3D surface width",48,null],[13,"cudaDevAttrMaxSurface3DHeight","","< Maximum 3D surface height",48,null],[13,"cudaDevAttrMaxSurface3DDepth","","< Maximum 3D surface depth",48,null],[13,"cudaDevAttrMaxSurface1DLayeredWidth","","< Maximum 1D layered surface width",48,null],[13,"cudaDevAttrMaxSurface1DLayeredLayers","","< Maximum layers in a 1D layered surface",48,null],[13,"cudaDevAttrMaxSurface2DLayeredWidth","","< Maximum 2D layered surface width",48,null],[13,"cudaDevAttrMaxSurface2DLayeredHeight","","< Maximum 2D layered surface height",48,null],[13,"cudaDevAttrMaxSurface2DLayeredLayers","","< Maximum layers in a 2D layered surface",48,null],[13,"cudaDevAttrMaxSurfaceCubemapWidth","","< Maximum cubemap surface width",48,null],[13,"cudaDevAttrMaxSurfaceCubemapLayeredWidth","","< Maximum cubemap layered surface width",48,null],[13,"cudaDevAttrMaxSurfaceCubemapLayeredLayers","","< Maximum layers in a cubemap layered surface",48,null],[13,"cudaDevAttrMaxTexture1DLinearWidth","","< Maximum 1D linear texture width",48,null],[13,"cudaDevAttrMaxTexture2DLinearWidth","","< Maximum 2D linear texture width",48,null],[13,"cudaDevAttrMaxTexture2DLinearHeight","","< Maximum 2D linear texture height",48,null],[13,"cudaDevAttrMaxTexture2DLinearPitch","","< Maximum 2D linear texture pitch in bytes",48,null],[13,"cudaDevAttrMaxTexture2DMipmappedWidth","","< Maximum mipmapped 2D texture width",48,null],[13,"cudaDevAttrMaxTexture2DMipmappedHeight","","< Maximum mipmapped 2D texture height",48,null],[13,"cudaDevAttrComputeCapabilityMajor","","< Major compute capability version number",48,null],[13,"cudaDevAttrComputeCapabilityMinor","","< Minor compute capability version number",48,null],[13,"cudaDevAttrMaxTexture1DMipmappedWidth","","< Maximum mipmapped 1D texture width",48,null],[13,"cudaDevAttrStreamPrioritiesSupported","","< Device supports stream priorities",48,null],[13,"cudaDevAttrGlobalL1CacheSupported","","< Device supports caching globals in L1",48,null],[13,"cudaDevAttrLocalL1CacheSupported","","< Device supports caching locals in L1",48,null],[13,"cudaDevAttrMaxSharedMemoryPerMultiprocessor","","< Maximum shared memory available per multiprocessor in …",48,null],[13,"cudaDevAttrMaxRegistersPerMultiprocessor","","< Maximum number of 32-bit registers available per …",48,null],[13,"cudaDevAttrManagedMemory","","< Device can allocate managed memory on this system",48,null],[13,"cudaDevAttrIsMultiGpuBoard","","< Device is on a multi-GPU board",48,null],[13,"cudaDevAttrMultiGpuBoardGroupID","","< Unique identifier for a group of devices on the same …",48,null],[13,"cudaDevAttrHostNativeAtomicSupported","","< Link between the device and the host supports native …",48,null],[13,"cudaDevAttrSingleToDoublePrecisionPerfRatio","","< Ratio of single precision performance (in …",48,null],[13,"cudaDevAttrPageableMemoryAccess","","< Device supports coherently accessing pageable memory …",48,null],[13,"cudaDevAttrConcurrentManagedAccess","","< Device can coherently access managed memory …",48,null],[13,"cudaDevAttrComputePreemptionSupported","","< Device supports Compute Preemption",48,null],[13,"cudaDevAttrCanUseHostPointerForRegisteredMem","","< Device can access host registered memory at the same …",48,null],[13,"cudaDevAttrReserved92","","",48,null],[13,"cudaDevAttrReserved93","","",48,null],[13,"cudaDevAttrReserved94","","",48,null],[13,"cudaDevAttrCooperativeLaunch","","< Device supports launching cooperative kernels via …",48,null],[13,"cudaDevAttrCooperativeMultiDeviceLaunch","","< Device can participate in cooperative kernels launched …",48,null],[13,"cudaDevAttrMaxSharedMemoryPerBlockOptin","","< The maximum optin shared memory per block. This value …",48,null],[13,"cudaDevAttrCanFlushRemoteWrites","","< Device supports flushing of outstanding remote writes.",48,null],[13,"cudaDevAttrHostRegisterSupported","","< Device supports host memory registration via …",48,null],[13,"cudaDevAttrPageableMemoryAccessUsesHostPageTables","","< Device accesses pageable memory via the host\'s page …",48,null],[13,"cudaDevAttrDirectManagedMemAccessFromHost","","< Host can directly access managed memory on the device …",48,null],[13,"cudaDevAttrMaxBlocksPerMultiprocessor","","< Maximum number of blocks per multiprocessor",48,null],[13,"cudaDevAttrReservedSharedMemoryPerBlock","","< Shared memory reserved by CUDA driver per block in bytes",48,null],[13,"cudaDevAttrSparseCudaArraySupported","","< Device supports sparse CUDA arrays and sparse CUDA …",48,null],[13,"cudaDevAttrHostRegisterReadOnlySupported","","< Device supports using the ::cudaHostRegister flag …",48,null],[13,"cudaDevAttrMaxTimelineSemaphoreInteropSupported","","< External timeline semaphore interop is supported on the …",48,null],[13,"cudaDevAttrMemoryPoolsSupported","","< Device supports using the ::cudaMallocAsync and …",48,null],[4,"cudaMemPoolAttr","","CUDA memory pool attributes",null,null],[13,"cudaMemPoolReuseFollowEventDependencies","","(value type = cuuint64_t) Amount of reserved memory in …",49,null],[13,"cudaMemPoolReuseAllowOpportunistic","","(value type = int) Allow cuMemAllocAsync to use memory …",49,null],[13,"cudaMemPoolReuseAllowInternalDependencies","","(value type = int) Allow reuse of already completed frees …",49,null],[13,"cudaMemPoolAttrReleaseThreshold","","(value type = int) Allow cuMemAllocAsync to insert new …",49,null],[4,"cudaMemLocationType","","",null,null],[13,"cudaMemLocationTypeInvalid","","",50,null],[13,"cudaMemLocationTypeDevice","","",50,null],[3,"cudaMemLocation","","",null,null],[12,"type_","","",51,null],[12,"id","","",51,null],[4,"cudaMemAccessFlags","","",null,null],[13,"cudaMemAccessFlagsProtNone","","",52,null],[13,"cudaMemAccessFlagsProtRead","","",52,null],[13,"cudaMemAccessFlagsProtReadWrite","","",52,null],[3,"cudaMemAccessDesc","","",null,null],[12,"location","","",53,null],[12,"flags","","",53,null],[4,"cudaMemAllocationType","","",null,null],[13,"cudaMemAllocationTypeInvalid","","",54,null],[13,"cudaMemAllocationTypePinned","","",54,null],[13,"cudaMemAllocationTypeMax","","",54,null],[4,"cudaMemAllocationHandleType","","",null,null],[13,"cudaMemHandleTypeNone","","< Does not allow any export mechanism. >",55,null],[13,"cudaMemHandleTypePosixFileDescriptor","","< Allows a file descriptor to be used for exporting. …",55,null],[13,"cudaMemHandleTypeWin32","","< Allows a Win32 NT handle to be used for exporting. …",55,null],[13,"cudaMemHandleTypeWin32Kmt","","< Allows a Win32 KMT handle to be used for exporting. …",55,null],[3,"cudaMemPoolProps","","",null,null],[12,"allocType","","",56,null],[12,"handleTypes","","",56,null],[12,"location","","",56,null],[12,"win32SecurityAttributes","","",56,null],[12,"reserved","","",56,null],[3,"cudaMemPoolPtrExportData","","",null,null],[12,"reserved","","",57,null],[4,"cudaDeviceP2PAttr","","CUDA device P2P attributes",null,null],[13,"cudaDevP2PAttrPerformanceRank","","< A relative value indicating the performance of the link …",58,null],[13,"cudaDevP2PAttrAccessSupported","","< Peer access is enabled",58,null],[13,"cudaDevP2PAttrNativeAtomicSupported","","< Native atomic operation over the link supported",58,null],[13,"cudaDevP2PAttrCudaArrayAccessSupported","","< Accessing CUDA arrays over the link supported",58,null],[3,"CUuuid_st","","",null,null],[12,"bytes","","",59,null],[6,"CUuuid","","",null,null],[6,"cudaUUID_t","","",null,null],[3,"cudaDeviceProp","","CUDA device properties",null,null],[12,"name","","< ASCII string identifying device",60,null],[12,"uuid","","< 16-byte unique identifier",60,null],[12,"luid","","< 8-byte locally unique identifier. Value is undefined on …",60,null],[12,"luidDeviceNodeMask","","< LUID device node mask. Value is undefined on TCC and …",60,null],[12,"totalGlobalMem","","< Global memory available on device in bytes",60,null],[12,"sharedMemPerBlock","","< Shared memory available per block in bytes",60,null],[12,"regsPerBlock","","< 32-bit registers available per block",60,null],[12,"warpSize","","< Warp size in threads",60,null],[12,"memPitch","","< Maximum pitch in bytes allowed by memory copies",60,null],[12,"maxThreadsPerBlock","","< Maximum number of threads per block",60,null],[12,"maxThreadsDim","","< Maximum size of each dimension of a block",60,null],[12,"maxGridSize","","< Maximum size of each dimension of a grid",60,null],[12,"clockRate","","< Clock frequency in kilohertz",60,null],[12,"totalConstMem","","< Constant memory available on device in bytes",60,null],[12,"major","","< Major compute capability",60,null],[12,"minor","","< Minor compute capability",60,null],[12,"textureAlignment","","< Alignment requirement for textures",60,null],[12,"texturePitchAlignment","","< Pitch alignment requirement for texture references …",60,null],[12,"deviceOverlap","","< Device can concurrently copy memory and execute a …",60,null],[12,"multiProcessorCount","","< Number of multiprocessors on device",60,null],[12,"kernelExecTimeoutEnabled","","< Specified whether there is a run time limit on kernels",60,null],[12,"integrated","","< Device is integrated as opposed to discrete",60,null],[12,"canMapHostMemory","","< Device can map host memory with …",60,null],[12,"computeMode","","< Compute mode (See ::cudaComputeMode)",60,null],[12,"maxTexture1D","","< Maximum 1D texture size",60,null],[12,"maxTexture1DMipmap","","< Maximum 1D mipmapped texture size",60,null],[12,"maxTexture1DLinear","","< Deprecated, do not use. Use …",60,null],[12,"maxTexture2D","","< Maximum 2D texture dimensions",60,null],[12,"maxTexture2DMipmap","","< Maximum 2D mipmapped texture dimensions",60,null],[12,"maxTexture2DLinear","","< Maximum dimensions (width, height, pitch) for 2D …",60,null],[12,"maxTexture2DGather","","< Maximum 2D texture dimensions if texture gather …",60,null],[12,"maxTexture3D","","< Maximum 3D texture dimensions",60,null],[12,"maxTexture3DAlt","","< Maximum alternate 3D texture dimensions",60,null],[12,"maxTextureCubemap","","< Maximum Cubemap texture dimensions",60,null],[12,"maxTexture1DLayered","","< Maximum 1D layered texture dimensions",60,null],[12,"maxTexture2DLayered","","< Maximum 2D layered texture dimensions",60,null],[12,"maxTextureCubemapLayered","","< Maximum Cubemap layered texture dimensions",60,null],[12,"maxSurface1D","","< Maximum 1D surface size",60,null],[12,"maxSurface2D","","< Maximum 2D surface dimensions",60,null],[12,"maxSurface3D","","< Maximum 3D surface dimensions",60,null],[12,"maxSurface1DLayered","","< Maximum 1D layered surface dimensions",60,null],[12,"maxSurface2DLayered","","< Maximum 2D layered surface dimensions",60,null],[12,"maxSurfaceCubemap","","< Maximum Cubemap surface dimensions",60,null],[12,"maxSurfaceCubemapLayered","","< Maximum Cubemap layered surface dimensions",60,null],[12,"surfaceAlignment","","< Alignment requirements for surfaces",60,null],[12,"concurrentKernels","","< Device can possibly execute multiple kernels …",60,null],[12,"ECCEnabled","","< Device has ECC support enabled",60,null],[12,"pciBusID","","< PCI bus ID of the device",60,null],[12,"pciDeviceID","","< PCI device ID of the device",60,null],[12,"pciDomainID","","< PCI domain ID of the device",60,null],[12,"tccDriver","","< 1 if device is a Tesla device using TCC driver, 0 …",60,null],[12,"asyncEngineCount","","< Number of asynchronous engines",60,null],[12,"unifiedAddressing","","< Device shares a unified address space with the host",60,null],[12,"memoryClockRate","","< Peak memory clock frequency in kilohertz",60,null],[12,"memoryBusWidth","","< Global memory bus width in bits",60,null],[12,"l2CacheSize","","< Size of L2 cache in bytes",60,null],[12,"persistingL2CacheMaxSize","","< Device\'s maximum l2 persisting lines capacity setting …",60,null],[12,"maxThreadsPerMultiProcessor","","< Maximum resident threads per multiprocessor",60,null],[12,"streamPrioritiesSupported","","< Device supports stream priorities",60,null],[12,"globalL1CacheSupported","","< Device supports caching globals in L1",60,null],[12,"localL1CacheSupported","","< Device supports caching locals in L1",60,null],[12,"sharedMemPerMultiprocessor","","< Shared memory available per multiprocessor in bytes",60,null],[12,"regsPerMultiprocessor","","< 32-bit registers available per multiprocessor",60,null],[12,"managedMemory","","< Device supports allocating managed memory on this system",60,null],[12,"isMultiGpuBoard","","< Device is on a multi-GPU board",60,null],[12,"multiGpuBoardGroupID","","< Unique identifier for a group of devices on the same …",60,null],[12,"hostNativeAtomicSupported","","< Link between the device and the host supports native …",60,null],[12,"singleToDoublePrecisionPerfRatio","","< Ratio of single precision performance (in …",60,null],[12,"pageableMemoryAccess","","< Device supports coherently accessing pageable memory …",60,null],[12,"concurrentManagedAccess","","< Device can coherently access managed memory …",60,null],[12,"computePreemptionSupported","","< Device supports Compute Preemption",60,null],[12,"canUseHostPointerForRegisteredMem","","< Device can access host registered memory at the same …",60,null],[12,"cooperativeLaunch","","< Device supports launching cooperative kernels via …",60,null],[12,"cooperativeMultiDeviceLaunch","","< Device can participate in cooperative kernels launched …",60,null],[12,"sharedMemPerBlockOptin","","< Per device maximum shared memory per block usable by …",60,null],[12,"pageableMemoryAccessUsesHostPageTables","","< Device accesses pageable memory via the host\'s page …",60,null],[12,"directManagedMemAccessFromHost","","< Host can directly access managed memory on the device …",60,null],[12,"maxBlocksPerMultiProcessor","","< Maximum number of resident blocks per multiprocessor",60,null],[12,"accessPolicyMaxWindowSize","","< The maximum value of …",60,null],[12,"reservedSharedMemPerBlock","","< Shared memory reserved by CUDA driver per block in bytes",60,null],[3,"cudaIpcEventHandle_st","","CUDA IPC event handle",null,null],[12,"reserved","","",61,null],[6,"cudaIpcEventHandle_t","","CUDA IPC event handle",null,null],[3,"cudaIpcMemHandle_st","","CUDA IPC memory handle",null,null],[12,"reserved","","",62,null],[6,"cudaIpcMemHandle_t","","CUDA IPC memory handle",null,null],[4,"cudaExternalMemoryHandleType","","External memory handle types",null,null],[13,"cudaExternalMemoryHandleTypeOpaqueFd","","Handle is an opaque file descriptor",63,null],[13,"cudaExternalMemoryHandleTypeOpaqueWin32","","Handle is an opaque shared NT handle",63,null],[13,"cudaExternalMemoryHandleTypeOpaqueWin32Kmt","","Handle is an opaque, globally shared handle",63,null],[13,"cudaExternalMemoryHandleTypeD3D12Heap","","Handle is a D3D12 heap object",63,null],[13,"cudaExternalMemoryHandleTypeD3D12Resource","","Handle is a D3D12 committed resource",63,null],[13,"cudaExternalMemoryHandleTypeD3D11Resource","","Handle is a shared NT handle to a D3D11 resource",63,null],[13,"cudaExternalMemoryHandleTypeD3D11ResourceKmt","","Handle is a globally shared handle to a D3D11 resource",63,null],[13,"cudaExternalMemoryHandleTypeNvSciBuf","","Handle is an NvSciBuf object",63,null],[3,"cudaExternalMemoryHandleDesc","","External memory handle descriptor",null,null],[12,"type_","","Type of the handle",64,null],[12,"handle","","",64,null],[12,"size","","Size of the memory allocation",64,null],[12,"flags","","Flags must either be zero or ::cudaExternalMemoryDedicated",64,null],[19,"cudaExternalMemoryHandleDesc__bindgen_ty_1","","",null,null],[12,"fd","","File descriptor referencing the memory object. Valid when …",65,null],[12,"win32","","",65,null],[12,"nvSciBufObject","","A handle representing NvSciBuf Object. Valid when type is …",65,null],[3,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1","","Win32 handle referencing the semaphore object. Valid when …",null,null],[12,"handle","","Valid NT handle. Must be NULL if \'name\' is non-NULL",66,null],[12,"name","","Name of a valid memory object. Must be NULL if \'handle\' …",66,null],[3,"cudaExternalMemoryBufferDesc","","External memory buffer descriptor",null,null],[12,"offset","","Offset into the memory object where the buffer\'s base is",67,null],[12,"size","","Size of the buffer",67,null],[12,"flags","","Flags reserved for future use. Must be zero.",67,null],[3,"cudaExternalMemoryMipmappedArrayDesc","","External memory mipmap descriptor",null,null],[12,"offset","","Offset into the memory object where the base level of the …",68,null],[12,"formatDesc","","Format of base level of the mipmap chain",68,null],[12,"extent","","Dimensions of base level of the mipmap chain",68,null],[12,"flags","","Flags associated with CUDA mipmapped arrays. See …",68,null],[12,"numLevels","","Total number of levels in the mipmap chain",68,null],[4,"cudaExternalSemaphoreHandleType","","External semaphore handle types",null,null],[13,"cudaExternalSemaphoreHandleTypeOpaqueFd","","Handle is an opaque file descriptor",69,null],[13,"cudaExternalSemaphoreHandleTypeOpaqueWin32","","Handle is an opaque shared NT handle",69,null],[13,"cudaExternalSemaphoreHandleTypeOpaqueWin32Kmt","","Handle is an opaque, globally shared handle",69,null],[13,"cudaExternalSemaphoreHandleTypeD3D12Fence","","Handle is a shared NT handle referencing a D3D12 fence …",69,null],[13,"cudaExternalSemaphoreHandleTypeD3D11Fence","","Handle is a shared NT handle referencing a D3D11 fence …",69,null],[13,"cudaExternalSemaphoreHandleTypeNvSciSync","","Opaque handle to NvSciSync Object",69,null],[13,"cudaExternalSemaphoreHandleTypeKeyedMutex","","Handle is a shared NT handle referencing a D3D11 keyed …",69,null],[13,"cudaExternalSemaphoreHandleTypeKeyedMutexKmt","","Handle is a shared KMT handle referencing a D3D11 keyed …",69,null],[13,"cudaExternalSemaphoreHandleTypeTimelineSemaphoreFd","","Handle is an opaque handle file descriptor referencing a …",69,null],[13,"cudaExternalSemaphoreHandleTypeTimelineSemaphoreWin32","","Handle is an opaque handle file descriptor referencing a …",69,null],[3,"cudaExternalSemaphoreHandleDesc","","External semaphore handle descriptor",null,null],[12,"type_","","Type of the handle",70,null],[12,"handle","","",70,null],[12,"flags","","Flags reserved for the future. Must be zero.",70,null],[19,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1","","",null,null],[12,"fd","","File descriptor referencing the semaphore object. Valid …",71,null],[12,"win32","","",71,null],[12,"nvSciSyncObj","","Valid NvSciSyncObj. Must be non NULL",71,null],[3,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1","","Win32 handle referencing the semaphore object. Valid when …",null,null],[12,"handle","","Valid NT handle. Must be NULL if \'name\' is non-NULL",72,null],[12,"name","","Name of a valid synchronization primitive. Must be NULL …",72,null],[3,"cudaExternalSemaphoreSignalParams","","External semaphore signal parameters, compatible with …",null,null],[12,"params","","",73,null],[12,"flags","","Only when ::cudaExternalSemaphoreSignalParams is used to …",73,null],[12,"reserved","","",73,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1","","",null,null],[12,"fence","","",74,null],[12,"nvSciSync","","",74,null],[12,"keyedMutex","","",74,null],[12,"reserved","","",74,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1","","Parameters for fence objects",null,null],[12,"value","","Value of fence to be signaled",75,null],[19,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"fence","","Pointer to NvSciSyncFence. Valid if …",76,null],[12,"reserved","","",76,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3","","Parameters for keyed mutex objects",null,null],[12,"key","","",77,null],[3,"cudaExternalSemaphoreWaitParams","","External semaphore wait parameters, compatible with …",null,null],[12,"params","","",78,null],[12,"flags","","Only when ::cudaExternalSemaphoreSignalParams is used to …",78,null],[12,"reserved","","",78,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1","","",null,null],[12,"fence","","",79,null],[12,"nvSciSync","","",79,null],[12,"keyedMutex","","",79,null],[12,"reserved","","",79,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1","","Parameters for fence objects",null,null],[12,"value","","Value of fence to be waited on",80,null],[19,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"fence","","Pointer to NvSciSyncFence. Valid if …",81,null],[12,"reserved","","",81,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3","","Parameters for keyed mutex objects",null,null],[12,"key","","Value of key to acquire the mutex with",82,null],[12,"timeoutMs","","Timeout in milliseconds to wait to acquire the mutex",82,null],[4,"cudaError_t","","CUDA error types",null,null],[13,"cudaSuccess","","The API call returned with no errors. In the case of …",2,null],[13,"cudaErrorInvalidValue","","This indicates that one or more of the parameters passed …",2,null],[13,"cudaErrorMemoryAllocation","","The API call failed because it was unable to allocate …",2,null],[13,"cudaErrorInitializationError","","The API call failed because the CUDA driver and runtime …",2,null],[13,"cudaErrorCudartUnloading","","This indicates that a CUDA Runtime API call cannot be …",2,null],[13,"cudaErrorProfilerDisabled","","This indicates profiler is not initialized for this run. …",2,null],[13,"cudaErrorProfilerNotInitialized","","\\\\deprecated This error return is deprecated as of CUDA …",2,null],[13,"cudaErrorProfilerAlreadyStarted","","\\\\deprecated This error return is deprecated as of CUDA …",2,null],[13,"cudaErrorProfilerAlreadyStopped","","\\\\deprecated This error return is deprecated as of CUDA …",2,null],[13,"cudaErrorInvalidConfiguration","","This indicates that a kernel launch is requesting …",2,null],[13,"cudaErrorInvalidPitchValue","","This indicates that one or more of the pitch-related …",2,null],[13,"cudaErrorInvalidSymbol","","This indicates that the symbol name/identifier passed to …",2,null],[13,"cudaErrorInvalidHostPointer","","This indicates that at least one host pointer passed to …",2,null],[13,"cudaErrorInvalidDevicePointer","","This indicates that at least one device pointer passed to …",2,null],[13,"cudaErrorInvalidTexture","","This indicates that the texture passed to the API call is …",2,null],[13,"cudaErrorInvalidTextureBinding","","This indicates that the texture binding is not valid. …",2,null],[13,"cudaErrorInvalidChannelDescriptor","","This indicates that the channel descriptor passed to the …",2,null],[13,"cudaErrorInvalidMemcpyDirection","","This indicates that the direction of the memcpy passed to …",2,null],[13,"cudaErrorAddressOfConstant","","This indicated that the user has taken the address of a …",2,null],[13,"cudaErrorTextureFetchFailed","","This indicated that a texture fetch was not able to be …",2,null],[13,"cudaErrorTextureNotBound","","This indicated that a texture was not bound for access. …",2,null],[13,"cudaErrorSynchronizationError","","This indicated that a synchronization operation had …",2,null],[13,"cudaErrorInvalidFilterSetting","","This indicates that a non-float texture was being …",2,null],[13,"cudaErrorInvalidNormSetting","","This indicates that an attempt was made to read a …",2,null],[13,"cudaErrorMixedDeviceExecution","","Mixing of device and device emulation code was not …",2,null],[13,"cudaErrorNotYetImplemented","","This indicates that the API call is not yet implemented. …",2,null],[13,"cudaErrorMemoryValueTooLarge","","This indicated that an emulated device pointer exceeded …",2,null],[13,"cudaErrorStubLibrary","","This indicates that the CUDA driver that the application …",2,null],[13,"cudaErrorInsufficientDriver","","This indicates that the installed NVIDIA CUDA driver is …",2,null],[13,"cudaErrorCallRequiresNewerDriver","","This indicates that the API call requires a newer CUDA …",2,null],[13,"cudaErrorInvalidSurface","","This indicates that the surface passed to the API call is …",2,null],[13,"cudaErrorDuplicateVariableName","","This indicates that multiple global or constant variables …",2,null],[13,"cudaErrorDuplicateTextureName","","This indicates that multiple textures (across separate …",2,null],[13,"cudaErrorDuplicateSurfaceName","","This indicates that multiple surfaces (across separate …",2,null],[13,"cudaErrorDevicesUnavailable","","This indicates that all CUDA devices are busy or …",2,null],[13,"cudaErrorIncompatibleDriverContext","","This indicates that the current context is not compatible …",2,null],[13,"cudaErrorMissingConfiguration","","The device function being invoked (usually via …",2,null],[13,"cudaErrorPriorLaunchFailure","","This indicated that a previous kernel launch failed. This …",2,null],[13,"cudaErrorLaunchMaxDepthExceeded","","This error indicates that a device runtime grid launch …",2,null],[13,"cudaErrorLaunchFileScopedTex","","This error indicates that a grid launch did not occur …",2,null],[13,"cudaErrorLaunchFileScopedSurf","","This error indicates that a grid launch did not occur …",2,null],[13,"cudaErrorSyncDepthExceeded","","This error indicates that a call to …",2,null],[13,"cudaErrorLaunchPendingCountExceeded","","This error indicates that a device runtime grid launch …",2,null],[13,"cudaErrorInvalidDeviceFunction","","The requested device function does not exist or is not …",2,null],[13,"cudaErrorNoDevice","","This indicates that no CUDA-capable devices were detected …",2,null],[13,"cudaErrorInvalidDevice","","This indicates that the device ordinal supplied by the …",2,null],[13,"cudaErrorDeviceNotLicensed","","This indicates that the device doesn\'t have a valid Grid …",2,null],[13,"cudaErrorSoftwareValidityNotEstablished","","By default, the CUDA runtime may perform a minimal set of …",2,null],[13,"cudaErrorStartupFailure","","This indicates an internal startup failure in the CUDA …",2,null],[13,"cudaErrorInvalidKernelImage","","This indicates that the device kernel image is invalid.",2,null],[13,"cudaErrorDeviceUninitialized","","This most frequently indicates that there is no context …",2,null],[13,"cudaErrorMapBufferObjectFailed","","This indicates that the buffer object could not be mapped.",2,null],[13,"cudaErrorUnmapBufferObjectFailed","","This indicates that the buffer object could not be …",2,null],[13,"cudaErrorArrayIsMapped","","This indicates that the specified array is currently …",2,null],[13,"cudaErrorAlreadyMapped","","This indicates that the resource is already mapped.",2,null],[13,"cudaErrorNoKernelImageForDevice","","This indicates that there is no kernel image available …",2,null],[13,"cudaErrorAlreadyAcquired","","This indicates that a resource has already been acquired.",2,null],[13,"cudaErrorNotMapped","","This indicates that a resource is not mapped.",2,null],[13,"cudaErrorNotMappedAsArray","","This indicates that a mapped resource is not available …",2,null],[13,"cudaErrorNotMappedAsPointer","","This indicates that a mapped resource is not available …",2,null],[13,"cudaErrorECCUncorrectable","","This indicates that an uncorrectable ECC error was …",2,null],[13,"cudaErrorUnsupportedLimit","","This indicates that the ::cudaLimit passed to the API …",2,null],[13,"cudaErrorDeviceAlreadyInUse","","This indicates that a call tried to access an …",2,null],[13,"cudaErrorPeerAccessUnsupported","","This error indicates that P2P access is not supported …",2,null],[13,"cudaErrorInvalidPtx","","A PTX compilation failed. The runtime may fall back to …",2,null],[13,"cudaErrorInvalidGraphicsContext","","This indicates an error with the OpenGL or DirectX …",2,null],[13,"cudaErrorNvlinkUncorrectable","","This indicates that an uncorrectable NVLink error was …",2,null],[13,"cudaErrorJitCompilerNotFound","","This indicates that the PTX JIT compiler library was not …",2,null],[13,"cudaErrorUnsupportedPtxVersion","","This indicates that the provided PTX was compiled with an …",2,null],[13,"cudaErrorJitCompilationDisabled","","This indicates that the JIT compilation was disabled. The …",2,null],[13,"cudaErrorInvalidSource","","This indicates that the device kernel source is invalid.",2,null],[13,"cudaErrorFileNotFound","","This indicates that the file specified was not found.",2,null],[13,"cudaErrorSharedObjectSymbolNotFound","","This indicates that a link to a shared object failed to …",2,null],[13,"cudaErrorSharedObjectInitFailed","","This indicates that initialization of a shared object …",2,null],[13,"cudaErrorOperatingSystem","","This error indicates that an OS call failed.",2,null],[13,"cudaErrorInvalidResourceHandle","","This indicates that a resource handle passed to the API …",2,null],[13,"cudaErrorIllegalState","","This indicates that a resource required by the API call …",2,null],[13,"cudaErrorSymbolNotFound","","This indicates that a named symbol was not found. …",2,null],[13,"cudaErrorNotReady","","This indicates that asynchronous operations issued …",2,null],[13,"cudaErrorIllegalAddress","","The device encountered a load or store instruction on an …",2,null],[13,"cudaErrorLaunchOutOfResources","","This indicates that a launch did not occur because it did …",2,null],[13,"cudaErrorLaunchTimeout","","This indicates that the device kernel took too long to …",2,null],[13,"cudaErrorLaunchIncompatibleTexturing","","This error indicates a kernel launch that uses an …",2,null],[13,"cudaErrorPeerAccessAlreadyEnabled","","This error indicates that a call to …",2,null],[13,"cudaErrorPeerAccessNotEnabled","","This error indicates that ::cudaDeviceDisablePeerAccess() …",2,null],[13,"cudaErrorSetOnActiveProcess","","This indicates that the user has called …",2,null],[13,"cudaErrorContextIsDestroyed","","This error indicates that the context current to the …",2,null],[13,"cudaErrorAssert","","An assert triggered in device code during kernel …",2,null],[13,"cudaErrorTooManyPeers","","This error indicates that the hardware resources required …",2,null],[13,"cudaErrorHostMemoryAlreadyRegistered","","This error indicates that the memory range passed to …",2,null],[13,"cudaErrorHostMemoryNotRegistered","","This error indicates that the pointer passed to …",2,null],[13,"cudaErrorHardwareStackError","","Device encountered an error in the call stack during …",2,null],[13,"cudaErrorIllegalInstruction","","The device encountered an illegal instruction during …",2,null],[13,"cudaErrorMisalignedAddress","","The device encountered a load or store instruction on a …",2,null],[13,"cudaErrorInvalidAddressSpace","","While executing a kernel, the device encountered an …",2,null],[13,"cudaErrorInvalidPc","","The device encountered an invalid program counter. This …",2,null],[13,"cudaErrorLaunchFailure","","An exception occurred on the device while executing a …",2,null],[13,"cudaErrorCooperativeLaunchTooLarge","","This error indicates that the number of blocks launched …",2,null],[13,"cudaErrorNotPermitted","","This error indicates the attempted operation is not …",2,null],[13,"cudaErrorNotSupported","","This error indicates the attempted operation is not …",2,null],[13,"cudaErrorSystemNotReady","","This error indicates that the system is not yet ready to …",2,null],[13,"cudaErrorSystemDriverMismatch","","This error indicates that there is a mismatch between the …",2,null],[13,"cudaErrorCompatNotSupportedOnDevice","","This error indicates that the system was upgraded to run …",2,null],[13,"cudaErrorStreamCaptureUnsupported","","The operation is not permitted when the stream is …",2,null],[13,"cudaErrorStreamCaptureInvalidated","","The current capture sequence on the stream has been …",2,null],[13,"cudaErrorStreamCaptureMerge","","The operation would have resulted in a merge of two …",2,null],[13,"cudaErrorStreamCaptureUnmatched","","The capture was not initiated in this stream.",2,null],[13,"cudaErrorStreamCaptureUnjoined","","The capture sequence contains a fork that was not joined …",2,null],[13,"cudaErrorStreamCaptureIsolation","","A dependency would have been created which crosses the …",2,null],[13,"cudaErrorStreamCaptureImplicit","","The operation would have resulted in a disallowed …",2,null],[13,"cudaErrorCapturedEvent","","The operation is not permitted on an event which was last …",2,null],[13,"cudaErrorStreamCaptureWrongThread","","A stream capture sequence not initiated with the …",2,null],[13,"cudaErrorTimeout","","This indicates that the wait operation has timed out.",2,null],[13,"cudaErrorGraphExecUpdateFailure","","This error indicates that the graph update was not …",2,null],[13,"cudaErrorUnknown","","This indicates that an unknown internal error has …",2,null],[13,"cudaErrorApiFailureBase","","Any unhandled CUDA driver error is added to this value …",2,null],[3,"CUstream_st","","",null,null],[6,"cudaStream_t","","CUDA stream",null,null],[3,"CUevent_st","","",null,null],[6,"cudaEvent_t","","CUDA event types",null,null],[6,"cudaGraphicsResource_t","","CUDA graphics resource types",null,null],[4,"cudaOutputMode_t","","CUDA Profiler Output modes",null,null],[13,"cudaKeyValuePair","","< Output mode Key-Value pair format.",47,null],[13,"cudaCSV","","< Output mode Comma separated values format.",47,null],[3,"CUexternalMemory_st","","",null,null],[6,"cudaExternalMemory_t","","CUDA external memory",null,null],[3,"CUexternalSemaphore_st","","",null,null],[6,"cudaExternalSemaphore_t","","CUDA external semaphore",null,null],[3,"CUgraph_st","","",null,null],[6,"cudaGraph_t","","CUDA graph",null,null],[3,"CUgraphNode_st","","",null,null],[6,"cudaGraphNode_t","","CUDA graph node.",null,null],[3,"CUfunc_st","","",null,null],[6,"cudaFunction_t","","CUDA function",null,null],[3,"CUmemPoolHandle_st","","",null,null],[6,"cudaMemPool_t","","CUDA memory pool",null,null],[4,"cudaCGScope","","CUDA cooperative group scope",null,null],[13,"cudaCGScopeInvalid","","< Invalid cooperative group scope",83,null],[13,"cudaCGScopeGrid","","< Scope represented by a grid_group",83,null],[13,"cudaCGScopeMultiGrid","","< Scope represented by a multi_grid_group",83,null],[3,"cudaLaunchParams","","CUDA launch parameters",null,null],[12,"func","","< Device function symbol",84,null],[12,"gridDim","","< Grid dimentions",84,null],[12,"blockDim","","< Block dimentions",84,null],[12,"args","","< Arguments",84,null],[12,"sharedMem","","< Shared memory",84,null],[12,"stream","","< Stream identifier",84,null],[3,"cudaKernelNodeParams","","CUDA GPU kernel node parameters",null,null],[12,"func","","< Kernel to launch",85,null],[12,"gridDim","","< Grid dimensions",85,null],[12,"blockDim","","< Block dimensions",85,null],[12,"sharedMemBytes","","< Dynamic shared-memory size per thread block in bytes",85,null],[12,"kernelParams","","< Array of pointers to individual kernel arguments",85,null],[12,"extra","","< Pointer to kernel arguments in the \\\"extra\\\" format",85,null],[3,"cudaExternalSemaphoreSignalNodeParams","","External semaphore signal node parameters",null,null],[12,"extSemArray","","< Array of external semaphore handles.",86,null],[12,"paramsArray","","< Array of external semaphore signal parameters.",86,null],[12,"numExtSems","","< Number of handles and parameters supplied in …",86,null],[3,"cudaExternalSemaphoreWaitNodeParams","","External semaphore wait node parameters",null,null],[12,"extSemArray","","< Array of external semaphore handles.",87,null],[12,"paramsArray","","< Array of external semaphore wait parameters.",87,null],[12,"numExtSems","","< Number of handles and parameters supplied in …",87,null],[4,"cudaGraphNodeType","","CUDA Graph node types",null,null],[13,"cudaGraphNodeTypeKernel","","< GPU kernel node",88,null],[13,"cudaGraphNodeTypeMemcpy","","< Memcpy node",88,null],[13,"cudaGraphNodeTypeMemset","","< Memset node",88,null],[13,"cudaGraphNodeTypeHost","","< Host (executable) node",88,null],[13,"cudaGraphNodeTypeGraph","","< Node which executes an embedded graph",88,null],[13,"cudaGraphNodeTypeEmpty","","< Empty (no-op) node",88,null],[13,"cudaGraphNodeTypeWaitEvent","","< External event wait node",88,null],[13,"cudaGraphNodeTypeEventRecord","","< External event record node",88,null],[13,"cudaGraphNodeTypeCount","","",88,null],[3,"CUgraphExec_st","","",null,null],[6,"cudaGraphExec_t","","CUDA executable (launchable) graph",null,null],[4,"cudaGraphExecUpdateResult","","CUDA Graph Update error types",null,null],[13,"cudaGraphExecUpdateSuccess","","< The update succeeded",89,null],[13,"cudaGraphExecUpdateError","","< The update failed for an unexpected reason which is …",89,null],[13,"cudaGraphExecUpdateErrorTopologyChanged","","< The update failed because the topology changed",89,null],[13,"cudaGraphExecUpdateErrorNodeTypeChanged","","< The update failed because a node type changed",89,null],[13,"cudaGraphExecUpdateErrorFunctionChanged","","< The update failed because the function of a kernel node …",89,null],[13,"cudaGraphExecUpdateErrorParametersChanged","","< The update failed because the parameters changed in a …",89,null],[13,"cudaGraphExecUpdateErrorNotSupported","","< The update failed because something about the node is …",89,null],[13,"cudaGraphExecUpdateErrorUnsupportedFunctionChange","","< The update failed because the function of a kernel node …",89,null],[4,"cudaSurfaceBoundaryMode","","CUDA Surface boundary modes",null,null],[13,"cudaBoundaryModeZero","","< Zero boundary mode",90,null],[13,"cudaBoundaryModeClamp","","< Clamp boundary mode",90,null],[13,"cudaBoundaryModeTrap","","< Trap boundary mode",90,null],[4,"cudaSurfaceFormatMode","","CUDA Surface format modes",null,null],[13,"cudaFormatModeForced","","< Forced format mode",91,null],[13,"cudaFormatModeAuto","","< Auto format mode",91,null],[3,"surfaceReference","","CUDA Surface reference",null,null],[12,"channelDesc","","Channel descriptor for surface reference",92,null],[6,"cudaSurfaceObject_t","","An opaque value that represents a CUDA Surface object",null,null],[4,"cudaTextureAddressMode","","CUDA texture address modes",null,null],[13,"cudaAddressModeWrap","","< Wrapping address mode",93,null],[13,"cudaAddressModeClamp","","< Clamp to edge address mode",93,null],[13,"cudaAddressModeMirror","","< Mirror address mode",93,null],[13,"cudaAddressModeBorder","","< Border address mode",93,null],[4,"cudaTextureFilterMode","","CUDA texture filter modes",null,null],[13,"cudaFilterModePoint","","< Point filter mode",94,null],[13,"cudaFilterModeLinear","","< Linear filter mode",94,null],[4,"cudaTextureReadMode","","CUDA texture read modes",null,null],[13,"cudaReadModeElementType","","< Read texture as specified element type",95,null],[13,"cudaReadModeNormalizedFloat","","< Read texture as normalized float",95,null],[3,"textureReference","","CUDA texture reference",null,null],[12,"normalized","","Indicates whether texture reads are normalized or not",96,null],[12,"filterMode","","Texture filter mode",96,null],[12,"addressMode","","Texture address mode for up to 3 dimensions",96,null],[12,"channelDesc","","Channel descriptor for the texture reference",96,null],[12,"sRGB","","Perform sRGB->linear conversion during texture read",96,null],[12,"maxAnisotropy","","Limit to the anisotropy ratio",96,null],[12,"mipmapFilterMode","","Mipmap filter mode",96,null],[12,"mipmapLevelBias","","Offset applied to the supplied mipmap level",96,null],[12,"minMipmapLevelClamp","","Lower end of the mipmap level range to clamp access to",96,null],[12,"maxMipmapLevelClamp","","Upper end of the mipmap level range to clamp access to",96,null],[12,"disableTrilinearOptimization","","Disable any trilinear filtering optimizations.",96,null],[12,"__cudaReserved","","",96,null],[3,"cudaTextureDesc","","CUDA texture descriptor",null,null],[12,"addressMode","","Texture address mode for up to 3 dimensions",97,null],[12,"filterMode","","Texture filter mode",97,null],[12,"readMode","","Texture read mode",97,null],[12,"sRGB","","Perform sRGB->linear conversion during texture read",97,null],[12,"borderColor","","Texture Border Color",97,null],[12,"normalizedCoords","","Indicates whether texture reads are normalized or not",97,null],[12,"maxAnisotropy","","Limit to the anisotropy ratio",97,null],[12,"mipmapFilterMode","","Mipmap filter mode",97,null],[12,"mipmapLevelBias","","Offset applied to the supplied mipmap level",97,null],[12,"minMipmapLevelClamp","","Lower end of the mipmap level range to clamp access to",97,null],[12,"maxMipmapLevelClamp","","Upper end of the mipmap level range to clamp access to",97,null],[12,"disableTrilinearOptimization","","Disable any trilinear filtering optimizations.",97,null],[6,"cudaTextureObject_t","","An opaque value that represents a CUDA texture object",null,null],[4,"cudaDataType_t","","",null,null],[13,"CUDA_R_16F","","",98,null],[13,"CUDA_C_16F","","",98,null],[13,"CUDA_R_16BF","","",98,null],[13,"CUDA_C_16BF","","",98,null],[13,"CUDA_R_32F","","",98,null],[13,"CUDA_C_32F","","",98,null],[13,"CUDA_R_64F","","",98,null],[13,"CUDA_C_64F","","",98,null],[13,"CUDA_R_4I","","",98,null],[13,"CUDA_C_4I","","",98,null],[13,"CUDA_R_4U","","",98,null],[13,"CUDA_C_4U","","",98,null],[13,"CUDA_R_8I","","",98,null],[13,"CUDA_C_8I","","",98,null],[13,"CUDA_R_8U","","",98,null],[13,"CUDA_C_8U","","",98,null],[13,"CUDA_R_16I","","",98,null],[13,"CUDA_C_16I","","",98,null],[13,"CUDA_R_16U","","",98,null],[13,"CUDA_C_16U","","",98,null],[13,"CUDA_R_32I","","",98,null],[13,"CUDA_C_32I","","",98,null],[13,"CUDA_R_32U","","",98,null],[13,"CUDA_C_32U","","",98,null],[13,"CUDA_R_64I","","",98,null],[13,"CUDA_C_64I","","",98,null],[13,"CUDA_R_64U","","",98,null],[13,"CUDA_C_64U","","",98,null],[4,"cudaDataType","","",null,null],[13,"CUDA_R_16F","","",98,null],[13,"CUDA_C_16F","","",98,null],[13,"CUDA_R_16BF","","",98,null],[13,"CUDA_C_16BF","","",98,null],[13,"CUDA_R_32F","","",98,null],[13,"CUDA_C_32F","","",98,null],[13,"CUDA_R_64F","","",98,null],[13,"CUDA_C_64F","","",98,null],[13,"CUDA_R_4I","","",98,null],[13,"CUDA_C_4I","","",98,null],[13,"CUDA_R_4U","","",98,null],[13,"CUDA_C_4U","","",98,null],[13,"CUDA_R_8I","","",98,null],[13,"CUDA_C_8I","","",98,null],[13,"CUDA_R_8U","","",98,null],[13,"CUDA_C_8U","","",98,null],[13,"CUDA_R_16I","","",98,null],[13,"CUDA_C_16I","","",98,null],[13,"CUDA_R_16U","","",98,null],[13,"CUDA_C_16U","","",98,null],[13,"CUDA_R_32I","","",98,null],[13,"CUDA_C_32I","","",98,null],[13,"CUDA_R_32U","","",98,null],[13,"CUDA_C_32U","","",98,null],[13,"CUDA_R_64I","","",98,null],[13,"CUDA_C_64I","","",98,null],[13,"CUDA_R_64U","","",98,null],[13,"CUDA_C_64U","","",98,null],[17,"libraryPropertyType_t_MAJOR_VERSION","","",null,null],[17,"libraryPropertyType_t_MINOR_VERSION","","",null,null],[17,"libraryPropertyType_t_PATCH_LEVEL","","",null,null],[6,"libraryPropertyType_t","","",null,null],[6,"libraryPropertyType","","",null,null],[6,"cudaStreamCallback_t","","Type of stream callback functions. \\\\param stream The …",null,null],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[3,"cudnnContext","","",null,null],[6,"cudnnHandle_t","","",null,null],[4,"cudnnStatus_t","","",null,null],[13,"CUDNN_STATUS_SUCCESS","","",99,null],[13,"CUDNN_STATUS_NOT_INITIALIZED","","",99,null],[13,"CUDNN_STATUS_ALLOC_FAILED","","",99,null],[13,"CUDNN_STATUS_BAD_PARAM","","",99,null],[13,"CUDNN_STATUS_INTERNAL_ERROR","","",99,null],[13,"CUDNN_STATUS_INVALID_VALUE","","",99,null],[13,"CUDNN_STATUS_ARCH_MISMATCH","","",99,null],[13,"CUDNN_STATUS_MAPPING_ERROR","","",99,null],[13,"CUDNN_STATUS_EXECUTION_FAILED","","",99,null],[13,"CUDNN_STATUS_NOT_SUPPORTED","","",99,null],[13,"CUDNN_STATUS_LICENSE_ERROR","","",99,null],[13,"CUDNN_STATUS_RUNTIME_PREREQUISITE_MISSING","","",99,null],[13,"CUDNN_STATUS_RUNTIME_IN_PROGRESS","","",99,null],[13,"CUDNN_STATUS_RUNTIME_FP_OVERFLOW","","",99,null],[13,"CUDNN_STATUS_VERSION_MISMATCH","","",99,null],[3,"cudnnRuntimeTag_t","","",null,null],[4,"cudnnErrQueryMode_t","","",null,null],[13,"CUDNN_ERRQUERY_RAWCODE","","",100,null],[13,"CUDNN_ERRQUERY_NONBLOCKING","","",100,null],[13,"CUDNN_ERRQUERY_BLOCKING","","",100,null],[3,"cudnnTensorStruct","","",null,null],[6,"cudnnTensorDescriptor_t","","",null,null],[3,"cudnnPoolingStruct","","",null,null],[6,"cudnnPoolingDescriptor_t","","",null,null],[3,"cudnnFilterStruct","","",null,null],[6,"cudnnFilterDescriptor_t","","",null,null],[3,"cudnnLRNStruct","","",null,null],[6,"cudnnLRNDescriptor_t","","",null,null],[3,"cudnnActivationStruct","","",null,null],[6,"cudnnActivationDescriptor_t","","",null,null],[3,"cudnnSpatialTransformerStruct","","",null,null],[6,"cudnnSpatialTransformerDescriptor_t","","",null,null],[3,"cudnnOpTensorStruct","","",null,null],[6,"cudnnOpTensorDescriptor_t","","",null,null],[3,"cudnnReduceTensorStruct","","",null,null],[6,"cudnnReduceTensorDescriptor_t","","",null,null],[3,"cudnnCTCLossStruct","","",null,null],[6,"cudnnCTCLossDescriptor_t","","",null,null],[3,"cudnnTensorTransformStruct","","",null,null],[6,"cudnnTensorTransformDescriptor_t","","",null,null],[4,"cudnnDataType_t","","",null,null],[13,"CUDNN_DATA_FLOAT","","",101,null],[13,"CUDNN_DATA_DOUBLE","","",101,null],[13,"CUDNN_DATA_HALF","","",101,null],[13,"CUDNN_DATA_INT8","","",101,null],[13,"CUDNN_DATA_INT32","","",101,null],[13,"CUDNN_DATA_INT8x4","","",101,null],[13,"CUDNN_DATA_UINT8","","",101,null],[13,"CUDNN_DATA_UINT8x4","","",101,null],[13,"CUDNN_DATA_INT8x32","","",101,null],[13,"CUDNN_DATA_BFLOAT16","","",101,null],[13,"CUDNN_DATA_INT64","","",101,null],[4,"cudnnMathType_t","","",null,null],[13,"CUDNN_DEFAULT_MATH","","",102,null],[13,"CUDNN_TENSOR_OP_MATH","","",102,null],[13,"CUDNN_TENSOR_OP_MATH_ALLOW_CONVERSION","","",102,null],[13,"CUDNN_FMA_MATH","","",102,null],[4,"cudnnNanPropagation_t","","",null,null],[13,"CUDNN_NOT_PROPAGATE_NAN","","",103,null],[13,"CUDNN_PROPAGATE_NAN","","",103,null],[4,"cudnnDeterminism_t","","",null,null],[13,"CUDNN_NON_DETERMINISTIC","","",104,null],[13,"CUDNN_DETERMINISTIC","","",104,null],[4,"cudnnTensorFormat_t","","",null,null],[13,"CUDNN_TENSOR_NCHW","","",105,null],[13,"CUDNN_TENSOR_NHWC","","",105,null],[13,"CUDNN_TENSOR_NCHW_VECT_C","","",105,null],[4,"cudnnFoldingDirection_t","","",null,null],[13,"CUDNN_TRANSFORM_FOLD","","",106,null],[13,"CUDNN_TRANSFORM_UNFOLD","","",106,null],[4,"cudnnOpTensorOp_t","","",null,null],[13,"CUDNN_OP_TENSOR_ADD","","",107,null],[13,"CUDNN_OP_TENSOR_MUL","","",107,null],[13,"CUDNN_OP_TENSOR_MIN","","",107,null],[13,"CUDNN_OP_TENSOR_MAX","","",107,null],[13,"CUDNN_OP_TENSOR_SQRT","","",107,null],[13,"CUDNN_OP_TENSOR_NOT","","",107,null],[4,"cudnnReduceTensorOp_t","","",null,null],[13,"CUDNN_REDUCE_TENSOR_ADD","","",108,null],[13,"CUDNN_REDUCE_TENSOR_MUL","","",108,null],[13,"CUDNN_REDUCE_TENSOR_MIN","","",108,null],[13,"CUDNN_REDUCE_TENSOR_MAX","","",108,null],[13,"CUDNN_REDUCE_TENSOR_AMAX","","",108,null],[13,"CUDNN_REDUCE_TENSOR_AVG","","",108,null],[13,"CUDNN_REDUCE_TENSOR_NORM1","","",108,null],[13,"CUDNN_REDUCE_TENSOR_NORM2","","",108,null],[13,"CUDNN_REDUCE_TENSOR_MUL_NO_ZEROS","","",108,null],[4,"cudnnReduceTensorIndices_t","","",null,null],[13,"CUDNN_REDUCE_TENSOR_NO_INDICES","","",109,null],[13,"CUDNN_REDUCE_TENSOR_FLATTENED_INDICES","","",109,null],[4,"cudnnIndicesType_t","","",null,null],[13,"CUDNN_32BIT_INDICES","","",110,null],[13,"CUDNN_64BIT_INDICES","","",110,null],[13,"CUDNN_16BIT_INDICES","","",110,null],[13,"CUDNN_8BIT_INDICES","","",110,null],[4,"cudnnSoftmaxAlgorithm_t","","",null,null],[13,"CUDNN_SOFTMAX_FAST","","",111,null],[13,"CUDNN_SOFTMAX_ACCURATE","","",111,null],[13,"CUDNN_SOFTMAX_LOG","","",111,null],[4,"cudnnSoftmaxMode_t","","",null,null],[13,"CUDNN_SOFTMAX_MODE_INSTANCE","","",112,null],[13,"CUDNN_SOFTMAX_MODE_CHANNEL","","",112,null],[4,"cudnnPoolingMode_t","","",null,null],[13,"CUDNN_POOLING_MAX","","",113,null],[13,"CUDNN_POOLING_AVERAGE_COUNT_INCLUDE_PADDING","","",113,null],[13,"CUDNN_POOLING_AVERAGE_COUNT_EXCLUDE_PADDING","","",113,null],[13,"CUDNN_POOLING_MAX_DETERMINISTIC","","",113,null],[4,"cudnnActivationMode_t","","",null,null],[13,"CUDNN_ACTIVATION_SIGMOID","","",114,null],[13,"CUDNN_ACTIVATION_RELU","","",114,null],[13,"CUDNN_ACTIVATION_TANH","","",114,null],[13,"CUDNN_ACTIVATION_CLIPPED_RELU","","",114,null],[13,"CUDNN_ACTIVATION_ELU","","",114,null],[13,"CUDNN_ACTIVATION_IDENTITY","","",114,null],[4,"cudnnLRNMode_t","","",null,null],[13,"CUDNN_LRN_CROSS_CHANNEL_DIM1","","",115,null],[4,"cudnnDivNormMode_t","","",null,null],[13,"CUDNN_DIVNORM_PRECOMPUTED_MEANS","","",116,null],[4,"cudnnBatchNormMode_t","","",null,null],[13,"CUDNN_BATCHNORM_PER_ACTIVATION","","",117,null],[13,"CUDNN_BATCHNORM_SPATIAL","","",117,null],[13,"CUDNN_BATCHNORM_SPATIAL_PERSISTENT","","",117,null],[4,"cudnnBatchNormOps_t","","",null,null],[13,"CUDNN_BATCHNORM_OPS_BN","","",118,null],[13,"CUDNN_BATCHNORM_OPS_BN_ACTIVATION","","",118,null],[13,"CUDNN_BATCHNORM_OPS_BN_ADD_ACTIVATION","","",118,null],[4,"cudnnNormMode_t","","",null,null],[13,"CUDNN_NORM_PER_ACTIVATION","","",119,null],[13,"CUDNN_NORM_PER_CHANNEL","","",119,null],[4,"cudnnNormAlgo_t","","",null,null],[13,"CUDNN_NORM_ALGO_STANDARD","","",120,null],[13,"CUDNN_NORM_ALGO_PERSIST","","",120,null],[4,"cudnnNormOps_t","","",null,null],[13,"CUDNN_NORM_OPS_NORM","","",121,null],[13,"CUDNN_NORM_OPS_NORM_ACTIVATION","","",121,null],[13,"CUDNN_NORM_OPS_NORM_ADD_ACTIVATION","","",121,null],[4,"cudnnSamplerType_t","","",null,null],[13,"CUDNN_SAMPLER_BILINEAR","","",122,null],[3,"cudnnDropoutStruct","","",null,null],[6,"cudnnDropoutDescriptor_t","","",null,null],[3,"cudnnAlgorithmStruct","","",null,null],[6,"cudnnAlgorithmDescriptor_t","","",null,null],[3,"cudnnAlgorithmPerformanceStruct","","",null,null],[6,"cudnnAlgorithmPerformance_t","","",null,null],[4,"cudnnConvolutionFwdAlgo_t","","",null,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_GEMM","","",123,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM","","",123,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_GEMM","","",123,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_DIRECT","","",123,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_FFT","","",123,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_FFT_TILING","","",123,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD","","",123,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD_NONFUSED","","",123,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_COUNT","","",123,null],[4,"cudnnConvolutionBwdFilterAlgo_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_0","","",124,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_1","","",124,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT","","",124,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_3","","",124,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD","","",124,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD_NONFUSED","","",124,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT_TILING","","",124,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_COUNT","","",124,null],[4,"cudnnConvolutionBwdDataAlgo_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_0","","",125,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_1","","",125,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT","","",125,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT_TILING","","",125,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD","","",125,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD_NONFUSED","","",125,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_COUNT","","",125,null],[4,"cudnnRNNAlgo_t","","",null,null],[13,"CUDNN_RNN_ALGO_STANDARD","","",126,null],[13,"CUDNN_RNN_ALGO_PERSIST_STATIC","","",126,null],[13,"CUDNN_RNN_ALGO_PERSIST_DYNAMIC","","",126,null],[13,"CUDNN_RNN_ALGO_PERSIST_STATIC_SMALL_H","","",126,null],[13,"CUDNN_RNN_ALGO_COUNT","","",126,null],[4,"cudnnCTCLossAlgo_t","","",null,null],[13,"CUDNN_CTC_LOSS_ALGO_DETERMINISTIC","","",127,null],[13,"CUDNN_CTC_LOSS_ALGO_NON_DETERMINISTIC","","",127,null],[3,"cudnnAlgorithm_t","","",null,null],[12,"algo","","",128,null],[19,"cudnnAlgorithm_t_Algorithm","","",null,null],[12,"convFwdAlgo","","",129,null],[12,"convBwdFilterAlgo","","",129,null],[12,"convBwdDataAlgo","","",129,null],[12,"RNNAlgo","","",129,null],[12,"CTCLossAlgo","","",129,null],[4,"cudnnSeverity_t","","",null,null],[13,"CUDNN_SEV_FATAL","","",130,null],[13,"CUDNN_SEV_ERROR","","",130,null],[13,"CUDNN_SEV_WARNING","","",130,null],[13,"CUDNN_SEV_INFO","","",130,null],[3,"cudnnDebug_t","","",null,null],[12,"cudnn_version","","",131,null],[12,"cudnnStatus","","",131,null],[12,"time_sec","","",131,null],[12,"time_usec","","",131,null],[12,"time_delta","","",131,null],[12,"handle","","",131,null],[12,"stream","","",131,null],[12,"pid","","",131,null],[12,"tid","","",131,null],[12,"cudaDeviceId","","",131,null],[12,"reserved","","",131,null],[6,"cudnnCallback_t","","",null,null],[4,"cudnnForwardMode_t","","",null,null],[13,"CUDNN_FWD_MODE_INFERENCE","","",132,null],[13,"CUDNN_FWD_MODE_TRAINING","","",132,null],[4,"cudnnRNNMode_t","","",null,null],[13,"CUDNN_RNN_RELU","","",133,null],[13,"CUDNN_RNN_TANH","","",133,null],[13,"CUDNN_LSTM","","",133,null],[13,"CUDNN_GRU","","",133,null],[4,"cudnnRNNBiasMode_t","","",null,null],[13,"CUDNN_RNN_NO_BIAS","","",134,null],[13,"CUDNN_RNN_SINGLE_INP_BIAS","","",134,null],[13,"CUDNN_RNN_DOUBLE_BIAS","","",134,null],[13,"CUDNN_RNN_SINGLE_REC_BIAS","","",134,null],[4,"cudnnDirectionMode_t","","",null,null],[13,"CUDNN_UNIDIRECTIONAL","","",135,null],[13,"CUDNN_BIDIRECTIONAL","","",135,null],[4,"cudnnRNNInputMode_t","","",null,null],[13,"CUDNN_LINEAR_INPUT","","",136,null],[13,"CUDNN_SKIP_INPUT","","",136,null],[4,"cudnnRNNClipMode_t","","",null,null],[13,"CUDNN_RNN_CLIP_NONE","","",137,null],[13,"CUDNN_RNN_CLIP_MINMAX","","",137,null],[4,"cudnnRNNDataLayout_t","","",null,null],[13,"CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_UNPACKED","","",138,null],[13,"CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_PACKED","","",138,null],[13,"CUDNN_RNN_DATA_LAYOUT_BATCH_MAJOR_UNPACKED","","",138,null],[6,"cudnnRNNPaddingMode_t","","",null,null],[3,"cudnnRNNStruct","","",null,null],[6,"cudnnRNNDescriptor_t","","",null,null],[3,"cudnnPersistentRNNPlan","","",null,null],[6,"cudnnPersistentRNNPlan_t","","",null,null],[3,"cudnnRNNDataStruct","","",null,null],[6,"cudnnRNNDataDescriptor_t","","",null,null],[4,"cudnnSeqDataAxis_t","","",null,null],[13,"CUDNN_SEQDATA_TIME_DIM","","",139,null],[13,"CUDNN_SEQDATA_BATCH_DIM","","",139,null],[13,"CUDNN_SEQDATA_BEAM_DIM","","",139,null],[13,"CUDNN_SEQDATA_VECT_DIM","","",139,null],[3,"cudnnSeqDataStruct","","",null,null],[6,"cudnnSeqDataDescriptor_t","","",null,null],[6,"cudnnAttnQueryMap_t","","",null,null],[3,"cudnnAttnStruct","","",null,null],[6,"cudnnAttnDescriptor_t","","",null,null],[4,"cudnnMultiHeadAttnWeightKind_t","","",null,null],[13,"CUDNN_MH_ATTN_Q_WEIGHTS","","",140,null],[13,"CUDNN_MH_ATTN_K_WEIGHTS","","",140,null],[13,"CUDNN_MH_ATTN_V_WEIGHTS","","",140,null],[13,"CUDNN_MH_ATTN_O_WEIGHTS","","",140,null],[13,"CUDNN_MH_ATTN_Q_BIASES","","",140,null],[13,"CUDNN_MH_ATTN_K_BIASES","","",140,null],[13,"CUDNN_MH_ATTN_V_BIASES","","",140,null],[13,"CUDNN_MH_ATTN_O_BIASES","","",140,null],[4,"cudnnWgradMode_t","","",null,null],[13,"CUDNN_WGRAD_MODE_ADD","","",141,null],[13,"CUDNN_WGRAD_MODE_SET","","",141,null],[4,"cudnnLossNormalizationMode_t","","",null,null],[13,"CUDNN_LOSS_NORMALIZATION_NONE","","",142,null],[13,"CUDNN_LOSS_NORMALIZATION_SOFTMAX","","",142,null],[3,"cudnnConvolutionStruct","","",null,null],[6,"cudnnConvolutionDescriptor_t","","",null,null],[4,"cudnnConvolutionMode_t","","",null,null],[13,"CUDNN_CONVOLUTION","","",143,null],[13,"CUDNN_CROSS_CORRELATION","","",143,null],[4,"cudnnReorderType_t","","",null,null],[13,"CUDNN_DEFAULT_REORDER","","",144,null],[13,"CUDNN_NO_REORDER","","",144,null],[3,"cudnnConvolutionFwdAlgoPerf_t","","",null,null],[12,"algo","","",145,null],[12,"status","","",145,null],[12,"time","","",145,null],[12,"memory","","",145,null],[12,"determinism","","",145,null],[12,"mathType","","",145,null],[12,"reserved","","",145,null],[3,"cudnnConvolutionBwdDataAlgoPerf_t","","",null,null],[12,"algo","","",146,null],[12,"status","","",146,null],[12,"time","","",146,null],[12,"memory","","",146,null],[12,"determinism","","",146,null],[12,"mathType","","",146,null],[12,"reserved","","",146,null],[3,"cudnnFusedOpsConstParamStruct","","",null,null],[6,"cudnnFusedOpsConstParamPack_t","","",null,null],[3,"cudnnFusedOpsVariantParamStruct","","",null,null],[6,"cudnnFusedOpsVariantParamPack_t","","",null,null],[3,"cudnnFusedOpsPlanStruct","","",null,null],[6,"cudnnFusedOpsPlan_t","","",null,null],[4,"cudnnFusedOps_t","","",null,null],[13,"CUDNN_FUSED_SCALE_BIAS_ACTIVATION_CONV_BNSTATS","","",147,null],[13,"CUDNN_FUSED_SCALE_BIAS_ACTIVATION_WGRAD","","",147,null],[13,"CUDNN_FUSED_BN_FINALIZE_STATISTICS_TRAINING","","",147,null],[13,"CUDNN_FUSED_BN_FINALIZE_STATISTICS_INFERENCE","","",147,null],[13,"CUDNN_FUSED_CONV_SCALE_BIAS_ADD_ACTIVATION","","",147,null],[13,"CUDNN_FUSED_SCALE_BIAS_ADD_ACTIVATION_GEN_BITMASK","","",147,null],[13,"CUDNN_FUSED_DACTIVATION_FORK_DBATCHNORM","","",147,null],[4,"cudnnFusedOpsConstParamLabel_t","","",null,null],[13,"CUDNN_PARAM_XDESC","","",148,null],[13,"CUDNN_PARAM_XDATA_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_BN_MODE","","",148,null],[13,"CUDNN_PARAM_BN_EQSCALEBIAS_DESC","","",148,null],[13,"CUDNN_PARAM_BN_EQSCALE_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_BN_EQBIAS_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_ACTIVATION_DESC","","",148,null],[13,"CUDNN_PARAM_CONV_DESC","","",148,null],[13,"CUDNN_PARAM_WDESC","","",148,null],[13,"CUDNN_PARAM_WDATA_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_DWDESC","","",148,null],[13,"CUDNN_PARAM_DWDATA_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_YDESC","","",148,null],[13,"CUDNN_PARAM_YDATA_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_DYDESC","","",148,null],[13,"CUDNN_PARAM_DYDATA_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_YSTATS_DESC","","",148,null],[13,"CUDNN_PARAM_YSUM_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_YSQSUM_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_BN_SCALEBIAS_MEANVAR_DESC","","",148,null],[13,"CUDNN_PARAM_BN_SCALE_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_BN_BIAS_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_BN_SAVED_MEAN_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_BN_SAVED_INVSTD_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_BN_RUNNING_MEAN_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_BN_RUNNING_VAR_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_ZDESC","","",148,null],[13,"CUDNN_PARAM_ZDATA_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_BN_Z_EQSCALEBIAS_DESC","","",148,null],[13,"CUDNN_PARAM_BN_Z_EQSCALE_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_BN_Z_EQBIAS_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_ACTIVATION_BITMASK_DESC","","",148,null],[13,"CUDNN_PARAM_ACTIVATION_BITMASK_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_DXDESC","","",148,null],[13,"CUDNN_PARAM_DXDATA_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_DZDESC","","",148,null],[13,"CUDNN_PARAM_DZDATA_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_BN_DSCALE_PLACEHOLDER","","",148,null],[13,"CUDNN_PARAM_BN_DBIAS_PLACEHOLDER","","",148,null],[4,"cudnnFusedOpsPointerPlaceHolder_t","","",null,null],[13,"CUDNN_PTR_NULL","","",149,null],[13,"CUDNN_PTR_ELEM_ALIGNED","","",149,null],[13,"CUDNN_PTR_16B_ALIGNED","","",149,null],[4,"cudnnFusedOpsVariantParamLabel_t","","",null,null],[13,"CUDNN_PTR_XDATA","","",150,null],[13,"CUDNN_PTR_BN_EQSCALE","","",150,null],[13,"CUDNN_PTR_BN_EQBIAS","","",150,null],[13,"CUDNN_PTR_WDATA","","",150,null],[13,"CUDNN_PTR_DWDATA","","",150,null],[13,"CUDNN_PTR_YDATA","","",150,null],[13,"CUDNN_PTR_DYDATA","","",150,null],[13,"CUDNN_PTR_YSUM","","",150,null],[13,"CUDNN_PTR_YSQSUM","","",150,null],[13,"CUDNN_PTR_WORKSPACE","","",150,null],[13,"CUDNN_PTR_BN_SCALE","","",150,null],[13,"CUDNN_PTR_BN_BIAS","","",150,null],[13,"CUDNN_PTR_BN_SAVED_MEAN","","",150,null],[13,"CUDNN_PTR_BN_SAVED_INVSTD","","",150,null],[13,"CUDNN_PTR_BN_RUNNING_MEAN","","",150,null],[13,"CUDNN_PTR_BN_RUNNING_VAR","","",150,null],[13,"CUDNN_PTR_ZDATA","","",150,null],[13,"CUDNN_PTR_BN_Z_EQSCALE","","",150,null],[13,"CUDNN_PTR_BN_Z_EQBIAS","","",150,null],[13,"CUDNN_PTR_ACTIVATION_BITMASK","","",150,null],[13,"CUDNN_PTR_DXDATA","","",150,null],[13,"CUDNN_PTR_DZDATA","","",150,null],[13,"CUDNN_PTR_BN_DSCALE","","",150,null],[13,"CUDNN_PTR_BN_DBIAS","","",150,null],[13,"CUDNN_SCALAR_SIZE_T_WORKSPACE_SIZE_IN_BYTES","","",150,null],[13,"CUDNN_SCALAR_INT64_T_BN_ACCUMULATION_COUNT","","",150,null],[13,"CUDNN_SCALAR_DOUBLE_BN_EXP_AVG_FACTOR","","",150,null],[13,"CUDNN_SCALAR_DOUBLE_BN_EPSILON","","",150,null],[3,"cudnnConvolutionBwdFilterAlgoPerf_t","","",null,null],[12,"algo","","",151,null],[12,"status","","",151,null],[12,"time","","",151,null],[12,"memory","","",151,null],[12,"determinism","","",151,null],[12,"mathType","","",151,null],[12,"reserved","","",151,null],[6,"cudnnBackendDescriptor_t","","",null,null],[4,"cudnnPointwiseMode_t","","",null,null],[13,"CUDNN_POINTWISE_ADD","","",152,null],[13,"CUDNN_POINTWISE_MUL","","",152,null],[13,"CUDNN_POINTWISE_MIN","","",152,null],[13,"CUDNN_POINTWISE_MAX","","",152,null],[13,"CUDNN_POINTWISE_SQRT","","",152,null],[13,"CUDNN_POINTWISE_RELU_FWD","","",152,null],[13,"CUDNN_POINTWISE_TANH_FWD","","",152,null],[13,"CUDNN_POINTWISE_SIGMOID_FWD","","",152,null],[13,"CUDNN_POINTWISE_ELU_FWD","","",152,null],[13,"CUDNN_POINTWISE_GELU_FWD","","",152,null],[13,"CUDNN_POINTWISE_SOFTPLUS_FWD","","",152,null],[13,"CUDNN_POINTWISE_SWISH_FWD","","",152,null],[13,"CUDNN_POINTWISE_RELU_BWD","","",152,null],[13,"CUDNN_POINTWISE_TANH_BWD","","",152,null],[13,"CUDNN_POINTWISE_SIGMOID_BWD","","",152,null],[13,"CUDNN_POINTWISE_ELU_BWD","","",152,null],[13,"CUDNN_POINTWISE_GELU_BWD","","",152,null],[13,"CUDNN_POINTWISE_SOFTPLUS_BWD","","",152,null],[13,"CUDNN_POINTWISE_SWISH_BWD","","",152,null],[4,"cudnnGenStatsMode_t","","",null,null],[13,"CUDNN_GENSTATS_SUM_SQSUM","","",153,null],[4,"cudnnBnFinalizeStatsMode_t","","",null,null],[13,"CUDNN_BN_FINALIZE_STATISTICS_TRAINING","","",154,null],[13,"CUDNN_BN_FINALIZE_STATISTICS_INFERENCE","","",154,null],[4,"cudnnBackendAttributeName_t","","",null,null],[13,"CUDNN_ATTR_POINTWISE_MODE","","",155,null],[13,"CUDNN_ATTR_POINTWISE_MATH_PREC","","",155,null],[13,"CUDNN_ATTR_POINTWISE_NAN_PROPAGATION","","",155,null],[13,"CUDNN_ATTR_POINTWISE_RELU_LOWER_CLIP","","",155,null],[13,"CUDNN_ATTR_POINTWISE_RELU_UPPER_CLIP","","",155,null],[13,"CUDNN_ATTR_POINTWISE_RELU_LOWER_CLIP_SLOPE","","",155,null],[13,"CUDNN_ATTR_POINTWISE_ELU_ALPHA","","",155,null],[13,"CUDNN_ATTR_POINTWISE_SOFTPLUS_BETA","","",155,null],[13,"CUDNN_ATTR_POINTWISE_SWISH_BETA","","",155,null],[13,"CUDNN_ATTR_CONVOLUTION_COMP_TYPE","","",155,null],[13,"CUDNN_ATTR_CONVOLUTION_CONV_MODE","","",155,null],[13,"CUDNN_ATTR_CONVOLUTION_DILATIONS","","",155,null],[13,"CUDNN_ATTR_CONVOLUTION_FILTER_STRIDES","","",155,null],[13,"CUDNN_ATTR_CONVOLUTION_POST_PADDINGS","","",155,null],[13,"CUDNN_ATTR_CONVOLUTION_PRE_PADDINGS","","",155,null],[13,"CUDNN_ATTR_CONVOLUTION_SPATIAL_DIMS","","",155,null],[13,"CUDNN_ATTR_ENGINEHEUR_MODE","","",155,null],[13,"CUDNN_ATTR_ENGINEHEUR_OPERATION_GRAPH","","",155,null],[13,"CUDNN_ATTR_ENGINEHEUR_RESULTS","","",155,null],[13,"CUDNN_ATTR_ENGINECFG_ENGINE","","",155,null],[13,"CUDNN_ATTR_ENGINECFG_INTERMEDIATE_INFO","","",155,null],[13,"CUDNN_ATTR_ENGINECFG_KNOB_CHOICES","","",155,null],[13,"CUDNN_ATTR_EXECUTION_PLAN_HANDLE","","",155,null],[13,"CUDNN_ATTR_EXECUTION_PLAN_ENGINE_CONFIG","","",155,null],[13,"CUDNN_ATTR_EXECUTION_PLAN_WORKSPACE_SIZE","","",155,null],[13,"CUDNN_ATTR_EXECUTION_PLAN_COMPUTED_INTERMEDIATE_UIDS","","",155,null],[13,"CUDNN_ATTR_EXECUTION_PLAN_RUN_ONLY_INTERMEDIATE_UIDS","","",155,null],[13,"CUDNN_ATTR_INTERMEDIATE_INFO_UNIQUE_ID","","",155,null],[13,"CUDNN_ATTR_INTERMEDIATE_INFO_SIZE","","",155,null],[13,"CUDNN_ATTR_INTERMEDIATE_INFO_DEPENDENT_DATA_UIDS","","",155,null],[13,"CUDNN_ATTR_INTERMEDIATE_INFO_DEPENDENT_ATTRIBUTES","","",155,null],[13,"CUDNN_ATTR_KNOB_CHOICE_KNOB_TYPE","","",155,null],[13,"CUDNN_ATTR_KNOB_CHOICE_KNOB_VALUE","","",155,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_ALPHA","","",155,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_BETA","","",155,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_CONV_DESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_W","","",155,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_X","","",155,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_FORWARD_Y","","",155,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_ALPHA","","",155,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_BETA","","",155,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_CONV_DESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_W","","",155,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_DX","","",155,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_DATA_DY","","",155,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_ALPHA","","",155,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_BETA","","",155,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_CONV_DESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_DW","","",155,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_X","","",155,null],[13,"CUDNN_ATTR_OPERATION_CONVOLUTION_BWD_FILTER_DY","","",155,null],[13,"CUDNN_ATTR_OPERATION_POINTWISE_PW_DESCRIPTOR","","",155,null],[13,"CUDNN_ATTR_OPERATION_POINTWISE_XDESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_POINTWISE_BDESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_POINTWISE_YDESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_POINTWISE_ALPHA1","","",155,null],[13,"CUDNN_ATTR_OPERATION_POINTWISE_ALPHA2","","",155,null],[13,"CUDNN_ATTR_OPERATION_POINTWISE_DXDESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_POINTWISE_DYDESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_GENSTATS_MODE","","",155,null],[13,"CUDNN_ATTR_OPERATION_GENSTATS_MATH_PREC","","",155,null],[13,"CUDNN_ATTR_OPERATION_GENSTATS_XDESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_GENSTATS_SUMDESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_GENSTATS_SQSUMDESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_STATS_MODE","","",155,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_MATH_PREC","","",155,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_Y_SUM_DESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_Y_SQ_SUM_DESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_SCALE_DESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_BIAS_DESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_PREV_RUNNING_MEAN_DESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_PREV_RUNNING_VAR_DESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_UPDATED_RUNNING_MEAN_DESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_UPDATED_RUNNING_VAR_DESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_SAVED_MEAN_DESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_SAVED_INV_STD_DESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_EQ_SCALE_DESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_EQ_BIAS_DESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_ACCUM_COUNT_DESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_EPSILON_DESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_BN_FINALIZE_EXP_AVERATE_FACTOR_DESC","","",155,null],[13,"CUDNN_ATTR_OPERATIONGRAPH_HANDLE","","",155,null],[13,"CUDNN_ATTR_OPERATIONGRAPH_OPS","","",155,null],[13,"CUDNN_ATTR_OPERATIONGRAPH_ENGINE_GLOBAL_COUNT","","",155,null],[13,"CUDNN_ATTR_TENSOR_BYTE_ALIGNMENT","","",155,null],[13,"CUDNN_ATTR_TENSOR_DATA_TYPE","","",155,null],[13,"CUDNN_ATTR_TENSOR_DIMENSIONS","","",155,null],[13,"CUDNN_ATTR_TENSOR_STRIDES","","",155,null],[13,"CUDNN_ATTR_TENSOR_VECTOR_COUNT","","",155,null],[13,"CUDNN_ATTR_TENSOR_VECTORIZED_DIMENSION","","",155,null],[13,"CUDNN_ATTR_TENSOR_UNIQUE_ID","","",155,null],[13,"CUDNN_ATTR_TENSOR_IS_VIRTUAL","","",155,null],[13,"CUDNN_ATTR_TENSOR_IS_BY_VALUE","","",155,null],[13,"CUDNN_ATTR_VARIANT_PACK_UNIQUE_IDS","","",155,null],[13,"CUDNN_ATTR_VARIANT_PACK_DATA_POINTERS","","",155,null],[13,"CUDNN_ATTR_VARIANT_PACK_INTERMEDIATES","","",155,null],[13,"CUDNN_ATTR_VARIANT_PACK_WORKSPACE","","",155,null],[13,"CUDNN_ATTR_LAYOUT_INFO_TENSOR_UID","","",155,null],[13,"CUDNN_ATTR_LAYOUT_INFO_TYPES","","",155,null],[13,"CUDNN_ATTR_KNOB_INFO_TYPE","","",155,null],[13,"CUDNN_ATTR_KNOB_INFO_MAXIMUM_VALUE","","",155,null],[13,"CUDNN_ATTR_KNOB_INFO_MINIMUM_VALUE","","",155,null],[13,"CUDNN_ATTR_KNOB_INFO_STRIDE","","",155,null],[13,"CUDNN_ATTR_ENGINE_OPERATION_GRAPH","","",155,null],[13,"CUDNN_ATTR_ENGINE_GLOBAL_INDEX","","",155,null],[13,"CUDNN_ATTR_ENGINE_KNOB_INFO","","",155,null],[13,"CUDNN_ATTR_ENGINE_NUMERICAL_NOTE","","",155,null],[13,"CUDNN_ATTR_ENGINE_LAYOUT_INFO","","",155,null],[13,"CUDNN_ATTR_MATMUL_COMP_TYPE","","",155,null],[13,"CUDNN_ATTR_OPERATION_MATMUL_ADESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_MATMUL_BDESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_MATMUL_CDESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_MATMUL_DESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_MATMUL_IRREGULARLY_STRIDED_BATCH_COUNT","","",155,null],[13,"CUDNN_ATTR_REDUCTION_OPERATOR","","",155,null],[13,"CUDNN_ATTR_REDUCTION_COMP_TYPE","","",155,null],[13,"CUDNN_ATTR_OPERATION_REDUCTION_XDESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_REDUCTION_YDESC","","",155,null],[13,"CUDNN_ATTR_OPERATION_REDUCTION_DESC","","",155,null],[4,"cudnnBackendAttributeType_t","","",null,null],[13,"CUDNN_TYPE_HANDLE","","",156,null],[13,"CUDNN_TYPE_DATA_TYPE","","",156,null],[13,"CUDNN_TYPE_BOOLEAN","","",156,null],[13,"CUDNN_TYPE_INT64","","",156,null],[13,"CUDNN_TYPE_FLOAT","","",156,null],[13,"CUDNN_TYPE_DOUBLE","","",156,null],[13,"CUDNN_TYPE_VOID_PTR","","",156,null],[13,"CUDNN_TYPE_CONVOLUTION_MODE","","",156,null],[13,"CUDNN_TYPE_HEUR_MODE","","",156,null],[13,"CUDNN_TYPE_KNOB_TYPE","","",156,null],[13,"CUDNN_TYPE_NAN_PROPOGATION","","",156,null],[13,"CUDNN_TYPE_NUMERICAL_NOTE","","",156,null],[13,"CUDNN_TYPE_LAYOUT_TYPE","","",156,null],[13,"CUDNN_TYPE_ATTRIB_NAME","","",156,null],[13,"CUDNN_TYPE_POINTWISE_MODE","","",156,null],[13,"CUDNN_TYPE_BACKEND_DESCRIPTOR","","",156,null],[13,"CUDNN_TYPE_GENSTATS_MODE","","",156,null],[13,"CUDNN_TYPE_BN_FINALIZE_STATS_MODE","","",156,null],[13,"CUDNN_TYPE_REDUCTION_OPERATOR_TYPE","","",156,null],[4,"cudnnBackendDescriptorType_t","","",null,null],[13,"CUDNN_BACKEND_POINTWISE_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_CONVOLUTION_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_ENGINE_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_ENGINECFG_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_ENGINEHEUR_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_EXECUTION_PLAN_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_INTERMEDIATE_INFO_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_KNOB_CHOICE_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_KNOB_INFO_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_LAYOUT_INFO_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_OPERATION_CONVOLUTION_FORWARD_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_OPERATION_CONVOLUTION_BACKWARD_FILTER_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_OPERATION_CONVOLUTION_BACKWARD_DATA_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_OPERATION_POINTWISE_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_OPERATION_GEN_STATS_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_OPERATIONGRAPH_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_VARIANT_PACK_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_TENSOR_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_MATMUL_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_OPERATION_MATMUL_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_OPERATION_BN_FINALIZE_STATISTICS_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_REDUCTION_DESCRIPTOR","","",157,null],[13,"CUDNN_BACKEND_OPERATION_REDUCTION_DESCRIPTOR","","",157,null],[4,"cudnnBackendNumericalNote_t","","",null,null],[13,"CUDNN_NUMERICAL_NOTE_TENSOR_CORE","","",158,null],[13,"CUDNN_NUMERICAL_NOTE_DOWN_CONVERT_INPUTS","","",158,null],[13,"CUDNN_NUMERICAL_NOTE_REDUCED_PRECISION_REDUCTION","","",158,null],[13,"CUDNN_NUMERICAL_NOTE_FFT","","",158,null],[13,"CUDNN_NUMERICAL_NOTE_NONDETERMINISTIC","","",158,null],[13,"CUDNN_NUMERICAL_NOTE_WINOGRAD","","",158,null],[13,"CUDNN_NUMERICAL_NOTE_TYPE_COUNT","","",158,null],[4,"cudnnBackendKnobType_t","","",null,null],[13,"CUDNN_KNOB_TYPE_SPLIT_K","","",159,null],[13,"CUDNN_KNOB_TYPE_SWIZZLE","","",159,null],[13,"CUDNN_KNOB_TYPE_TILE_SIZE","","",159,null],[13,"CUDNN_KNOB_TYPE_USE_TEX","","",159,null],[13,"CUDNN_KNOB_TYPE_EDGE","","",159,null],[13,"CUDNN_KNOB_TYPE_KBLOCK","","",159,null],[13,"CUDNN_KNOB_TYPE_LDGA","","",159,null],[13,"CUDNN_KNOB_TYPE_LDGB","","",159,null],[13,"CUDNN_KNOB_TYPE_CHUNK_K","","",159,null],[13,"CUDNN_KNOB_TYPE_SPLIT_H","","",159,null],[13,"CUDNN_KNOB_TYPE_WINO_TILE","","",159,null],[13,"CUDNN_KNOB_TYPE_MULTIPLY","","",159,null],[13,"CUDNN_KNOB_TYPE_SPLIT_K_BUF","","",159,null],[13,"CUDNN_KNOB_TYPE_TILEK","","",159,null],[13,"CUDNN_KNOB_TYPE_STAGES","","",159,null],[13,"CUDNN_KNOB_TYPE_REDUCTION_MODE","","",159,null],[13,"CUDNN_KNOB_TYPE_CTA_SPLIT_K_MODE","","",159,null],[13,"CUDNN_KNOB_TYPE_SPLIT_K_SLC","","",159,null],[13,"CUDNN_KNOB_TYPE_IDX_MODE","","",159,null],[13,"CUDNN_KNOB_TYPE_SLICED","","",159,null],[13,"CUDNN_KNOB_TYPE_SPLIT_RS","","",159,null],[13,"CUDNN_KNOB_TYPE_SINGLEBUFFER","","",159,null],[13,"CUDNN_KNOB_TYPE_LDGC","","",159,null],[13,"CUDNN_KNOB_TYPE_SPECFILT","","",159,null],[13,"CUDNN_KNOB_TYPE_KERNEL_CFG","","",159,null],[13,"CUDNN_KNOB_TYPE_COUNTS","","",159,null],[4,"cudnnBackendLayoutType_t","","",null,null],[13,"CUDNN_LAYOUT_TYPE_PREFERRED_NCHW","","",160,null],[13,"CUDNN_LAYOUT_TYPE_PREFERRED_NHWC","","",160,null],[13,"CUDNN_LAYOUT_TYPE_PREFERRED_PAD4CK","","",160,null],[13,"CUDNN_LAYOUT_TYPE_PREFERRED_PAD8CK","","",160,null],[13,"CUDNN_LAYOUT_TYPE_COUNT","","",160,null],[4,"cudnnBackendHeurMode_t","","",null,null],[13,"CUDNN_HEUR_MODE_INSTANT","","",161,null],[13,"CUDNN_HEUR_MODE_B","","",161,null],[13,"CUDNN_HEUR_MODES_COUNT","","",161,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"clone","","",0,[[],["cudaroundmode",4]]],[11,"clone","","",1,[[],["dim3",3]]],[11,"clone","","",2,[[],["cudaerror",4]]],[11,"clone","","",3,[[],["cudachannelformatkind",4]]],[11,"clone","","",4,[[],["cudachannelformatdesc",3]]],[11,"clone","","",162,[[],["cudaarray",3]]],[11,"clone","","",163,[[],["cudamipmappedarray",3]]],[11,"clone","","",5,[[],["cudaarraysparseproperties",3]]],[11,"clone","","",6,[[],["cudaarraysparseproperties__bindgen_ty_1",3]]],[11,"clone","","",7,[[],["cudamemorytype",4]]],[11,"clone","","",8,[[],["cudamemcpykind",4]]],[11,"clone","","",9,[[],["cudapitchedptr",3]]],[11,"clone","","",10,[[],["cudaextent",3]]],[11,"clone","","",11,[[],["cudapos",3]]],[11,"clone","","",12,[[],["cudamemcpy3dparms",3]]],[11,"clone","","",13,[[],["cudamemcpy3dpeerparms",3]]],[11,"clone","","",14,[[],["cudamemsetparams",3]]],[11,"clone","","",15,[[],["cudaaccessproperty",4]]],[11,"clone","","",16,[[],["cudaaccesspolicywindow",3]]],[11,"clone","","",17,[[],["cudahostnodeparams",3]]],[11,"clone","","",18,[[],["cudastreamcapturestatus",4]]],[11,"clone","","",19,[[],["cudastreamcapturemode",4]]],[11,"clone","","",20,[[],["cudasynchronizationpolicy",4]]],[11,"clone","","",21,[[],["cudastreamattrid",4]]],[11,"clone","","",22,[[],["cudastreamattrvalue",19]]],[11,"clone","","",164,[[],["cudagraphicsresource",3]]],[11,"clone","","",23,[[],["cudagraphicsregisterflags",4]]],[11,"clone","","",24,[[],["cudagraphicsmapflags",4]]],[11,"clone","","",25,[[],["cudagraphicscubeface",4]]],[11,"clone","","",26,[[],["cudakernelnodeattrid",4]]],[11,"clone","","",27,[[],["cudakernelnodeattrvalue",19]]],[11,"clone","","",28,[[],["cudaresourcetype",4]]],[11,"clone","","",29,[[],["cudaresourceviewformat",4]]],[11,"clone","","",30,[[],["cudaresourcedesc",3]]],[11,"clone","","",31,[[],["cudaresourcedesc__bindgen_ty_1",19]]],[11,"clone","","",32,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",33,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_2",3]]],[11,"clone","","",34,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_3",3]]],[11,"clone","","",35,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_4",3]]],[11,"clone","","",36,[[],["cudaresourceviewdesc",3]]],[11,"clone","","",37,[[],["cudapointerattributes",3]]],[11,"clone","","",38,[[],["cudafuncattributes",3]]],[11,"clone","","",39,[[],["cudafuncattribute",4]]],[11,"clone","","",40,[[],["cudafunccache",4]]],[11,"clone","","",41,[[],["cudasharedmemconfig",4]]],[11,"clone","","",42,[[],["cudasharedcarveout",4]]],[11,"clone","","",43,[[],["cudacomputemode",4]]],[11,"clone","","",44,[[],["cudalimit",4]]],[11,"clone","","",45,[[],["cudamemoryadvise",4]]],[11,"clone","","",46,[[],["cudamemrangeattribute",4]]],[11,"clone","","",47,[[],["cudaoutputmode",4]]],[11,"clone","","",48,[[],["cudadeviceattr",4]]],[11,"clone","","",49,[[],["cudamempoolattr",4]]],[11,"clone","","",50,[[],["cudamemlocationtype",4]]],[11,"clone","","",51,[[],["cudamemlocation",3]]],[11,"clone","","",52,[[],["cudamemaccessflags",4]]],[11,"clone","","",53,[[],["cudamemaccessdesc",3]]],[11,"clone","","",54,[[],["cudamemallocationtype",4]]],[11,"clone","","",55,[[],["cudamemallocationhandletype",4]]],[11,"clone","","",56,[[],["cudamempoolprops",3]]],[11,"clone","","",57,[[],["cudamempoolptrexportdata",3]]],[11,"clone","","",58,[[],["cudadevicep2pattr",4]]],[11,"clone","","",59,[[],["cuuuid_st",3]]],[11,"clone","","",60,[[],["cudadeviceprop",3]]],[11,"clone","","",61,[[],["cudaipceventhandle_st",3]]],[11,"clone","","",62,[[],["cudaipcmemhandle_st",3]]],[11,"clone","","",63,[[],["cudaexternalmemoryhandletype",4]]],[11,"clone","","",64,[[],["cudaexternalmemoryhandledesc",3]]],[11,"clone","","",65,[[],["cudaexternalmemoryhandledesc__bindgen_ty_1",19]]],[11,"clone","","",66,[[],["cudaexternalmemoryhandledesc__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",67,[[],["cudaexternalmemorybufferdesc",3]]],[11,"clone","","",68,[[],["cudaexternalmemorymipmappedarraydesc",3]]],[11,"clone","","",69,[[],["cudaexternalsemaphorehandletype",4]]],[11,"clone","","",70,[[],["cudaexternalsemaphorehandledesc",3]]],[11,"clone","","",71,[[],["cudaexternalsemaphorehandledesc__bindgen_ty_1",19]]],[11,"clone","","",72,[[],["cudaexternalsemaphorehandledesc__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",73,[[],["cudaexternalsemaphoresignalparams",3]]],[11,"clone","","",74,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1",3]]],[11,"clone","","",75,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",76,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_2",19]]],[11,"clone","","",77,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_3",3]]],[11,"clone","","",78,[[],["cudaexternalsemaphorewaitparams",3]]],[11,"clone","","",79,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1",3]]],[11,"clone","","",80,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",81,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_2",19]]],[11,"clone","","",82,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_3",3]]],[11,"clone","","",165,[[],["custream_st",3]]],[11,"clone","","",166,[[],["cuevent_st",3]]],[11,"clone","","",167,[[],["cuexternalmemory_st",3]]],[11,"clone","","",168,[[],["cuexternalsemaphore_st",3]]],[11,"clone","","",169,[[],["cugraph_st",3]]],[11,"clone","","",170,[[],["cugraphnode_st",3]]],[11,"clone","","",171,[[],["cufunc_st",3]]],[11,"clone","","",172,[[],["cumempoolhandle_st",3]]],[11,"clone","","",83,[[],["cudacgscope",4]]],[11,"clone","","",84,[[],["cudalaunchparams",3]]],[11,"clone","","",85,[[],["cudakernelnodeparams",3]]],[11,"clone","","",86,[[],["cudaexternalsemaphoresignalnodeparams",3]]],[11,"clone","","",87,[[],["cudaexternalsemaphorewaitnodeparams",3]]],[11,"clone","","",88,[[],["cudagraphnodetype",4]]],[11,"clone","","",173,[[],["cugraphexec_st",3]]],[11,"clone","","",89,[[],["cudagraphexecupdateresult",4]]],[11,"clone","","",90,[[],["cudasurfaceboundarymode",4]]],[11,"clone","","",91,[[],["cudasurfaceformatmode",4]]],[11,"clone","","",92,[[],["surfacereference",3]]],[11,"clone","","",93,[[],["cudatextureaddressmode",4]]],[11,"clone","","",94,[[],["cudatexturefiltermode",4]]],[11,"clone","","",95,[[],["cudatexturereadmode",4]]],[11,"clone","","",96,[[],["texturereference",3]]],[11,"clone","","",97,[[],["cudatexturedesc",3]]],[11,"clone","","",98,[[],["cudadatatype_t",4]]],[11,"clone","","",174,[[],["cudnncontext",3]]],[11,"clone","","",99,[[],["cudnnstatus_t",4]]],[11,"clone","","",175,[[],["cudnnruntimetag_t",3]]],[11,"clone","","",100,[[],["cudnnerrquerymode_t",4]]],[11,"clone","","",176,[[],["cudnntensorstruct",3]]],[11,"clone","","",177,[[],["cudnnpoolingstruct",3]]],[11,"clone","","",178,[[],["cudnnfilterstruct",3]]],[11,"clone","","",179,[[],["cudnnlrnstruct",3]]],[11,"clone","","",180,[[],["cudnnactivationstruct",3]]],[11,"clone","","",181,[[],["cudnnspatialtransformerstruct",3]]],[11,"clone","","",182,[[],["cudnnoptensorstruct",3]]],[11,"clone","","",183,[[],["cudnnreducetensorstruct",3]]],[11,"clone","","",184,[[],["cudnnctclossstruct",3]]],[11,"clone","","",185,[[],["cudnntensortransformstruct",3]]],[11,"clone","","",101,[[],["cudnndatatype_t",4]]],[11,"clone","","",102,[[],["cudnnmathtype_t",4]]],[11,"clone","","",103,[[],["cudnnnanpropagation_t",4]]],[11,"clone","","",104,[[],["cudnndeterminism_t",4]]],[11,"clone","","",105,[[],["cudnntensorformat_t",4]]],[11,"clone","","",106,[[],["cudnnfoldingdirection_t",4]]],[11,"clone","","",107,[[],["cudnnoptensorop_t",4]]],[11,"clone","","",108,[[],["cudnnreducetensorop_t",4]]],[11,"clone","","",109,[[],["cudnnreducetensorindices_t",4]]],[11,"clone","","",110,[[],["cudnnindicestype_t",4]]],[11,"clone","","",111,[[],["cudnnsoftmaxalgorithm_t",4]]],[11,"clone","","",112,[[],["cudnnsoftmaxmode_t",4]]],[11,"clone","","",113,[[],["cudnnpoolingmode_t",4]]],[11,"clone","","",114,[[],["cudnnactivationmode_t",4]]],[11,"clone","","",115,[[],["cudnnlrnmode_t",4]]],[11,"clone","","",116,[[],["cudnndivnormmode_t",4]]],[11,"clone","","",117,[[],["cudnnbatchnormmode_t",4]]],[11,"clone","","",118,[[],["cudnnbatchnormops_t",4]]],[11,"clone","","",119,[[],["cudnnnormmode_t",4]]],[11,"clone","","",120,[[],["cudnnnormalgo_t",4]]],[11,"clone","","",121,[[],["cudnnnormops_t",4]]],[11,"clone","","",122,[[],["cudnnsamplertype_t",4]]],[11,"clone","","",186,[[],["cudnndropoutstruct",3]]],[11,"clone","","",187,[[],["cudnnalgorithmstruct",3]]],[11,"clone","","",188,[[],["cudnnalgorithmperformancestruct",3]]],[11,"clone","","",123,[[],["cudnnconvolutionfwdalgo_t",4]]],[11,"clone","","",124,[[],["cudnnconvolutionbwdfilteralgo_t",4]]],[11,"clone","","",125,[[],["cudnnconvolutionbwddataalgo_t",4]]],[11,"clone","","",126,[[],["cudnnrnnalgo_t",4]]],[11,"clone","","",127,[[],["cudnnctclossalgo_t",4]]],[11,"clone","","",128,[[],["cudnnalgorithm_t",3]]],[11,"clone","","",129,[[],["cudnnalgorithm_t_algorithm",19]]],[11,"clone","","",130,[[],["cudnnseverity_t",4]]],[11,"clone","","",131,[[],["cudnndebug_t",3]]],[11,"clone","","",132,[[],["cudnnforwardmode_t",4]]],[11,"clone","","",133,[[],["cudnnrnnmode_t",4]]],[11,"clone","","",134,[[],["cudnnrnnbiasmode_t",4]]],[11,"clone","","",135,[[],["cudnndirectionmode_t",4]]],[11,"clone","","",136,[[],["cudnnrnninputmode_t",4]]],[11,"clone","","",137,[[],["cudnnrnnclipmode_t",4]]],[11,"clone","","",138,[[],["cudnnrnndatalayout_t",4]]],[11,"clone","","",189,[[],["cudnnrnnstruct",3]]],[11,"clone","","",190,[[],["cudnnpersistentrnnplan",3]]],[11,"clone","","",191,[[],["cudnnrnndatastruct",3]]],[11,"clone","","",139,[[],["cudnnseqdataaxis_t",4]]],[11,"clone","","",192,[[],["cudnnseqdatastruct",3]]],[11,"clone","","",193,[[],["cudnnattnstruct",3]]],[11,"clone","","",140,[[],["cudnnmultiheadattnweightkind_t",4]]],[11,"clone","","",141,[[],["cudnnwgradmode_t",4]]],[11,"clone","","",142,[[],["cudnnlossnormalizationmode_t",4]]],[11,"clone","","",194,[[],["cudnnconvolutionstruct",3]]],[11,"clone","","",143,[[],["cudnnconvolutionmode_t",4]]],[11,"clone","","",144,[[],["cudnnreordertype_t",4]]],[11,"clone","","",145,[[],["cudnnconvolutionfwdalgoperf_t",3]]],[11,"clone","","",146,[[],["cudnnconvolutionbwddataalgoperf_t",3]]],[11,"clone","","",195,[[],["cudnnfusedopsconstparamstruct",3]]],[11,"clone","","",196,[[],["cudnnfusedopsvariantparamstruct",3]]],[11,"clone","","",197,[[],["cudnnfusedopsplanstruct",3]]],[11,"clone","","",147,[[],["cudnnfusedops_t",4]]],[11,"clone","","",148,[[],["cudnnfusedopsconstparamlabel_t",4]]],[11,"clone","","",149,[[],["cudnnfusedopspointerplaceholder_t",4]]],[11,"clone","","",150,[[],["cudnnfusedopsvariantparamlabel_t",4]]],[11,"clone","","",151,[[],["cudnnconvolutionbwdfilteralgoperf_t",3]]],[11,"clone","","",152,[[],["cudnnpointwisemode_t",4]]],[11,"clone","","",153,[[],["cudnngenstatsmode_t",4]]],[11,"clone","","",154,[[],["cudnnbnfinalizestatsmode_t",4]]],[11,"clone","","",155,[[],["cudnnbackendattributename_t",4]]],[11,"clone","","",156,[[],["cudnnbackendattributetype_t",4]]],[11,"clone","","",157,[[],["cudnnbackenddescriptortype_t",4]]],[11,"clone","","",158,[[],["cudnnbackendnumericalnote_t",4]]],[11,"clone","","",159,[[],["cudnnbackendknobtype_t",4]]],[11,"clone","","",160,[[],["cudnnbackendlayouttype_t",4]]],[11,"clone","","",161,[[],["cudnnbackendheurmode_t",4]]],[11,"default","","",145,[[]]],[11,"default","","",151,[[]]],[11,"default","","",146,[[]]],[11,"eq","","",0,[[["cudaroundmode",4]],["bool",15]]],[11,"eq","","",2,[[["cudaerror",4]],["bool",15]]],[11,"eq","","",3,[[["cudachannelformatkind",4]],["bool",15]]],[11,"eq","","",7,[[["cudamemorytype",4]],["bool",15]]],[11,"eq","","",8,[[["cudamemcpykind",4]],["bool",15]]],[11,"eq","","",15,[[["cudaaccessproperty",4]],["bool",15]]],[11,"eq","","",18,[[["cudastreamcapturestatus",4]],["bool",15]]],[11,"eq","","",19,[[["cudastreamcapturemode",4]],["bool",15]]],[11,"eq","","",20,[[["cudasynchronizationpolicy",4]],["bool",15]]],[11,"eq","","",21,[[["cudastreamattrid",4]],["bool",15]]],[11,"eq","","",23,[[["cudagraphicsregisterflags",4]],["bool",15]]],[11,"eq","","",24,[[["cudagraphicsmapflags",4]],["bool",15]]],[11,"eq","","",25,[[["cudagraphicscubeface",4]],["bool",15]]],[11,"eq","","",26,[[["cudakernelnodeattrid",4]],["bool",15]]],[11,"eq","","",28,[[["cudaresourcetype",4]],["bool",15]]],[11,"eq","","",29,[[["cudaresourceviewformat",4]],["bool",15]]],[11,"eq","","",39,[[["cudafuncattribute",4]],["bool",15]]],[11,"eq","","",40,[[["cudafunccache",4]],["bool",15]]],[11,"eq","","",41,[[["cudasharedmemconfig",4]],["bool",15]]],[11,"eq","","",42,[[["cudasharedcarveout",4]],["bool",15]]],[11,"eq","","",43,[[["cudacomputemode",4]],["bool",15]]],[11,"eq","","",44,[[["cudalimit",4]],["bool",15]]],[11,"eq","","",45,[[["cudamemoryadvise",4]],["bool",15]]],[11,"eq","","",46,[[["cudamemrangeattribute",4]],["bool",15]]],[11,"eq","","",47,[[["cudaoutputmode",4]],["bool",15]]],[11,"eq","","",48,[[["cudadeviceattr",4]],["bool",15]]],[11,"eq","","",49,[[["cudamempoolattr",4]],["bool",15]]],[11,"eq","","",50,[[["cudamemlocationtype",4]],["bool",15]]],[11,"eq","","",52,[[["cudamemaccessflags",4]],["bool",15]]],[11,"eq","","",54,[[["cudamemallocationtype",4]],["bool",15]]],[11,"eq","","",55,[[["cudamemallocationhandletype",4]],["bool",15]]],[11,"eq","","",58,[[["cudadevicep2pattr",4]],["bool",15]]],[11,"eq","","",63,[[["cudaexternalmemoryhandletype",4]],["bool",15]]],[11,"eq","","",69,[[["cudaexternalsemaphorehandletype",4]],["bool",15]]],[11,"eq","","",83,[[["cudacgscope",4]],["bool",15]]],[11,"eq","","",88,[[["cudagraphnodetype",4]],["bool",15]]],[11,"eq","","",89,[[["cudagraphexecupdateresult",4]],["bool",15]]],[11,"eq","","",90,[[["cudasurfaceboundarymode",4]],["bool",15]]],[11,"eq","","",91,[[["cudasurfaceformatmode",4]],["bool",15]]],[11,"eq","","",93,[[["cudatextureaddressmode",4]],["bool",15]]],[11,"eq","","",94,[[["cudatexturefiltermode",4]],["bool",15]]],[11,"eq","","",95,[[["cudatexturereadmode",4]],["bool",15]]],[11,"eq","","",98,[[["cudadatatype_t",4]],["bool",15]]],[11,"eq","","",99,[[["cudnnstatus_t",4]],["bool",15]]],[11,"eq","","",100,[[["cudnnerrquerymode_t",4]],["bool",15]]],[11,"eq","","",101,[[["cudnndatatype_t",4]],["bool",15]]],[11,"eq","","",102,[[["cudnnmathtype_t",4]],["bool",15]]],[11,"eq","","",103,[[["cudnnnanpropagation_t",4]],["bool",15]]],[11,"eq","","",104,[[["cudnndeterminism_t",4]],["bool",15]]],[11,"eq","","",105,[[["cudnntensorformat_t",4]],["bool",15]]],[11,"eq","","",106,[[["cudnnfoldingdirection_t",4]],["bool",15]]],[11,"eq","","",107,[[["cudnnoptensorop_t",4]],["bool",15]]],[11,"eq","","",108,[[["cudnnreducetensorop_t",4]],["bool",15]]],[11,"eq","","",109,[[["cudnnreducetensorindices_t",4]],["bool",15]]],[11,"eq","","",110,[[["cudnnindicestype_t",4]],["bool",15]]],[11,"eq","","",111,[[["cudnnsoftmaxalgorithm_t",4]],["bool",15]]],[11,"eq","","",112,[[["cudnnsoftmaxmode_t",4]],["bool",15]]],[11,"eq","","",113,[[["cudnnpoolingmode_t",4]],["bool",15]]],[11,"eq","","",114,[[["cudnnactivationmode_t",4]],["bool",15]]],[11,"eq","","",115,[[["cudnnlrnmode_t",4]],["bool",15]]],[11,"eq","","",116,[[["cudnndivnormmode_t",4]],["bool",15]]],[11,"eq","","",117,[[["cudnnbatchnormmode_t",4]],["bool",15]]],[11,"eq","","",118,[[["cudnnbatchnormops_t",4]],["bool",15]]],[11,"eq","","",119,[[["cudnnnormmode_t",4]],["bool",15]]],[11,"eq","","",120,[[["cudnnnormalgo_t",4]],["bool",15]]],[11,"eq","","",121,[[["cudnnnormops_t",4]],["bool",15]]],[11,"eq","","",122,[[["cudnnsamplertype_t",4]],["bool",15]]],[11,"eq","","",123,[[["cudnnconvolutionfwdalgo_t",4]],["bool",15]]],[11,"eq","","",124,[[["cudnnconvolutionbwdfilteralgo_t",4]],["bool",15]]],[11,"eq","","",125,[[["cudnnconvolutionbwddataalgo_t",4]],["bool",15]]],[11,"eq","","",126,[[["cudnnrnnalgo_t",4]],["bool",15]]],[11,"eq","","",127,[[["cudnnctclossalgo_t",4]],["bool",15]]],[11,"eq","","",130,[[["cudnnseverity_t",4]],["bool",15]]],[11,"eq","","",132,[[["cudnnforwardmode_t",4]],["bool",15]]],[11,"eq","","",133,[[["cudnnrnnmode_t",4]],["bool",15]]],[11,"eq","","",134,[[["cudnnrnnbiasmode_t",4]],["bool",15]]],[11,"eq","","",135,[[["cudnndirectionmode_t",4]],["bool",15]]],[11,"eq","","",136,[[["cudnnrnninputmode_t",4]],["bool",15]]],[11,"eq","","",137,[[["cudnnrnnclipmode_t",4]],["bool",15]]],[11,"eq","","",138,[[["cudnnrnndatalayout_t",4]],["bool",15]]],[11,"eq","","",139,[[["cudnnseqdataaxis_t",4]],["bool",15]]],[11,"eq","","",140,[[["cudnnmultiheadattnweightkind_t",4]],["bool",15]]],[11,"eq","","",141,[[["cudnnwgradmode_t",4]],["bool",15]]],[11,"eq","","",142,[[["cudnnlossnormalizationmode_t",4]],["bool",15]]],[11,"eq","","",143,[[["cudnnconvolutionmode_t",4]],["bool",15]]],[11,"eq","","",144,[[["cudnnreordertype_t",4]],["bool",15]]],[11,"eq","","",147,[[["cudnnfusedops_t",4]],["bool",15]]],[11,"eq","","",148,[[["cudnnfusedopsconstparamlabel_t",4]],["bool",15]]],[11,"eq","","",149,[[["cudnnfusedopspointerplaceholder_t",4]],["bool",15]]],[11,"eq","","",150,[[["cudnnfusedopsvariantparamlabel_t",4]],["bool",15]]],[11,"eq","","",152,[[["cudnnpointwisemode_t",4]],["bool",15]]],[11,"eq","","",153,[[["cudnngenstatsmode_t",4]],["bool",15]]],[11,"eq","","",154,[[["cudnnbnfinalizestatsmode_t",4]],["bool",15]]],[11,"eq","","",155,[[["cudnnbackendattributename_t",4]],["bool",15]]],[11,"eq","","",156,[[["cudnnbackendattributetype_t",4]],["bool",15]]],[11,"eq","","",157,[[["cudnnbackenddescriptortype_t",4]],["bool",15]]],[11,"eq","","",158,[[["cudnnbackendnumericalnote_t",4]],["bool",15]]],[11,"eq","","",159,[[["cudnnbackendknobtype_t",4]],["bool",15]]],[11,"eq","","",160,[[["cudnnbackendlayouttype_t",4]],["bool",15]]],[11,"eq","","",161,[[["cudnnbackendheurmode_t",4]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",169,[[["formatter",3]],["result",6]]],[11,"fmt","","",170,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",172,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"fmt","","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","","",181,[[["formatter",3]],["result",6]]],[11,"fmt","","",182,[[["formatter",3]],["result",6]]],[11,"fmt","","",183,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","","",185,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",186,[[["formatter",3]],["result",6]]],[11,"fmt","","",187,[[["formatter",3]],["result",6]]],[11,"fmt","","",188,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",189,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",192,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",194,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",195,[[["formatter",3]],["result",6]]],[11,"fmt","","",196,[[["formatter",3]],["result",6]]],[11,"fmt","","",197,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",63,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",83,[[]]],[11,"hash","","",88,[[]]],[11,"hash","","",89,[[]]],[11,"hash","","",90,[[]]],[11,"hash","","",91,[[]]],[11,"hash","","",93,[[]]],[11,"hash","","",94,[[]]],[11,"hash","","",95,[[]]],[11,"hash","","",98,[[]]],[11,"hash","","",99,[[]]],[11,"hash","","",100,[[]]],[11,"hash","","",101,[[]]],[11,"hash","","",102,[[]]],[11,"hash","","",103,[[]]],[11,"hash","","",104,[[]]],[11,"hash","","",105,[[]]],[11,"hash","","",106,[[]]],[11,"hash","","",107,[[]]],[11,"hash","","",108,[[]]],[11,"hash","","",109,[[]]],[11,"hash","","",110,[[]]],[11,"hash","","",111,[[]]],[11,"hash","","",112,[[]]],[11,"hash","","",113,[[]]],[11,"hash","","",114,[[]]],[11,"hash","","",115,[[]]],[11,"hash","","",116,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",118,[[]]],[11,"hash","","",119,[[]]],[11,"hash","","",120,[[]]],[11,"hash","","",121,[[]]],[11,"hash","","",122,[[]]],[11,"hash","","",123,[[]]],[11,"hash","","",124,[[]]],[11,"hash","","",125,[[]]],[11,"hash","","",126,[[]]],[11,"hash","","",127,[[]]],[11,"hash","","",130,[[]]],[11,"hash","","",132,[[]]],[11,"hash","","",133,[[]]],[11,"hash","","",134,[[]]],[11,"hash","","",135,[[]]],[11,"hash","","",136,[[]]],[11,"hash","","",137,[[]]],[11,"hash","","",138,[[]]],[11,"hash","","",139,[[]]],[11,"hash","","",140,[[]]],[11,"hash","","",141,[[]]],[11,"hash","","",142,[[]]],[11,"hash","","",143,[[]]],[11,"hash","","",144,[[]]],[11,"hash","","",147,[[]]],[11,"hash","","",148,[[]]],[11,"hash","","",149,[[]]],[11,"hash","","",150,[[]]],[11,"hash","","",152,[[]]],[11,"hash","","",153,[[]]],[11,"hash","","",154,[[]]],[11,"hash","","",155,[[]]],[11,"hash","","",156,[[]]],[11,"hash","","",157,[[]]],[11,"hash","","",158,[[]]],[11,"hash","","",159,[[]]],[11,"hash","","",160,[[]]],[11,"hash","","",161,[[]]]],"p":[[4,"cudaRoundMode"],[3,"dim3"],[4,"cudaError"],[4,"cudaChannelFormatKind"],[3,"cudaChannelFormatDesc"],[3,"cudaArraySparseProperties"],[3,"cudaArraySparseProperties__bindgen_ty_1"],[4,"cudaMemoryType"],[4,"cudaMemcpyKind"],[3,"cudaPitchedPtr"],[3,"cudaExtent"],[3,"cudaPos"],[3,"cudaMemcpy3DParms"],[3,"cudaMemcpy3DPeerParms"],[3,"cudaMemsetParams"],[4,"cudaAccessProperty"],[3,"cudaAccessPolicyWindow"],[3,"cudaHostNodeParams"],[4,"cudaStreamCaptureStatus"],[4,"cudaStreamCaptureMode"],[4,"cudaSynchronizationPolicy"],[4,"cudaStreamAttrID"],[19,"cudaStreamAttrValue"],[4,"cudaGraphicsRegisterFlags"],[4,"cudaGraphicsMapFlags"],[4,"cudaGraphicsCubeFace"],[4,"cudaKernelNodeAttrID"],[19,"cudaKernelNodeAttrValue"],[4,"cudaResourceType"],[4,"cudaResourceViewFormat"],[3,"cudaResourceDesc"],[19,"cudaResourceDesc__bindgen_ty_1"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4"],[3,"cudaResourceViewDesc"],[3,"cudaPointerAttributes"],[3,"cudaFuncAttributes"],[4,"cudaFuncAttribute"],[4,"cudaFuncCache"],[4,"cudaSharedMemConfig"],[4,"cudaSharedCarveout"],[4,"cudaComputeMode"],[4,"cudaLimit"],[4,"cudaMemoryAdvise"],[4,"cudaMemRangeAttribute"],[4,"cudaOutputMode"],[4,"cudaDeviceAttr"],[4,"cudaMemPoolAttr"],[4,"cudaMemLocationType"],[3,"cudaMemLocation"],[4,"cudaMemAccessFlags"],[3,"cudaMemAccessDesc"],[4,"cudaMemAllocationType"],[4,"cudaMemAllocationHandleType"],[3,"cudaMemPoolProps"],[3,"cudaMemPoolPtrExportData"],[4,"cudaDeviceP2PAttr"],[3,"CUuuid_st"],[3,"cudaDeviceProp"],[3,"cudaIpcEventHandle_st"],[3,"cudaIpcMemHandle_st"],[4,"cudaExternalMemoryHandleType"],[3,"cudaExternalMemoryHandleDesc"],[19,"cudaExternalMemoryHandleDesc__bindgen_ty_1"],[3,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalMemoryBufferDesc"],[3,"cudaExternalMemoryMipmappedArrayDesc"],[4,"cudaExternalSemaphoreHandleType"],[3,"cudaExternalSemaphoreHandleDesc"],[19,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1"],[3,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1"],[19,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3"],[3,"cudaExternalSemaphoreWaitParams"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1"],[19,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3"],[4,"cudaCGScope"],[3,"cudaLaunchParams"],[3,"cudaKernelNodeParams"],[3,"cudaExternalSemaphoreSignalNodeParams"],[3,"cudaExternalSemaphoreWaitNodeParams"],[4,"cudaGraphNodeType"],[4,"cudaGraphExecUpdateResult"],[4,"cudaSurfaceBoundaryMode"],[4,"cudaSurfaceFormatMode"],[3,"surfaceReference"],[4,"cudaTextureAddressMode"],[4,"cudaTextureFilterMode"],[4,"cudaTextureReadMode"],[3,"textureReference"],[3,"cudaTextureDesc"],[4,"cudaDataType_t"],[4,"cudnnStatus_t"],[4,"cudnnErrQueryMode_t"],[4,"cudnnDataType_t"],[4,"cudnnMathType_t"],[4,"cudnnNanPropagation_t"],[4,"cudnnDeterminism_t"],[4,"cudnnTensorFormat_t"],[4,"cudnnFoldingDirection_t"],[4,"cudnnOpTensorOp_t"],[4,"cudnnReduceTensorOp_t"],[4,"cudnnReduceTensorIndices_t"],[4,"cudnnIndicesType_t"],[4,"cudnnSoftmaxAlgorithm_t"],[4,"cudnnSoftmaxMode_t"],[4,"cudnnPoolingMode_t"],[4,"cudnnActivationMode_t"],[4,"cudnnLRNMode_t"],[4,"cudnnDivNormMode_t"],[4,"cudnnBatchNormMode_t"],[4,"cudnnBatchNormOps_t"],[4,"cudnnNormMode_t"],[4,"cudnnNormAlgo_t"],[4,"cudnnNormOps_t"],[4,"cudnnSamplerType_t"],[4,"cudnnConvolutionFwdAlgo_t"],[4,"cudnnConvolutionBwdFilterAlgo_t"],[4,"cudnnConvolutionBwdDataAlgo_t"],[4,"cudnnRNNAlgo_t"],[4,"cudnnCTCLossAlgo_t"],[3,"cudnnAlgorithm_t"],[19,"cudnnAlgorithm_t_Algorithm"],[4,"cudnnSeverity_t"],[3,"cudnnDebug_t"],[4,"cudnnForwardMode_t"],[4,"cudnnRNNMode_t"],[4,"cudnnRNNBiasMode_t"],[4,"cudnnDirectionMode_t"],[4,"cudnnRNNInputMode_t"],[4,"cudnnRNNClipMode_t"],[4,"cudnnRNNDataLayout_t"],[4,"cudnnSeqDataAxis_t"],[4,"cudnnMultiHeadAttnWeightKind_t"],[4,"cudnnWgradMode_t"],[4,"cudnnLossNormalizationMode_t"],[4,"cudnnConvolutionMode_t"],[4,"cudnnReorderType_t"],[3,"cudnnConvolutionFwdAlgoPerf_t"],[3,"cudnnConvolutionBwdDataAlgoPerf_t"],[4,"cudnnFusedOps_t"],[4,"cudnnFusedOpsConstParamLabel_t"],[4,"cudnnFusedOpsPointerPlaceHolder_t"],[4,"cudnnFusedOpsVariantParamLabel_t"],[3,"cudnnConvolutionBwdFilterAlgoPerf_t"],[4,"cudnnPointwiseMode_t"],[4,"cudnnGenStatsMode_t"],[4,"cudnnBnFinalizeStatsMode_t"],[4,"cudnnBackendAttributeName_t"],[4,"cudnnBackendAttributeType_t"],[4,"cudnnBackendDescriptorType_t"],[4,"cudnnBackendNumericalNote_t"],[4,"cudnnBackendKnobType_t"],[4,"cudnnBackendLayoutType_t"],[4,"cudnnBackendHeurMode_t"],[3,"cudaArray"],[3,"cudaMipmappedArray"],[3,"cudaGraphicsResource"],[3,"CUstream_st"],[3,"CUevent_st"],[3,"CUexternalMemory_st"],[3,"CUexternalSemaphore_st"],[3,"CUgraph_st"],[3,"CUgraphNode_st"],[3,"CUfunc_st"],[3,"CUmemPoolHandle_st"],[3,"CUgraphExec_st"],[3,"cudnnContext"],[3,"cudnnRuntimeTag_t"],[3,"cudnnTensorStruct"],[3,"cudnnPoolingStruct"],[3,"cudnnFilterStruct"],[3,"cudnnLRNStruct"],[3,"cudnnActivationStruct"],[3,"cudnnSpatialTransformerStruct"],[3,"cudnnOpTensorStruct"],[3,"cudnnReduceTensorStruct"],[3,"cudnnCTCLossStruct"],[3,"cudnnTensorTransformStruct"],[3,"cudnnDropoutStruct"],[3,"cudnnAlgorithmStruct"],[3,"cudnnAlgorithmPerformanceStruct"],[3,"cudnnRNNStruct"],[3,"cudnnPersistentRNNPlan"],[3,"cudnnRNNDataStruct"],[3,"cudnnSeqDataStruct"],[3,"cudnnAttnStruct"],[3,"cudnnConvolutionStruct"],[3,"cudnnFusedOpsConstParamStruct"],[3,"cudnnFusedOpsVariantParamStruct"],[3,"cudnnFusedOpsPlanStruct"]]},\
"rust_blas":{"doc":"BLAS bindings and wrappers.","i":[[0,"attribute","rust_blas","Various attributes of vectors and matrices.",null,null],[4,"Order","rust_blas::attribute","",null,null],[13,"RowMajor","","",0,null],[13,"ColMajor","","",0,null],[4,"Transpose","","",null,null],[13,"NoTrans","","",1,null],[13,"Trans","","",1,null],[13,"ConjTrans","","",1,null],[4,"Symmetry","","",null,null],[13,"Upper","","",2,null],[13,"Lower","","",2,null],[4,"Diagonal","","",null,null],[13,"NonUnit","","",3,null],[13,"Unit","","",3,null],[4,"Side","","",null,null],[13,"Left","","",4,null],[13,"Right","","",4,null],[0,"default","rust_blas","",null,null],[8,"Default","rust_blas::default","",null,null],[10,"one","","",5,[[]]],[10,"zero","","",5,[[]]],[10,"neg_one","","",5,[[]]],[0,"matrix","rust_blas","Matrix operations.",null,null],[0,"ll","rust_blas::matrix","Bindings for matrix functions.",null,null],[0,"cblas_s","rust_blas::matrix::ll","",null,null],[5,"cblas_sgemm","rust_blas::matrix::ll::cblas_s","",null,null],[5,"cblas_ssymm","","",null,null],[5,"cblas_strmm","","",null,null],[5,"cblas_strsm","","",null,null],[5,"cblas_ssyrk","","",null,null],[5,"cblas_ssyr2k","","",null,null],[0,"cblas_d","rust_blas::matrix::ll","",null,null],[5,"cblas_dgemm","rust_blas::matrix::ll::cblas_d","",null,null],[5,"cblas_dsymm","","",null,null],[5,"cblas_dtrmm","","",null,null],[5,"cblas_dtrsm","","",null,null],[5,"cblas_dsyrk","","",null,null],[5,"cblas_dsyr2k","","",null,null],[0,"cblas_c","rust_blas::matrix::ll","",null,null],[5,"cblas_cgemm","rust_blas::matrix::ll::cblas_c","",null,null],[5,"cblas_csymm","","",null,null],[5,"cblas_chemm","","",null,null],[5,"cblas_ctrmm","","",null,null],[5,"cblas_ctrsm","","",null,null],[5,"cblas_cherk","","",null,null],[5,"cblas_cher2k","","",null,null],[5,"cblas_csyrk","","",null,null],[5,"cblas_csyr2k","","",null,null],[0,"cblas_z","rust_blas::matrix::ll","",null,null],[5,"cblas_zgemm","rust_blas::matrix::ll::cblas_z","",null,null],[5,"cblas_zsymm","","",null,null],[5,"cblas_zhemm","","",null,null],[5,"cblas_ztrmm","","",null,null],[5,"cblas_ztrsm","","",null,null],[5,"cblas_zherk","","",null,null],[5,"cblas_zher2k","","",null,null],[5,"cblas_zsyrk","","",null,null],[5,"cblas_zsyr2k","","",null,null],[0,"ops","rust_blas::matrix","Wrappers for matrix functions.",null,null],[8,"Gemm","rust_blas::matrix::ops","",null,null],[10,"gemm","","",6,[[["transpose",4],["matrix",8],["matrix",8]]]],[8,"Symm","","",null,null],[10,"symm","","",7,[[["matrix",8],["matrix",8],["side",4],["symmetry",4]]]],[8,"Hemm","","",null,null],[10,"hemm","","",8,[[["matrix",8],["matrix",8],["side",4],["symmetry",4]]]],[8,"Trmm","","",null,null],[10,"trmm","","",9,[[["transpose",4],["diagonal",4],["matrix",8],["matrix",8],["side",4],["symmetry",4]]]],[8,"Trsm","","",null,null],[10,"trsm","","",10,[[["transpose",4],["diagonal",4],["matrix",8],["matrix",8],["side",4],["symmetry",4]]]],[8,"Herk","","",null,null],[10,"herk","","",11,[[["transpose",4],["symmetry",4],["matrix",8],["matrix",8]]]],[8,"Her2k","","",null,null],[10,"her2k","","",12,[[["transpose",4],["matrix",8],["matrix",8],["complex",3],["symmetry",4]]]],[8,"Syrk","","",null,null],[10,"syrk","","",13,[[["transpose",4],["matrix",8],["matrix",8],["symmetry",4]]]],[8,"Syr2k","","",null,null],[10,"syr2k","","",14,[[["transpose",4],["matrix",8],["matrix",8],["symmetry",4]]]],[8,"Matrix","rust_blas::matrix","Methods that allow a type to be used in BLAS functions as …",null,null],[11,"lead_dim","","The leading dimension of the matrix. Defaults to <code>cols</code> for …",15,[[],["u32",15]]],[11,"order","","The order of the matrix. Defaults to <code>RowMajor</code>.",15,[[],["order",4]]],[10,"rows","","Returns the number of rows.",15,[[],["u32",15]]],[10,"cols","","Returns the number of columns.",15,[[],["u32",15]]],[10,"as_ptr","","An unsafe pointer to a contiguous block of memory.",15,[[]]],[10,"as_mut_ptr","","An unsafe pointer to a contiguous block of memory.",15,[[]]],[8,"BandMatrix","","",null,null],[10,"sub_diagonals","","",16,[[],["u32",15]]],[10,"sup_diagonals","","",16,[[],["u32",15]]],[10,"as_matrix","","",16,[[],["matrix",8]]],[0,"matrix_vector","rust_blas","Matrix-vector operations.",null,null],[0,"ll","rust_blas::matrix_vector","Bindings for matrix-vector functions.",null,null],[0,"cblas_s","rust_blas::matrix_vector::ll","",null,null],[5,"cblas_sgemv","rust_blas::matrix_vector::ll::cblas_s","",null,null],[5,"cblas_ssymv","","",null,null],[5,"cblas_strmv","","",null,null],[5,"cblas_strsv","","",null,null],[5,"cblas_sger","","",null,null],[5,"cblas_ssyr","","",null,null],[5,"cblas_ssyr2","","",null,null],[5,"cblas_sspmv","","",null,null],[5,"cblas_sgbmv","","",null,null],[5,"cblas_ssbmv","","",null,null],[5,"cblas_stbmv","","",null,null],[5,"cblas_stbsv","","",null,null],[5,"cblas_stpmv","","",null,null],[5,"cblas_stpsv","","",null,null],[5,"cblas_sspr","","",null,null],[5,"cblas_sspr2","","",null,null],[0,"cblas_d","rust_blas::matrix_vector::ll","",null,null],[5,"cblas_dgemv","rust_blas::matrix_vector::ll::cblas_d","",null,null],[5,"cblas_dsymv","","",null,null],[5,"cblas_dtrmv","","",null,null],[5,"cblas_dtrsv","","",null,null],[5,"cblas_dger","","",null,null],[5,"cblas_dsyr","","",null,null],[5,"cblas_dsyr2","","",null,null],[5,"cblas_dspmv","","",null,null],[5,"cblas_dgbmv","","",null,null],[5,"cblas_dsbmv","","",null,null],[5,"cblas_dtbmv","","",null,null],[5,"cblas_dtbsv","","",null,null],[5,"cblas_dtpmv","","",null,null],[5,"cblas_dtpsv","","",null,null],[5,"cblas_dspr","","",null,null],[5,"cblas_dspr2","","",null,null],[0,"cblas_c","rust_blas::matrix_vector::ll","",null,null],[5,"cblas_cgemv","rust_blas::matrix_vector::ll::cblas_c","",null,null],[5,"cblas_csymv","","",null,null],[5,"cblas_chemv","","",null,null],[5,"cblas_ctrmv","","",null,null],[5,"cblas_ctrsv","","",null,null],[5,"cblas_cgeru","","",null,null],[5,"cblas_cgerc","","",null,null],[5,"cblas_cher","","",null,null],[5,"cblas_cher2","","",null,null],[5,"cblas_cgbmv","","",null,null],[5,"cblas_chbmv","","",null,null],[5,"cblas_ctbmv","","",null,null],[5,"cblas_ctbsv","","",null,null],[5,"cblas_chpmv","","",null,null],[5,"cblas_ctpmv","","",null,null],[5,"cblas_ctpsv","","",null,null],[5,"cblas_chpr","","",null,null],[5,"cblas_chpr2","","",null,null],[0,"cblas_z","rust_blas::matrix_vector::ll","",null,null],[5,"cblas_zgemv","rust_blas::matrix_vector::ll::cblas_z","",null,null],[5,"cblas_zsymv","","",null,null],[5,"cblas_zhemv","","",null,null],[5,"cblas_ztrmv","","",null,null],[5,"cblas_ztrsv","","",null,null],[5,"cblas_zgeru","","",null,null],[5,"cblas_zgerc","","",null,null],[5,"cblas_zher","","",null,null],[5,"cblas_zher2","","",null,null],[5,"cblas_zgbmv","","",null,null],[5,"cblas_zhbmv","","",null,null],[5,"cblas_ztbmv","","",null,null],[5,"cblas_ztbsv","","",null,null],[5,"cblas_zhpmv","","",null,null],[5,"cblas_ztpmv","","",null,null],[5,"cblas_ztpsv","","",null,null],[5,"cblas_zhpr","","",null,null],[5,"cblas_zhpr2","","",null,null],[0,"ops","rust_blas::matrix_vector","Wrappers for matrix-vector functions.",null,null],[8,"Gemv","rust_blas::matrix_vector::ops","General multiply with vector",null,null],[10,"gemv","","",17,[[["transpose",4],["matrix",8]]]],[8,"Symv","","Symmetric multiply with vector",null,null],[10,"symv","","",18,[[["matrix",8],["symmetry",4]]]],[8,"Hemv","","Hermitian multiply with vector",null,null],[10,"hemv","","",19,[[["matrix",8],["symmetry",4]]]],[8,"Ger","","General rank-1 update",null,null],[10,"ger","","",20,[[["matrix",8]]]],[8,"Gerc","","General rank-1 update (using hermitian conjugate)",null,null],[11,"gerc","","",21,[[["matrix",8]]]],[8,"Syr","","Symmetric rank-1 update",null,null],[10,"syr","","",22,[[["matrix",8],["symmetry",4]]]],[8,"Her","","Hermitian rank-1 update",null,null],[10,"her","","",23,[[["matrix",8],["symmetry",4]]]],[8,"Syr2","","Symmetric rank-2 update",null,null],[10,"syr2","","",24,[[["matrix",8],["symmetry",4]]]],[8,"Her2","","Hermitian rank-2 update",null,null],[10,"her2","","",25,[[["matrix",8],["symmetry",4]]]],[8,"Gbmv","","General band matrix multiply with vector.",null,null],[10,"gbmv","","",26,[[["transpose",4],["bandmatrix",8]]]],[8,"Sbmv","","Symmetric band matrix multiply with vector",null,null],[10,"sbmv","","",27,[[["bandmatrix",8],["symmetry",4]]]],[8,"Hbmv","","Hermitian band matrix multiply with vector",null,null],[10,"hbmv","","",28,[[["bandmatrix",8],["symmetry",4]]]],[8,"Tbmv","","Triangular band matrix multiply with vector",null,null],[10,"tbmv","","",29,[[["transpose",4],["bandmatrix",8],["diagonal",4],["symmetry",4]]]],[8,"Tbsv","","Solve triangular band matrix system",null,null],[10,"tbsv","","",30,[[["transpose",4],["bandmatrix",8],["diagonal",4],["symmetry",4]]]],[8,"Spmv","","Symmetric packed matrix multiply with vector",null,null],[10,"spmv","","",31,[[["matrix",8],["symmetry",4]]]],[8,"Hpmv","","Hermitian packed matrix multiply with vector",null,null],[10,"hpmv","","",32,[[["matrix",8],["symmetry",4]]]],[8,"Tpmv","","Triangular packed matrix multiply with vector",null,null],[10,"tpmv","","",33,[[["transpose",4],["matrix",8],["diagonal",4],["symmetry",4]]]],[8,"Tpsv","","Solve triangular packed matrix system",null,null],[10,"tpsv","","",34,[[["transpose",4],["matrix",8],["diagonal",4],["symmetry",4]]]],[8,"Hpr","","Hermitian packed matrix rank-1 update",null,null],[10,"hpr","","",35,[[["matrix",8],["symmetry",4]]]],[8,"Spr","","Symmetric packed matrix rank-1 update",null,null],[10,"spr","","",36,[[["matrix",8],["symmetry",4]]]],[8,"Spr2","","Symmetric packed matrix rank-2 update",null,null],[10,"spr2","","",37,[[["matrix",8],["symmetry",4]]]],[8,"Hpr2","","Hermitian packed matrix rank-2 update",null,null],[10,"hpr2","","",38,[[["matrix",8],["symmetry",4]]]],[0,"vector","rust_blas","Vector operations.",null,null],[0,"ll","rust_blas::vector","Bindings for vector functions.",null,null],[0,"cblas_s","rust_blas::vector::ll","",null,null],[5,"cblas_scopy","rust_blas::vector::ll::cblas_s","",null,null],[5,"cblas_saxpy","","",null,null],[5,"cblas_sscal","","",null,null],[5,"cblas_sswap","","",null,null],[5,"cblas_sdsdot","","",null,null],[5,"cblas_sdot","","",null,null],[5,"cblas_sasum","","",null,null],[5,"cblas_scasum","","",null,null],[5,"cblas_snrm2","","",null,null],[5,"cblas_scnrm2","","",null,null],[5,"cblas_srot","","",null,null],[5,"cblas_srotm","","",null,null],[5,"cblas_srotg","","",null,null],[5,"cblas_srotmg","","",null,null],[0,"cblas_d","rust_blas::vector::ll","",null,null],[5,"cblas_dcopy","rust_blas::vector::ll::cblas_d","",null,null],[5,"cblas_daxpy","","",null,null],[5,"cblas_dscal","","",null,null],[5,"cblas_dswap","","",null,null],[5,"cblas_dsdot","","",null,null],[5,"cblas_ddot","","",null,null],[5,"cblas_dasum","","",null,null],[5,"cblas_dzasum","","",null,null],[5,"cblas_dnrm2","","",null,null],[5,"cblas_dznrm2","","",null,null],[5,"cblas_drot","","",null,null],[5,"cblas_drotm","","",null,null],[5,"cblas_drotg","","",null,null],[5,"cblas_drotmg","","",null,null],[0,"cblas_c","rust_blas::vector::ll","",null,null],[5,"cblas_ccopy","rust_blas::vector::ll::cblas_c","",null,null],[5,"cblas_caxpy","","",null,null],[5,"cblas_cscal","","",null,null],[5,"cblas_csscal","","",null,null],[5,"cblas_cswap","","",null,null],[5,"cblas_cdotu_sub","","",null,null],[5,"cblas_cdotc_sub","","",null,null],[0,"cblas_z","rust_blas::vector::ll","",null,null],[5,"cblas_zcopy","rust_blas::vector::ll::cblas_z","",null,null],[5,"cblas_zaxpy","","",null,null],[5,"cblas_zscal","","",null,null],[5,"cblas_zdscal","","",null,null],[5,"cblas_zswap","","",null,null],[5,"cblas_zdotu_sub","","",null,null],[5,"cblas_zdotc_sub","","",null,null],[0,"cblas_i","rust_blas::vector::ll","",null,null],[5,"cblas_isamax","rust_blas::vector::ll::cblas_i","",null,null],[5,"cblas_idamax","","",null,null],[5,"cblas_icamax","","",null,null],[5,"cblas_izamax","","",null,null],[0,"ops","rust_blas::vector","Wrappers for vector functions.",null,null],[8,"Copy","rust_blas::vector::ops","",null,null],[10,"copy","","Copies <code>src.len()</code> elements of <code>src</code> into <code>dst</code>.",39,[[]]],[10,"copy_mat","","Copies the entire matrix <code>dst</code> into <code>src</code>.",39,[[["matrix",8],["matrix",8]]]],[8,"Axpy","","Computes <code>a * x + y</code> and stores the result in <code>y</code>.",null,null],[10,"axpy","","",40,[[]]],[10,"axpy_mat","","",40,[[["matrix",8],["matrix",8]]]],[8,"Scal","","Computes <code>a * x</code> and stores the result in <code>x</code>.",null,null],[10,"scal","","",41,[[]]],[10,"scal_mat","","",41,[[["matrix",8]]]],[8,"Swap","","Swaps the content of <code>x</code> and <code>y</code>.",null,null],[10,"swap","","If they are different lengths, the shorter length is used.",42,[[]]],[8,"Dot","","Computes <code>x^T * y</code>.",null,null],[10,"dot","","",43,[[]]],[8,"Dotc","","Computes <code>x^H * y</code>.",null,null],[11,"dotc","","",44,[[]]],[8,"Asum","","Computes the sum of the absolute values of elements in a …",null,null],[10,"asum","","",45,[[]]],[8,"Nrm2","","Computes the L2 norm (Euclidian length) of a vector.",null,null],[10,"nrm2","","",46,[[]]],[8,"Iamax","","Finds the index of the element with maximum absolute …",null,null],[10,"iamax","","",47,[[],["usize",15]]],[8,"Rot","","Applies a Givens rotation matrix to a pair of vectors, …",null,null],[10,"rot","","",48,[[]]],[8,"Vector","rust_blas::vector","Methods that allow a type to be used in BLAS functions as …",null,null],[11,"inc","","The stride within the vector. For example, if <code>inc</code> returns …",49,[[],["u32",15]]],[10,"len","","The number of elements in the vector.",49,[[],["u32",15]]],[10,"as_ptr","","An unsafe pointer to a contiguous block of memory.",49,[[]]],[10,"as_mut_ptr","","An unsafe mutable pointer to a contiguous block of memory.",49,[[]]],[11,"is_empty","","Check if Vector is empty",49,[[],["bool",15]]],[8,"VectorOperations","","",null,null],[11,"update","","",50,[[["vector",8]]]],[11,"scale","","",50,[[]]],[11,"dot","","",50,[[["vector",8]]]],[11,"abs_sum","","",50,[[]]],[11,"norm","","",50,[[]]],[11,"max_index","","",50,[[],["usize",15]]],[0,"math","rust_blas","",null,null],[0,"bandmat","rust_blas::math","",null,null],[3,"BandMat","rust_blas::math::bandmat","Banded Matrix A banded matrix is a matrix where only the …",null,null],[11,"new","","",51,[[["usize",15],["u32",15]],["bandmat",3]]],[11,"rows","","",51,[[],["usize",15]]],[11,"cols","","",51,[[],["usize",15]]],[11,"set_rows","","Set Rows Manually",51,[[["usize",15]]]],[11,"set_cols","","Set Columns Manually",51,[[["usize",15]]]],[11,"set_sub_diagonals","","",51,[[["u32",15]]]],[11,"set_sup_diagonals","","",51,[[["u32",15]]]],[11,"push","","",51,[[]]],[11,"from_matrix","","Converts a <code>Mat</code> into a <code>BandMat</code>.",51,[[["u32",15],["mat",3]],["bandmat",3]]],[11,"to_matrix","","Converts a <code>BandMat</code> back into a <code>Mat</code>.",51,[[],["mat",3]]],[11,"fill","","",51,[[["usize",15]],["bandmat",3]]],[0,"mat","rust_blas::math","",null,null],[3,"Mat","rust_blas::math::mat","",null,null],[11,"new_from_data","","",52,[[["usize",15],["vec",3]],["mat",3]]],[11,"new","","",52,[[["usize",15]],["mat",3]]],[11,"rows","","",52,[[],["usize",15]]],[11,"cols","","",52,[[],["usize",15]]],[11,"set_rows","","Set Matrix Rows Manually",52,[[["usize",15]]]],[11,"set_cols","","Set Matrix Columns Manually",52,[[["usize",15]]]],[11,"push","","Push a single value to matrix data backing",52,[[]]],[11,"fill","","",52,[[["usize",15]],["mat",3]]],[0,"matrix","rust_blas::math","",null,null],[0,"matrix_vector","","",null,null],[0,"vector","","",null,null],[4,"Trans","","",null,null],[13,"T","","",53,null],[13,"H","","",53,null],[4,"Marker","","",null,null],[13,"T","","",54,null],[13,"H","","",54,null],[14,"mat","rust_blas","",null,null],[11,"from","rust_blas::attribute","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","rust_blas::math::bandmat","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","rust_blas::math::mat","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_string","","",52,[[],["string",3]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","rust_blas::math","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"lead_dim","rust_blas::math::bandmat","",51,[[],["u32",15]]],[11,"rows","","",51,[[],["u32",15]]],[11,"cols","","",51,[[],["u32",15]]],[11,"as_ptr","","",51,[[]]],[11,"as_mut_ptr","","",51,[[]]],[11,"rows","rust_blas::math::mat","",52,[[],["u32",15]]],[11,"cols","","",52,[[],["u32",15]]],[11,"as_ptr","","",52,[[]]],[11,"as_mut_ptr","","",52,[[]]],[11,"sub_diagonals","rust_blas::math::bandmat","",51,[[],["u32",15]]],[11,"sup_diagonals","","",51,[[],["u32",15]]],[11,"as_matrix","","",51,[[],["matrix",8]]],[11,"from","","",51,[[["bandmatrix",8]],["bandmat",3]]],[11,"from","rust_blas::math::mat","",52,[[["matrix",8]],["mat",3]]],[11,"clone","rust_blas::attribute","",0,[[],["order",4]]],[11,"clone","","",1,[[],["transpose",4]]],[11,"clone","","",2,[[],["symmetry",4]]],[11,"clone","","",3,[[],["diagonal",4]]],[11,"clone","","",4,[[],["side",4]]],[11,"eq","rust_blas::math::bandmat","",51,[[["bandmat",3]],["bool",15]]],[11,"ne","","",51,[[["bandmat",3]],["bool",15]]],[11,"eq","rust_blas::math::mat","",52,[[["mat",3]],["bool",15]]],[11,"ne","","",52,[[["mat",3]],["bool",15]]],[11,"deref","rust_blas::math","",53,[[]]],[11,"fmt","rust_blas::math::bandmat","",51,[[["formatter",3]],["result",6]]],[11,"fmt","rust_blas::math::mat","",52,[[["formatter",3]],["result",6]]],[11,"fmt","rust_blas::math::bandmat","",51,[[["formatter",3]],["result",6]]],[11,"fmt","rust_blas::math::mat","",52,[[["formatter",3]],["result",6]]],[11,"mul","rust_blas::math","",53,[[["matrix",8]],["mat",3]]],[11,"mul","","",53,[[["matrix",8],["trans",4]],["mat",3]]],[11,"mul","","",53,[[["vector",8]]]],[11,"index","rust_blas::math::bandmat","",51,[[["usize",15]]]],[11,"index","rust_blas::math::mat","",52,[[["usize",15]]]]],"p":[[4,"Order"],[4,"Transpose"],[4,"Symmetry"],[4,"Diagonal"],[4,"Side"],[8,"Default"],[8,"Gemm"],[8,"Symm"],[8,"Hemm"],[8,"Trmm"],[8,"Trsm"],[8,"Herk"],[8,"Her2k"],[8,"Syrk"],[8,"Syr2k"],[8,"Matrix"],[8,"BandMatrix"],[8,"Gemv"],[8,"Symv"],[8,"Hemv"],[8,"Ger"],[8,"Gerc"],[8,"Syr"],[8,"Her"],[8,"Syr2"],[8,"Her2"],[8,"Gbmv"],[8,"Sbmv"],[8,"Hbmv"],[8,"Tbmv"],[8,"Tbsv"],[8,"Spmv"],[8,"Hpmv"],[8,"Tpmv"],[8,"Tpsv"],[8,"Hpr"],[8,"Spr"],[8,"Spr2"],[8,"Hpr2"],[8,"Copy"],[8,"Axpy"],[8,"Scal"],[8,"Swap"],[8,"Dot"],[8,"Dotc"],[8,"Asum"],[8,"Nrm2"],[8,"Iamax"],[8,"Rot"],[8,"Vector"],[8,"VectorOperations"],[3,"BandMat"],[3,"Mat"],[4,"Trans"],[4,"Marker"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);
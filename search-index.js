var searchIndex = JSON.parse('{\
"coaster":{"doc":"Provides a simple and unified API to run fast and highly…","i":[[0,"backend","coaster","Provides the interface for running parallel computations…",null,null],[3,"Backend","coaster::backend","Defines the main and highest struct of Coaster.",null,null],[12,"framework","","Provides the Framework.",0,null],[3,"BackendConfig","","Provides Backend Configuration.",null,null],[8,"IBackend","","Describes a Backend.",null,null],[16,"F","","Represents the Framework of a Backend.",1,null],[10,"device","","Returns the backend device.",1,[[]]],[11,"default","","Try to create a default backend.",1,[[],[["backend",3],["result",4],["error",4]]]],[11,"synchronize","","Synchronize backend.",1,[[],[["result",4],["error",4]]]],[11,"new","","Initialize a new native Backend from a BackendConfig.",0,[[["backendconfig",3]],[["result",4],["backend",3],["error",4]]]],[11,"hardwares","","Returns the available hardware.",0,[[]]],[11,"framework","","Returns the backend framework.",0,[[]]],[11,"device","","Returns the backend device.",0,[[]]],[11,"new","","Creates a new BackendConfig.",2,[[],["backendconfig",3]]],[0,"device","coaster","Provides a representation for one or many ready to use…",null,null],[4,"Error","coaster::device","Defines a generic set of Memory Errors.",null,null],[13,"NoMemorySyncRoute","","No route found for memory transfer between devices",3,null],[13,"MemorySyncError","","Framework error at memory synchronization.",3,null],[13,"MemoryAllocationError","","Framework error at memory allocation.",3,null],[13,"Native","","Failures related to the Native framework implementation.",3,null],[13,"Cuda","","Failures related to the Cuda framework implementation.",3,null],[8,"IMemory","","Marker trait for backing memory.",null,null],[8,"IDevice","","Specifies Hardware behavior across frameworks.",null,null],[16,"H","","The Hardware representation for this Device.",4,null],[16,"M","","The Memory representation for this Device.",4,null],[10,"id","","Returns the unique identifier of the Device.",4,[[]]],[10,"hardwares","","Returns the hardwares, which define the Device.",4,[[],["vec",3]]],[10,"alloc_memory","","Allocate memory on the Device.",4,[[],[["result",4],["error",4]]]],[8,"MemorySync","","This trait should be implemented for `Device`. Use of…",null,null],[10,"sync_in","","FIXME",5,[[["any",8],["any",8]],[["error",4],["result",4]]]],[10,"sync_out","","FIXME",5,[[["any",8],["any",8]],[["error",4],["result",4]]]],[0,"hardware","coaster","Provides a representation for a collection of available…",null,null],[4,"HardwareType","coaster::hardware","Specifies the available Hardware types.",null,null],[13,"CPU","","CPU devices",6,null],[13,"GPU","","GPU devices",6,null],[13,"ACCELERATOR","","Hardware Accelerator devices",6,null],[13,"OTHER","","Used for anything else",6,null],[8,"IHardware","","Specifies Hardware behavior accross frameworks.",null,null],[10,"id","","Returns the ID of the Hardware",7,[[]]],[10,"name","","Returns the name of the Hardware",7,[[],[["string",3],["option",4]]]],[10,"set_name","","Defines the name of the Hardware",7,[[["string",3],["option",4]]]],[10,"hardware_type","","Returns the device_type of the Hardware",7,[[],[["hardwaretype",4],["option",4]]]],[10,"set_hardware_type","","Defines the hardware_type of the Hardware",7,[[["hardwaretype",4],["option",4]]]],[10,"compute_units","","Returns the compute_units of the Hardware",7,[[],["option",4]]],[10,"set_compute_units","","Defines the compute_units of the Hardware",7,[[["option",4]]]],[10,"build","","Build an inmutable Hardware",7,[[]]],[0,"framework","coaster","Provides the generic functionality of a hardware…",null,null],[4,"Error","coaster::framework","Defines a generic set of Framework Errors.",null,null],[13,"Cuda","","Failures related to the Cuda framework implementation.",8,null],[13,"Implementation","","Failure related to the Coaster implementation of a…",8,null],[8,"IFramework","","Defines a Framework.",null,null],[16,"H","","The Hardware representation for this Framework.",9,null],[16,"D","","The Device representation for this Framework.",9,null],[16,"B","","The Binary representation for this Framework.",9,null],[10,"ID","","Defines the Framework by a Name.",9,[[]]],[10,"new","","Initializes a new Framework.",9,[[]]],[10,"load_hardwares","","Initializes all the available hardwares.",9,[[],[["result",4],["error",4],["vec",3]]]],[10,"hardwares","","Returns the cached and available hardwares.",9,[[]]],[10,"binary","","Returns the initialized binary.",9,[[]]],[10,"new_device","","Initializes a new Device from the provided hardwares.",9,[[],[["result",4],["error",4]]]],[0,"frameworks","coaster","Exposes the specific Framework implementations.",null,null],[0,"native","coaster::frameworks","Provides informations about the software system, such as…",null,null],[3,"Native","coaster::frameworks::native","Provides the Native framework.",null,null],[4,"Error","","Defines the Native Error.",null,null],[13,"Memory","","Failure related to allocation, syncing memory",10,null],[5,"allocate_boxed_slice","","Traditional allocation via creation of a filled Vec.",null,[[],["box",3]]],[5,"get_native_backend","","Initialise the Native Backend for running Tensor Operations",null,[[],[["native",3],["backend",3]]]],[0,"device","","Provides a hardware aka. the host CPU.",null,null],[3,"Cpu","coaster::frameworks::native::device","Defines the host CPU Hardware.",null,null],[11,"new","","Initializes a new OpenCL hardware.",11,[[["vec",3],["hardware",3]],["cpu",3]]],[0,"flatbox","coaster::frameworks::native","Provides a Box without any knowledge of its underlying type.",null,null],[3,"FlatBox","coaster::frameworks::native::flatbox","A Box without any knowledge of its underlying type.",null,null],[11,"from_box","","Create FlatBox from Box, consuming it.",12,[[["box",3]],["flatbox",3]]],[11,"as_slice","","Access memory as slice.",12,[[]]],[11,"as_mut_slice","","Access memory as mutable slice.",12,[[]]],[11,"byte_size","","Returns memory size of the Flatbox.",12,[[]]],[0,"hardware","coaster::frameworks::native","Provides a hardware aka. the host CPU.",null,null],[3,"Hardware","coaster::frameworks::native::hardware","Defines the host CPU Hardware.",null,null],[11,"new","","Initializes a new OpenCL hardware.",13,[[],["hardware",3]]],[0,"function","coaster::frameworks::native","Provides a operation on native CPU.",null,null],[3,"Function","coaster::frameworks::native::function","Defines a host CPU operation.",null,null],[11,"new","","Initializes a native CPU hardware.",14,[[],["function",3]]],[0,"binary","coaster::frameworks::native","Provides a binary on native CPU.",null,null],[3,"Binary","coaster::frameworks::native::binary","Defines a host CPU binary.",null,null],[11,"new","","Initializes the native CPU binary.",15,[[],["binary",3]]],[8,"INative","coaster::frameworks::native","Provides the Native framework trait for explicit Backend…",null,null],[0,"cuda","coaster::frameworks","Provides informations about the software system, such as…",null,null],[3,"Driver","coaster::frameworks::cuda","Defines the Cuda API.",null,null],[3,"Cuda","","Provides the Cuda Framework.",null,null],[4,"DriverError","","Defines OpenCL errors.",null,null],[13,"InvalidValue","","Failure with provided value.",16,null],[13,"OutOfMemory","","Failure with memory allocation.",16,null],[13,"NotInitialized","","Failure with Cuda initialization.",16,null],[13,"Deinitialized","","Failure with Cuda initialization.",16,null],[13,"ProfilerDisabled","","Failure with Profiler.",16,null],[13,"ProfilerNotInitialized","","Failure with Profiler.",16,null],[13,"ProfilerAlreadyStarted","","Failure with Profiler.",16,null],[13,"ProfilerAlreadyStopped","","Failure with Profiler.",16,null],[13,"NoDevice","","Failure with Cuda devices.",16,null],[13,"InvalidDevice","","Failure with provided Cuda device.",16,null],[13,"InvalidImage","","Failure with provided Cuda image.",16,null],[13,"InvalidContext","","Failure with provided Cuda context.",16,null],[13,"ContextAlreadyCurrent","","Failure with provided Cuda context.",16,null],[13,"MapFailed","","Failure",16,null],[13,"UnmapFailed","","Failure",16,null],[13,"ArrayIsMapped","","Failure",16,null],[13,"AlreadyMapped","","Failure",16,null],[13,"NoBinaryForGpu","","Failure with binary.",16,null],[13,"AlreadyAquired","","Failure",16,null],[13,"NotMapped","","Failure",16,null],[13,"NotMappedAsArray","","Failure",16,null],[13,"NotMappedAsPointer","","Failure",16,null],[13,"EccUncorrectable","","Failure",16,null],[13,"UnsupportedLimit","","Failure",16,null],[13,"ContextAlreadyInUse","","Failure with context.",16,null],[13,"PeerAccessUnsupported","","Failure",16,null],[13,"InvalidPtx","","Failure with provided PTX.",16,null],[13,"InvalidGraphicsContent","","Failure",16,null],[13,"InvalidSource","","Failure",16,null],[13,"FileNotFound","","Failure",16,null],[13,"SharedObjectSymbolNotFound","","Failure",16,null],[13,"SharedObjectInitFailed","","Failure",16,null],[13,"OperatingSystem","","Failure",16,null],[13,"InvalidHandle","","Failure",16,null],[13,"NotFound","","Failure",16,null],[13,"NotReady","","Failure",16,null],[13,"IllegalAddress","","Failure",16,null],[13,"LaunchOutOfResources","","Failure",16,null],[13,"LaunchTimeout","","Failure",16,null],[13,"LauncIncompatibleTexturing","","Failure",16,null],[13,"PeerAccessAlreadyEnabled","","Failure",16,null],[13,"PeerAccessNotEnabled","","Failure",16,null],[13,"PrimaryContextActive","","Failure",16,null],[13,"ContextIsDestroyed","","Failure",16,null],[13,"Assert","","Failure",16,null],[13,"TooManyPeers","","Failure",16,null],[13,"HostMemoryAlreadyRegistered","","Failure",16,null],[13,"HostMemoryNotRegistered","","Failure",16,null],[13,"HardwareStackError","","Failure",16,null],[13,"IllegalInstruction","","Failure",16,null],[13,"MisalignedAddress","","Failure",16,null],[13,"InvalidAddressSpace","","Failure",16,null],[13,"InvalidPc","","Failure",16,null],[13,"LaunchFailed","","Failure",16,null],[13,"NotPermitted","","Failure",16,null],[13,"NotSupported","","Failure",16,null],[13,"Unknown","","Failure",16,null],[5,"get_cuda_backend","","Initialise the CUDA, CUBLAS, and CUDNN APIs",null,[[],[["cuda",3],["backend",3]]]],[0,"device","","Provides a Rust wrapper around Cuda\'s device.",null,null],[3,"Device","coaster::frameworks::cuda::device","Defines a Cuda Device.",null,null],[3,"DeviceInfo","","Defines a generic DeviceInfo container.",null,null],[11,"from_isize","","Initializes a new Cuda device.",17,[[],["device",3]]],[11,"from_c","","Initializes a new Cuda device from its C type.",17,[[["c_int",6]],["device",3]]],[11,"id_c","","Returns the id as its C type.",17,[[],["c_int",6]]],[11,"load_name","","Loads the name of the device via a foreign Cuda call.",17,[[]]],[11,"load_device_type","","Loads the device type via a foreign Cuda call.",17,[[]]],[11,"load_compute_units","","Loads the compute units of the device via a foreign Cuda…",17,[[]]],[11,"new","","Initializes a new Device Info",18,[[["vec",3]],["deviceinfo",3]]],[11,"to_isize","","",18,[[]]],[0,"context","coaster::frameworks::cuda","Provides a Rust wrapper around Cuda\'s context.",null,null],[3,"Context","coaster::frameworks::cuda::context","Defines a Cuda Context.",null,null],[11,"new","","Initializes a new Cuda context.",19,[[["device",3]],[["context",3],["drivererror",4],["result",4]]]],[11,"from_c","","Initializes a new Cuda platform from its C type.",19,[[["device",3],["vec",3]],["context",3]]],[11,"id","","Returns the id as isize.",19,[[]]],[11,"id_c","","Returns the id as its C type.",19,[[]]],[11,"synchronize","","Synchronize this Context.",19,[[],[["drivererror",4],["result",4]]]],[0,"function","coaster::frameworks::cuda","Provides a Rust wrapper around Cuda\'s Function.",null,null],[3,"Function","coaster::frameworks::cuda::function","Defines a Cuda Function.",null,null],[11,"from_isize","","Initializes a new OpenCL device.",20,[[],["function",3]]],[0,"memory","coaster::frameworks::cuda","Provides a Rust wrapper around Cuda\'s memory.",null,null],[3,"Memory","coaster::frameworks::cuda::memory","Defines a Cuda Memory.",null,null],[11,"new","","Initializes a new Cuda memory.",21,[[],[["result",4],["drivererror",4],["memory",3]]]],[11,"from_c","","Initializes a new Cuda memory from its C type.",21,[[["c_ulonglong",6]],["memory",3]]],[11,"id_c","","Returns the memory id as its C type.",21,[[],["c_ulonglong",6]]],[0,"module","coaster::frameworks::cuda","Provides a Rust wrapper around Cuda\'s Module.",null,null],[3,"Module","coaster::frameworks::cuda::module","Defines a Cuda Module.",null,null],[11,"from_isize","","Initializes a new Cuda Module.",22,[[],["module",3]]],[11,"create_context","coaster::frameworks::cuda","Creates a Cuda context.",23,[[["device",3]],[["error",4],["result",4]]]],[11,"destroy_context","","Removes a created Cuda context from the device.",23,[[],[["result",4],["error",4]]]],[11,"synchronize_context","","Synchronize the CUDA context associated with the current…",23,[[],[["result",4],["error",4]]]],[11,"load_devices","","Returns fully initialized devices available through Cuda.",23,[[],[["error",4],["result",4],["vec",3]]]],[11,"load_device_list","","Returns a list of available devices for the provided…",23,[[],[["error",4],["result",4],["vec",3]]]],[11,"load_device_info","","Returns the requested DeviceInfo for the provided device.",23,[[["cudevice_attribute",4],["device",3]],[["error",4],["result",4],["deviceinfo",3]]]],[11,"mem_alloc","","Allocates memory on the Cuda device.",23,[[["size_t",6]],[["error",4],["result",4],["memory",3]]]],[11,"mem_free","","Releases allocated memory from the Cuda device.",23,[[["c_ulonglong",6]],[["result",4],["error",4]]]],[11,"mem_cpy_h_to_d","","Copies memory from the Host to the Cuda device.",23,[[["flatbox",3],["memory",3]],[["result",4],["error",4]]]],[11,"mem_cpy_d_to_h","","Copies memory from the Cuda device to the Host.",23,[[["flatbox",3],["memory",3]],[["result",4],["error",4]]]],[11,"init","","Initialize the Cuda Driver API.",23,[[],[["result",4],["error",4]]]],[11,"initialise_cublas","","Create a handle to CUBLAS and assign it to CUDA Object",24,[[],[["result",4],["error",4]]]],[11,"initialise_cudnn","","Create a handle to CUDNN and assign it to CUDA Object",24,[[],[["result",4],["error",4]]]],[11,"cudnn","","Return a reference to the CUDNN Handle",24,[[],["cudnn",3]]],[11,"cublas","","Return a reference to the CUBLAS Handle",24,[[],["context",3]]],[0,"tensor","coaster","Provides the functionality for memory management across…",null,null],[3,"SharedTensor","coaster::tensor","Container that handles synchronization of [Memory][1] of…",null,null],[4,"Error","","Errors than can occur when synchronizing memory.",null,null],[13,"DeviceError","","Error caused by operations with device: allocation, memory…",25,null],[13,"InvalidRemove","","Unable to remove Memory copy from SharedTensor.",25,null],[13,"InvalidShape","","Shape provided for reshaping is not compatible with old…",25,null],[13,"CapacityExceeded","","Maximal number of backing memories has been reached.",25,null],[13,"UninitializedMemory","","Memory is requested for reading, but it hasn\'t been…",25,null],[6,"TensorDesc","","Describes the Descriptor of a SharedTensor.",null,null],[8,"ITensorDesc","","Describes the Descriptor of a Tensor.",null,null],[10,"rank","","Returns the rank of the Tensor.",26,[[]]],[10,"size","","Returns the summed up length of all dimensions of the…",26,[[]]],[10,"dims","","Returns the dimensions of the Tensor.",26,[[],["vec",3]]],[10,"dims_i32","","Returns the dimensions of the Tensor as Vec.",26,[[],["vec",3]]],[11,"default_stride","","Returns the default stride for an Rust allocated Tensor.",26,[[],["vec",3]]],[11,"default_stride_i32","","Returns the default stride for a Rust allocated Tensor as…",26,[[],["vec",3]]],[8,"IntoTensorDesc","","Describes a conversion into a Tensor Descriptor.",null,null],[10,"into","","Converts the implemented type into a TensorDesc.",27,[[],["tensordesc",6]]],[11,"new","","Create new Tensor by allocating [Memory][1] on a Device.…",28,[[],["sharedtensor",3]]],[11,"reshape","","Change the shape of the Tensor.",28,[[],[["result",4],["error",4]]]],[11,"resize","","Change the size and shape of the Tensor.",28,[[],[["result",4],["error",4]]]],[11,"read","","Get memory for reading on the specified `device`. Can fail…",28,[[],[["result",4],["error",4]]]],[11,"read_write","","Get memory for reading and writing on the specified…",28,[[],[["result",4],["error",4]]]],[11,"write_only","","Get memory for writing only. This function skips…",28,[[],[["result",4],["error",4]]]],[11,"drop","","Drops memory allocation on the specified device. Returns…",28,[[],[["result",4],["error",4]]]],[11,"capacity","","Returns the number of elements for which the Tensor has…",28,[[]]],[11,"desc","","Returns the descriptor of the Tensor.",28,[[],["tensordesc",6]]],[11,"mem_size","","Returns the allocated Memory size in bytes.",28,[[]]],[0,"operation","coaster","Provides the generic functionality for backend-agnostic…",null,null],[8,"IOperation","coaster::operation","Defines the functionality of an operation.",null,null],[0,"binary","coaster","Provides the generic functionality for a backend-specific…",null,null],[8,"IBinary","coaster::binary","Defines the functionality for turning a library into…",null,null],[0,"error","coaster","Defines the general set of error types in Coaster.",null,null],[4,"Error","coaster::error","Defines the set of available Coaster error types.",null,null],[13,"Framework","","Failure related to the Framework implementation.",29,null],[13,"Tensor","","Failure related to the Tensor.",29,null],[13,"Plugin","","Failure at Plugin Operation.",29,null],[13,"Device","","Failure related to a Device.",29,null],[0,"plugin","coaster","Provides helpers for explicit implementations of Backend…",null,null],[8,"Float","coaster::plugin","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",30,[[]]],[10,"infinity","","Returns the infinite value.",30,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",30,[[]]],[10,"neg_zero","","Returns `-0.0`.",30,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",30,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",30,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",30,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",30,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",30,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",30,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",30,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",30,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",30,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",30,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",30,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",30,[[]]],[10,"trunc","","Return the integer part of a number.",30,[[]]],[10,"fract","","Returns the fractional part of a number.",30,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",30,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",30,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",30,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",30,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",30,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",30,[[]]],[10,"powi","","Raise a number to an integer power.",30,[[]]],[10,"powf","","Raise a number to a floating point power.",30,[[]]],[10,"sqrt","","Take the square root of a number.",30,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",30,[[]]],[10,"exp2","","Returns `2^(self)`.",30,[[]]],[10,"ln","","Returns the natural logarithm of the number.",30,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",30,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",30,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",30,[[]]],[11,"to_degrees","","Converts radians to degrees.",30,[[]]],[11,"to_radians","","Converts degrees to radians.",30,[[]]],[10,"max","","Returns the maximum of the two numbers.",30,[[]]],[10,"min","","Returns the minimum of the two numbers.",30,[[]]],[10,"abs_sub","","The positive difference of two numbers.",30,[[]]],[10,"cbrt","","Take the cubic root of a number.",30,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",30,[[]]],[10,"sin","","Computes the sine of a number (in radians).",30,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",30,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",30,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",30,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",30,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",30,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",30,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",30,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",30,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",30,[[]]],[10,"sinh","","Hyperbolic sine function.",30,[[]]],[10,"cosh","","Hyperbolic cosine function.",30,[[]]],[10,"tanh","","Hyperbolic tangent function.",30,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",30,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",30,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",30,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",30,[[]]],[4,"Error","","Defines a high-level Plugin Error.",null,null],[13,"SharedTensor","","Failure related to `SharedTensor`: use of uninitialized…",31,null],[13,"Operation","","Failure at the execution of the Operation.",31,null],[13,"Plugin","","Failure at the Plugin.",31,null],[0,"numeric_helpers","","Describes numeric types and traits for a Plugin.",null,null],[0,"bounds","coaster::plugin::numeric_helpers","",null,null],[8,"Bounded","coaster::plugin::numeric_helpers::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",32,[[]]],[10,"max_value","","returns the largest finite number this type can represent",32,[[]]],[0,"cast","coaster::plugin::numeric_helpers","",null,null],[8,"ToPrimitive","coaster::plugin::numeric_helpers::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",33,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",33,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",33,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",33,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",33,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",33,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",33,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",33,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",33,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",33,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",33,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",33,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",33,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",33,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",34,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",34,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",34,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",34,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",34,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",34,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",34,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",34,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",34,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",34,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",34,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",34,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",34,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",34,[[],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",35,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",36,[[]]],[0,"float","coaster::plugin::numeric_helpers","",null,null],[8,"FloatCore","coaster::plugin::numeric_helpers::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",37,[[]]],[10,"neg_infinity","","Returns negative infinity.",37,[[]]],[10,"nan","","Returns NaN.",37,[[]]],[10,"neg_zero","","Returns `-0.0`.",37,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",37,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",37,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",37,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",37,[[]]],[11,"is_nan","","Returns `true` if the number is NaN.",37,[[]]],[11,"is_infinite","","Returns `true` if the number is infinite.",37,[[]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",37,[[]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",37,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",37,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a number.",37,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",37,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",37,[[]]],[11,"trunc","","Return the integer part of a number.",37,[[]]],[11,"fract","","Returns the fractional part of a number.",37,[[]]],[11,"abs","","Computes the absolute value of `self`. Returns…",37,[[]]],[11,"signum","","Returns a number that represents the sign of `self`.",37,[[]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",37,[[]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",37,[[]]],[11,"min","","Returns the minimum of the two numbers.",37,[[]]],[11,"max","","Returns the maximum of the two numbers.",37,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",37,[[]]],[11,"powi","","Raise a number to an integer power.",37,[[]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",37,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",37,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",37,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",30,[[]]],[10,"infinity","","Returns the infinite value.",30,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",30,[[]]],[10,"neg_zero","","Returns `-0.0`.",30,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",30,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",30,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",30,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",30,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",30,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",30,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",30,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",30,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",30,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",30,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",30,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",30,[[]]],[10,"trunc","","Return the integer part of a number.",30,[[]]],[10,"fract","","Returns the fractional part of a number.",30,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",30,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",30,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",30,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",30,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",30,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",30,[[]]],[10,"powi","","Raise a number to an integer power.",30,[[]]],[10,"powf","","Raise a number to a floating point power.",30,[[]]],[10,"sqrt","","Take the square root of a number.",30,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",30,[[]]],[10,"exp2","","Returns `2^(self)`.",30,[[]]],[10,"ln","","Returns the natural logarithm of the number.",30,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",30,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",30,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",30,[[]]],[11,"to_degrees","","Converts radians to degrees.",30,[[]]],[11,"to_radians","","Converts degrees to radians.",30,[[]]],[10,"max","","Returns the maximum of the two numbers.",30,[[]]],[10,"min","","Returns the minimum of the two numbers.",30,[[]]],[10,"abs_sub","","The positive difference of two numbers.",30,[[]]],[10,"cbrt","","Take the cubic root of a number.",30,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",30,[[]]],[10,"sin","","Computes the sine of a number (in radians).",30,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",30,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",30,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",30,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",30,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",30,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",30,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",30,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",30,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",30,[[]]],[10,"sinh","","Hyperbolic sine function.",30,[[]]],[10,"cosh","","Hyperbolic cosine function.",30,[[]]],[10,"tanh","","Hyperbolic tangent function.",30,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",30,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",30,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",30,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",30,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",38,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",38,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",38,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",38,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",38,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",38,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",38,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",38,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",38,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",38,[[]]],[10,"LN_10","","Return `ln(10.0)`.",38,[[]]],[10,"LN_2","","Return `ln(2.0)`.",38,[[]]],[10,"LOG10_E","","Return `log10(e)`.",38,[[]]],[10,"LOG2_E","","Return `log2(e)`.",38,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",38,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",38,[[]]],[11,"TAU","","Return the full circle constant `τ`.",38,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",38,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",38,[[]]],[0,"identities","coaster::plugin::numeric_helpers","",null,null],[8,"Zero","coaster::plugin::numeric_helpers::identities","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",39,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",39,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",39,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",40,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",40,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",40,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[0,"int","coaster::plugin::numeric_helpers","",null,null],[8,"PrimInt","coaster::plugin::numeric_helpers::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",41,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",41,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",41,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",41,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",41,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",41,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",41,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",41,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",41,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",41,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",41,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",41,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",41,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",41,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",41,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",41,[[]]],[0,"ops","coaster::plugin::numeric_helpers","",null,null],[0,"checked","coaster::plugin::numeric_helpers::ops","",null,null],[8,"CheckedAdd","coaster::plugin::numeric_helpers::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",42,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",43,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",44,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",45,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",46,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",47,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",48,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",49,[[],["option",4]]],[0,"inv","coaster::plugin::numeric_helpers::ops","",null,null],[8,"Inv","coaster::plugin::numeric_helpers::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",50,null],[10,"inv","","Returns the multiplicative inverse of `self`.",50,[[]]],[0,"mul_add","coaster::plugin::numeric_helpers::ops","",null,null],[8,"MulAdd","coaster::plugin::numeric_helpers::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",51,null],[10,"mul_add","","Performs the fused multiply-add operation.",51,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",52,[[]]],[0,"saturating","coaster::plugin::numeric_helpers::ops","",null,null],[8,"Saturating","coaster::plugin::numeric_helpers::ops::saturating","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",53,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",53,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",54,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",55,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",56,[[]]],[0,"wrapping","coaster::plugin::numeric_helpers::ops","",null,null],[8,"WrappingAdd","coaster::plugin::numeric_helpers::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",57,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",58,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",59,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",60,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",61,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",62,[[]]],[0,"pow","coaster::plugin::numeric_helpers","",null,null],[8,"Pow","coaster::plugin::numeric_helpers::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",63,null],[10,"pow","","Returns `self` to the power `rhs`.",63,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[0,"real","coaster::plugin::numeric_helpers","",null,null],[8,"Real","coaster::plugin::numeric_helpers::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",64,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",64,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",64,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",64,[[]]],[10,"floor","","Returns the largest integer less than or equal to a number.",64,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",64,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",64,[[]]],[10,"trunc","","Return the integer part of a number.",64,[[]]],[10,"fract","","Returns the fractional part of a number.",64,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",64,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",64,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",64,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",64,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",64,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",64,[[]]],[10,"powi","","Raise a number to an integer power.",64,[[]]],[10,"powf","","Raise a number to a real number power.",64,[[]]],[10,"sqrt","","Take the square root of a number.",64,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",64,[[]]],[10,"exp2","","Returns `2^(self)`.",64,[[]]],[10,"ln","","Returns the natural logarithm of the number.",64,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",64,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",64,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",64,[[]]],[10,"to_degrees","","Converts radians to degrees.",64,[[]]],[10,"to_radians","","Converts degrees to radians.",64,[[]]],[10,"max","","Returns the maximum of the two numbers.",64,[[]]],[10,"min","","Returns the minimum of the two numbers.",64,[[]]],[10,"abs_sub","","The positive difference of two numbers.",64,[[]]],[10,"cbrt","","Take the cubic root of a number.",64,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",64,[[]]],[10,"sin","","Computes the sine of a number (in radians).",64,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",64,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",64,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",64,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",64,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",64,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",64,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",64,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",64,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",64,[[]]],[10,"sinh","","Hyperbolic sine function.",64,[[]]],[10,"cosh","","Hyperbolic cosine function.",64,[[]]],[10,"tanh","","Hyperbolic tangent function.",64,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",64,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",64,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",64,[[]]],[0,"sign","coaster::plugin::numeric_helpers","",null,null],[8,"Signed","coaster::plugin::numeric_helpers::sign","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",65,[[]]],[10,"abs_sub","","The positive difference of two numbers.",65,[[]]],[10,"signum","","Returns the sign of the number.",65,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",65,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",65,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","coaster::plugin::numeric_helpers","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",66,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",66,[[],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",67,null],[13,"Invalid","","",67,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",68,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",32,[[]]],[10,"max_value","","returns the largest finite number this type can represent",32,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",30,[[]]],[10,"infinity","","Returns the infinite value.",30,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",30,[[]]],[10,"neg_zero","","Returns `-0.0`.",30,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",30,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",30,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",30,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",30,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",30,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",30,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",30,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",30,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",30,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",30,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",30,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",30,[[]]],[10,"trunc","","Return the integer part of a number.",30,[[]]],[10,"fract","","Returns the fractional part of a number.",30,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",30,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",30,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",30,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",30,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",30,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",30,[[]]],[10,"powi","","Raise a number to an integer power.",30,[[]]],[10,"powf","","Raise a number to a floating point power.",30,[[]]],[10,"sqrt","","Take the square root of a number.",30,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",30,[[]]],[10,"exp2","","Returns `2^(self)`.",30,[[]]],[10,"ln","","Returns the natural logarithm of the number.",30,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",30,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",30,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",30,[[]]],[11,"to_degrees","","Converts radians to degrees.",30,[[]]],[11,"to_radians","","Converts degrees to radians.",30,[[]]],[10,"max","","Returns the maximum of the two numbers.",30,[[]]],[10,"min","","Returns the minimum of the two numbers.",30,[[]]],[10,"abs_sub","","The positive difference of two numbers.",30,[[]]],[10,"cbrt","","Take the cubic root of a number.",30,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",30,[[]]],[10,"sin","","Computes the sine of a number (in radians).",30,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",30,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",30,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",30,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",30,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",30,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",30,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",30,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",30,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",30,[[]]],[10,"sinh","","Hyperbolic sine function.",30,[[]]],[10,"cosh","","Hyperbolic cosine function.",30,[[]]],[10,"tanh","","Hyperbolic tangent function.",30,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",30,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",30,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",30,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",30,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",38,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",38,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",38,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",38,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",38,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",38,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",38,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",38,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",38,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",38,[[]]],[10,"LN_10","","Return `ln(10.0)`.",38,[[]]],[10,"LN_2","","Return `ln(2.0)`.",38,[[]]],[10,"LOG10_E","","Return `log10(e)`.",38,[[]]],[10,"LOG2_E","","Return `log2(e)`.",38,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",38,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",38,[[]]],[11,"TAU","","Return the full circle constant `τ`.",38,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",38,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",38,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",36,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",34,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",34,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",34,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",34,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",34,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",34,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",34,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",34,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",34,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",34,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",34,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",34,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",34,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",34,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",35,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",33,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",33,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",33,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",33,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",33,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",33,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",33,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",33,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",33,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",33,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",33,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",33,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",33,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",33,[[],["option",4]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",40,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",40,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",40,[[]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",39,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",39,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",39,[[]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",41,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",41,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",41,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",41,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",41,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",41,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",41,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",41,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",41,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",41,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",41,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",41,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",41,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",41,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",41,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",41,[[]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",42,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",45,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",44,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",47,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",46,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",48,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",49,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",43,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",50,null],[10,"inv","","Returns the multiplicative inverse of `self`.",50,[[]]],[8,"MulAdd","","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",51,null],[10,"mul_add","","Performs the fused multiply-add operation.",51,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",52,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",53,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",53,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",54,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",56,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",55,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",57,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",59,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",60,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",61,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",62,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",58,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",63,null],[10,"pow","","Returns `self` to the power `rhs`.",63,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",65,[[]]],[10,"abs_sub","","The positive difference of two numbers.",65,[[]]],[10,"signum","","Returns the sign of the number.",65,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",65,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",65,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"prelude","coaster","A module meant to be glob imported when using Coaster.",null,null],[11,"from","coaster::backend","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","coaster::device","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","coaster::hardware","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","coaster::framework","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","coaster::frameworks::native","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","coaster::frameworks::native::device","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","coaster::frameworks::native::flatbox","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","coaster::frameworks::native::hardware","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","coaster::frameworks::native::function","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","coaster::frameworks::native::binary","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","coaster::frameworks::cuda","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","coaster::frameworks::cuda::device","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","coaster::frameworks::cuda::context","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","coaster::frameworks::cuda::function","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","coaster::frameworks::cuda::memory","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","coaster::frameworks::cuda::module","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","coaster::tensor","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","coaster::error","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","coaster::plugin","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","coaster::plugin::numeric_helpers","",67,[[]]],[11,"into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_string","","",68,[[],["string",3]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"fmt","","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"device","coaster::backend","",0,[[],["cpu",3]]],[11,"device","","",0,[[],["context",3]]],[11,"synchronize","","",0,[[],[["result",4],["error",4]]]],[11,"id","coaster::frameworks::native::device","",11,[[]]],[11,"hardwares","","",11,[[],["vec",3]]],[11,"alloc_memory","","",11,[[],[["flatbox",3],["result",4],["deviceerror",4]]]],[11,"id","coaster::frameworks::cuda::context","",19,[[]]],[11,"hardwares","","",19,[[],["vec",3]]],[11,"alloc_memory","","",19,[[["size_t",6]],[["memory",3],["deviceerror",4],["result",4]]]],[11,"sync_in","coaster::frameworks::native::device","",11,[[["any",8],["any",8]],[["deviceerror",4],["result",4]]]],[11,"sync_out","","",11,[[["any",8],["any",8]],[["deviceerror",4],["result",4]]]],[11,"sync_in","coaster::frameworks::cuda::context","",19,[[["any",8],["any",8]],[["deviceerror",4],["result",4]]]],[11,"sync_out","","",19,[[["any",8],["any",8]],[["deviceerror",4],["result",4]]]],[11,"id","coaster::frameworks::native::hardware","",13,[[]]],[11,"name","","",13,[[],[["string",3],["option",4]]]],[11,"set_name","","",13,[[["string",3],["option",4]]]],[11,"hardware_type","","",13,[[],[["hardwaretype",4],["option",4]]]],[11,"set_hardware_type","","",13,[[["hardwaretype",4],["option",4]]]],[11,"compute_units","","",13,[[],["option",4]]],[11,"set_compute_units","","",13,[[["option",4]]]],[11,"build","","",13,[[],["hardware",3]]],[11,"id","coaster::frameworks::cuda::device","",17,[[]]],[11,"name","","",17,[[],[["string",3],["option",4]]]],[11,"set_name","","",17,[[["string",3],["option",4]]]],[11,"hardware_type","","",17,[[],[["hardwaretype",4],["option",4]]]],[11,"set_hardware_type","","",17,[[["hardwaretype",4],["option",4]]]],[11,"compute_units","","",17,[[],["option",4]]],[11,"set_compute_units","","",17,[[["option",4]]]],[11,"build","","",17,[[],["device",3]]],[11,"ID","coaster::frameworks::native","",69,[[]]],[11,"new","","",69,[[],["native",3]]],[11,"load_hardwares","","",69,[[],[["result",4],["vec",3],["error",4]]]],[11,"hardwares","","",69,[[]]],[11,"binary","","",69,[[],["binary",3]]],[11,"new_device","","",69,[[],[["error",4],["result",4]]]],[11,"ID","coaster::frameworks::cuda","",24,[[]]],[11,"new","","",24,[[],["cuda",3]]],[11,"load_hardwares","","",24,[[],[["vec",3],["error",4],["result",4]]]],[11,"hardwares","","",24,[[]]],[11,"binary","","",24,[[]]],[11,"new_device","","Creates a new Cuda context for computation.",24,[[],[["error",4],["result",4]]]],[11,"rank","coaster","",70,[[]]],[11,"size","","",70,[[]]],[11,"dims","","",70,[[],["vec",3]]],[11,"dims_i32","","",70,[[],["vec",3]]],[11,"drop","coaster::frameworks::native::flatbox","",12,[[]]],[11,"drop","coaster::frameworks::cuda::context","",19,[[]]],[11,"drop","coaster::frameworks::cuda::memory","",21,[[]]],[11,"from","coaster::device","",3,[[["nativeerror",4]],["error",4]]],[11,"from","","",3,[[["cudaerror",4]],["error",4]]],[11,"from","coaster::framework","",8,[[["cudaerror",4]],["error",4]]],[11,"from","coaster::error","",29,[[["error",4]],["error",4]]],[11,"from","coaster::tensor","",25,[[["deviceerror",4]],["error",4]]],[11,"from","coaster::error","",29,[[["error",4]],["error",4]]],[11,"from","","",29,[[["error",4]],["error",4]]],[11,"from","coaster::plugin","",31,[[["error",4]],["error",4]]],[11,"clone","coaster::backend","",0,[[],["backend",3]]],[11,"clone","","",2,[[],["backendconfig",3]]],[11,"clone","coaster::device","",3,[[],["error",4]]],[11,"clone","coaster::hardware","",6,[[],["hardwaretype",4]]],[11,"clone","coaster::frameworks::native::device","",11,[[],["cpu",3]]],[11,"clone","coaster::frameworks::native::hardware","",13,[[],["hardware",3]]],[11,"clone","coaster::frameworks::native::function","",14,[[],["function",3]]],[11,"clone","coaster::frameworks::native::binary","",15,[[],["binary",3]]],[11,"clone","coaster::frameworks::native","",10,[[],["error",4]]],[11,"clone","","",69,[[],["native",3]]],[11,"clone","coaster::frameworks::cuda::device","",17,[[],["device",3]]],[11,"clone","","",18,[[],["deviceinfo",3]]],[11,"clone","coaster::frameworks::cuda::context","",19,[[],["context",3]]],[11,"clone","coaster::frameworks::cuda::function","",20,[[],["function",3]]],[11,"clone","coaster::frameworks::cuda::module","",22,[[],["module",3]]],[11,"clone","coaster::frameworks::cuda","",23,[[],["api",3]]],[11,"clone","","",16,[[],["error",4]]],[11,"clone","","",24,[[],["cuda",3]]],[11,"clone","coaster::tensor","",25,[[],["error",4]]],[11,"clone","coaster::plugin","",31,[[],["error",4]]],[11,"default","coaster::frameworks::native::hardware","",13,[[]]],[11,"default","coaster::frameworks::native::function","",14,[[],["function",3]]],[11,"default","coaster::frameworks::native::binary","",15,[[],["binary",3]]],[11,"default","coaster::frameworks::cuda::device","",17,[[]]],[11,"eq","coaster::device","",3,[[["error",4]]]],[11,"ne","","",3,[[["error",4]]]],[11,"eq","coaster::hardware","",6,[[["hardwaretype",4]]]],[11,"eq","coaster::frameworks::native::device","",11,[[]]],[11,"eq","coaster::frameworks::native","",10,[[["error",4]]]],[11,"ne","","",10,[[["error",4]]]],[11,"eq","coaster::frameworks::cuda::device","",17,[[]]],[11,"eq","coaster::frameworks::cuda::context","",19,[[]]],[11,"eq","coaster::frameworks::cuda","",16,[[["error",4]]]],[11,"ne","","",16,[[["error",4]]]],[11,"eq","coaster::tensor","",25,[[["error",4]]]],[11,"ne","","",25,[[["error",4]]]],[11,"fmt","coaster::backend","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::device","",3,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::hardware","",6,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::framework","",8,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::native::device","",11,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::native::flatbox","",12,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::native::hardware","",13,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::native::function","",14,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::native::binary","",15,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::native","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::cuda::device","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::cuda::context","",19,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::cuda::function","",20,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::cuda::memory","",21,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::cuda::module","",22,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::cuda","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::tensor","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::error","",29,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::plugin","",31,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::device","",3,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::framework","",8,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::native","",10,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::cuda::device","",18,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::frameworks::cuda","",16,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::tensor","",25,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::error","",29,[[["formatter",3]],["result",6]]],[11,"fmt","coaster::plugin","",31,[[["formatter",3]],["result",6]]],[11,"hash","coaster::hardware","",6,[[]]],[11,"hash","coaster::frameworks::native::device","",11,[[]]],[11,"hash","coaster::frameworks::cuda::context","",19,[[]]],[11,"source","coaster::device","",3,[[],[["option",4],["error",8]]]],[11,"source","coaster::framework","",8,[[],[["option",4],["error",8]]]],[11,"description","coaster::frameworks::native","",10,[[]]],[11,"cause","","",10,[[],[["error",8],["option",4]]]],[11,"source","coaster::frameworks::cuda","",16,[[],[["option",4],["error",8]]]],[11,"source","coaster::tensor","",25,[[],[["option",4],["error",8]]]],[11,"source","coaster::error","",29,[[],[["option",4],["error",8]]]],[11,"source","coaster::plugin","",31,[[],[["error",8],["option",4]]]]],"p":[[3,"Backend"],[8,"IBackend"],[3,"BackendConfig"],[4,"Error"],[8,"IDevice"],[8,"MemorySync"],[4,"HardwareType"],[8,"IHardware"],[4,"Error"],[8,"IFramework"],[4,"Error"],[3,"Cpu"],[3,"FlatBox"],[3,"Hardware"],[3,"Function"],[3,"Binary"],[4,"DriverError"],[3,"Device"],[3,"DeviceInfo"],[3,"Context"],[3,"Function"],[3,"Memory"],[3,"Module"],[3,"Driver"],[3,"Cuda"],[4,"Error"],[8,"ITensorDesc"],[8,"IntoTensorDesc"],[3,"SharedTensor"],[4,"Error"],[8,"Float"],[4,"Error"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[3,"Native"],[6,"TensorDesc"]]},\
"coaster_blas":{"doc":"Provides backend-agnostic BLAS operations for…","i":[[0,"binary","coaster_blas","Provides the IBlasBinary binary trait for Coaster\'s…",null,null],[8,"IBlasBinary","coaster_blas::binary","Describes the operation binding for a Blas Binary…",null,null],[16,"Asum","","Describes the Asum Operation.",0,null],[16,"Axpy","","Describes the Axpy Operation.",0,null],[16,"Copy","","Describes the Copy Operation.",0,null],[16,"Dot","","Describes the Dot Operation.",0,null],[16,"Nrm2","","Describes the Nrm2 Operation.",0,null],[16,"Scale","","Describes the Scale Operation.",0,null],[16,"Swap","","Describes the Swap Operation.",0,null],[10,"asum","","Returns an initialized Asum operation.",0,[[]]],[10,"axpy","","Returns an initialized Axpy operation.",0,[[]]],[10,"copy","","Returns an initialized Copy operation.",0,[[]]],[10,"dot","","Returns an initialized Dot operation.",0,[[]]],[10,"nrm2","","Returns an initialized Nrm2 operation.",0,[[]]],[10,"scale","","Returns an initialized Scale operation.",0,[[]]],[10,"swap","","Returns an initialized Swap operation.",0,[[]]],[0,"frameworks","coaster_blas","Provides the specific Framework implementations for the…",null,null],[0,"cuda","coaster_blas::frameworks","Provides BLAS for a CUDA backend.",null,null],[0,"helper","coaster_blas::frameworks::cuda","",null,null],[0,"native","coaster_blas::frameworks","Provides BLAS for a Native backend.",null,null],[0,"operation","coaster_blas","Provides the IOperationX operation traits for Coaster\'s…",null,null],[8,"IOperationAsum","coaster_blas::operation","Describes a Asum Operation.",null,null],[10,"compute","","Computes the Asum operation.",1,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"IOperationAxpy","","Describes a Axpy Operation.",null,null],[10,"compute","","Computes the Axpy operation.",2,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"IOperationCopy","","Describes a Copy Operation.",null,null],[10,"compute","","Computes the Copy operation.",3,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"IOperationDot","","Describes a Dot Operation.",null,null],[10,"compute","","Computes the Dot operation.",4,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"IOperationNrm2","","Describes a Nrm2 Operation.",null,null],[10,"compute","","Computes the Nrm2 operation.",5,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"IOperationScale","","Describes a Scale Operation.",null,null],[10,"compute","","Computes the Scale operation.",6,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"IOperationSwap","","Describes a Swap Operation.",null,null],[10,"compute","","Computes the Swap operation.",7,[[["sharedtensor",3]],[["result",4],["error",4]]]],[8,"IOperationGemm","","Describes a Gemm Operation.",null,null],[10,"compute","","Computes the Gemm operation.",8,[[["transpose",4],["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[0,"plugin","coaster_blas","Provides the IBlas library trait for Coaster implementation.",null,null],[8,"IBlas","coaster_blas::plugin","Provides the functionality for a backend to support Basic…",null,null],[8,"Asum","","Provides the asum operation.",null,null],[10,"asum","","Computes the absolute sum of vector `x`.",9,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Axpy","","Provides the axpy operation.",null,null],[10,"axpy","","Computes a vector `x` times a constant `a` plus a vector…",10,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Copy","","Provides the copy operation.",null,null],[10,"copy","","Copies `x.len()` elements of vector `x` into vector `y`.",11,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Dot","","Provides the dot operation.",null,null],[10,"dot","","Computes the [dot product][dot-product] over x and y.…",12,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Nrm2","","Provides the nrm2 operation.",null,null],[10,"nrm2","","Computes the L2 norm aka. euclidean length of vector `x`.",13,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Scal","","Provides the scal operation.",null,null],[10,"scal","","Scales a vector `x` by a constant `a` aka. `a * x`.",14,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Swap","","Provides the swap operation.",null,null],[10,"swap","","Swaps the content of vector `x` and vector `y` with…",15,[[["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Gbmv","","Provides the gbmv operation",null,null],[10,"gbmv","","Computes a matrix-vector product with a band matrix",16,[[["transpose",4],["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Gemm","","Provides the gemm operation.",null,null],[10,"gemm","","Computes a matrix-matrix product with general matrices.",17,[[["transpose",4],["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"BlasBinaryProvider","","Allows a BlasBinary to be provided which is used for a…",null,null],[10,"binary","","Returns the binary representation",18,[[]]],[0,"transpose","coaster_blas","Provides the Transpose functionality for Matrix operations.",null,null],[4,"Transpose","coaster_blas::transpose","Possible transpose operations that can be applied in Level…",null,null],[13,"NoTrans","","Take the matrix as it is.",19,null],[13,"Trans","","Take the transpose of the matrix.",19,null],[13,"ConjTrans","","Take the conjugate transpose of the matrix.",19,null],[11,"to_rblas","","Create a rust-blas `Transpose` from coaster-blas…",19,[[],["transpose",4]]],[14,"iblas_asum_for_cuda","coaster_blas","asum with cuda",null,null],[14,"iblas_axpy_for_cuda","","axpy with cuda",null,null],[14,"iblas_copy_for_cuda","","copy for cuda",null,null],[14,"iblas_nrm2_for_cuda","","nrm2 for cuda",null,null],[14,"iblas_dot_for_cuda","","dot product for cuda",null,null],[14,"iblas_scal_for_cuda","","scalar mul for cuda",null,null],[14,"iblas_swap_for_cuda","","swap matrices for cuda",null,null],[14,"iblas_gbmv_for_cuda","","gbmv for cuda",null,null],[14,"iblas_gemm_for_cuda","","gemm for cuda",null,null],[11,"from","coaster_blas::transpose","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",19,[[["operation",4]]]],[11,"clone","","",19,[[],["transpose",4]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]]],"p":[[8,"IBlasBinary"],[8,"IOperationAsum"],[8,"IOperationAxpy"],[8,"IOperationCopy"],[8,"IOperationDot"],[8,"IOperationNrm2"],[8,"IOperationScale"],[8,"IOperationSwap"],[8,"IOperationGemm"],[8,"Asum"],[8,"Axpy"],[8,"Copy"],[8,"Dot"],[8,"Nrm2"],[8,"Scal"],[8,"Swap"],[8,"Gbmv"],[8,"Gemm"],[8,"BlasBinaryProvider"],[4,"Transpose"]]},\
"coaster_nn":{"doc":"Provides a [Coaster][coaster] Plugin, to extend Coaster…","i":[[4,"ConvForwardAlgo","coaster_nn","Different algorithms to compute the convolution forward…",null,null],[13,"Auto","","Attempt to automatically find the best algorithm of all…",0,null],[13,"GEMM","","Compute the convolution as explicit matrix product.",0,null],[13,"ImplicitGEMM","","Compute the convolution as matrix product without forming…",0,null],[13,"ImplicitPrecompiledGEMM","","Similar to `ImplicitGEMM` but needs some workspace to…",0,null],[13,"FFT","","Compute the convolution as Fast-Fourier Transform.",0,null],[13,"FFTTiling","","Compute the convolution as Fast-Fourier Transform with…",0,null],[13,"Direct","","Compute the convolution without implicit or explicit…",0,null],[13,"Winograd","","Winograd  Transform",0,null],[13,"WinogradNonFused","","Winograd  Transform Non-Fused",0,null],[4,"ConvBackwardFilterAlgo","","Different algorithms to compute the gradient with respect…",null,null],[13,"Auto","","Attempt to automatically find the best algorithm of all…",1,null],[13,"ImplicitGEMM","","Compute the convolution as matrix product without forming…",1,null],[13,"ImplicitGEMMSum","","Compute the convolution as sum of matrix product without…",1,null],[13,"ImplicitPrecompiledGEMMSum","","Similar to `ImplicitGEMMSum` but needs some workspace to…",1,null],[13,"FFT","","Compute the convolution as Fast-Fourier Transform.",1,null],[13,"WinogradNonFused","","Winograd  Transform Non-Fused",1,null],[4,"ConvBackwardDataAlgo","","Different algorithms to compute the gradient with respect…",null,null],[13,"Auto","","Attempt to automatically find the best algorithm of all…",2,null],[13,"ImplicitGEMM","","Compute the convolution as matrix product without forming…",2,null],[13,"ImplicitGEMMSum","","Compute the convolution as sum of matrix product without…",2,null],[13,"FFT","","Compute the convolution as Fast-Fourier Transform.",2,null],[13,"FFTTiling","","Compute the convolution as Fast-Fourier Transform with…",2,null],[13,"Winograd","","Winograd  Transform",2,null],[13,"WinogradNonFused","","Winograd  Transform Non-Fused",2,null],[4,"RnnNetworkMode","","Network Type for RNN Networks [cudnnRNNMOde_t][1] [1]:…",null,null],[13,"ReLU","","CUDNN_RNN_RELU - Single gate RNN with a ReLU activation…",3,null],[13,"Tanh","","Single-gate RNN with a tanh activation function",3,null],[13,"LSTM","","Four-gate LSTM Network with no peephole connection",3,null],[13,"GRU","","Three-gate network with Gated Recurrent Units",3,null],[4,"RnnInputMode","","Input Modes for RNN [cudnnRNNInputMode_t][1] [1]:…",null,null],[13,"LinearInput","","CUDNN_LINEAR_INPUT - A biased matrix multiplication is…",4,null],[13,"SkipInput","","CUDNN_SKIP_INPUT - No operation is performed at the input…",4,null],[4,"DirectionMode","","Direction Mode for RNN [cudnnDirectionMode_t][1] [1]:…",null,null],[13,"UniDirectional","","CUDNN_UNIDIRECTIONAL - The network iterates from first to…",5,null],[13,"BiDirectional","","CUDNN_BIDIRECTION - Concats recurrent output of First ->…",5,null],[4,"RnnAlgorithm","","Algorithm for RNN [cudnnRNNAlgo_t][1] [1]:…",null,null],[13,"Standard","","Sequence of Operations for each RNN Layer",6,null],[13,"PersistStatic","","Uses a Persistent Kernel - fast when the first D of the…",6,null],[13,"PersistDynamic","","RNN parts use a persistent kernel. Fast when the first…",6,null],[13,"Count","","Count - Cannot find in docs but is in Generated - FIXME",6,null],[4,"RnnPaddingMode","","Enables/Disables the padded input/output…",null,null],[13,"Disabled","","Padding disabled",7,null],[13,"Enabled","","Padding enabled",7,null],[4,"MathType","","Indicate if Tensor Core Operations are permitted…",null,null],[13,"Default","","No Tensor Core ops",8,null],[13,"TensorOPMath","","Uses Tensor Core ops",8,null],[13,"TensorOPMathAllowConversion","","Uses FP32 Tensors for input/output",8,null],[11,"is_auto","","Check if algorithim should be chosen automatically.",0,[[]]],[11,"is_auto","","Check if algorithim should be chosen automatically.",1,[[]]],[11,"is_auto","","Check if algorithim should be chosen automatically.",2,[[]]],[11,"from_string","","Convert RnnNetworkMode to String Representation",3,[[],["result",4]]],[11,"from_string","","Convert to RnnInputMode from String Representation",4,[[],["result",4]]],[11,"from_string","","Convert to DirectionMode from String Representation",5,[[],["result",4]]],[0,"frameworks","","Provides the specific Framework implementations for the…",null,null],[0,"native","coaster_nn::frameworks","Provides NN for a Native backend.",null,null],[0,"helper","coaster_nn::frameworks::native","Provides useful macros for easier NN implementation for…",null,null],[3,"NormalizationConfig","coaster_nn::frameworks::native::helper","",null,null],[3,"PoolingConfig","","",null,null],[12,"window","","",9,null],[12,"padding","","",9,null],[12,"stride","","",9,null],[3,"DropoutConfig","","",null,null],[12,"probability","","",10,null],[12,"seed","","",10,null],[3,"ConvolutionConfig","","",null,null],[12,"filter_shape","","",11,null],[12,"stride","","",11,null],[12,"padding","","",11,null],[3,"RnnConfig","","",null,null],[12,"hidden_size","","Size of the Hidden Layer",12,null],[12,"num_layers","","Number of Hidden Layers",12,null],[12,"dropout_probability","","Dropout Probability",12,null],[12,"dropout_seed","","Dropout Seed",12,null],[12,"rnn_type","","Type of RNN",12,null],[12,"input_mode","","Input Mode",12,null],[12,"direction_mode","","RNN Direction",12,null],[5,"write_to_memory","","Just a helper function until SharedTensor has a nice…",null,[[["iterator",8],["flatbox",3]]]],[5,"sigmoid","","Computes the Sigmoid Function on the CPU",null,[[["float",8]],["float",8]]],[5,"sigmoid_grad","","Computes the Sigmoid Gradient on the CPU",null,[[["float",8]],["float",8]]],[5,"relu","","Computes the ReLU Function on the CPU",null,[[["float",8]],["float",8]]],[5,"relu_grad","","Computes the ReLU Gradient on the CPU",null,[[["float",8]],["float",8]]],[5,"tanh","","Computes the Tanh Function on the CPU",null,[[["float",8]],["float",8]]],[5,"tanh_grad","","Computes the Tanh Gradient on the CPU",null,[[["float",8]],["float",8]]],[0,"cuda","coaster_nn::frameworks","Provides NN for a CUDA backend.",null,null],[4,"DataType","coaster_nn::frameworks::cuda","Defines the available data types for the CUDA cuDNN data…",null,null],[13,"Float","","F32",13,null],[13,"Double","","F64",13,null],[13,"Half","","F16 (no native Rust support yet)",13,null],[8,"DataTypeInfo","","CuDnn type info for generic use.",null,null],[10,"cudnn_data_type","","Mostly internal.",14,[[],["datatype",4]]],[3,"RnnSequenceDescriptors","","Struct to hold all Sequence Descriptors for an RNN Pass",null,null],[12,"x_desc","","Input Descriptor",15,null],[12,"y_desc","","Output Descriptor",15,null],[12,"dx_desc","","Gradient Input Descriptor",15,null],[12,"dy_desc","","Gradient Output Descriptor",15,null],[12,"hx_desc","","Hidden Input Descriptor",15,null],[12,"cx_desc","","Cell Input Descriptor",15,null],[12,"hy_desc","","Hidden Output Descriptor",15,null],[12,"cy_desc","","Cell Output Descriptor",15,null],[12,"dhx_desc","","Gradient Hidden Input Descriptor",15,null],[12,"dcx_desc","","Gradient Cell Input Descriptor",15,null],[12,"dhy_desc","","Gradient Hidden Output Descriptor",15,null],[12,"dcy_desc","","Gradient Cell Output Descriptor",15,null],[0,"helper","","Provides useful macros for easier NN implementation for…",null,null],[8,"ICudnnDesc","","",null,null],[10,"cudnn_tensor_desc","","",16,[[],[["result",4],["pluginerror",4],["tensordescriptor",3]]]],[10,"cudnn_tensor_desc_softmax","","Creates a TensorDescriptor similar to `cudnn_tensor_desc`,…",16,[[],[["result",4],["pluginerror",4],["tensordescriptor",3]]]],[10,"cudnn_tensor_desc_flat","","Creates a TensorDescriptor similar to `cudnn_tensor_desc`,…",16,[[],[["result",4],["pluginerror",4],["tensordescriptor",3]]]],[10,"cudnn_filter_desc","","",16,[[],[["result",4],["pluginerror",4],["filterdescriptor",3]]]],[10,"cudnn_convolution_desc","","",16,[[["sharedtensor",3]],[["pluginerror",4],["result",4],["convolutiondescriptor",3]]]],[10,"cudnn_rnn_desc","","",16,[[["dropoutconfig",3],["cudnnrnnmode_t",4],["cudnn",3],["cudnnrnnalgo_t",4],["cudnndirectionmode_t",4],["cudnnrnninputmode_t",4],["cudnnrnnpaddingmode_t",4]],[["pluginerror",4],["rnndescriptor",3],["result",4]]]],[8,"NNOperationConfig","coaster_nn","Provides generic NN Operation Config functionality.",null,null],[8,"ConvolutionConfig","","Provides Convolution Config functionality.",null,null],[11,"workspace_size","","Returns the largest workspace size in bytes needed for any…",17,[[]]],[8,"RnnConfig","","Provides Rnn Config functionality.",null,null],[11,"workspace_size","","Workspace Size - Overwritten by each plugin method except…",18,[[]]],[8,"NN","","Provides the functionality for a backend to support Neural…",null,null],[16,"CC","","The Convolution Operation Config representation for this…",19,null],[16,"CLRN","","The LRN Operation Config representation for this Plugin.",19,null],[16,"CPOOL","","The Pooling Operation Config representation for this Plugin.",19,null],[16,"CDROP","","The Dropout Operation Config representation for this Plugin.",19,null],[16,"CRNN","","The RNN Operation Config representation for this Plugin",19,null],[10,"init_nn","","Initializes the Plugin.",19,[[]]],[8,"Sigmoid","","Provides the functionality for a Backend to support…",null,null],[10,"sigmoid","","Computes the [Sigmoid function][sigmoid] over the input…",20,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"sigmoid_grad","","Computes the gradient of a [Sigmoid function][sigmoid]…",20,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"SigmoidPointwise","","Provides the functionality for pointwise Sigmoid…",null,null],[10,"sigmoid_pointwise","","Computes the [Sigmoid function][sigmoid] over the input…",21,[[["sharedtensor",3]],[["result",4],["error",4]]]],[10,"sigmoid_pointwise_grad","","Computes the gradient of a [Sigmoid function][sigmoid]…",21,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Relu","","Provides the functionality for a Backend to support ReLU…",null,null],[10,"relu","","Computes the [Rectified linear units][relu] over the input…",22,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"relu_grad","","Computes the gradient of [ReLU][relu] over the input…",22,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"ReluPointwise","","Provides the functionality for pointwise ReLU operations…",null,null],[10,"relu_pointwise","","Computes the [Rectified linear units][relu] over the input…",23,[[["sharedtensor",3]],[["result",4],["error",4]]]],[10,"relu_pointwise_grad","","Computes the gradient of [ReLU][relu] over the input…",23,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Tanh","","Provides the functionality for a Backend to support TanH…",null,null],[10,"tanh","","Computes the [hyperbolic Tangent][tanh] over the input…",24,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"tanh_grad","","Computes the gradient of [hyperbolic Tangent][tanh] over…",24,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"TanhPointwise","","Provides the functionality for pointwise ReLU operations…",null,null],[10,"tanh_pointwise","","Computes the [hyperbolic Tangent][tanh] over the input…",25,[[["sharedtensor",3]],[["result",4],["error",4]]]],[10,"tanh_pointwise_grad","","Computes the gradient of [tanh][tanh] over the input…",25,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Rnn","","Provide the functionality for a Backend to support RNN…",null,null],[10,"new_rnn_config","","Create a RnnConfig",26,[[["sharedtensor",3],["rnnnetworkmode",4],["rnninputmode",4],["option",4],["rnnalgorithm",4],["directionmode",4],["option",4]],[["error",4],["result",4]]]],[10,"generate_rnn_weight_description","","Generate Weights for RNN",26,[[],[["result",4],["vec",3],["error",4]]]],[10,"rnn_forward","","Train a LSTM Network and Return Results # Arguments *…",26,[[["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"rnn_backward_data","","Calculates RNN Gradients for Input/Hidden/Cell",26,[[["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"rnn_backward_weights","","Calculates RNN Gradients for Weights",26,[[["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Convolution","","Provides the functionality for a Backend to support…",null,null],[10,"new_convolution_config","","Creates a new ConvolutionConfig, which needs to be passed…",27,[[["convforwardalgo",4],["convbackwarddataalgo",4],["convbackwardfilteralgo",4],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"convolution","","Computes a [CNN convolution][convolution] over the input…",27,[[["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"convolution_grad_filter","","Computes the gradient of a [CNN convolution][convolution]…",27,[[["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"convolution_grad_data","","Computes the gradient of a [CNN convolution][convolution]…",27,[[["sharedtensor",3],["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Softmax","","Provides the functionality for a Backend to support…",null,null],[10,"softmax","","Computes a [Softmax][softmax] over the input Tensor `x`.…",28,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"softmax_grad","","Computes the gradient of a [Softmax][softmax] over the…",28,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"LogSoftmax","","Provides the functionality for a Backend to support…",null,null],[10,"log_softmax","","Computes a logarithmic softmax over the input Tensor `x`.",29,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"log_softmax_grad","","Computes the gradient of a logarithmic softmax over the…",29,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"LRN","","Provides the functionality for a Backend to support Local…",null,null],[10,"new_lrn_config","","Creates a new (Local Response Normalization) LRNConfig,…",30,[[],[["result",4],["error",4]]]],[10,"lrn","","Computes a [LRN][lrn] over the input Tensor `x`. [lrn]:…",30,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"lrn_grad","","Computes the gradient of a [LRN][lrn] over the input…",30,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Pooling","","Provides the functionality for a Backend to support…",null,null],[10,"new_pooling_config","","Creates a new PoolingConfig, which needs to be passed to…",31,[[],[["result",4],["error",4]]]],[10,"pooling_max","","Computes non-linear down-sampling ([max Pooling][pooling])…",31,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"pooling_max_grad","","Computes the gradient of [max Pooling][pooling] over the…",31,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"pooling_avg","","Computes non-linear down-sampling ([average…",31,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"pooling_avg_grad","","Computes the gradient of [average Pooling][pooling] over…",31,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"Dropout","","Provides the functionality for a Backend to support…",null,null],[10,"new_dropout_config","","Creates a new DropoutConfig, which needs to be passed to…",32,[[],[["result",4],["error",4]]]],[10,"dropout","","Computes non-linear down-sampling ([max Pooling][pooling])…",32,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[10,"dropout_grad","","Computes non-linear down-sampling ([max Pooling][pooling])…",32,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[14,"impl_ops_sigmoid_for","","sigmoid impl generation macro",null,null],[14,"impl_ops_relu_for","","relu impl generation macro",null,null],[14,"impl_ops_tanh_for","","tanh impl generation macro",null,null],[14,"impl_ops_softmax_for","","softmax impl generation macro",null,null],[14,"impl_ops_log_softmax_for","","log softmax impl generation macro",null,null],[14,"impl_ops_lrn_for","","lrn impl generation macro TODO it\'s all unimplemented!()…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","coaster_nn::frameworks::native::helper","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","coaster_nn::frameworks::cuda","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"clone","","",13,[[],["datatype",4]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","coaster_nn","",0,[[],["convforwardalgo",4]]],[11,"clone","","",1,[[],["convbackwardfilteralgo",4]]],[11,"clone","","",2,[[],["convbackwarddataalgo",4]]],[11,"clone","","",3,[[],["rnnnetworkmode",4]]],[11,"clone","","",4,[[],["rnninputmode",4]]],[11,"clone","","",5,[[],["directionmode",4]]],[11,"clone","","",6,[[],["rnnalgorithm",4]]],[11,"clone","","",7,[[],["rnnpaddingmode",4]]],[11,"clone","","",8,[[],["mathtype",4]]],[11,"clone","coaster_nn::frameworks::native::helper","",33,[[],["normalizationconfig",3]]],[11,"clone","","",9,[[],["poolingconfig",3]]],[11,"clone","","",10,[[],["dropoutconfig",3]]],[11,"clone","","",11,[[],["convolutionconfig",3]]],[11,"clone","","",12,[[],["rnnconfig",3]]],[11,"fmt","coaster_nn","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","coaster_nn::frameworks::native::helper","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","coaster_nn::frameworks::cuda","",15,[[["formatter",3]],["result",6]]],[11,"fmt","coaster_nn","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"workspace_size","","Returns the largest workspace size in bytes needed for any…",17,[[]]],[11,"workspace_size","","Workspace Size - Overwritten by each plugin method except…",18,[[]]]],"p":[[4,"ConvForwardAlgo"],[4,"ConvBackwardFilterAlgo"],[4,"ConvBackwardDataAlgo"],[4,"RnnNetworkMode"],[4,"RnnInputMode"],[4,"DirectionMode"],[4,"RnnAlgorithm"],[4,"RnnPaddingMode"],[4,"MathType"],[3,"PoolingConfig"],[3,"DropoutConfig"],[3,"ConvolutionConfig"],[3,"RnnConfig"],[4,"DataType"],[8,"DataTypeInfo"],[3,"RnnSequenceDescriptors"],[8,"ICudnnDesc"],[8,"ConvolutionConfig"],[8,"RnnConfig"],[8,"NN"],[8,"Sigmoid"],[8,"SigmoidPointwise"],[8,"Relu"],[8,"ReluPointwise"],[8,"Tanh"],[8,"TanhPointwise"],[8,"Rnn"],[8,"Convolution"],[8,"Softmax"],[8,"LogSoftmax"],[8,"LRN"],[8,"Pooling"],[8,"Dropout"],[3,"NormalizationConfig"]]},\
"example_mnist_classification":{"doc":"","i":[[3,"Args","example_mnist_classification","",null,null],[12,"arg_dataset_name","","",0,null],[12,"arg_model_name","","",0,null],[12,"arg_batch_size","","",0,null],[12,"arg_learning_rate","","",0,null],[12,"arg_momentum","","",0,null],[12,"cmd_load_dataset","","",0,null],[12,"cmd_mnist","","",0,null],[12,"cmd_fashion","","",0,null],[4,"MnistType","","",null,null],[13,"Fashion","","",1,null],[13,"Numbers","","",1,null],[5,"main","","",null,[[]]],[5,"add_conv_net","","",null,[[["sequentialconfig",3]],["sequentialconfig",3]]],[5,"add_mlp","","",null,[[["sequentialconfig",3]],["sequentialconfig",3]]],[5,"add_linear_net","","",null,[[["sequentialconfig",3]],["sequentialconfig",3]]],[5,"run_mnist","","",null,[[["string",3],["option",4],["mnisttype",4],["option",4],["option",4]]]],[17,"MAIN_USAGE","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[3,"Args"],[4,"MnistType"]]},\
"example_rnn_regression":{"doc":"","i":[[3,"Args","example_rnn_regression","",null,null],[12,"cmd_train","","",0,null],[12,"cmd_test","","",0,null],[12,"flag_file","","",0,null],[12,"flag_batchSize","","",0,null],[12,"flag_learningRate","","",0,null],[12,"flag_momentum","","",0,null],[4,"DataMode","","",null,null],[13,"Train","","",1,null],[13,"Test","","",1,null],[5,"data_generator","","",null,[[["datamode",4]]]],[5,"create_network","","",null,[[],["sequentialconfig",3]]],[5,"add_solver","","",null,[[["sequentialconfig",3],["rc",3],["backend",3]],[["solver",3],["backend",3]]]],[5,"train","","",null,[[["string",3],["option",4],["option",4],["option",4]]]],[5,"test","","",null,[[["string",3],["option",4],["option",4]],[["result",4],["box",3]]]],[5,"main","","",null,[[]]],[17,"MAIN_USAGE","","",null,null],[17,"TRAIN_ROWS","","",null,null],[17,"TEST_ROWS","","",null,null],[17,"DATA_COLUMNS","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[3,"Args"],[4,"DataMode"]]},\
"greenglas":{"doc":"Greenglas provides convenient and universal Machine…","i":[[8,"Set","greenglas","A trait providing the set and set_mut methods for all types.",null,null],[11,"set","","Modify self using the provided modifier.",0,[[]]],[11,"set_mut","","Modify self through a mutable reference with the provided…",0,[[]]],[0,"transformer","","Transformer",null,null],[4,"TransformerError","greenglas::transformer","The Transformer Errors",null,null],[13,"InvalidShape","","When the speficied shape capacitiy differs from the actual…",1,null],[13,"InvalidRgbPixels","","When The Image Pixel Buffer can\'t be converted to a RGB…",1,null],[13,"InvalidRgbaPixels","","When The Image Pixel Buffer can\'t be converted to a RGBA…",1,null],[13,"InvalidLumaPixels","","When The Image Pixel Buffer can\'t be converted to a…",1,null],[13,"InvalidLumaAlphaPixels","","When The Image Pixel Buffer can\'t be converted to a…",1,null],[8,"Transformer","","The Transformer Trait",null,null],[11,"transform","","Transforms non-numeric data into a numeric `SharedTensor`",2,[[],[["result",4],["sharedtensor",3],["transformererror",4]]]],[10,"transform_to_vec","","Transforms the non-numeric data into a numeric `Vec`",2,[[],["vec",3]]],[11,"write_to_memory","","Write into a native Coaster Memory.",2,[[["flatbox",3]],[["transformererror",4],["result",4]]]],[11,"write_to_memory_offset","","Write into a native Coaster Memory with a offset.",2,[[["flatbox",3]],[["transformererror",4],["result",4]]]],[0,"image","greenglas","The Image Struct and its Modifiers",null,null],[3,"Image","greenglas::image","The Transformable Data Type `Image`",null,null],[0,"modifiers","","The Modifiers form `Image`",null,null],[3,"Resize","greenglas::image::modifiers","Resize Modifier for `Image`",null,null],[12,"width","","The resized width of the new Image",3,null],[12,"height","","The resized heigt of the new Image",3,null],[3,"Crop","","Crop Modifier for `Image`",null,null],[12,"x","","The x value from where the new Image should start",4,null],[12,"y","","The y value from where the new Image should start",4,null],[12,"width","","The width for the new Image",4,null],[12,"height","","The height for the new Image",4,null],[3,"Grayscale","","Grayscale Modifier for `Image`",null,null],[11,"new","greenglas::image","Create a new Image from a DynamicImage",5,[[["dynamicimage",4]],["image",3]]],[11,"from_path","","Create a new Image from a Path",5,[[],["image",3]]],[11,"from_buffer","","Create a new Image from Buffer",5,[[],["image",3]]],[11,"from_rgb_pixels","","Create a new Image from RGB style pixel container such as…",5,[[["vec",3]],[["result",4],["image",3],["transformererror",4]]]],[11,"from_rgba_pixels","","Create a new Image from RGBa style pixel container such as…",5,[[["vec",3]],[["result",4],["image",3],["transformererror",4]]]],[11,"from_luma_pixels","","Create a new Image from Luma (greyscale) style pixel…",5,[[["vec",3]],[["result",4],["image",3],["transformererror",4]]]],[11,"from_lumaa_pixels","","Create a new Image from LumaA style pixel container such…",5,[[["vec",3]],[["result",4],["image",3],["transformererror",4]]]],[0,"word","greenglas","The Word Struct and its Modifiers",null,null],[3,"Word","greenglas::word","The Transformable Data Type `Word`",null,null],[0,"modifiers","","The Modifiers for `Word`",null,null],[11,"new","","Creates a new `Word`",6,[[["string",3]],["word",3]]],[0,"modifier","greenglas","Re-exports from the modifier crate.",null,null],[8,"Modifier","greenglas::modifier","Allows use of the implemented type as an argument to…",null,null],[10,"modify","","Modify `F` with self.",7,[[]]],[8,"Set","","A trait providing the set and set_mut methods for all types.",null,null],[11,"set","","Modify self using the provided modifier.",0,[[]]],[11,"set_mut","","Modify self through a mutable reference with the provided…",0,[[]]],[11,"from","greenglas::transformer","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","greenglas::image","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","greenglas::image::modifiers","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","greenglas::word","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"transform_to_vec","greenglas::image","",5,[[],["vec",3]]],[11,"transform_to_vec","greenglas::word","",6,[[],["vec",3]]],[11,"clone","greenglas::transformer","",1,[[],["transformererror",4]]],[11,"clone","greenglas::image::modifiers","",3,[[],["resize",3]]],[11,"clone","","",4,[[],["crop",3]]],[11,"clone","","",8,[[],["grayscale",3]]],[11,"fmt","greenglas::transformer","",1,[[["formatter",3]],["result",6]]],[11,"fmt","greenglas::image::modifiers","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","greenglas::word","",6,[[["formatter",3]],["result",6]]],[11,"modify","greenglas::image::modifiers","",3,[[["image",3]]]],[11,"modify","","",4,[[["image",3]]]],[11,"modify","","",8,[[["image",3]]]]],"p":[[8,"Set"],[4,"TransformerError"],[8,"Transformer"],[3,"Resize"],[3,"Crop"],[3,"Image"],[3,"Word"],[8,"Modifier"],[3,"Grayscale"]]},\
"juice":{"doc":"Juice is a open, modular and clear-designed Machine…","i":[[0,"layer","juice","Provides the generics and interfaces for the specific…",null,null],[3,"Layer","juice::layer","The generic Layer",null,null],[12,"name","","Identifies the Network",0,null],[12,"config","","The configuration of the Layer",0,null],[12,"worker","","The [implementation][1] of the Layer. [1]:…",0,null],[12,"weights_data","","The vector that stores shared references to the weights in…",0,null],[12,"weights_gradient","","The vector that stores shared references to the weights in…",0,null],[12,"input_blobs_data","","References to all the input blobs of the layer.",0,null],[12,"input_blobs_gradient","","References to all the input blobs of the layer.",0,null],[12,"input_blob_names","","Names for all the input blobs of the layer.",0,null],[12,"output_blobs_data","","References to all the output blobs of the layer.",0,null],[12,"output_blobs_gradient","","References to all the output blobs of the layer.",0,null],[12,"blob_names","","All the blobs of the layer that can be addressed by name.",0,null],[3,"LayerConfig","","Layer Configuration Struct",null,null],[12,"name","","The name of the Layer",1,null],[12,"layer_type","","The type of the Layer",1,null],[12,"outputs","","The name for each output Blob",1,null],[12,"inputs","","The name for each input Blob",1,null],[12,"params","","Specifies training configuration for each weight blob.",1,null],[12,"propagate_down","","Specifies on which inputs the backpropagation should be…",1,null],[4,"LayerType","","The Layer Types",null,null],[13,"Convolution","","Convolution Layer",2,null],[13,"Rnn","","RNN Layer",2,null],[13,"Linear","","Linear Layer",2,null],[13,"LogSoftmax","","LogSoftmax Layer",2,null],[13,"Pooling","","Pooling Layer",2,null],[13,"Sequential","","Sequential Layer",2,null],[13,"Softmax","","Softmax Layer",2,null],[13,"Dropout","","Dropout",2,null],[13,"ReLU","","ReLU Layer",2,null],[13,"TanH","","TanH Layer",2,null],[13,"Sigmoid","","Sigmoid Layer",2,null],[13,"NegativeLogLikelihood","","NegativeLogLikelihood Layer",2,null],[13,"MeanSquaredError","","MeanSquaredError Layer",2,null],[13,"Reshape","","Reshape Layer",2,null],[8,"ILayer","","A Layer in a Neural Network that can handle forward and…",null,null],[11,"init","","Initialize the layer for computation.",3,[[["rc",3]]]],[11,"reshape","","Adjust to shapes of the output blobs to fit the shapes of…",3,[[["rc",3],["vec",3]]]],[11,"resize_shared_workspace","","Adjust size of shared workspace.",3,[[["rc",3],["option",4],["arclock",6]],[["option",4],["arclock",6]]]],[11,"forward","","Compute the [feedforward][1] layer output using the…",3,[[]]],[11,"backward_input","","Compute the [backpropagation][1] input gradient using the…",3,[[]]],[11,"backward_parameters","","Compute the [backpropagation][1] parameters gradient using…",3,[[]]],[11,"auto_output_blobs","","Return whether \\\"anonymous\\\" output blobs are created…",3,[[]]],[11,"min_output_blobs","","Returns the minimum number of output blobs required by the…",3,[[]]],[11,"exact_num_output_blobs","","Returns the exact number of output blobs required by the…",3,[[],["option",4]]],[11,"auto_weight_blobs","","Return whether weight blobs are created automatically for…",3,[[]]],[11,"exact_num_input_blobs","","Returns the exact number of input blobs required by the…",3,[[],["option",4]]],[11,"allow_force_backward","","Return whether to allow force_backward for a given input…",3,[[]]],[11,"sync_native","","Return wether a simple native backend should be used to…",3,[[]]],[11,"compute_in_place","","Return wether the computations of a layer should be done…",3,[[]]],[11,"is_container","","Return wether the layer is a container.",3,[[]]],[11,"loss_weight","","Return the associated loss weight for a given output blob…",3,[[],["option",4]]],[11,"inputs_data","","Return the input tensors of the layer.",3,[[],[["option",4],["vec",3]]]],[11,"inputs_gradients","","Return the gradients of the input tensors of the layer.",3,[[],[["option",4],["vec",3]]]],[11,"outputs_data","","Return the output tensors of the layer.",3,[[],[["option",4],["vec",3]]]],[11,"outputs_gradients","","Return the gradients of the output tensors of the layer.",3,[[],[["option",4],["vec",3]]]],[11,"learnable_weights","","Return the learnable weights inside the layer.",3,[[],[["option",4],["vec",3]]]],[11,"learnable_weights_gradients","","Return the gradients for the learnable weights inside the…",3,[[],[["option",4],["vec",3]]]],[11,"learnable_weights_names","","Return the names of the learnable weights inside the layer.",3,[[],[["option",4],["vec",3]]]],[11,"learnable_weights_lr","","Return the learning rates for the learnable weights inside…",3,[[],[["option",4],["vec",3]]]],[8,"ComputeOutput","","A Layer that can compute the output for a given input.",null,null],[10,"compute_output","","Compute output for given input and write them into…",4,[[]]],[8,"ComputeInputGradient","","A Layer that can compute the gradient with respect to its…",null,null],[10,"compute_input_gradient","","Compute gradients with respect to the inputs and write…",5,[[]]],[8,"ComputeParametersGradient","","A Layer that can compute the gradient with respect to its…",null,null],[11,"compute_parameters_gradient","","Compute gradients with respect to the parameters and write…",6,[[]]],[11,"connect","","Connect the layer to another layers and set up tensors for…",0,[[["hashmap",3],["hashmap",3]]]],[11,"init_backprop","","Initializes layer for [backpropagation][1] [1]:…",0,[[["hashset",3]]]],[11,"init_force_backward","","Set [backpropagation][1] flags to force this layer to…",0,[[]]],[11,"forward","","Uses the underlying layer implementation to compute a…",0,[[],[["arclock",6],["vec",3]]]],[11,"backward","","Uses the underlying layer implementation to compute a…",0,[[],[["arclock",6],["vec",3]]]],[11,"backward_input","","Calculate the gradient w.r.t. input.",0,[[],[["arclock",6],["vec",3]]]],[11,"backward_parameters","","Calculate the gradient w.r.t. parameters.",0,[[]]],[11,"synchronize","","Synchronize the layers backend.",0,[[]]],[11,"update_weights","","Updates the [weights][1] with the weight update computed…",0,[[]]],[11,"clear_weights_gradients","","Clears the [weights][1] gradients and zero-inits them.…",0,[[]]],[11,"save","","Serialize the Layer and it\'s weights to a Cap\'n Proto file…",0,[[["asref",8],["path",3]],["result",6]]],[11,"load","","Read a Cap\'n Proto file at the specified path and…",0,[[["rc",3],["path",3],["layerops",8],["ibackend",8],["asref",8]],[["layer",3],["result",6]]]],[11,"set_weight_propagate_down","","Sets whether the layer should compute gradients w.r.t. a…",0,[[]]],[11,"is_using_in_place","","Returns `true` when the layer is using in-place computation.",0,[[]]],[11,"input_blob_names","","Returns the names of all the input blobs.",0,[[]]],[11,"loss","","Returns the [loss weight][1] associated with the weight…",0,[[],["option",4]]],[11,"learnable_weights_data","","Returns all the learnable weights in the layer.",0,[[],[["arclock",6],["vec",3]]]],[11,"learnable_weights_gradients","","Returns the gradients for all the learnable weights in the…",0,[[],[["arclock",6],["vec",3]]]],[11,"learnable_weights_names","","Returns the names of all the learnable weights in the layer.",0,[[],[["string",3],["vec",3]]]],[11,"learnable_weights_lr","","Returns the learning rate for all the learnable weights in…",0,[[],[["vec",3],["option",4]]]],[11,"from_config","","Creates a new Layer from a [LayerConfig][1]. [1]:…",0,[[["rc",3],["layerconfig",3]],["layer",3]]],[11,"supports_in_place","","Returns wether the LayerType supports in-place operations.",2,[[]]],[11,"new","","Creates a new LayerConfig",1,[[["into",8],["layertype",4]],["layerconfig",3]]],[11,"output","","Returns the Name of the requested output Blob",1,[[],[["string",3],["option",4]]]],[11,"outputs_len","","Returns the number of output Blobs",1,[[]]],[11,"add_output","","Add a output by name",1,[[]]],[11,"input","","Returns the Name of the requested input Blob",1,[[],[["string",3],["option",4]]]],[11,"inputs_len","","Returns the number of input Blobs",1,[[]]],[11,"add_input","","Add a input by name",1,[[]]],[11,"param","","Returns the requested WeightConfig",1,[[],[["option",4],["weightconfig",3]]]],[11,"params_len","","Returns the number of params",1,[[]]],[11,"validate","","Check if the configured parameters make sense.",1,[[],["result",4]]],[0,"layers","juice","Provides the fundamental units of computation in a Neural…",null,null],[0,"activation","juice::layers","Provides nonlinear activation methods.",null,null],[0,"relu","juice::layers::activation","Applies the nonlinear Rectified Linear Unit.",null,null],[3,"ReLU","juice::layers::activation::relu","ReLU Activation Layer",null,null],[0,"sigmoid","juice::layers::activation","Applies the nonlinear Log-Sigmoid function.",null,null],[3,"Sigmoid","juice::layers::activation::sigmoid","Sigmoid Activation Layer",null,null],[0,"tanh","juice::layers::activation","Applies the nonlinear TanH function.",null,null],[3,"TanH","juice::layers::activation::tanh","TanH Activation Layer",null,null],[0,"common","juice::layers","Provides common neural network layers.",null,null],[0,"convolution","juice::layers::common","Convolves the input tensor.",null,null],[3,"Convolution","juice::layers::common::convolution","Convolution Layer",null,null],[3,"ConvolutionConfig","","Specifies configuration parameters for a Convolution Layer.",null,null],[12,"num_output","","The number of output feature maps",7,null],[12,"filter_shape","","The size of the kernel",7,null],[12,"stride","","The stride size",7,null],[12,"padding","","The padding size",7,null],[11,"from_config","","Create a Convolution layer from a ConvolutionConfig.",8,[[["convolutionconfig",3]],["convolution",3]]],[0,"dropout","juice::layers::common","Applies a Dropout layer to the input data `x`",null,null],[3,"Dropout","juice::layers::common::dropout","Dropout Layer",null,null],[3,"DropoutConfig","","Specifies configuration parameters for a Dropout Layer.",null,null],[12,"probability","","The probability to clamp a value to zero",9,null],[12,"seed","","The initial seed for the (pseudo-)random generator",9,null],[11,"from_config","","Create a Dropout layer from a DropoutConfig.",10,[[["dropoutconfig",3]],["dropout",3]]],[0,"linear","juice::layers::common","Applies a linear transformation to the input data `y = a *…",null,null],[3,"Linear","juice::layers::common::linear","Linear Layer",null,null],[3,"LinearConfig","","Specifies configuration parameters for a Linear Layer.",null,null],[12,"output_size","","The number of output values",11,null],[11,"from_config","","Create a Linear layer from a LinearConfig.",12,[[["linearconfig",3]],["linear",3]]],[0,"log_softmax","juice::layers::common","Computes the logarithmic softmax of its input.",null,null],[3,"LogSoftmax","juice::layers::common::log_softmax","LogSoftmax Layer",null,null],[0,"pooling","juice::layers::common","Applies pooling to the input.",null,null],[3,"Pooling","juice::layers::common::pooling","Pooling Layer",null,null],[3,"PoolingConfig","","Specifies configuration parameters for a Pooling Layer.",null,null],[12,"mode","","The PoolingMode to use",13,null],[12,"filter_shape","","The shape of the filter",13,null],[12,"stride","","The stride size",13,null],[12,"padding","","The padding size",13,null],[4,"PoolingMode","","The different modes of pooling that can be calculated.",null,null],[13,"Max","","The maximum value inside the pooling window will be used…",14,null],[13,"Average","","The average of all values inside the pooling window will…",14,null],[11,"from_config","","Create a Pooling layer from a PoolingConfig.",15,[[["poolingconfig",3]],["pooling",3]]],[0,"rnn","juice::layers::common","Create a Recursive Layer",null,null],[3,"Rnn","juice::layers::common::rnn","",null,null],[3,"RnnConfig","","Specifies configuration parameters for a RNN Layer. TODO:…",null,null],[12,"hidden_size","","Size of the Hidden Layer",16,null],[12,"num_layers","","Number of Hidden Layers",16,null],[12,"rnn_type","","Type of RNN",16,null],[12,"dropout_probability","","Dropout Probability",16,null],[12,"dropout_seed","","Dropout Seed",16,null],[12,"input_mode","","Input Mode",16,null],[12,"direction_mode","","RNN Direction",16,null],[11,"from_config","","Create a RNN from a RNNConfig",17,[[["rnnconfig",3]],["rnn",3]]],[0,"softmax","juice::layers::common","Computes the softmax of its input.",null,null],[3,"Softmax","juice::layers::common::softmax","Softmax Layer",null,null],[8,"FilterLayer","juice::layers::common","Provides common utilities for Layers that utilize a filter…",null,null],[11,"calculate_spatial_output_dims","","Computes the shape of the spatial dimensions.",18,[[],["vec",3]]],[10,"calculate_output_shape","","Calculate output shape based on the shape of filter,…",18,[[],["vec",3]]],[10,"num_spatial_dims","","Calculates the number of spatial dimensions for the…",18,[[]]],[11,"spatial_filter_dims","","Retrievs the spatial dimensions for the filter based on…",18,[[],["vec",3]]],[11,"stride_dims","","Retrievs the stride for the convolution based on…",18,[[],["vec",3]]],[11,"padding_dims","","Retrievs the padding for the convolution based on…",18,[[],["vec",3]]],[10,"filter_shape","","The filter_shape that will be used by `spatial_filter_dims`.",18,[[]]],[10,"stride","","The stride that will be used by `stride_dims`.",18,[[]]],[10,"padding","","The padding that will be used by `padding_dims`.",18,[[]]],[0,"container","juice::layers","Provides container layers.",null,null],[0,"sequential","juice::layers::container","A container layer that runs operations sequentially on the…",null,null],[3,"Sequential","juice::layers::container::sequential","Sequential Layer",null,null],[3,"SequentialConfig","","Specifies configuration parameters for a Sequential Layer.",null,null],[12,"layers","","Defines the layers of the container via…",19,null],[12,"inputs","","Defines the names and shapes of the input tensors.",19,null],[12,"force_backward","","Defines if the container will force every layer to do…",19,null],[11,"empty","","Create a empty Sequential container layer.",20,[[],["sequential",3]]],[11,"from_config","","Create a Sequential layer from a SequentialConfig.",20,[[["sequentialconfig",3],["rc",3]],["sequential",3]]],[11,"init_layers","","Initializes a sequential container.",20,[[["sequentialconfig",3],["rc",3]]]],[11,"find_in_place_output","","Tries to find the output of a previous layer that is…",19,[[],[["string",3],["option",4]]]],[11,"add_layer","","Add layer at the end of the sequential container.",19,[[["layerconfig",3]]]],[11,"add_input","","Add a input to the network.",19,[[]]],[0,"loss","juice::layers","Provides methods to calculate the loss (cost) of some…",null,null],[0,"mean_squared_error","juice::layers::loss","Provides Loss & Gradient for Mean Squared Error",null,null],[3,"MeanSquaredError","juice::layers::loss::mean_squared_error","Mean Squared Error Layer",null,null],[0,"negative_log_likelihood","juice::layers::loss","TODO: DOC",null,null],[3,"NegativeLogLikelihood","juice::layers::loss::negative_log_likelihood","NegativeLogLikelihood Loss Layer",null,null],[3,"NegativeLogLikelihoodConfig","","Specifies configuration parameters for a…",null,null],[12,"num_classes","","How many different classes can be classified.",21,null],[11,"from_config","","Create a NegativeLogLikelihood layer from a…",22,[[["negativeloglikelihoodconfig",3]],["negativeloglikelihood",3]]],[0,"utility","juice::layers","Provides various helpful layers, which might be not…",null,null],[0,"flatten","juice::layers::utility","Flattens the bottom Blob into a simpler top Blob.",null,null],[3,"Flatten","juice::layers::utility::flatten","Flattening Utility Layer",null,null],[0,"reshape","juice::layers::utility","Utility layer to give a tensor another shape.",null,null],[3,"Reshape","juice::layers::utility::reshape","Reshape Utility Layer",null,null],[3,"ReshapeConfig","","Specifies configuration parameters for a Reshape Layer.",null,null],[12,"shape","","The target shape that the input should assume.",23,null],[11,"from_config","","Create a Reshape layer from a ReshapeConfig.",24,[[["reshapeconfig",3]],["reshape",3]]],[11,"of_shape","","Create a ReshapeConfig that describes a Reshape layer with…",23,[[],["reshapeconfig",3]]],[0,"solver","juice","Provides the generics and interfaces for the specific…",null,null],[3,"Solver","juice::solver","Solver that optimizes a [Layer][1] with a given objective.…",null,null],[12,"worker","","The implementation of the Solver",25,null],[3,"SolverConfig","","Configuration for a Solver",null,null],[12,"name","","Name of the solver.",26,null],[12,"network","","The [LayerConfig][1] that is used to initialize the…",26,null],[12,"objective","","The [LayerConfig][1] that is used to initialize the…",26,null],[12,"solver","","The [Solver implementation][1] to be used. [1]:…",26,null],[12,"minibatch_size","","Accumulate gradients over `minibatch_size` instances.",26,null],[12,"lr_policy","","The learning rate policy to be used.",26,null],[12,"base_lr","","The base learning rate.",26,null],[12,"gamma","","gamma as used in the calculation of most learning rate…",26,null],[12,"stepsize","","The stepsize used in Step and Sigmoid learning policies.",26,null],[12,"clip_gradients","","The threshold for clipping gradients.",26,null],[12,"weight_decay","","The global [weight decay][1] multiplier for…",26,null],[12,"regularization_method","","The method of [regularization][1] to use. [1]:…",26,null],[12,"momentum","","The [momentum][1] multiplier for [SGD solvers][2]. [1]:…",26,null],[4,"SolverKind","","All available types of solvers.",null,null],[13,"SGD","","Stochastic Gradient Descent. See [SGDKind][1] for all…",27,null],[4,"SGDKind","","All available types of Stochastic Gradient Descent solvers.",null,null],[13,"Momentum","","Stochastic Gradient Descent with Momentum. See…",28,null],[4,"LRPolicy","","Learning Rate Policy for a [Solver][1] [1]:…",null,null],[13,"Fixed","","always return base_lr",29,null],[13,"Step","","learning rate decays every `step` iterations. return…",29,null],[13,"Exp","","return base_lr * gamma ^ iter",29,null],[4,"RegularizationMethod","","[Regularization][1] method for a [Solver][2]. [1]:…",null,null],[13,"L2","","L2 regularization",30,null],[0,"confusion_matrix","","TODO: DOC",null,null],[3,"ConfusionMatrix","juice::solver::confusion_matrix","A [ConfusionMatrix][wiki].",null,null],[3,"Sample","","A single prediction Sample.",null,null],[3,"Accuracy","","The accuracy of the predictions in a ConfusionMatrix.",null,null],[11,"new","","Create a ConfusionMatrix that analyzes the prediction of…",31,[[],["confusionmatrix",3]]],[11,"add_sample","","Add a sample by providing the expected `target` class and…",31,[[]]],[11,"add_samples","","Add a batch of samples.",31,[[]]],[11,"get_predictions","","Get the predicted classes from the output of a network.",31,[[["sharedtensor",3]],["vec",3]]],[11,"set_capacity","","Set the `capacity` of the ConfusionMatrix",31,[[["option",4]]]],[11,"samples","","Return all collected samples.",31,[[],["vecdeque",3]]],[11,"accuracy","","Return the accuracy of the collected predictions.",31,[[],["accuracy",3]]],[11,"correct","","Returns if the prediction is equal to the expected target.",32,[[]]],[0,"regression_evaluator","juice::solver","Set of Evaluators for Regression Problems",null,null],[3,"RegressionEvaluator","juice::solver::regression_evaluator","Sampled Evaluator for Regression Problems",null,null],[3,"Sample","","A single prediction sample.",null,null],[3,"MeanSquaredErrorAccuracy","","Provides loss calculated by Mean Squared Error for sampled…",null,null],[8,"RegressionLoss","","Trait to show loss & metric for a Regression Evaluator",null,null],[10,"loss","","Loss function to produce metric",33,[[]]],[11,"new","","Create an evaluator for Regression Problems",34,[[["string",3],["option",4]],["regressionevaluator",3]]],[11,"add_sample","","Add a sample by providing the expected `target` value and…",34,[[]]],[11,"add_samples","","Add a batch of samples.",34,[[]]],[11,"get_predictions","","Get the predicted value from the output of a network.",34,[[["sharedtensor",3]],["vec",3]]],[11,"set_capacity","","Set the `capacity` of the Regression Evaluator",34,[[["option",4]]]],[11,"samples","","Return all collected samples.",34,[[],["vecdeque",3]]],[11,"accuracy","","Return the accuracy of the collected predictions.",34,[[]]],[8,"ISolver","juice::solver","Implementation of a specific Solver.",null,null],[11,"init","","Initialize the solver, setting up any network related data.",35,[[["layer",3]]]],[10,"compute_update","","Update the weights of the net with part of the gradient.",35,[[["solverconfig",3],["layer",3]]]],[10,"backend","","Returns the backend used by the solver.",35,[[]]],[11,"from_config","","Create Solver from [SolverConfig][1] [1]:…",25,[[["rc",3],["rc",3],["solverconfig",3]],["solver",3]]],[11,"train_minibatch","","Train the network with one minibatch",25,[[["arclock",6],["sharedtensor",3]],[["arclock",6],["sharedtensor",3]]]],[11,"network","","Returns the network trained by the solver.",25,[[],["layer",3]]],[11,"mut_network","","Returns the network trained by the solver.",25,[[],["layer",3]]],[11,"get_learning_rate","","Return the learning rate for a supplied iteration.",26,[[]]],[11,"with_config","","Create a Solver of the specified kind with the supplied…",27,[[["rc",3],["solverconfig",3],["ibackend",8],["solverops",8]],[["isolver",8],["box",3]]]],[11,"with_config","","Create a Solver of the specified kind with the supplied…",28,[[["rc",3],["solverconfig",3],["ibackend",8],["solverops",8]],[["isolver",8],["box",3]]]],[0,"solvers","juice","Provides the trainers for the Layers.",null,null],[0,"sgd","juice::solvers","Provides ISolver implementations based on [Stochastic…",null,null],[0,"momentum","juice::solvers::sgd","A [Stochastic Gradient Descent with Momentum][1] [1]:…",null,null],[3,"Momentum","juice::solvers::sgd::momentum","Stochastic Gradient Descent with Momentum.",null,null],[11,"new","","Create a new SGD Momentum solver.",36,[[["rc",3]],["momentum",3]]],[0,"weight","juice","Provides configuration of weights and their initialization.",null,null],[3,"WeightConfig","juice::weight","Specifies training configuration for a weight blob.",null,null],[12,"name","","The name of the weight blob -- useful for sharing weights…",37,null],[12,"share_mode","","Whether to require shared weights to have the same shape,…",37,null],[12,"lr_mult","","The multiplier on the global learning rate for this…",37,null],[12,"decay_mult","","The multiplier on the global weight decay for this…",37,null],[12,"filler","","The filler that initializes the weights in the weight blob.",37,null],[4,"DimCheckMode","","Enum for specifing the shared weights behaviour",null,null],[13,"Strict","","Strict requires that shapes match.",38,null],[13,"Permissive","","Permissive requires only the count of weights to match.",38,null],[4,"FillerType","","Enum for specifing the type of Filler.",null,null],[13,"Constant","","Fills the weight blob with a constant `value` (all values…",39,null],[12,"value","juice::weight::FillerType","The value that will be used to fill the blob.",40,null],[13,"Glorot","juice::weight","Fills the weight blobs based on the paper:",39,null],[12,"input_size","juice::weight::FillerType","Number of input nodes for each output.",41,null],[12,"output_size","","Number of output nodes for each input.",41,null],[11,"check_dimensions","juice::weight","Checks dimensions of two blobs according to the…",37,[[["string",3],["sharedtensor",3]],[["result",4],["string",3]]]],[11,"lr_mult","","The multiplier on the global learning rate for this weight…",37,[[]]],[11,"decay_mult","","The multiplier on the global weight decay for this weight…",37,[[]]],[11,"fill","","Uses a filler as specified by this FillerType to fill the…",39,[[["sharedtensor",3]]]],[11,"fill_constant","","Directly use the Constant Filler.",39,[[["sharedtensor",3]]]],[11,"fill_glorot","","Directly use the Glorot Filler.",39,[[["sharedtensor",3]]]],[0,"util","juice","Provides common utility functions",null,null],[5,"native_backend","juice::util","Create a simple native backend.",null,[[],[["backend",3],["native",3]]]],[5,"write_to_memory","","Write into a native Coaster Memory.",null,[[["flatbox",3]]]],[5,"write_to_memory_offset","","Write into a native Coaster Memory with a offset.",null,[[["flatbox",3]]]],[5,"write_batch_sample","","Write the `i`th sample of a batch into a SharedTensor.",null,[[["sharedtensor",3]]]],[5,"native_scalar","","Create a Coaster SharedTensor for a scalar value.",null,[[["copy",8],["numcast",8]],[["copy",8],["sharedtensor",3],["numcast",8]]]],[5,"cast_vec_usize_to_i32","","Casts a Vec to as Vec",null,[[["vec",3]],["vec",3]]],[6,"ArcLock","","Shared Lock used for our tensors",null,null],[8,"Axpby","","Extends IBlas with Axpby",null,null],[11,"axpby","","Performs the operation y := ax + by .",42,[[["sharedtensor",3],["sharedtensor",3]],[["result",4],["error",4]]]],[8,"SolverOps","","Encapsulates all traits required by Solvers.",null,null],[8,"LayerOps","","Encapsulates all traits used in Layers.",null,null],[14,"impl_ilayer_activation","juice","macro helper to implement activation trait TODO see common",null,null],[14,"impl_ilayer_common","","macro to implement ilayer common TODO use Some(1) as a…",null,null],[14,"impl_ilayer_loss","","macro helper for default loss",null,null],[14,"impl_isolver_sgd","","Implement [ISolver][1] for [SGD solvers][2]. [1]:…",null,null],[11,"from","juice::layer","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","juice::layers::activation::relu","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","juice::layers::activation::sigmoid","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","juice::layers::activation::tanh","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","juice::layers::common::convolution","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","juice::layers::common::dropout","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","juice::layers::common::linear","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","juice::layers::common::log_softmax","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","juice::layers::common::pooling","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","juice::layers::common::rnn","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","juice::layers::common::softmax","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","juice::layers::container::sequential","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","juice::layers::loss::mean_squared_error","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","juice::layers::loss::negative_log_likelihood","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","juice::layers::utility::flatten","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","juice::layers::utility::reshape","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","juice::solver","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","juice::solver::confusion_matrix","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","juice::solver::regression_evaluator","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","juice::solvers::sgd::momentum","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","juice::weight","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"exact_num_output_blobs","juice::layers::activation::relu","",43,[[],["option",4]]],[11,"exact_num_input_blobs","","",43,[[],["option",4]]],[11,"compute_in_place","","",43,[[]]],[11,"reshape","","",43,[[["vec",3],["rc",3]]]],[11,"exact_num_output_blobs","juice::layers::activation::sigmoid","",44,[[],["option",4]]],[11,"exact_num_input_blobs","","",44,[[],["option",4]]],[11,"compute_in_place","","",44,[[]]],[11,"reshape","","",44,[[["vec",3],["rc",3]]]],[11,"exact_num_output_blobs","juice::layers::activation::tanh","",45,[[],["option",4]]],[11,"exact_num_input_blobs","","",45,[[],["option",4]]],[11,"compute_in_place","","",45,[[]]],[11,"reshape","","",45,[[["vec",3],["rc",3]]]],[11,"exact_num_output_blobs","juice::layers::common::convolution","",8,[[],["option",4]]],[11,"exact_num_input_blobs","","",8,[[],["option",4]]],[11,"auto_weight_blobs","","",8,[[]]],[11,"reshape","","",8,[[["rc",3],["vec",3]]]],[11,"resize_shared_workspace","","",8,[[["rc",3],["option",4],["arclock",6]],[["option",4],["arclock",6]]]],[11,"exact_num_output_blobs","juice::layers::common::dropout","",10,[[],["option",4]]],[11,"exact_num_input_blobs","","",10,[[],["option",4]]],[11,"reshape","","",10,[[["vec",3],["rc",3]]]],[11,"auto_weight_blobs","juice::layers::common::linear","",12,[[]]],[11,"reshape","","",12,[[["vec",3],["rc",3]]]],[11,"exact_num_output_blobs","","",12,[[],["option",4]]],[11,"reshape","juice::layers::common::log_softmax","",46,[[["vec",3],["rc",3]]]],[11,"exact_num_output_blobs","juice::layers::common::pooling","",15,[[],["option",4]]],[11,"exact_num_input_blobs","","",15,[[],["option",4]]],[11,"reshape","","",15,[[["vec",3],["rc",3]]]],[11,"exact_num_output_blobs","juice::layers::common::rnn","",17,[[],["option",4]]],[11,"exact_num_input_blobs","","",17,[[],["option",4]]],[11,"auto_weight_blobs","","",17,[[]]],[11,"reshape","","",17,[[["rc",3],["vec",3]]]],[11,"resize_shared_workspace","","",17,[[["rc",3],["option",4],["arclock",6]],[["option",4],["arclock",6]]]],[11,"reshape","juice::layers::common::softmax","",47,[[["vec",3],["rc",3]]]],[11,"is_container","juice::layers::container::sequential","",20,[[]]],[11,"inputs_data","","",20,[[],[["option",4],["vec",3]]]],[11,"inputs_gradients","","",20,[[],[["option",4],["vec",3]]]],[11,"outputs_data","","",20,[[],[["option",4],["vec",3]]]],[11,"outputs_gradients","","",20,[[],[["option",4],["vec",3]]]],[11,"learnable_weights","","",20,[[],[["option",4],["vec",3]]]],[11,"learnable_weights_gradients","","",20,[[],[["option",4],["vec",3]]]],[11,"learnable_weights_names","","",20,[[],[["option",4],["vec",3]]]],[11,"resize_shared_workspace","","",20,[[["rc",3],["option",4],["arclock",6]],[["option",4],["arclock",6]]]],[11,"forward","","",20,[[]]],[11,"backward_input","","",20,[[]]],[11,"backward_parameters","","",20,[[]]],[11,"reshape","juice::layers::loss::mean_squared_error","",48,[[["vec",3],["rc",3]]]],[11,"exact_num_output_blobs","juice::layers::loss::negative_log_likelihood","",22,[[],["option",4]]],[11,"exact_num_input_blobs","","",22,[[],["option",4]]],[11,"auto_output_blobs","","",22,[[]]],[11,"loss_weight","","",22,[[],["option",4]]],[11,"sync_native","","",22,[[]]],[11,"reshape","","",22,[[["vec",3],["rc",3]]]],[11,"compute_in_place","juice::layers::utility::reshape","",24,[[]]],[11,"auto_output_blobs","","",24,[[]]],[11,"reshape","","",24,[[["vec",3],["rc",3]]]],[11,"compute_output","juice::layers::activation::relu","",43,[[]]],[11,"compute_output","juice::layers::activation::sigmoid","",44,[[]]],[11,"compute_output","juice::layers::activation::tanh","",45,[[]]],[11,"compute_output","juice::layers::common::convolution","",8,[[]]],[11,"compute_output","juice::layers::common::dropout","",10,[[]]],[11,"compute_output","juice::layers::common::linear","Basically, x has the shape (k, n) where k is the batch…",12,[[]]],[11,"compute_output","juice::layers::common::log_softmax","",46,[[]]],[11,"compute_output","juice::layers::common::pooling","",15,[[]]],[11,"compute_output","juice::layers::common::rnn","",17,[[]]],[11,"compute_output","juice::layers::common::softmax","",47,[[]]],[11,"compute_output","juice::layers::container::sequential","",20,[[]]],[11,"compute_output","juice::layers::loss::mean_squared_error","",48,[[]]],[11,"compute_output","juice::layers::loss::negative_log_likelihood","",22,[[]]],[11,"compute_output","juice::layers::utility::reshape","",24,[[]]],[11,"compute_input_gradient","juice::layers::activation::relu","",43,[[]]],[11,"compute_input_gradient","juice::layers::activation::sigmoid","",44,[[]]],[11,"compute_input_gradient","juice::layers::activation::tanh","",45,[[]]],[11,"compute_input_gradient","juice::layers::common::convolution","",8,[[]]],[11,"compute_input_gradient","juice::layers::common::dropout","",10,[[]]],[11,"compute_input_gradient","juice::layers::common::linear","Since we have row vectors instead of columns, xW^T =…",12,[[]]],[11,"compute_input_gradient","juice::layers::common::log_softmax","",46,[[]]],[11,"compute_input_gradient","juice::layers::common::pooling","",15,[[]]],[11,"compute_input_gradient","juice::layers::common::rnn","",17,[[]]],[11,"compute_input_gradient","juice::layers::common::softmax","",47,[[]]],[11,"compute_input_gradient","juice::layers::container::sequential","",20,[[]]],[11,"compute_input_gradient","juice::layers::loss::mean_squared_error","",48,[[]]],[11,"compute_input_gradient","juice::layers::loss::negative_log_likelihood","",22,[[]]],[11,"compute_input_gradient","juice::layers::utility::reshape","",24,[[]]],[11,"compute_parameters_gradient","juice::layers::common::convolution","",8,[[]]],[11,"compute_parameters_gradient","juice::layers::common::linear","",12,[[]]],[11,"compute_parameters_gradient","juice::layers::common::rnn","",17,[[]]],[11,"compute_parameters_gradient","juice::layers::container::sequential","",20,[[]]],[11,"num_spatial_dims","juice::layers::common::convolution","Calculates the number of spatial dimensions for the…",8,[[]]],[11,"calculate_output_shape","","",8,[[],["vec",3]]],[11,"filter_shape","","",8,[[]]],[11,"stride","","",8,[[]]],[11,"padding","","",8,[[]]],[11,"num_spatial_dims","juice::layers::common::pooling","Calculates the number of spatial dimensions for the…",15,[[]]],[11,"calculate_output_shape","","",15,[[],["vec",3]]],[11,"filter_shape","","",15,[[]]],[11,"stride","","",15,[[]]],[11,"padding","","",15,[[]]],[11,"loss","juice::solver::regression_evaluator","",52,[[]]],[11,"init","juice::solvers::sgd::momentum","Initialize the SGD Momentum solver, allocating memory for…",36,[[["layer",3]]]],[11,"compute_update","","",36,[[["solverconfig",3],["layer",3]]]],[11,"backend","","",36,[[]]],[11,"into","juice::layers::common::convolution","",7,[[],["layertype",4]]],[11,"into","juice::layers::common::dropout","",9,[[],["layertype",4]]],[11,"into","juice::layers::common::linear","",11,[[],["layertype",4]]],[11,"into","juice::layers::common::pooling","",13,[[],["layertype",4]]],[11,"into","juice::layers::common::rnn","",16,[[],["layertype",4]]],[11,"into","juice::layers::container::sequential","",19,[[],["layertype",4]]],[11,"into","juice::layers::loss::negative_log_likelihood","",21,[[],["layertype",4]]],[11,"into","juice::layers::utility::reshape","",23,[[],["layertype",4]]],[11,"clone","juice::layer","",1,[[],["layerconfig",3]]],[11,"clone","","",2,[[],["layertype",4]]],[11,"clone","juice::layers::activation::relu","",43,[[],["relu",3]]],[11,"clone","juice::layers::activation::sigmoid","",44,[[],["sigmoid",3]]],[11,"clone","juice::layers::activation::tanh","",45,[[],["tanh",3]]],[11,"clone","juice::layers::common::convolution","",8,[[],["convolution",3]]],[11,"clone","","",7,[[],["convolutionconfig",3]]],[11,"clone","juice::layers::common::dropout","",10,[[],["dropout",3]]],[11,"clone","","",9,[[],["dropoutconfig",3]]],[11,"clone","juice::layers::common::linear","",11,[[],["linearconfig",3]]],[11,"clone","juice::layers::common::log_softmax","",46,[[],["logsoftmax",3]]],[11,"clone","juice::layers::common::pooling","",15,[[],["pooling",3]]],[11,"clone","","",13,[[],["poolingconfig",3]]],[11,"clone","","",14,[[],["poolingmode",4]]],[11,"clone","juice::layers::common::rnn","",17,[[],["rnn",3]]],[11,"clone","","",16,[[],["rnnconfig",3]]],[11,"clone","juice::layers::common::softmax","",47,[[],["softmax",3]]],[11,"clone","juice::layers::container::sequential","",19,[[],["sequentialconfig",3]]],[11,"clone","juice::layers::loss::mean_squared_error","",48,[[],["meansquarederror",3]]],[11,"clone","juice::layers::loss::negative_log_likelihood","",22,[[],["negativeloglikelihood",3]]],[11,"clone","","",21,[[],["negativeloglikelihoodconfig",3]]],[11,"clone","juice::layers::utility::flatten","",49,[[],["flatten",3]]],[11,"clone","juice::layers::utility::reshape","",24,[[],["reshape",3]]],[11,"clone","","",23,[[],["reshapeconfig",3]]],[11,"clone","juice::solver::confusion_matrix","",32,[[],["sample",3]]],[11,"clone","","",50,[[],["accuracy",3]]],[11,"clone","juice::solver::regression_evaluator","",51,[[],["sample",3]]],[11,"clone","","",52,[[],["meansquarederroraccuracy",3]]],[11,"clone","juice::solver","",26,[[],["solverconfig",3]]],[11,"clone","","",27,[[],["solverkind",4]]],[11,"clone","","",28,[[],["sgdkind",4]]],[11,"clone","","",29,[[],["lrpolicy",4]]],[11,"clone","","",30,[[],["regularizationmethod",4]]],[11,"clone","juice::weight","",37,[[],["weightconfig",3]]],[11,"clone","","",38,[[],["dimcheckmode",4]]],[11,"clone","","",39,[[],["fillertype",4]]],[11,"default","juice::layers::common::dropout","",9,[[],["dropoutconfig",3]]],[11,"default","juice::layers::common::linear","",12,[[],["linear",3]]],[11,"default","juice::layers::common::log_softmax","",46,[[],["logsoftmax",3]]],[11,"default","juice::layers::common::softmax","",47,[[],["softmax",3]]],[11,"default","juice::layers::container::sequential","",19,[[],["sequentialconfig",3]]],[11,"default","juice::layers::loss::mean_squared_error","",48,[[],["meansquarederror",3]]],[11,"default","juice::solver","",26,[[],["solverconfig",3]]],[11,"default","juice::weight","",37,[[],["weightconfig",3]]],[11,"fmt","juice::layer","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::activation::relu","",43,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::activation::sigmoid","",44,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::activation::tanh","",45,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::common::convolution","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::common::dropout","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::common::linear","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::common::log_softmax","",46,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::common::pooling","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::common::rnn","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::common::softmax","",47,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::container::sequential","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::loss::mean_squared_error","",48,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::loss::negative_log_likelihood","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::utility::flatten","",49,[[["formatter",3]],["result",6]]],[11,"fmt","juice::layers::utility::reshape","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","juice::solver::confusion_matrix","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","juice::solver::regression_evaluator","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","juice::solver","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","juice::solvers::sgd::momentum","",36,[[["formatter",3]],["result",6]]],[11,"fmt","juice::weight","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","juice::solver::confusion_matrix","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","juice::solver::regression_evaluator","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]]],"p":[[3,"Layer"],[3,"LayerConfig"],[4,"LayerType"],[8,"ILayer"],[8,"ComputeOutput"],[8,"ComputeInputGradient"],[8,"ComputeParametersGradient"],[3,"ConvolutionConfig"],[3,"Convolution"],[3,"DropoutConfig"],[3,"Dropout"],[3,"LinearConfig"],[3,"Linear"],[3,"PoolingConfig"],[4,"PoolingMode"],[3,"Pooling"],[3,"RnnConfig"],[3,"Rnn"],[8,"FilterLayer"],[3,"SequentialConfig"],[3,"Sequential"],[3,"NegativeLogLikelihoodConfig"],[3,"NegativeLogLikelihood"],[3,"ReshapeConfig"],[3,"Reshape"],[3,"Solver"],[3,"SolverConfig"],[4,"SolverKind"],[4,"SGDKind"],[4,"LRPolicy"],[4,"RegularizationMethod"],[3,"ConfusionMatrix"],[3,"Sample"],[8,"RegressionLoss"],[3,"RegressionEvaluator"],[8,"ISolver"],[3,"Momentum"],[3,"WeightConfig"],[4,"DimCheckMode"],[4,"FillerType"],[13,"Constant"],[13,"Glorot"],[8,"Axpby"],[3,"ReLU"],[3,"Sigmoid"],[3,"TanH"],[3,"LogSoftmax"],[3,"Softmax"],[3,"MeanSquaredError"],[3,"Flatten"],[3,"Accuracy"],[3,"Sample"],[3,"MeanSquaredErrorAccuracy"]]},\
"juice_utils":{"doc":"","i":[[5,"download_datasets","juice_utils","",null,[[],[["result",4],["box",3]]]],[5,"unzip_datasets","","",null,[[]]]],"p":[]},\
"rcublas":{"doc":"","i":[[3,"Context","rcublas","Provides a the low-level cuBLAS context.",null,null],[3,"API","","Defines the cuBLAS API.",null,null],[0,"api","","",null,null],[3,"Context","rcublas::api","Provides a the low-level cuBLAS context.",null,null],[4,"Operation","","",null,null],[13,"NoTrans","","",0,null],[13,"Trans","","",0,null],[13,"ConjTrans","","",0,null],[4,"PointerMode","","",null,null],[13,"Host","","",1,null],[13,"Device","","",1,null],[11,"new","rcublas","Create a new cuBLAS Context by calling the low-level API.",2,[[],[["context",3],["error",4],["result",4]]]],[11,"from_c","","Create a new cuBLAS Context from its C type.",2,[[["cublashandle_t",6]],["context",3]]],[11,"id_c","","Returns the cuBLAS Context as its C type.",2,[[],["cublashandle_t",6]]],[11,"pointer_mode","","",2,[[],[["result",4],["pointermode",4],["error",4]]]],[11,"set_pointer_mode","","",2,[[["pointermode",4]],[["error",4],["result",4]]]],[11,"asum","","",2,[[["option",4]],[["error",4],["result",4]]]],[11,"axpy","","",2,[[["option",4]],[["error",4],["result",4]]]],[11,"copy","","",2,[[["option",4]],[["error",4],["result",4]]]],[11,"dot","","",2,[[["option",4]],[["error",4],["result",4]]]],[11,"nrm2","","",2,[[["option",4]],[["error",4],["result",4]]]],[11,"scal","","",2,[[["option",4]],[["error",4],["result",4]]]],[11,"swap","","",2,[[["option",4]],[["error",4],["result",4]]]],[11,"gemm","","",2,[[["operation",4]],[["error",4],["result",4]]]],[11,"get_version","","",2,[[]]],[11,"asum","","Compute the sum of magnitudes of the provided vector…",3,[[["context",3],["option",4]],[["error",4],["result",4]]]],[11,"axpy","","Computes a vector-scalar product and adds the result to a…",3,[[["context",3],["option",4]],[["error",4],["result",4]]]],[11,"copy","","Copies a vector into another vector.",3,[[["context",3],["option",4]],[["error",4],["result",4]]]],[11,"dot","","TODO: DOC",3,[[["context",3],["option",4]],[["error",4],["result",4]]]],[11,"nrm2","","TODO: DOC",3,[[["context",3],["option",4]],[["error",4],["result",4]]]],[11,"scal","","TODO: DOC",3,[[["context",3],["option",4]],[["error",4],["result",4]]]],[11,"swap","","TODO: DOC",3,[[["context",3],["option",4]],[["error",4],["result",4]]]],[11,"gemm","","Performs a general matrix-matrix multiplication.",3,[[["context",3],["operation",4]],[["error",4],["result",4]]]],[11,"create","","Create a new cuBLAS context, allocating resources on the…",3,[[],[["context",3],["error",4],["result",4]]]],[11,"destroy","","Destroys the cuBLAS context, freeing its resources.",3,[[["context",3]],[["error",4],["result",4]]]],[11,"get_version","","Get CUBLAS Version",3,[[["context",3]],[["error",4],["result",4]]]],[11,"get_pointer_mode","","Retrieve the pointer mode for a given cuBLAS context.",3,[[["context",3]],[["result",4],["pointermode",4],["error",4]]]],[11,"set_pointer_mode","","Set the pointer mode for a given cuBLAS context.",3,[[["pointermode",4],["context",3]],[["error",4],["result",4]]]],[11,"from_c","rcublas::api","",1,[[["cublaspointermode_t",4]],["pointermode",4]]],[11,"as_c","","",1,[[],["cublaspointermode_t",4]]],[11,"from_c","","",0,[[["cublasoperation_t",4]],["operation",4]]],[11,"as_c","","",0,[[],["cublasoperation_t",4]]],[0,"error","rcublas","Provides Rust Errors for every cuBLAS status.",null,null],[4,"Error","rcublas::error","Defines cuBLAS errors.",null,null],[13,"NotInitialized","","Failure with cuBLAS initialization.",4,null],[13,"AllocFailed","","Failure with allocation.",4,null],[13,"InternalError","","Failure with cuDNN.",4,null],[13,"InvalidValue","","Failure with provided value.",4,null],[13,"ArchMismatch","","Failure with the hardware architecture.",4,null],[13,"MappingError","","Failure with memory access or internal error/bug.",4,null],[13,"ExecutionFailed","","Failure with Kernel execution.",4,null],[13,"NotSupported","","Failure with an unsupported request.",4,null],[13,"LicenseError","","Failure CUDA License.",4,null],[13,"Unknown","","Failure",4,null],[11,"from","rcublas","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","rcublas::api","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","rcublas::error","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"drop","rcublas","",2,[[]]],[11,"clone","","",3,[[],["api",3]]],[11,"clone","","",2,[[],["context",3]]],[11,"clone","rcublas::api","",1,[[],["pointermode",4]]],[11,"clone","","",0,[[],["operation",4]]],[11,"clone","rcublas::error","",4,[[],["error",4]]],[11,"eq","rcublas::api","",1,[[["pointermode",4]]]],[11,"eq","","",0,[[["operation",4]]]],[11,"fmt","rcublas","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","rcublas::api","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","rcublas::error","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"description","","",4,[[]]],[11,"cause","","",4,[[],[["error",8],["option",4]]]]],"p":[[4,"Operation"],[4,"PointerMode"],[3,"Context"],[3,"API"],[4,"Error"]]},\
"rcublas_sys":{"doc":"","i":[[3,"float2","rcublas_sys","",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"double2","","",null,null],[12,"x","","",1,null],[12,"y","","",1,null],[3,"dim3","","",null,null],[12,"x","","",2,null],[12,"y","","",2,null],[12,"z","","",2,null],[3,"cudaChannelFormatDesc","","CUDA Channel format descriptor",null,null],[12,"x","","< x",3,null],[12,"y","","< y",3,null],[12,"z","","< z",3,null],[12,"w","","< w",3,null],[12,"f","","< Channel format kind",3,null],[3,"cudaArray","","",null,null],[3,"cudaMipmappedArray","","",null,null],[3,"cudaPitchedPtr","","CUDA Pitched memory pointer",null,null],[12,"ptr","","< Pointer to allocated memory",4,null],[12,"pitch","","< Pitch of allocated memory in bytes",4,null],[12,"xsize","","< Logical width of allocation in elements",4,null],[12,"ysize","","< Logical height of allocation in elements",4,null],[3,"cudaExtent","","CUDA extent",null,null],[12,"width","","< Width in elements when referring to array memory, in…",5,null],[12,"height","","< Height in elements",5,null],[12,"depth","","< Depth in elements",5,null],[3,"cudaPos","","CUDA 3D position",null,null],[12,"x","","< x",6,null],[12,"y","","< y",6,null],[12,"z","","< z",6,null],[3,"cudaMemcpy3DParms","","CUDA 3D memory copying parameters",null,null],[12,"srcArray","","< Source memory address",7,null],[12,"srcPos","","< Source position offset",7,null],[12,"srcPtr","","< Pitched source memory address",7,null],[12,"dstArray","","< Destination memory address",7,null],[12,"dstPos","","< Destination position offset",7,null],[12,"dstPtr","","< Pitched destination memory address",7,null],[12,"extent","","< Requested memory copy size",7,null],[12,"kind","","< Type of transfer",7,null],[3,"cudaMemcpy3DPeerParms","","CUDA 3D cross-device memory copying parameters",null,null],[12,"srcArray","","< Source memory address",8,null],[12,"srcPos","","< Source position offset",8,null],[12,"srcPtr","","< Pitched source memory address",8,null],[12,"srcDevice","","< Source device",8,null],[12,"dstArray","","< Destination memory address",8,null],[12,"dstPos","","< Destination position offset",8,null],[12,"dstPtr","","< Pitched destination memory address",8,null],[12,"dstDevice","","< Destination device",8,null],[12,"extent","","< Requested memory copy size",8,null],[3,"cudaMemsetParams","","CUDA Memset node parameters",null,null],[12,"dst","","< Destination device pointer",9,null],[12,"pitch","","< Pitch of destination device pointer. Unused if height is 1",9,null],[12,"value","","< Value to be set",9,null],[12,"elementSize","","< Size of each element in bytes. Must be 1, 2, or 4.",9,null],[12,"width","","< Width in bytes, of the row",9,null],[12,"height","","< Number of rows",9,null],[3,"cudaHostNodeParams","","CUDA host node parameters",null,null],[12,"fn_","","< The function to call when the node executes",10,null],[12,"userData","","< Argument to pass to the function",10,null],[3,"cudaGraphicsResource","","CUDA graphics interop resource",null,null],[3,"cudaResourceDesc","","CUDA resource descriptor",null,null],[12,"resType","","< Resource type",11,null],[12,"res","","",11,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"array","","< CUDA array",12,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"mipmap","","< CUDA mipmapped array",13,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3","","",null,null],[12,"devPtr","","< Device pointer",14,null],[12,"desc","","< Channel descriptor",14,null],[12,"sizeInBytes","","< Size in bytes",14,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4","","",null,null],[12,"devPtr","","< Device pointer",15,null],[12,"desc","","< Channel descriptor",15,null],[12,"width","","< Width of the array in elements",15,null],[12,"height","","< Height of the array in elements",15,null],[12,"pitchInBytes","","< Pitch between two rows in bytes",15,null],[3,"cudaResourceViewDesc","","CUDA resource view descriptor",null,null],[12,"format","","< Resource view format",16,null],[12,"width","","< Width of the resource view",16,null],[12,"height","","< Height of the resource view",16,null],[12,"depth","","< Depth of the resource view",16,null],[12,"firstMipmapLevel","","< First defined mipmap level",16,null],[12,"lastMipmapLevel","","< Last defined mipmap level",16,null],[12,"firstLayer","","< First layer index",16,null],[12,"lastLayer","","< Last layer index",16,null],[3,"cudaPointerAttributes","","CUDA pointer attributes",null,null],[12,"memoryType","","\\\\deprecated",17,null],[12,"type_","","The type of memory - ::cudaMemoryTypeUnregistered,…",17,null],[12,"device","","The device against which the memory was allocated or…",17,null],[12,"devicePointer","","The address which may be dereferenced on the current…",17,null],[12,"hostPointer","","The address which may be dereferenced on the host to…",17,null],[12,"isManaged","","\\\\deprecated",17,null],[3,"cudaFuncAttributes","","CUDA function attributes",null,null],[12,"sharedSizeBytes","","The size in bytes of statically-allocated shared memory…",18,null],[12,"constSizeBytes","","The size in bytes of user-allocated constant memory…",18,null],[12,"localSizeBytes","","The size in bytes of local memory used by each thread of…",18,null],[12,"maxThreadsPerBlock","","The maximum number of threads per block, beyond which a…",18,null],[12,"numRegs","","The number of registers used by each thread of this…",18,null],[12,"ptxVersion","","The PTX virtual architecture version for which the…",18,null],[12,"binaryVersion","","The binary architecture version for which the function was…",18,null],[12,"cacheModeCA","","The attribute to indicate whether the function has been…",18,null],[12,"maxDynamicSharedSizeBytes","","The maximum size in bytes of dynamic shared memory per…",18,null],[12,"preferredShmemCarveout","","On devices where the L1 cache and shared memory use the…",18,null],[3,"CUuuid_st","","",null,null],[12,"bytes","","",19,null],[3,"cudaDeviceProp","","CUDA device properties",null,null],[12,"name","","< ASCII string identifying device",20,null],[12,"uuid","","< 16-byte unique identifier",20,null],[12,"luid","","< 8-byte locally unique identifier. Value is undefined on…",20,null],[12,"luidDeviceNodeMask","","< LUID device node mask. Value is undefined on TCC and…",20,null],[12,"totalGlobalMem","","< Global memory available on device in bytes",20,null],[12,"sharedMemPerBlock","","< Shared memory available per block in bytes",20,null],[12,"regsPerBlock","","< 32-bit registers available per block",20,null],[12,"warpSize","","< Warp size in threads",20,null],[12,"memPitch","","< Maximum pitch in bytes allowed by memory copies",20,null],[12,"maxThreadsPerBlock","","< Maximum number of threads per block",20,null],[12,"maxThreadsDim","","< Maximum size of each dimension of a block",20,null],[12,"maxGridSize","","< Maximum size of each dimension of a grid",20,null],[12,"clockRate","","< Clock frequency in kilohertz",20,null],[12,"totalConstMem","","< Constant memory available on device in bytes",20,null],[12,"major","","< Major compute capability",20,null],[12,"minor","","< Minor compute capability",20,null],[12,"textureAlignment","","< Alignment requirement for textures",20,null],[12,"texturePitchAlignment","","< Pitch alignment requirement for texture references bound…",20,null],[12,"deviceOverlap","","< Device can concurrently copy memory and execute a…",20,null],[12,"multiProcessorCount","","< Number of multiprocessors on device",20,null],[12,"kernelExecTimeoutEnabled","","< Specified whether there is a run time limit on kernels",20,null],[12,"integrated","","< Device is integrated as opposed to discrete",20,null],[12,"canMapHostMemory","","< Device can map host memory with…",20,null],[12,"computeMode","","< Compute mode (See ::cudaComputeMode)",20,null],[12,"maxTexture1D","","< Maximum 1D texture size",20,null],[12,"maxTexture1DMipmap","","< Maximum 1D mipmapped texture size",20,null],[12,"maxTexture1DLinear","","< Maximum size for 1D textures bound to linear memory",20,null],[12,"maxTexture2D","","< Maximum 2D texture dimensions",20,null],[12,"maxTexture2DMipmap","","< Maximum 2D mipmapped texture dimensions",20,null],[12,"maxTexture2DLinear","","< Maximum dimensions (width, height, pitch) for 2D…",20,null],[12,"maxTexture2DGather","","< Maximum 2D texture dimensions if texture gather…",20,null],[12,"maxTexture3D","","< Maximum 3D texture dimensions",20,null],[12,"maxTexture3DAlt","","< Maximum alternate 3D texture dimensions",20,null],[12,"maxTextureCubemap","","< Maximum Cubemap texture dimensions",20,null],[12,"maxTexture1DLayered","","< Maximum 1D layered texture dimensions",20,null],[12,"maxTexture2DLayered","","< Maximum 2D layered texture dimensions",20,null],[12,"maxTextureCubemapLayered","","< Maximum Cubemap layered texture dimensions",20,null],[12,"maxSurface1D","","< Maximum 1D surface size",20,null],[12,"maxSurface2D","","< Maximum 2D surface dimensions",20,null],[12,"maxSurface3D","","< Maximum 3D surface dimensions",20,null],[12,"maxSurface1DLayered","","< Maximum 1D layered surface dimensions",20,null],[12,"maxSurface2DLayered","","< Maximum 2D layered surface dimensions",20,null],[12,"maxSurfaceCubemap","","< Maximum Cubemap surface dimensions",20,null],[12,"maxSurfaceCubemapLayered","","< Maximum Cubemap layered surface dimensions",20,null],[12,"surfaceAlignment","","< Alignment requirements for surfaces",20,null],[12,"concurrentKernels","","< Device can possibly execute multiple kernels concurrently",20,null],[12,"ECCEnabled","","< Device has ECC support enabled",20,null],[12,"pciBusID","","< PCI bus ID of the device",20,null],[12,"pciDeviceID","","< PCI device ID of the device",20,null],[12,"pciDomainID","","< PCI domain ID of the device",20,null],[12,"tccDriver","","< 1 if device is a Tesla device using TCC driver, 0…",20,null],[12,"asyncEngineCount","","< Number of asynchronous engines",20,null],[12,"unifiedAddressing","","< Device shares a unified address space with the host",20,null],[12,"memoryClockRate","","< Peak memory clock frequency in kilohertz",20,null],[12,"memoryBusWidth","","< Global memory bus width in bits",20,null],[12,"l2CacheSize","","< Size of L2 cache in bytes",20,null],[12,"maxThreadsPerMultiProcessor","","< Maximum resident threads per multiprocessor",20,null],[12,"streamPrioritiesSupported","","< Device supports stream priorities",20,null],[12,"globalL1CacheSupported","","< Device supports caching globals in L1",20,null],[12,"localL1CacheSupported","","< Device supports caching locals in L1",20,null],[12,"sharedMemPerMultiprocessor","","< Shared memory available per multiprocessor in bytes",20,null],[12,"regsPerMultiprocessor","","< 32-bit registers available per multiprocessor",20,null],[12,"managedMemory","","< Device supports allocating managed memory on this system",20,null],[12,"isMultiGpuBoard","","< Device is on a multi-GPU board",20,null],[12,"multiGpuBoardGroupID","","< Unique identifier for a group of devices on the same…",20,null],[12,"hostNativeAtomicSupported","","< Link between the device and the host supports native…",20,null],[12,"singleToDoublePrecisionPerfRatio","","< Ratio of single precision performance (in floating-point…",20,null],[12,"pageableMemoryAccess","","< Device supports coherently accessing pageable memory…",20,null],[12,"concurrentManagedAccess","","< Device can coherently access managed memory concurrently…",20,null],[12,"computePreemptionSupported","","< Device supports Compute Preemption",20,null],[12,"canUseHostPointerForRegisteredMem","","< Device can access host registered memory at the same…",20,null],[12,"cooperativeLaunch","","< Device supports launching cooperative kernels via…",20,null],[12,"cooperativeMultiDeviceLaunch","","< Device can participate in cooperative kernels launched…",20,null],[12,"sharedMemPerBlockOptin","","< Per device maximum shared memory per block usable by…",20,null],[12,"pageableMemoryAccessUsesHostPageTables","","< Device accesses pageable memory via the host\'s page tables",20,null],[12,"directManagedMemAccessFromHost","","< Host can directly access managed memory on the device…",20,null],[3,"cudaIpcEventHandle_st","","CUDA IPC event handle",null,null],[12,"reserved","","",21,null],[3,"cudaIpcMemHandle_st","","CUDA IPC memory handle",null,null],[12,"reserved","","",22,null],[3,"cudaExternalMemoryHandleDesc","","External memory handle descriptor",null,null],[12,"type_","","Type of the handle",23,null],[12,"handle","","",23,null],[12,"size","","Size of the memory allocation",23,null],[12,"flags","","Flags must either be zero or ::cudaExternalMemoryDedicated",23,null],[3,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1","","Win32 handle referencing the semaphore object. Valid when…",null,null],[12,"handle","","Valid NT handle. Must be NULL if \'name\' is non-NULL",24,null],[12,"name","","Name of a valid memory object. Must be NULL if \'handle\' is…",24,null],[3,"cudaExternalMemoryBufferDesc","","External memory buffer descriptor",null,null],[12,"offset","","Offset into the memory object where the buffer\'s base is",25,null],[12,"size","","Size of the buffer",25,null],[12,"flags","","Flags reserved for future use. Must be zero.",25,null],[3,"cudaExternalMemoryMipmappedArrayDesc","","External memory mipmap descriptor",null,null],[12,"offset","","Offset into the memory object where the base level of the…",26,null],[12,"formatDesc","","Format of base level of the mipmap chain",26,null],[12,"extent","","Dimensions of base level of the mipmap chain",26,null],[12,"flags","","Flags associated with CUDA mipmapped arrays. See…",26,null],[12,"numLevels","","Total number of levels in the mipmap chain",26,null],[3,"cudaExternalSemaphoreHandleDesc","","External semaphore handle descriptor",null,null],[12,"type_","","Type of the handle",27,null],[12,"handle","","",27,null],[12,"flags","","Flags reserved for the future. Must be zero.",27,null],[3,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1","","Win32 handle referencing the semaphore object. Valid when…",null,null],[12,"handle","","Valid NT handle. Must be NULL if \'name\' is non-NULL",28,null],[12,"name","","Name of a valid synchronization primitive. Must be NULL if…",28,null],[3,"cudaExternalSemaphoreSignalParams","","External semaphore  signal parameters",null,null],[12,"params","","",29,null],[12,"flags","","Only when ::cudaExternalSemaphoreSignalParams is used to…",29,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1","","",null,null],[12,"fence","","",30,null],[12,"nvSciSync","","",30,null],[12,"keyedMutex","","",30,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1","","Parameters for fence objects",null,null],[12,"value","","Value of fence to be signaled",31,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3","","Parameters for keyed mutex objects",null,null],[12,"key","","",32,null],[3,"cudaExternalSemaphoreWaitParams","","External semaphore wait parameters",null,null],[12,"params","","",33,null],[12,"flags","","Only when ::cudaExternalSemaphoreSignalParams is used to…",33,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1","","",null,null],[12,"fence","","",34,null],[12,"nvSciSync","","",34,null],[12,"keyedMutex","","",34,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1","","Parameters for fence objects",null,null],[12,"value","","Value of fence to be waited on",35,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3","","Parameters for keyed mutex objects",null,null],[12,"key","","Value of key to acquire the mutex with",36,null],[12,"timeoutMs","","Timeout in milliseconds to wait to acquire the mutex",36,null],[3,"CUstream_st","","",null,null],[3,"CUevent_st","","",null,null],[3,"CUexternalMemory_st","","",null,null],[3,"CUexternalSemaphore_st","","",null,null],[3,"CUgraph_st","","",null,null],[3,"CUgraphNode_st","","",null,null],[3,"cudaLaunchParams","","CUDA launch parameters",null,null],[12,"func","","< Device function symbol",37,null],[12,"gridDim","","< Grid dimentions",37,null],[12,"blockDim","","< Block dimentions",37,null],[12,"args","","< Arguments",37,null],[12,"sharedMem","","< Shared memory",37,null],[12,"stream","","< Stream identifier",37,null],[3,"cudaKernelNodeParams","","CUDA GPU kernel node parameters",null,null],[12,"func","","< Kernel to launch",38,null],[12,"gridDim","","< Grid dimensions",38,null],[12,"blockDim","","< Block dimensions",38,null],[12,"sharedMemBytes","","< Dynamic shared-memory size per thread block in bytes",38,null],[12,"kernelParams","","< Array of pointers to individual kernel arguments",38,null],[12,"extra","","< Pointer to kernel arguments in the \\\"extra\\\" format",38,null],[3,"CUgraphExec_st","","",null,null],[3,"cublasContext","","",null,null],[19,"cudaResourceDesc__bindgen_ty_1","","",null,null],[12,"array","","",39,null],[12,"mipmap","","",39,null],[12,"linear","","",39,null],[12,"pitch2D","","",39,null],[19,"cudaExternalMemoryHandleDesc__bindgen_ty_1","","",null,null],[12,"fd","","File descriptor referencing the memory object. Valid when…",40,null],[12,"win32","","",40,null],[12,"nvSciBufObject","","A handle representing NvSciBuf Object. Valid when type is…",40,null],[19,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1","","",null,null],[12,"fd","","File descriptor referencing the semaphore object. Valid…",41,null],[12,"win32","","",41,null],[12,"nvSciSyncObj","","Valid NvSciSyncObj. Must be non NULL",41,null],[19,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"fence","","Pointer to NvSciSyncFence. Valid if…",42,null],[12,"reserved","","",42,null],[19,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"fence","","Pointer to NvSciSyncFence. Valid if…",43,null],[12,"reserved","","",43,null],[4,"cudaError","","CUDA error types",null,null],[13,"cudaSuccess","","The API call returned with no errors. In the case of query…",44,null],[13,"cudaErrorInvalidValue","","This indicates that one or more of the parameters passed…",44,null],[13,"cudaErrorMemoryAllocation","","The API call failed because it was unable to allocate…",44,null],[13,"cudaErrorInitializationError","","The API call failed because the CUDA driver and runtime…",44,null],[13,"cudaErrorCudartUnloading","","This indicates that a CUDA Runtime API call cannot be…",44,null],[13,"cudaErrorProfilerDisabled","","This indicates profiler is not initialized for this run.…",44,null],[13,"cudaErrorProfilerNotInitialized","","\\\\deprecated This error return is deprecated as of CUDA…",44,null],[13,"cudaErrorProfilerAlreadyStarted","","\\\\deprecated This error return is deprecated as of CUDA…",44,null],[13,"cudaErrorProfilerAlreadyStopped","","\\\\deprecated This error return is deprecated as of CUDA…",44,null],[13,"cudaErrorInvalidConfiguration","","This indicates that a kernel launch is requesting…",44,null],[13,"cudaErrorInvalidPitchValue","","This indicates that one or more of the pitch-related…",44,null],[13,"cudaErrorInvalidSymbol","","This indicates that the symbol name/identifier passed to…",44,null],[13,"cudaErrorInvalidHostPointer","","This indicates that at least one host pointer passed to…",44,null],[13,"cudaErrorInvalidDevicePointer","","This indicates that at least one device pointer passed to…",44,null],[13,"cudaErrorInvalidTexture","","This indicates that the texture passed to the API call is…",44,null],[13,"cudaErrorInvalidTextureBinding","","This indicates that the texture binding is not valid. This…",44,null],[13,"cudaErrorInvalidChannelDescriptor","","This indicates that the channel descriptor passed to the…",44,null],[13,"cudaErrorInvalidMemcpyDirection","","This indicates that the direction of the memcpy passed to…",44,null],[13,"cudaErrorAddressOfConstant","","This indicated that the user has taken the address of a…",44,null],[13,"cudaErrorTextureFetchFailed","","This indicated that a texture fetch was not able to be…",44,null],[13,"cudaErrorTextureNotBound","","This indicated that a texture was not bound for access.…",44,null],[13,"cudaErrorSynchronizationError","","This indicated that a synchronization operation had…",44,null],[13,"cudaErrorInvalidFilterSetting","","This indicates that a non-float texture was being accessed…",44,null],[13,"cudaErrorInvalidNormSetting","","This indicates that an attempt was made to read a…",44,null],[13,"cudaErrorMixedDeviceExecution","","Mixing of device and device emulation code was not…",44,null],[13,"cudaErrorNotYetImplemented","","This indicates that the API call is not yet implemented.…",44,null],[13,"cudaErrorMemoryValueTooLarge","","This indicated that an emulated device pointer exceeded…",44,null],[13,"cudaErrorInsufficientDriver","","This indicates that the installed NVIDIA CUDA driver is…",44,null],[13,"cudaErrorInvalidSurface","","This indicates that the surface passed to the API call is…",44,null],[13,"cudaErrorDuplicateVariableName","","This indicates that multiple global or constant variables…",44,null],[13,"cudaErrorDuplicateTextureName","","This indicates that multiple textures (across separate…",44,null],[13,"cudaErrorDuplicateSurfaceName","","This indicates that multiple surfaces (across separate…",44,null],[13,"cudaErrorDevicesUnavailable","","This indicates that all CUDA devices are busy or…",44,null],[13,"cudaErrorIncompatibleDriverContext","","This indicates that the current context is not compatible…",44,null],[13,"cudaErrorMissingConfiguration","","The device function being invoked (usually via…",44,null],[13,"cudaErrorPriorLaunchFailure","","This indicated that a previous kernel launch failed. This…",44,null],[13,"cudaErrorLaunchMaxDepthExceeded","","This error indicates that a device runtime grid launch did…",44,null],[13,"cudaErrorLaunchFileScopedTex","","This error indicates that a grid launch did not occur…",44,null],[13,"cudaErrorLaunchFileScopedSurf","","This error indicates that a grid launch did not occur…",44,null],[13,"cudaErrorSyncDepthExceeded","","This error indicates that a call to…",44,null],[13,"cudaErrorLaunchPendingCountExceeded","","This error indicates that a device runtime grid launch…",44,null],[13,"cudaErrorInvalidDeviceFunction","","The requested device function does not exist or is not…",44,null],[13,"cudaErrorNoDevice","","This indicates that no CUDA-capable devices were detected…",44,null],[13,"cudaErrorInvalidDevice","","This indicates that the device ordinal supplied by the…",44,null],[13,"cudaErrorStartupFailure","","This indicates an internal startup failure in the CUDA…",44,null],[13,"cudaErrorInvalidKernelImage","","This indicates that the device kernel image is invalid.",44,null],[13,"cudaErrorDeviceUninitialized","","This most frequently indicates that there is no context…",44,null],[13,"cudaErrorMapBufferObjectFailed","","This indicates that the buffer object could not be mapped.",44,null],[13,"cudaErrorUnmapBufferObjectFailed","","This indicates that the buffer object could not be unmapped.",44,null],[13,"cudaErrorArrayIsMapped","","This indicates that the specified array is currently…",44,null],[13,"cudaErrorAlreadyMapped","","This indicates that the resource is already mapped.",44,null],[13,"cudaErrorNoKernelImageForDevice","","This indicates that there is no kernel image available…",44,null],[13,"cudaErrorAlreadyAcquired","","This indicates that a resource has already been acquired.",44,null],[13,"cudaErrorNotMapped","","This indicates that a resource is not mapped.",44,null],[13,"cudaErrorNotMappedAsArray","","This indicates that a mapped resource is not available for…",44,null],[13,"cudaErrorNotMappedAsPointer","","This indicates that a mapped resource is not available for…",44,null],[13,"cudaErrorECCUncorrectable","","This indicates that an uncorrectable ECC error was…",44,null],[13,"cudaErrorUnsupportedLimit","","This indicates that the ::cudaLimit passed to the API call…",44,null],[13,"cudaErrorDeviceAlreadyInUse","","This indicates that a call tried to access an…",44,null],[13,"cudaErrorPeerAccessUnsupported","","This error indicates that P2P access is not supported…",44,null],[13,"cudaErrorInvalidPtx","","A PTX compilation failed. The runtime may fall back to…",44,null],[13,"cudaErrorInvalidGraphicsContext","","This indicates an error with the OpenGL or DirectX context.",44,null],[13,"cudaErrorNvlinkUncorrectable","","This indicates that an uncorrectable NVLink error was…",44,null],[13,"cudaErrorJitCompilerNotFound","","This indicates that the PTX JIT compiler library was not…",44,null],[13,"cudaErrorInvalidSource","","This indicates that the device kernel source is invalid.",44,null],[13,"cudaErrorFileNotFound","","This indicates that the file specified was not found.",44,null],[13,"cudaErrorSharedObjectSymbolNotFound","","This indicates that a link to a shared object failed to…",44,null],[13,"cudaErrorSharedObjectInitFailed","","This indicates that initialization of a shared object…",44,null],[13,"cudaErrorOperatingSystem","","This error indicates that an OS call failed.",44,null],[13,"cudaErrorInvalidResourceHandle","","This indicates that a resource handle passed to the API…",44,null],[13,"cudaErrorIllegalState","","This indicates that a resource required by the API call is…",44,null],[13,"cudaErrorSymbolNotFound","","This indicates that a named symbol was not found. Examples…",44,null],[13,"cudaErrorNotReady","","This indicates that asynchronous operations issued…",44,null],[13,"cudaErrorIllegalAddress","","The device encountered a load or store instruction on an…",44,null],[13,"cudaErrorLaunchOutOfResources","","This indicates that a launch did not occur because it did…",44,null],[13,"cudaErrorLaunchTimeout","","This indicates that the device kernel took too long to…",44,null],[13,"cudaErrorLaunchIncompatibleTexturing","","This error indicates a kernel launch that uses an…",44,null],[13,"cudaErrorPeerAccessAlreadyEnabled","","This error indicates that a call to…",44,null],[13,"cudaErrorPeerAccessNotEnabled","","This error indicates that ::cudaDeviceDisablePeerAccess()…",44,null],[13,"cudaErrorSetOnActiveProcess","","This indicates that the user has called…",44,null],[13,"cudaErrorContextIsDestroyed","","This error indicates that the context current to the…",44,null],[13,"cudaErrorAssert","","An assert triggered in device code during kernel…",44,null],[13,"cudaErrorTooManyPeers","","This error indicates that the hardware resources required…",44,null],[13,"cudaErrorHostMemoryAlreadyRegistered","","This error indicates that the memory range passed to…",44,null],[13,"cudaErrorHostMemoryNotRegistered","","This error indicates that the pointer passed to…",44,null],[13,"cudaErrorHardwareStackError","","Device encountered an error in the call stack during…",44,null],[13,"cudaErrorIllegalInstruction","","The device encountered an illegal instruction during…",44,null],[13,"cudaErrorMisalignedAddress","","The device encountered a load or store instruction on a…",44,null],[13,"cudaErrorInvalidAddressSpace","","While executing a kernel, the device encountered an…",44,null],[13,"cudaErrorInvalidPc","","The device encountered an invalid program counter. This…",44,null],[13,"cudaErrorLaunchFailure","","An exception occurred on the device while executing a…",44,null],[13,"cudaErrorCooperativeLaunchTooLarge","","This error indicates that the number of blocks launched…",44,null],[13,"cudaErrorNotPermitted","","This error indicates the attempted operation is not…",44,null],[13,"cudaErrorNotSupported","","This error indicates the attempted operation is not…",44,null],[13,"cudaErrorSystemNotReady","","This error indicates that the system is not yet ready to…",44,null],[13,"cudaErrorSystemDriverMismatch","","This error indicates that there is a mismatch between the…",44,null],[13,"cudaErrorCompatNotSupportedOnDevice","","This error indicates that the system was upgraded to run…",44,null],[13,"cudaErrorStreamCaptureUnsupported","","The operation is not permitted when the stream is capturing.",44,null],[13,"cudaErrorStreamCaptureInvalidated","","The current capture sequence on the stream has been…",44,null],[13,"cudaErrorStreamCaptureMerge","","The operation would have resulted in a merge of two…",44,null],[13,"cudaErrorStreamCaptureUnmatched","","The capture was not initiated in this stream.",44,null],[13,"cudaErrorStreamCaptureUnjoined","","The capture sequence contains a fork that was not joined…",44,null],[13,"cudaErrorStreamCaptureIsolation","","A dependency would have been created which crosses the…",44,null],[13,"cudaErrorStreamCaptureImplicit","","The operation would have resulted in a disallowed implicit…",44,null],[13,"cudaErrorCapturedEvent","","The operation is not permitted on an event which was last…",44,null],[13,"cudaErrorStreamCaptureWrongThread","","A stream capture sequence not initiated with the…",44,null],[13,"cudaErrorTimeout","","This indicates that the wait operation has timed out.",44,null],[13,"cudaErrorGraphExecUpdateFailure","","This error indicates that the graph update was not…",44,null],[13,"cudaErrorUnknown","","This indicates that an unknown internal error has occurred.",44,null],[13,"cudaErrorApiFailureBase","","Any unhandled CUDA driver error is added to this value and…",44,null],[4,"cudaChannelFormatKind","","Channel format kind",null,null],[13,"cudaChannelFormatKindSigned","","< Signed channel format",45,null],[13,"cudaChannelFormatKindUnsigned","","< Unsigned channel format",45,null],[13,"cudaChannelFormatKindFloat","","< Float channel format",45,null],[13,"cudaChannelFormatKindNone","","< No channel format",45,null],[4,"cudaMemoryType","","CUDA memory types",null,null],[13,"cudaMemoryTypeUnregistered","","< Unregistered memory",46,null],[13,"cudaMemoryTypeHost","","< Host memory",46,null],[13,"cudaMemoryTypeDevice","","< Device memory",46,null],[13,"cudaMemoryTypeManaged","","< Managed memory",46,null],[4,"cudaMemcpyKind","","CUDA memory copy types",null,null],[13,"cudaMemcpyHostToHost","","< Host   -> Host",47,null],[13,"cudaMemcpyHostToDevice","","< Host   -> Device",47,null],[13,"cudaMemcpyDeviceToHost","","< Device -> Host",47,null],[13,"cudaMemcpyDeviceToDevice","","< Device -> Device",47,null],[13,"cudaMemcpyDefault","","< Direction of the transfer is inferred from the pointer…",47,null],[4,"cudaStreamCaptureStatus","","Possible stream capture statuses returned by…",null,null],[13,"cudaStreamCaptureStatusNone","","< Stream is not capturing",48,null],[13,"cudaStreamCaptureStatusActive","","< Stream is actively capturing",48,null],[13,"cudaStreamCaptureStatusInvalidated","","< Stream is part of a capture sequence that has been…",48,null],[4,"cudaStreamCaptureMode","","Possible modes for stream capture thread interactions. For…",null,null],[13,"cudaStreamCaptureModeGlobal","","",49,null],[13,"cudaStreamCaptureModeThreadLocal","","",49,null],[13,"cudaStreamCaptureModeRelaxed","","",49,null],[4,"cudaGraphicsRegisterFlags","","CUDA graphics interop register flags",null,null],[13,"cudaGraphicsRegisterFlagsNone","","< Default",50,null],[13,"cudaGraphicsRegisterFlagsReadOnly","","< CUDA will not write to this resource",50,null],[13,"cudaGraphicsRegisterFlagsWriteDiscard","","< CUDA will only write to and will not read from this…",50,null],[13,"cudaGraphicsRegisterFlagsSurfaceLoadStore","","< CUDA will bind this resource to a surface reference",50,null],[13,"cudaGraphicsRegisterFlagsTextureGather","","< CUDA will perform texture gather operations on this…",50,null],[4,"cudaGraphicsMapFlags","","CUDA graphics interop map flags",null,null],[13,"cudaGraphicsMapFlagsNone","","< Default; Assume resource can be read/written",51,null],[13,"cudaGraphicsMapFlagsReadOnly","","< CUDA will not write to this resource",51,null],[13,"cudaGraphicsMapFlagsWriteDiscard","","< CUDA will only write to and will not read from this…",51,null],[4,"cudaGraphicsCubeFace","","CUDA graphics interop array indices for cube maps",null,null],[13,"cudaGraphicsCubeFacePositiveX","","< Positive X face of cubemap",52,null],[13,"cudaGraphicsCubeFaceNegativeX","","< Negative X face of cubemap",52,null],[13,"cudaGraphicsCubeFacePositiveY","","< Positive Y face of cubemap",52,null],[13,"cudaGraphicsCubeFaceNegativeY","","< Negative Y face of cubemap",52,null],[13,"cudaGraphicsCubeFacePositiveZ","","< Positive Z face of cubemap",52,null],[13,"cudaGraphicsCubeFaceNegativeZ","","< Negative Z face of cubemap",52,null],[4,"cudaResourceType","","CUDA resource types",null,null],[13,"cudaResourceTypeArray","","< Array resource",53,null],[13,"cudaResourceTypeMipmappedArray","","< Mipmapped array resource",53,null],[13,"cudaResourceTypeLinear","","< Linear resource",53,null],[13,"cudaResourceTypePitch2D","","< Pitch 2D resource",53,null],[4,"cudaResourceViewFormat","","CUDA texture resource view formats",null,null],[13,"cudaResViewFormatNone","","< No resource view format (use underlying resource format)",54,null],[13,"cudaResViewFormatUnsignedChar1","","< 1 channel unsigned 8-bit integers",54,null],[13,"cudaResViewFormatUnsignedChar2","","< 2 channel unsigned 8-bit integers",54,null],[13,"cudaResViewFormatUnsignedChar4","","< 4 channel unsigned 8-bit integers",54,null],[13,"cudaResViewFormatSignedChar1","","< 1 channel signed 8-bit integers",54,null],[13,"cudaResViewFormatSignedChar2","","< 2 channel signed 8-bit integers",54,null],[13,"cudaResViewFormatSignedChar4","","< 4 channel signed 8-bit integers",54,null],[13,"cudaResViewFormatUnsignedShort1","","< 1 channel unsigned 16-bit integers",54,null],[13,"cudaResViewFormatUnsignedShort2","","< 2 channel unsigned 16-bit integers",54,null],[13,"cudaResViewFormatUnsignedShort4","","< 4 channel unsigned 16-bit integers",54,null],[13,"cudaResViewFormatSignedShort1","","< 1 channel signed 16-bit integers",54,null],[13,"cudaResViewFormatSignedShort2","","< 2 channel signed 16-bit integers",54,null],[13,"cudaResViewFormatSignedShort4","","< 4 channel signed 16-bit integers",54,null],[13,"cudaResViewFormatUnsignedInt1","","< 1 channel unsigned 32-bit integers",54,null],[13,"cudaResViewFormatUnsignedInt2","","< 2 channel unsigned 32-bit integers",54,null],[13,"cudaResViewFormatUnsignedInt4","","< 4 channel unsigned 32-bit integers",54,null],[13,"cudaResViewFormatSignedInt1","","< 1 channel signed 32-bit integers",54,null],[13,"cudaResViewFormatSignedInt2","","< 2 channel signed 32-bit integers",54,null],[13,"cudaResViewFormatSignedInt4","","< 4 channel signed 32-bit integers",54,null],[13,"cudaResViewFormatHalf1","","< 1 channel 16-bit floating point",54,null],[13,"cudaResViewFormatHalf2","","< 2 channel 16-bit floating point",54,null],[13,"cudaResViewFormatHalf4","","< 4 channel 16-bit floating point",54,null],[13,"cudaResViewFormatFloat1","","< 1 channel 32-bit floating point",54,null],[13,"cudaResViewFormatFloat2","","< 2 channel 32-bit floating point",54,null],[13,"cudaResViewFormatFloat4","","< 4 channel 32-bit floating point",54,null],[13,"cudaResViewFormatUnsignedBlockCompressed1","","< Block compressed 1",54,null],[13,"cudaResViewFormatUnsignedBlockCompressed2","","< Block compressed 2",54,null],[13,"cudaResViewFormatUnsignedBlockCompressed3","","< Block compressed 3",54,null],[13,"cudaResViewFormatUnsignedBlockCompressed4","","< Block compressed 4 unsigned",54,null],[13,"cudaResViewFormatSignedBlockCompressed4","","< Block compressed 4 signed",54,null],[13,"cudaResViewFormatUnsignedBlockCompressed5","","< Block compressed 5 unsigned",54,null],[13,"cudaResViewFormatSignedBlockCompressed5","","< Block compressed 5 signed",54,null],[13,"cudaResViewFormatUnsignedBlockCompressed6H","","< Block compressed 6 unsigned half-float",54,null],[13,"cudaResViewFormatSignedBlockCompressed6H","","< Block compressed 6 signed half-float",54,null],[13,"cudaResViewFormatUnsignedBlockCompressed7","","< Block compressed 7",54,null],[4,"cudaFuncAttribute","","CUDA function attributes that can be set using…",null,null],[13,"cudaFuncAttributeMaxDynamicSharedMemorySize","","< Maximum dynamic shared memory size",55,null],[13,"cudaFuncAttributePreferredSharedMemoryCarveout","","< Preferred shared memory-L1 cache split",55,null],[13,"cudaFuncAttributeMax","","",55,null],[4,"cudaFuncCache","","CUDA function cache configurations",null,null],[13,"cudaFuncCachePreferNone","","< Default function cache configuration, no preference",56,null],[13,"cudaFuncCachePreferShared","","< Prefer larger shared memory and smaller L1 cache",56,null],[13,"cudaFuncCachePreferL1","","< Prefer larger L1 cache and smaller shared memory",56,null],[13,"cudaFuncCachePreferEqual","","< Prefer equal size L1 cache and shared memory",56,null],[4,"cudaSharedMemConfig","","CUDA shared memory configuration",null,null],[13,"cudaSharedMemBankSizeDefault","","",57,null],[13,"cudaSharedMemBankSizeFourByte","","",57,null],[13,"cudaSharedMemBankSizeEightByte","","",57,null],[4,"cudaSharedCarveout","","Shared memory carveout configurations. These may be passed…",null,null],[13,"cudaSharedmemCarveoutDefault","","< No preference for shared memory or L1 (default)",58,null],[13,"cudaSharedmemCarveoutMaxShared","","< Prefer maximum available shared memory, minimum L1 cache",58,null],[13,"cudaSharedmemCarveoutMaxL1","","< Prefer maximum available L1 cache, minimum shared memory",58,null],[4,"cudaComputeMode","","CUDA device compute modes",null,null],[13,"cudaComputeModeDefault","","< Default compute mode (Multiple threads can use…",59,null],[13,"cudaComputeModeExclusive","","< Compute-exclusive-thread mode (Only one thread in one…",59,null],[13,"cudaComputeModeProhibited","","< Compute-prohibited mode (No threads can use…",59,null],[13,"cudaComputeModeExclusiveProcess","","< Compute-exclusive-process mode (Many threads in one…",59,null],[4,"cudaLimit","","CUDA Limits",null,null],[13,"cudaLimitStackSize","","< GPU thread stack size",60,null],[13,"cudaLimitPrintfFifoSize","","< GPU printf FIFO size",60,null],[13,"cudaLimitMallocHeapSize","","< GPU malloc heap size",60,null],[13,"cudaLimitDevRuntimeSyncDepth","","< GPU device runtime synchronize depth",60,null],[13,"cudaLimitDevRuntimePendingLaunchCount","","< GPU device runtime pending launch count",60,null],[13,"cudaLimitMaxL2FetchGranularity","","< A value between 0 and 128 that indicates the maximum…",60,null],[4,"cudaMemoryAdvise","","CUDA Memory Advise values",null,null],[13,"cudaMemAdviseSetReadMostly","","< Data will mostly be read and only occassionally be…",61,null],[13,"cudaMemAdviseUnsetReadMostly","","< Undo the effect of ::cudaMemAdviseSetReadMostly",61,null],[13,"cudaMemAdviseSetPreferredLocation","","< Set the preferred location for the data as the specified…",61,null],[13,"cudaMemAdviseUnsetPreferredLocation","","< Clear the preferred location for the data",61,null],[13,"cudaMemAdviseSetAccessedBy","","< Data will be accessed by the specified device, so…",61,null],[13,"cudaMemAdviseUnsetAccessedBy","","< Let the Unified Memory subsystem decide on the page…",61,null],[4,"cudaMemRangeAttribute","","CUDA range attributes",null,null],[13,"cudaMemRangeAttributeReadMostly","","< Whether the range will mostly be read and only…",62,null],[13,"cudaMemRangeAttributePreferredLocation","","< The preferred location of the range",62,null],[13,"cudaMemRangeAttributeAccessedBy","","< Memory range has ::cudaMemAdviseSetAccessedBy set for…",62,null],[13,"cudaMemRangeAttributeLastPrefetchLocation","","< The last location to which the range was prefetched",62,null],[4,"cudaOutputMode","","CUDA Profiler Output modes",null,null],[13,"cudaKeyValuePair","","< Output mode Key-Value pair format.",63,null],[13,"cudaCSV","","< Output mode Comma separated values format.",63,null],[4,"cudaDeviceAttr","","CUDA device attributes",null,null],[13,"cudaDevAttrMaxThreadsPerBlock","","< Maximum number of threads per block",64,null],[13,"cudaDevAttrMaxBlockDimX","","< Maximum block dimension X",64,null],[13,"cudaDevAttrMaxBlockDimY","","< Maximum block dimension Y",64,null],[13,"cudaDevAttrMaxBlockDimZ","","< Maximum block dimension Z",64,null],[13,"cudaDevAttrMaxGridDimX","","< Maximum grid dimension X",64,null],[13,"cudaDevAttrMaxGridDimY","","< Maximum grid dimension Y",64,null],[13,"cudaDevAttrMaxGridDimZ","","< Maximum grid dimension Z",64,null],[13,"cudaDevAttrMaxSharedMemoryPerBlock","","< Maximum shared memory available per block in bytes",64,null],[13,"cudaDevAttrTotalConstantMemory","","< Memory available on device for constant variables in a…",64,null],[13,"cudaDevAttrWarpSize","","< Warp size in threads",64,null],[13,"cudaDevAttrMaxPitch","","< Maximum pitch in bytes allowed by memory copies",64,null],[13,"cudaDevAttrMaxRegistersPerBlock","","< Maximum number of 32-bit registers available per block",64,null],[13,"cudaDevAttrClockRate","","< Peak clock frequency in kilohertz",64,null],[13,"cudaDevAttrTextureAlignment","","< Alignment requirement for textures",64,null],[13,"cudaDevAttrGpuOverlap","","< Device can possibly copy memory and execute a kernel…",64,null],[13,"cudaDevAttrMultiProcessorCount","","< Number of multiprocessors on device",64,null],[13,"cudaDevAttrKernelExecTimeout","","< Specifies whether there is a run time limit on kernels",64,null],[13,"cudaDevAttrIntegrated","","< Device is integrated with host memory",64,null],[13,"cudaDevAttrCanMapHostMemory","","< Device can map host memory into CUDA address space",64,null],[13,"cudaDevAttrComputeMode","","< Compute mode (See ::cudaComputeMode for details)",64,null],[13,"cudaDevAttrMaxTexture1DWidth","","< Maximum 1D texture width",64,null],[13,"cudaDevAttrMaxTexture2DWidth","","< Maximum 2D texture width",64,null],[13,"cudaDevAttrMaxTexture2DHeight","","< Maximum 2D texture height",64,null],[13,"cudaDevAttrMaxTexture3DWidth","","< Maximum 3D texture width",64,null],[13,"cudaDevAttrMaxTexture3DHeight","","< Maximum 3D texture height",64,null],[13,"cudaDevAttrMaxTexture3DDepth","","< Maximum 3D texture depth",64,null],[13,"cudaDevAttrMaxTexture2DLayeredWidth","","< Maximum 2D layered texture width",64,null],[13,"cudaDevAttrMaxTexture2DLayeredHeight","","< Maximum 2D layered texture height",64,null],[13,"cudaDevAttrMaxTexture2DLayeredLayers","","< Maximum layers in a 2D layered texture",64,null],[13,"cudaDevAttrSurfaceAlignment","","< Alignment requirement for surfaces",64,null],[13,"cudaDevAttrConcurrentKernels","","< Device can possibly execute multiple kernels concurrently",64,null],[13,"cudaDevAttrEccEnabled","","< Device has ECC support enabled",64,null],[13,"cudaDevAttrPciBusId","","< PCI bus ID of the device",64,null],[13,"cudaDevAttrPciDeviceId","","< PCI device ID of the device",64,null],[13,"cudaDevAttrTccDriver","","< Device is using TCC driver model",64,null],[13,"cudaDevAttrMemoryClockRate","","< Peak memory clock frequency in kilohertz",64,null],[13,"cudaDevAttrGlobalMemoryBusWidth","","< Global memory bus width in bits",64,null],[13,"cudaDevAttrL2CacheSize","","< Size of L2 cache in bytes",64,null],[13,"cudaDevAttrMaxThreadsPerMultiProcessor","","< Maximum resident threads per multiprocessor",64,null],[13,"cudaDevAttrAsyncEngineCount","","< Number of asynchronous engines",64,null],[13,"cudaDevAttrUnifiedAddressing","","< Device shares a unified address space with the host",64,null],[13,"cudaDevAttrMaxTexture1DLayeredWidth","","< Maximum 1D layered texture width",64,null],[13,"cudaDevAttrMaxTexture1DLayeredLayers","","< Maximum layers in a 1D layered texture",64,null],[13,"cudaDevAttrMaxTexture2DGatherWidth","","< Maximum 2D texture width if cudaArrayTextureGather is set",64,null],[13,"cudaDevAttrMaxTexture2DGatherHeight","","< Maximum 2D texture height if cudaArrayTextureGather is set",64,null],[13,"cudaDevAttrMaxTexture3DWidthAlt","","< Alternate maximum 3D texture width",64,null],[13,"cudaDevAttrMaxTexture3DHeightAlt","","< Alternate maximum 3D texture height",64,null],[13,"cudaDevAttrMaxTexture3DDepthAlt","","< Alternate maximum 3D texture depth",64,null],[13,"cudaDevAttrPciDomainId","","< PCI domain ID of the device",64,null],[13,"cudaDevAttrTexturePitchAlignment","","< Pitch alignment requirement for textures",64,null],[13,"cudaDevAttrMaxTextureCubemapWidth","","< Maximum cubemap texture width/height",64,null],[13,"cudaDevAttrMaxTextureCubemapLayeredWidth","","< Maximum cubemap layered texture width/height",64,null],[13,"cudaDevAttrMaxTextureCubemapLayeredLayers","","< Maximum layers in a cubemap layered texture",64,null],[13,"cudaDevAttrMaxSurface1DWidth","","< Maximum 1D surface width",64,null],[13,"cudaDevAttrMaxSurface2DWidth","","< Maximum 2D surface width",64,null],[13,"cudaDevAttrMaxSurface2DHeight","","< Maximum 2D surface height",64,null],[13,"cudaDevAttrMaxSurface3DWidth","","< Maximum 3D surface width",64,null],[13,"cudaDevAttrMaxSurface3DHeight","","< Maximum 3D surface height",64,null],[13,"cudaDevAttrMaxSurface3DDepth","","< Maximum 3D surface depth",64,null],[13,"cudaDevAttrMaxSurface1DLayeredWidth","","< Maximum 1D layered surface width",64,null],[13,"cudaDevAttrMaxSurface1DLayeredLayers","","< Maximum layers in a 1D layered surface",64,null],[13,"cudaDevAttrMaxSurface2DLayeredWidth","","< Maximum 2D layered surface width",64,null],[13,"cudaDevAttrMaxSurface2DLayeredHeight","","< Maximum 2D layered surface height",64,null],[13,"cudaDevAttrMaxSurface2DLayeredLayers","","< Maximum layers in a 2D layered surface",64,null],[13,"cudaDevAttrMaxSurfaceCubemapWidth","","< Maximum cubemap surface width",64,null],[13,"cudaDevAttrMaxSurfaceCubemapLayeredWidth","","< Maximum cubemap layered surface width",64,null],[13,"cudaDevAttrMaxSurfaceCubemapLayeredLayers","","< Maximum layers in a cubemap layered surface",64,null],[13,"cudaDevAttrMaxTexture1DLinearWidth","","< Maximum 1D linear texture width",64,null],[13,"cudaDevAttrMaxTexture2DLinearWidth","","< Maximum 2D linear texture width",64,null],[13,"cudaDevAttrMaxTexture2DLinearHeight","","< Maximum 2D linear texture height",64,null],[13,"cudaDevAttrMaxTexture2DLinearPitch","","< Maximum 2D linear texture pitch in bytes",64,null],[13,"cudaDevAttrMaxTexture2DMipmappedWidth","","< Maximum mipmapped 2D texture width",64,null],[13,"cudaDevAttrMaxTexture2DMipmappedHeight","","< Maximum mipmapped 2D texture height",64,null],[13,"cudaDevAttrComputeCapabilityMajor","","< Major compute capability version number",64,null],[13,"cudaDevAttrComputeCapabilityMinor","","< Minor compute capability version number",64,null],[13,"cudaDevAttrMaxTexture1DMipmappedWidth","","< Maximum mipmapped 1D texture width",64,null],[13,"cudaDevAttrStreamPrioritiesSupported","","< Device supports stream priorities",64,null],[13,"cudaDevAttrGlobalL1CacheSupported","","< Device supports caching globals in L1",64,null],[13,"cudaDevAttrLocalL1CacheSupported","","< Device supports caching locals in L1",64,null],[13,"cudaDevAttrMaxSharedMemoryPerMultiprocessor","","< Maximum shared memory available per multiprocessor in…",64,null],[13,"cudaDevAttrMaxRegistersPerMultiprocessor","","< Maximum number of 32-bit registers available per…",64,null],[13,"cudaDevAttrManagedMemory","","< Device can allocate managed memory on this system",64,null],[13,"cudaDevAttrIsMultiGpuBoard","","< Device is on a multi-GPU board",64,null],[13,"cudaDevAttrMultiGpuBoardGroupID","","< Unique identifier for a group of devices on the same…",64,null],[13,"cudaDevAttrHostNativeAtomicSupported","","< Link between the device and the host supports native…",64,null],[13,"cudaDevAttrSingleToDoublePrecisionPerfRatio","","< Ratio of single precision performance (in floating-point…",64,null],[13,"cudaDevAttrPageableMemoryAccess","","< Device supports coherently accessing pageable memory…",64,null],[13,"cudaDevAttrConcurrentManagedAccess","","< Device can coherently access managed memory concurrently…",64,null],[13,"cudaDevAttrComputePreemptionSupported","","< Device supports Compute Preemption",64,null],[13,"cudaDevAttrCanUseHostPointerForRegisteredMem","","< Device can access host registered memory at the same…",64,null],[13,"cudaDevAttrReserved92","","",64,null],[13,"cudaDevAttrReserved93","","",64,null],[13,"cudaDevAttrReserved94","","",64,null],[13,"cudaDevAttrCooperativeLaunch","","< Device supports launching cooperative kernels via…",64,null],[13,"cudaDevAttrCooperativeMultiDeviceLaunch","","< Device can participate in cooperative kernels launched…",64,null],[13,"cudaDevAttrMaxSharedMemoryPerBlockOptin","","< The maximum optin shared memory per block. This value…",64,null],[13,"cudaDevAttrCanFlushRemoteWrites","","< Device supports flushing of outstanding remote writes.",64,null],[13,"cudaDevAttrHostRegisterSupported","","< Device supports host memory registration via…",64,null],[13,"cudaDevAttrPageableMemoryAccessUsesHostPageTables","","< Device accesses pageable memory via the host\'s page…",64,null],[13,"cudaDevAttrDirectManagedMemAccessFromHost","","< Host can directly access managed memory on the device…",64,null],[4,"cudaDeviceP2PAttr","","CUDA device P2P attributes",null,null],[13,"cudaDevP2PAttrPerformanceRank","","< A relative value indicating the performance of the link…",65,null],[13,"cudaDevP2PAttrAccessSupported","","< Peer access is enabled",65,null],[13,"cudaDevP2PAttrNativeAtomicSupported","","< Native atomic operation over the link supported",65,null],[13,"cudaDevP2PAttrCudaArrayAccessSupported","","< Accessing CUDA arrays over the link supported",65,null],[4,"cudaExternalMemoryHandleType","","External memory handle types",null,null],[13,"cudaExternalMemoryHandleTypeOpaqueFd","","Handle is an opaque file descriptor",66,null],[13,"cudaExternalMemoryHandleTypeOpaqueWin32","","Handle is an opaque shared NT handle",66,null],[13,"cudaExternalMemoryHandleTypeOpaqueWin32Kmt","","Handle is an opaque, globally shared handle",66,null],[13,"cudaExternalMemoryHandleTypeD3D12Heap","","Handle is a D3D12 heap object",66,null],[13,"cudaExternalMemoryHandleTypeD3D12Resource","","Handle is a D3D12 committed resource",66,null],[13,"cudaExternalMemoryHandleTypeD3D11Resource","","Handle is a shared NT handle to a D3D11 resource",66,null],[13,"cudaExternalMemoryHandleTypeD3D11ResourceKmt","","Handle is a globally shared handle to a D3D11 resource",66,null],[13,"cudaExternalMemoryHandleTypeNvSciBuf","","Handle is an NvSciBuf object",66,null],[4,"cudaExternalSemaphoreHandleType","","External semaphore handle types",null,null],[13,"cudaExternalSemaphoreHandleTypeOpaqueFd","","Handle is an opaque file descriptor",67,null],[13,"cudaExternalSemaphoreHandleTypeOpaqueWin32","","Handle is an opaque shared NT handle",67,null],[13,"cudaExternalSemaphoreHandleTypeOpaqueWin32Kmt","","Handle is an opaque, globally shared handle",67,null],[13,"cudaExternalSemaphoreHandleTypeD3D12Fence","","Handle is a shared NT handle referencing a D3D12 fence…",67,null],[13,"cudaExternalSemaphoreHandleTypeD3D11Fence","","Handle is a shared NT handle referencing a D3D11 fence…",67,null],[13,"cudaExternalSemaphoreHandleTypeNvSciSync","","Opaque handle to NvSciSync Object",67,null],[13,"cudaExternalSemaphoreHandleTypeKeyedMutex","","Handle is a shared NT handle referencing a D3D11 keyed…",67,null],[13,"cudaExternalSemaphoreHandleTypeKeyedMutexKmt","","Handle is a shared KMT handle referencing a D3D11 keyed…",67,null],[4,"cudaError_t","","CUDA error types",null,null],[13,"cudaSuccess","","The API call returned with no errors. In the case of query…",44,null],[13,"cudaErrorInvalidValue","","This indicates that one or more of the parameters passed…",44,null],[13,"cudaErrorMemoryAllocation","","The API call failed because it was unable to allocate…",44,null],[13,"cudaErrorInitializationError","","The API call failed because the CUDA driver and runtime…",44,null],[13,"cudaErrorCudartUnloading","","This indicates that a CUDA Runtime API call cannot be…",44,null],[13,"cudaErrorProfilerDisabled","","This indicates profiler is not initialized for this run.…",44,null],[13,"cudaErrorProfilerNotInitialized","","\\\\deprecated This error return is deprecated as of CUDA…",44,null],[13,"cudaErrorProfilerAlreadyStarted","","\\\\deprecated This error return is deprecated as of CUDA…",44,null],[13,"cudaErrorProfilerAlreadyStopped","","\\\\deprecated This error return is deprecated as of CUDA…",44,null],[13,"cudaErrorInvalidConfiguration","","This indicates that a kernel launch is requesting…",44,null],[13,"cudaErrorInvalidPitchValue","","This indicates that one or more of the pitch-related…",44,null],[13,"cudaErrorInvalidSymbol","","This indicates that the symbol name/identifier passed to…",44,null],[13,"cudaErrorInvalidHostPointer","","This indicates that at least one host pointer passed to…",44,null],[13,"cudaErrorInvalidDevicePointer","","This indicates that at least one device pointer passed to…",44,null],[13,"cudaErrorInvalidTexture","","This indicates that the texture passed to the API call is…",44,null],[13,"cudaErrorInvalidTextureBinding","","This indicates that the texture binding is not valid. This…",44,null],[13,"cudaErrorInvalidChannelDescriptor","","This indicates that the channel descriptor passed to the…",44,null],[13,"cudaErrorInvalidMemcpyDirection","","This indicates that the direction of the memcpy passed to…",44,null],[13,"cudaErrorAddressOfConstant","","This indicated that the user has taken the address of a…",44,null],[13,"cudaErrorTextureFetchFailed","","This indicated that a texture fetch was not able to be…",44,null],[13,"cudaErrorTextureNotBound","","This indicated that a texture was not bound for access.…",44,null],[13,"cudaErrorSynchronizationError","","This indicated that a synchronization operation had…",44,null],[13,"cudaErrorInvalidFilterSetting","","This indicates that a non-float texture was being accessed…",44,null],[13,"cudaErrorInvalidNormSetting","","This indicates that an attempt was made to read a…",44,null],[13,"cudaErrorMixedDeviceExecution","","Mixing of device and device emulation code was not…",44,null],[13,"cudaErrorNotYetImplemented","","This indicates that the API call is not yet implemented.…",44,null],[13,"cudaErrorMemoryValueTooLarge","","This indicated that an emulated device pointer exceeded…",44,null],[13,"cudaErrorInsufficientDriver","","This indicates that the installed NVIDIA CUDA driver is…",44,null],[13,"cudaErrorInvalidSurface","","This indicates that the surface passed to the API call is…",44,null],[13,"cudaErrorDuplicateVariableName","","This indicates that multiple global or constant variables…",44,null],[13,"cudaErrorDuplicateTextureName","","This indicates that multiple textures (across separate…",44,null],[13,"cudaErrorDuplicateSurfaceName","","This indicates that multiple surfaces (across separate…",44,null],[13,"cudaErrorDevicesUnavailable","","This indicates that all CUDA devices are busy or…",44,null],[13,"cudaErrorIncompatibleDriverContext","","This indicates that the current context is not compatible…",44,null],[13,"cudaErrorMissingConfiguration","","The device function being invoked (usually via…",44,null],[13,"cudaErrorPriorLaunchFailure","","This indicated that a previous kernel launch failed. This…",44,null],[13,"cudaErrorLaunchMaxDepthExceeded","","This error indicates that a device runtime grid launch did…",44,null],[13,"cudaErrorLaunchFileScopedTex","","This error indicates that a grid launch did not occur…",44,null],[13,"cudaErrorLaunchFileScopedSurf","","This error indicates that a grid launch did not occur…",44,null],[13,"cudaErrorSyncDepthExceeded","","This error indicates that a call to…",44,null],[13,"cudaErrorLaunchPendingCountExceeded","","This error indicates that a device runtime grid launch…",44,null],[13,"cudaErrorInvalidDeviceFunction","","The requested device function does not exist or is not…",44,null],[13,"cudaErrorNoDevice","","This indicates that no CUDA-capable devices were detected…",44,null],[13,"cudaErrorInvalidDevice","","This indicates that the device ordinal supplied by the…",44,null],[13,"cudaErrorStartupFailure","","This indicates an internal startup failure in the CUDA…",44,null],[13,"cudaErrorInvalidKernelImage","","This indicates that the device kernel image is invalid.",44,null],[13,"cudaErrorDeviceUninitialized","","This most frequently indicates that there is no context…",44,null],[13,"cudaErrorMapBufferObjectFailed","","This indicates that the buffer object could not be mapped.",44,null],[13,"cudaErrorUnmapBufferObjectFailed","","This indicates that the buffer object could not be unmapped.",44,null],[13,"cudaErrorArrayIsMapped","","This indicates that the specified array is currently…",44,null],[13,"cudaErrorAlreadyMapped","","This indicates that the resource is already mapped.",44,null],[13,"cudaErrorNoKernelImageForDevice","","This indicates that there is no kernel image available…",44,null],[13,"cudaErrorAlreadyAcquired","","This indicates that a resource has already been acquired.",44,null],[13,"cudaErrorNotMapped","","This indicates that a resource is not mapped.",44,null],[13,"cudaErrorNotMappedAsArray","","This indicates that a mapped resource is not available for…",44,null],[13,"cudaErrorNotMappedAsPointer","","This indicates that a mapped resource is not available for…",44,null],[13,"cudaErrorECCUncorrectable","","This indicates that an uncorrectable ECC error was…",44,null],[13,"cudaErrorUnsupportedLimit","","This indicates that the ::cudaLimit passed to the API call…",44,null],[13,"cudaErrorDeviceAlreadyInUse","","This indicates that a call tried to access an…",44,null],[13,"cudaErrorPeerAccessUnsupported","","This error indicates that P2P access is not supported…",44,null],[13,"cudaErrorInvalidPtx","","A PTX compilation failed. The runtime may fall back to…",44,null],[13,"cudaErrorInvalidGraphicsContext","","This indicates an error with the OpenGL or DirectX context.",44,null],[13,"cudaErrorNvlinkUncorrectable","","This indicates that an uncorrectable NVLink error was…",44,null],[13,"cudaErrorJitCompilerNotFound","","This indicates that the PTX JIT compiler library was not…",44,null],[13,"cudaErrorInvalidSource","","This indicates that the device kernel source is invalid.",44,null],[13,"cudaErrorFileNotFound","","This indicates that the file specified was not found.",44,null],[13,"cudaErrorSharedObjectSymbolNotFound","","This indicates that a link to a shared object failed to…",44,null],[13,"cudaErrorSharedObjectInitFailed","","This indicates that initialization of a shared object…",44,null],[13,"cudaErrorOperatingSystem","","This error indicates that an OS call failed.",44,null],[13,"cudaErrorInvalidResourceHandle","","This indicates that a resource handle passed to the API…",44,null],[13,"cudaErrorIllegalState","","This indicates that a resource required by the API call is…",44,null],[13,"cudaErrorSymbolNotFound","","This indicates that a named symbol was not found. Examples…",44,null],[13,"cudaErrorNotReady","","This indicates that asynchronous operations issued…",44,null],[13,"cudaErrorIllegalAddress","","The device encountered a load or store instruction on an…",44,null],[13,"cudaErrorLaunchOutOfResources","","This indicates that a launch did not occur because it did…",44,null],[13,"cudaErrorLaunchTimeout","","This indicates that the device kernel took too long to…",44,null],[13,"cudaErrorLaunchIncompatibleTexturing","","This error indicates a kernel launch that uses an…",44,null],[13,"cudaErrorPeerAccessAlreadyEnabled","","This error indicates that a call to…",44,null],[13,"cudaErrorPeerAccessNotEnabled","","This error indicates that ::cudaDeviceDisablePeerAccess()…",44,null],[13,"cudaErrorSetOnActiveProcess","","This indicates that the user has called…",44,null],[13,"cudaErrorContextIsDestroyed","","This error indicates that the context current to the…",44,null],[13,"cudaErrorAssert","","An assert triggered in device code during kernel…",44,null],[13,"cudaErrorTooManyPeers","","This error indicates that the hardware resources required…",44,null],[13,"cudaErrorHostMemoryAlreadyRegistered","","This error indicates that the memory range passed to…",44,null],[13,"cudaErrorHostMemoryNotRegistered","","This error indicates that the pointer passed to…",44,null],[13,"cudaErrorHardwareStackError","","Device encountered an error in the call stack during…",44,null],[13,"cudaErrorIllegalInstruction","","The device encountered an illegal instruction during…",44,null],[13,"cudaErrorMisalignedAddress","","The device encountered a load or store instruction on a…",44,null],[13,"cudaErrorInvalidAddressSpace","","While executing a kernel, the device encountered an…",44,null],[13,"cudaErrorInvalidPc","","The device encountered an invalid program counter. This…",44,null],[13,"cudaErrorLaunchFailure","","An exception occurred on the device while executing a…",44,null],[13,"cudaErrorCooperativeLaunchTooLarge","","This error indicates that the number of blocks launched…",44,null],[13,"cudaErrorNotPermitted","","This error indicates the attempted operation is not…",44,null],[13,"cudaErrorNotSupported","","This error indicates the attempted operation is not…",44,null],[13,"cudaErrorSystemNotReady","","This error indicates that the system is not yet ready to…",44,null],[13,"cudaErrorSystemDriverMismatch","","This error indicates that there is a mismatch between the…",44,null],[13,"cudaErrorCompatNotSupportedOnDevice","","This error indicates that the system was upgraded to run…",44,null],[13,"cudaErrorStreamCaptureUnsupported","","The operation is not permitted when the stream is capturing.",44,null],[13,"cudaErrorStreamCaptureInvalidated","","The current capture sequence on the stream has been…",44,null],[13,"cudaErrorStreamCaptureMerge","","The operation would have resulted in a merge of two…",44,null],[13,"cudaErrorStreamCaptureUnmatched","","The capture was not initiated in this stream.",44,null],[13,"cudaErrorStreamCaptureUnjoined","","The capture sequence contains a fork that was not joined…",44,null],[13,"cudaErrorStreamCaptureIsolation","","A dependency would have been created which crosses the…",44,null],[13,"cudaErrorStreamCaptureImplicit","","The operation would have resulted in a disallowed implicit…",44,null],[13,"cudaErrorCapturedEvent","","The operation is not permitted on an event which was last…",44,null],[13,"cudaErrorStreamCaptureWrongThread","","A stream capture sequence not initiated with the…",44,null],[13,"cudaErrorTimeout","","This indicates that the wait operation has timed out.",44,null],[13,"cudaErrorGraphExecUpdateFailure","","This error indicates that the graph update was not…",44,null],[13,"cudaErrorUnknown","","This indicates that an unknown internal error has occurred.",44,null],[13,"cudaErrorApiFailureBase","","Any unhandled CUDA driver error is added to this value and…",44,null],[4,"cudaOutputMode_t","","CUDA Profiler Output modes",null,null],[13,"cudaKeyValuePair","","< Output mode Key-Value pair format.",63,null],[13,"cudaCSV","","< Output mode Comma separated values format.",63,null],[4,"cudaCGScope","","CUDA cooperative group scope",null,null],[13,"cudaCGScopeInvalid","","< Invalid cooperative group scope",68,null],[13,"cudaCGScopeGrid","","< Scope represented by a grid_group",68,null],[13,"cudaCGScopeMultiGrid","","< Scope represented by a multi_grid_group",68,null],[4,"cudaGraphNodeType","","CUDA Graph node types",null,null],[13,"cudaGraphNodeTypeKernel","","< GPU kernel node",69,null],[13,"cudaGraphNodeTypeMemcpy","","< Memcpy node",69,null],[13,"cudaGraphNodeTypeMemset","","< Memset node",69,null],[13,"cudaGraphNodeTypeHost","","< Host (executable) node",69,null],[13,"cudaGraphNodeTypeGraph","","< Node which executes an embedded graph",69,null],[13,"cudaGraphNodeTypeEmpty","","< Empty (no-op) node",69,null],[13,"cudaGraphNodeTypeCount","","",69,null],[4,"cudaGraphExecUpdateResult","","CUDA Graph Update error types",null,null],[13,"cudaGraphExecUpdateSuccess","","< The update succeeded",70,null],[13,"cudaGraphExecUpdateError","","< The update failed for an unexpected reason which is…",70,null],[13,"cudaGraphExecUpdateErrorTopologyChanged","","< The update failed because the topology changed",70,null],[13,"cudaGraphExecUpdateErrorNodeTypeChanged","","< The update failed because a node type changed",70,null],[13,"cudaGraphExecUpdateErrorFunctionChanged","","< The update failed because the function of a kernel node…",70,null],[13,"cudaGraphExecUpdateErrorParametersChanged","","< The update failed because the parameters changed in a…",70,null],[13,"cudaGraphExecUpdateErrorNotSupported","","< The update failed because something about the node is…",70,null],[4,"cudaDataType_t","","",null,null],[13,"CUDA_R_16F","","",71,null],[13,"CUDA_C_16F","","",71,null],[13,"CUDA_R_32F","","",71,null],[13,"CUDA_C_32F","","",71,null],[13,"CUDA_R_64F","","",71,null],[13,"CUDA_C_64F","","",71,null],[13,"CUDA_R_8I","","",71,null],[13,"CUDA_C_8I","","",71,null],[13,"CUDA_R_8U","","",71,null],[13,"CUDA_C_8U","","",71,null],[13,"CUDA_R_32I","","",71,null],[13,"CUDA_C_32I","","",71,null],[13,"CUDA_R_32U","","",71,null],[13,"CUDA_C_32U","","",71,null],[4,"cudaDataType","","",null,null],[13,"CUDA_R_16F","","",71,null],[13,"CUDA_C_16F","","",71,null],[13,"CUDA_R_32F","","",71,null],[13,"CUDA_C_32F","","",71,null],[13,"CUDA_R_64F","","",71,null],[13,"CUDA_C_64F","","",71,null],[13,"CUDA_R_8I","","",71,null],[13,"CUDA_C_8I","","",71,null],[13,"CUDA_R_8U","","",71,null],[13,"CUDA_C_8U","","",71,null],[13,"CUDA_R_32I","","",71,null],[13,"CUDA_C_32I","","",71,null],[13,"CUDA_R_32U","","",71,null],[13,"CUDA_C_32U","","",71,null],[4,"cublasStatus_t","","",null,null],[13,"CUBLAS_STATUS_SUCCESS","","",72,null],[13,"CUBLAS_STATUS_NOT_INITIALIZED","","",72,null],[13,"CUBLAS_STATUS_ALLOC_FAILED","","",72,null],[13,"CUBLAS_STATUS_INVALID_VALUE","","",72,null],[13,"CUBLAS_STATUS_ARCH_MISMATCH","","",72,null],[13,"CUBLAS_STATUS_MAPPING_ERROR","","",72,null],[13,"CUBLAS_STATUS_EXECUTION_FAILED","","",72,null],[13,"CUBLAS_STATUS_INTERNAL_ERROR","","",72,null],[13,"CUBLAS_STATUS_NOT_SUPPORTED","","",72,null],[13,"CUBLAS_STATUS_LICENSE_ERROR","","",72,null],[4,"cublasFillMode_t","","",null,null],[13,"CUBLAS_FILL_MODE_LOWER","","",73,null],[13,"CUBLAS_FILL_MODE_UPPER","","",73,null],[13,"CUBLAS_FILL_MODE_FULL","","",73,null],[4,"cublasDiagType_t","","",null,null],[13,"CUBLAS_DIAG_NON_UNIT","","",74,null],[13,"CUBLAS_DIAG_UNIT","","",74,null],[4,"cublasSideMode_t","","",null,null],[13,"CUBLAS_SIDE_LEFT","","",75,null],[13,"CUBLAS_SIDE_RIGHT","","",75,null],[4,"cublasOperation_t","","",null,null],[13,"CUBLAS_OP_N","","",76,null],[13,"CUBLAS_OP_T","","",76,null],[13,"CUBLAS_OP_C","","",76,null],[13,"CUBLAS_OP_CONJG","","",76,null],[4,"cublasPointerMode_t","","",null,null],[13,"CUBLAS_POINTER_MODE_HOST","","",77,null],[13,"CUBLAS_POINTER_MODE_DEVICE","","",77,null],[4,"cublasAtomicsMode_t","","",null,null],[13,"CUBLAS_ATOMICS_NOT_ALLOWED","","",78,null],[13,"CUBLAS_ATOMICS_ALLOWED","","",78,null],[4,"cublasGemmAlgo_t","","",null,null],[13,"CUBLAS_GEMM_DFALT","","",79,null],[13,"CUBLAS_GEMM_ALGO0","","",79,null],[13,"CUBLAS_GEMM_ALGO1","","",79,null],[13,"CUBLAS_GEMM_ALGO2","","",79,null],[13,"CUBLAS_GEMM_ALGO3","","",79,null],[13,"CUBLAS_GEMM_ALGO4","","",79,null],[13,"CUBLAS_GEMM_ALGO5","","",79,null],[13,"CUBLAS_GEMM_ALGO6","","",79,null],[13,"CUBLAS_GEMM_ALGO7","","",79,null],[13,"CUBLAS_GEMM_ALGO8","","",79,null],[13,"CUBLAS_GEMM_ALGO9","","",79,null],[13,"CUBLAS_GEMM_ALGO10","","",79,null],[13,"CUBLAS_GEMM_ALGO11","","",79,null],[13,"CUBLAS_GEMM_ALGO12","","",79,null],[13,"CUBLAS_GEMM_ALGO13","","",79,null],[13,"CUBLAS_GEMM_ALGO14","","",79,null],[13,"CUBLAS_GEMM_ALGO15","","",79,null],[13,"CUBLAS_GEMM_ALGO16","","",79,null],[13,"CUBLAS_GEMM_ALGO17","","",79,null],[13,"CUBLAS_GEMM_ALGO18","","",79,null],[13,"CUBLAS_GEMM_ALGO19","","",79,null],[13,"CUBLAS_GEMM_ALGO20","","",79,null],[13,"CUBLAS_GEMM_ALGO21","","",79,null],[13,"CUBLAS_GEMM_ALGO22","","",79,null],[13,"CUBLAS_GEMM_ALGO23","","",79,null],[13,"CUBLAS_GEMM_DEFAULT_TENSOR_OP","","",79,null],[13,"CUBLAS_GEMM_ALGO0_TENSOR_OP","","",79,null],[13,"CUBLAS_GEMM_ALGO1_TENSOR_OP","","",79,null],[13,"CUBLAS_GEMM_ALGO2_TENSOR_OP","","",79,null],[13,"CUBLAS_GEMM_ALGO3_TENSOR_OP","","",79,null],[13,"CUBLAS_GEMM_ALGO4_TENSOR_OP","","",79,null],[13,"CUBLAS_GEMM_ALGO5_TENSOR_OP","","",79,null],[13,"CUBLAS_GEMM_ALGO6_TENSOR_OP","","",79,null],[13,"CUBLAS_GEMM_ALGO7_TENSOR_OP","","",79,null],[13,"CUBLAS_GEMM_ALGO8_TENSOR_OP","","",79,null],[13,"CUBLAS_GEMM_ALGO9_TENSOR_OP","","",79,null],[13,"CUBLAS_GEMM_ALGO10_TENSOR_OP","","",79,null],[13,"CUBLAS_GEMM_ALGO11_TENSOR_OP","","",79,null],[13,"CUBLAS_GEMM_ALGO12_TENSOR_OP","","",79,null],[13,"CUBLAS_GEMM_ALGO13_TENSOR_OP","","",79,null],[13,"CUBLAS_GEMM_ALGO14_TENSOR_OP","","",79,null],[13,"CUBLAS_GEMM_ALGO15_TENSOR_OP","","",79,null],[4,"cublasMath_t","","",null,null],[13,"CUBLAS_DEFAULT_MATH","","",80,null],[13,"CUBLAS_TENSOR_OP_MATH","","",80,null],[4,"cublasDataType_t","","",null,null],[13,"CUDA_R_16F","","",71,null],[13,"CUDA_C_16F","","",71,null],[13,"CUDA_R_32F","","",71,null],[13,"CUDA_C_32F","","",71,null],[13,"CUDA_R_64F","","",71,null],[13,"CUDA_C_64F","","",71,null],[13,"CUDA_R_8I","","",71,null],[13,"CUDA_C_8I","","",71,null],[13,"CUDA_R_8U","","",71,null],[13,"CUDA_C_8U","","",71,null],[13,"CUDA_R_32I","","",71,null],[13,"CUDA_C_32I","","",71,null],[13,"CUDA_R_32U","","",71,null],[13,"CUDA_C_32U","","",71,null],[5,"cublasCreate_v2","","",null,null],[5,"cublasDestroy_v2","","",null,null],[5,"cublasGetVersion_v2","","",null,null],[5,"cublasGetProperty","","",null,null],[5,"cublasGetCudartVersion","","",null,null],[5,"cublasSetStream_v2","","",null,null],[5,"cublasGetStream_v2","","",null,null],[5,"cublasGetPointerMode_v2","","",null,null],[5,"cublasSetPointerMode_v2","","",null,null],[5,"cublasGetAtomicsMode","","",null,null],[5,"cublasSetAtomicsMode","","",null,null],[5,"cublasGetMathMode","","",null,null],[5,"cublasSetMathMode","","",null,null],[5,"cublasLoggerConfigure","","",null,null],[5,"cublasSetLoggerCallback","","",null,null],[5,"cublasGetLoggerCallback","","",null,null],[5,"cublasSetVector","","",null,null],[5,"cublasGetVector","","",null,null],[5,"cublasSetMatrix","","",null,null],[5,"cublasGetMatrix","","",null,null],[5,"cublasSetVectorAsync","","",null,null],[5,"cublasGetVectorAsync","","",null,null],[5,"cublasSetMatrixAsync","","",null,null],[5,"cublasGetMatrixAsync","","",null,null],[5,"cublasXerbla","","",null,null],[5,"cublasNrm2Ex","","",null,null],[5,"cublasSnrm2_v2","","",null,null],[5,"cublasDnrm2_v2","","",null,null],[5,"cublasScnrm2_v2","","",null,null],[5,"cublasDznrm2_v2","","",null,null],[5,"cublasDotEx","","",null,null],[5,"cublasDotcEx","","",null,null],[5,"cublasSdot_v2","","",null,null],[5,"cublasDdot_v2","","",null,null],[5,"cublasCdotu_v2","","",null,null],[5,"cublasCdotc_v2","","",null,null],[5,"cublasZdotu_v2","","",null,null],[5,"cublasZdotc_v2","","",null,null],[5,"cublasScalEx","","",null,null],[5,"cublasSscal_v2","","",null,null],[5,"cublasDscal_v2","","",null,null],[5,"cublasCscal_v2","","",null,null],[5,"cublasCsscal_v2","","",null,null],[5,"cublasZscal_v2","","",null,null],[5,"cublasZdscal_v2","","",null,null],[5,"cublasAxpyEx","","",null,null],[5,"cublasSaxpy_v2","","",null,null],[5,"cublasDaxpy_v2","","",null,null],[5,"cublasCaxpy_v2","","",null,null],[5,"cublasZaxpy_v2","","",null,null],[5,"cublasCopyEx","","",null,null],[5,"cublasScopy_v2","","",null,null],[5,"cublasDcopy_v2","","",null,null],[5,"cublasCcopy_v2","","",null,null],[5,"cublasZcopy_v2","","",null,null],[5,"cublasSswap_v2","","",null,null],[5,"cublasDswap_v2","","",null,null],[5,"cublasCswap_v2","","",null,null],[5,"cublasZswap_v2","","",null,null],[5,"cublasSwapEx","","",null,null],[5,"cublasIsamax_v2","","",null,null],[5,"cublasIdamax_v2","","",null,null],[5,"cublasIcamax_v2","","",null,null],[5,"cublasIzamax_v2","","",null,null],[5,"cublasIamaxEx","","",null,null],[5,"cublasIsamin_v2","","",null,null],[5,"cublasIdamin_v2","","",null,null],[5,"cublasIcamin_v2","","",null,null],[5,"cublasIzamin_v2","","",null,null],[5,"cublasIaminEx","","",null,null],[5,"cublasAsumEx","","",null,null],[5,"cublasSasum_v2","","",null,null],[5,"cublasDasum_v2","","",null,null],[5,"cublasScasum_v2","","",null,null],[5,"cublasDzasum_v2","","",null,null],[5,"cublasSrot_v2","","",null,null],[5,"cublasDrot_v2","","",null,null],[5,"cublasCrot_v2","","",null,null],[5,"cublasCsrot_v2","","",null,null],[5,"cublasZrot_v2","","",null,null],[5,"cublasZdrot_v2","","",null,null],[5,"cublasRotEx","","",null,null],[5,"cublasSrotg_v2","","",null,null],[5,"cublasDrotg_v2","","",null,null],[5,"cublasCrotg_v2","","",null,null],[5,"cublasZrotg_v2","","",null,null],[5,"cublasRotgEx","","",null,null],[5,"cublasSrotm_v2","","",null,null],[5,"cublasDrotm_v2","","",null,null],[5,"cublasRotmEx","","",null,null],[5,"cublasSrotmg_v2","","",null,null],[5,"cublasDrotmg_v2","","",null,null],[5,"cublasRotmgEx","","",null,null],[5,"cublasSgemv_v2","","",null,null],[5,"cublasDgemv_v2","","",null,null],[5,"cublasCgemv_v2","","",null,null],[5,"cublasZgemv_v2","","",null,null],[5,"cublasSgbmv_v2","","",null,null],[5,"cublasDgbmv_v2","","",null,null],[5,"cublasCgbmv_v2","","",null,null],[5,"cublasZgbmv_v2","","",null,null],[5,"cublasStrmv_v2","","",null,null],[5,"cublasDtrmv_v2","","",null,null],[5,"cublasCtrmv_v2","","",null,null],[5,"cublasZtrmv_v2","","",null,null],[5,"cublasStbmv_v2","","",null,null],[5,"cublasDtbmv_v2","","",null,null],[5,"cublasCtbmv_v2","","",null,null],[5,"cublasZtbmv_v2","","",null,null],[5,"cublasStpmv_v2","","",null,null],[5,"cublasDtpmv_v2","","",null,null],[5,"cublasCtpmv_v2","","",null,null],[5,"cublasZtpmv_v2","","",null,null],[5,"cublasStrsv_v2","","",null,null],[5,"cublasDtrsv_v2","","",null,null],[5,"cublasCtrsv_v2","","",null,null],[5,"cublasZtrsv_v2","","",null,null],[5,"cublasStpsv_v2","","",null,null],[5,"cublasDtpsv_v2","","",null,null],[5,"cublasCtpsv_v2","","",null,null],[5,"cublasZtpsv_v2","","",null,null],[5,"cublasStbsv_v2","","",null,null],[5,"cublasDtbsv_v2","","",null,null],[5,"cublasCtbsv_v2","","",null,null],[5,"cublasZtbsv_v2","","",null,null],[5,"cublasSsymv_v2","","",null,null],[5,"cublasDsymv_v2","","",null,null],[5,"cublasCsymv_v2","","",null,null],[5,"cublasZsymv_v2","","",null,null],[5,"cublasChemv_v2","","",null,null],[5,"cublasZhemv_v2","","",null,null],[5,"cublasSsbmv_v2","","",null,null],[5,"cublasDsbmv_v2","","",null,null],[5,"cublasChbmv_v2","","",null,null],[5,"cublasZhbmv_v2","","",null,null],[5,"cublasSspmv_v2","","",null,null],[5,"cublasDspmv_v2","","",null,null],[5,"cublasChpmv_v2","","",null,null],[5,"cublasZhpmv_v2","","",null,null],[5,"cublasSger_v2","","",null,null],[5,"cublasDger_v2","","",null,null],[5,"cublasCgeru_v2","","",null,null],[5,"cublasCgerc_v2","","",null,null],[5,"cublasZgeru_v2","","",null,null],[5,"cublasZgerc_v2","","",null,null],[5,"cublasSsyr_v2","","",null,null],[5,"cublasDsyr_v2","","",null,null],[5,"cublasCsyr_v2","","",null,null],[5,"cublasZsyr_v2","","",null,null],[5,"cublasCher_v2","","",null,null],[5,"cublasZher_v2","","",null,null],[5,"cublasSspr_v2","","",null,null],[5,"cublasDspr_v2","","",null,null],[5,"cublasChpr_v2","","",null,null],[5,"cublasZhpr_v2","","",null,null],[5,"cublasSsyr2_v2","","",null,null],[5,"cublasDsyr2_v2","","",null,null],[5,"cublasCsyr2_v2","","",null,null],[5,"cublasZsyr2_v2","","",null,null],[5,"cublasCher2_v2","","",null,null],[5,"cublasZher2_v2","","",null,null],[5,"cublasSspr2_v2","","",null,null],[5,"cublasDspr2_v2","","",null,null],[5,"cublasChpr2_v2","","",null,null],[5,"cublasZhpr2_v2","","",null,null],[5,"cublasSgemm_v2","","",null,null],[5,"cublasDgemm_v2","","",null,null],[5,"cublasCgemm_v2","","",null,null],[5,"cublasCgemm3m","","",null,null],[5,"cublasCgemm3mEx","","",null,null],[5,"cublasZgemm_v2","","",null,null],[5,"cublasZgemm3m","","",null,null],[5,"cublasSgemmEx","","",null,null],[5,"cublasGemmEx","","",null,null],[5,"cublasCgemmEx","","",null,null],[5,"cublasUint8gemmBias","","",null,null],[5,"cublasSsyrk_v2","","",null,null],[5,"cublasDsyrk_v2","","",null,null],[5,"cublasCsyrk_v2","","",null,null],[5,"cublasZsyrk_v2","","",null,null],[5,"cublasCsyrkEx","","",null,null],[5,"cublasCsyrk3mEx","","",null,null],[5,"cublasCherk_v2","","",null,null],[5,"cublasZherk_v2","","",null,null],[5,"cublasCherkEx","","",null,null],[5,"cublasCherk3mEx","","",null,null],[5,"cublasSsyr2k_v2","","",null,null],[5,"cublasDsyr2k_v2","","",null,null],[5,"cublasCsyr2k_v2","","",null,null],[5,"cublasZsyr2k_v2","","",null,null],[5,"cublasCher2k_v2","","",null,null],[5,"cublasZher2k_v2","","",null,null],[5,"cublasSsyrkx","","",null,null],[5,"cublasDsyrkx","","",null,null],[5,"cublasCsyrkx","","",null,null],[5,"cublasZsyrkx","","",null,null],[5,"cublasCherkx","","",null,null],[5,"cublasZherkx","","",null,null],[5,"cublasSsymm_v2","","",null,null],[5,"cublasDsymm_v2","","",null,null],[5,"cublasCsymm_v2","","",null,null],[5,"cublasZsymm_v2","","",null,null],[5,"cublasChemm_v2","","",null,null],[5,"cublasZhemm_v2","","",null,null],[5,"cublasStrsm_v2","","",null,null],[5,"cublasDtrsm_v2","","",null,null],[5,"cublasCtrsm_v2","","",null,null],[5,"cublasZtrsm_v2","","",null,null],[5,"cublasStrmm_v2","","",null,null],[5,"cublasDtrmm_v2","","",null,null],[5,"cublasCtrmm_v2","","",null,null],[5,"cublasZtrmm_v2","","",null,null],[5,"cublasSgemmBatched","","",null,null],[5,"cublasDgemmBatched","","",null,null],[5,"cublasCgemmBatched","","",null,null],[5,"cublasCgemm3mBatched","","",null,null],[5,"cublasZgemmBatched","","",null,null],[5,"cublasGemmBatchedEx","","",null,null],[5,"cublasGemmStridedBatchedEx","","",null,null],[5,"cublasSgemmStridedBatched","","",null,null],[5,"cublasDgemmStridedBatched","","",null,null],[5,"cublasCgemmStridedBatched","","",null,null],[5,"cublasCgemm3mStridedBatched","","",null,null],[5,"cublasZgemmStridedBatched","","",null,null],[5,"cublasSgeam","","",null,null],[5,"cublasDgeam","","",null,null],[5,"cublasCgeam","","",null,null],[5,"cublasZgeam","","",null,null],[5,"cublasSgetrfBatched","","",null,null],[5,"cublasDgetrfBatched","","",null,null],[5,"cublasCgetrfBatched","","",null,null],[5,"cublasZgetrfBatched","","",null,null],[5,"cublasSgetriBatched","","",null,null],[5,"cublasDgetriBatched","","",null,null],[5,"cublasCgetriBatched","","",null,null],[5,"cublasZgetriBatched","","",null,null],[5,"cublasSgetrsBatched","","",null,null],[5,"cublasDgetrsBatched","","",null,null],[5,"cublasCgetrsBatched","","",null,null],[5,"cublasZgetrsBatched","","",null,null],[5,"cublasStrsmBatched","","",null,null],[5,"cublasDtrsmBatched","","",null,null],[5,"cublasCtrsmBatched","","",null,null],[5,"cublasZtrsmBatched","","",null,null],[5,"cublasSmatinvBatched","","",null,null],[5,"cublasDmatinvBatched","","",null,null],[5,"cublasCmatinvBatched","","",null,null],[5,"cublasZmatinvBatched","","",null,null],[5,"cublasSgeqrfBatched","","",null,null],[5,"cublasDgeqrfBatched","","",null,null],[5,"cublasCgeqrfBatched","","",null,null],[5,"cublasZgeqrfBatched","","",null,null],[5,"cublasSgelsBatched","","",null,null],[5,"cublasDgelsBatched","","",null,null],[5,"cublasCgelsBatched","","",null,null],[5,"cublasZgelsBatched","","",null,null],[5,"cublasSdgmm","","",null,null],[5,"cublasDdgmm","","",null,null],[5,"cublasCdgmm","","",null,null],[5,"cublasZdgmm","","",null,null],[5,"cublasStpttr","","",null,null],[5,"cublasDtpttr","","",null,null],[5,"cublasCtpttr","","",null,null],[5,"cublasZtpttr","","",null,null],[5,"cublasStrttp","","",null,null],[5,"cublasDtrttp","","",null,null],[5,"cublasCtrttp","","",null,null],[5,"cublasZtrttp","","",null,null],[18,"CUBLAS_OP_HERMITAN","","",76,null],[18,"CUBLAS_GEMM_DEFAULT","","",79,null],[18,"CUBLAS_GEMM_DFALT_TENSOR_OP","","",79,null],[6,"cudaArray_t","","CUDA array",null,null],[6,"cudaArray_const_t","","CUDA array (as source copy argument)",null,null],[6,"cudaMipmappedArray_t","","CUDA mipmapped array",null,null],[6,"cudaMipmappedArray_const_t","","CUDA mipmapped array (as source argument)",null,null],[6,"cudaHostFn_t","","CUDA host function \\\\param userData Argument value passed…",null,null],[6,"CUuuid","","",null,null],[6,"cudaUUID_t","","",null,null],[6,"cudaIpcEventHandle_t","","CUDA IPC event handle",null,null],[6,"cudaIpcMemHandle_t","","CUDA IPC memory handle",null,null],[6,"cudaStream_t","","CUDA stream",null,null],[6,"cudaEvent_t","","CUDA event types",null,null],[6,"cudaGraphicsResource_t","","CUDA graphics resource types",null,null],[6,"cudaExternalMemory_t","","CUDA external memory",null,null],[6,"cudaExternalSemaphore_t","","CUDA external semaphore",null,null],[6,"cudaGraph_t","","CUDA graph",null,null],[6,"cudaGraphNode_t","","CUDA graph node.",null,null],[6,"cudaGraphExec_t","","CUDA executable (launchable) graph",null,null],[6,"cuFloatComplex","","",null,null],[6,"cuDoubleComplex","","",null,null],[6,"cuComplex","","",null,null],[6,"libraryPropertyType_t","","",null,null],[6,"libraryPropertyType","","",null,null],[6,"cublasHandle_t","","",null,null],[6,"cublasLogCallback","","",null,null],[17,"CUBLAS_VER_MAJOR","","",null,null],[17,"CUBLAS_VER_MINOR","","",null,null],[17,"CUBLAS_VER_PATCH","","",null,null],[17,"CUBLAS_VER_BUILD","","",null,null],[17,"CUBLAS_VERSION","","",null,null],[17,"libraryPropertyType_t_MAJOR_VERSION","","",null,null],[17,"libraryPropertyType_t_MINOR_VERSION","","",null,null],[17,"libraryPropertyType_t_PATCH_LEVEL","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"clone","","",0,[[],["float2",3]]],[11,"clone","","",1,[[],["double2",3]]],[11,"clone","","",2,[[],["dim3",3]]],[11,"clone","","",44,[[],["cudaerror",4]]],[11,"clone","","",45,[[],["cudachannelformatkind",4]]],[11,"clone","","",3,[[],["cudachannelformatdesc",3]]],[11,"clone","","",81,[[],["cudaarray",3]]],[11,"clone","","",82,[[],["cudamipmappedarray",3]]],[11,"clone","","",46,[[],["cudamemorytype",4]]],[11,"clone","","",47,[[],["cudamemcpykind",4]]],[11,"clone","","",4,[[],["cudapitchedptr",3]]],[11,"clone","","",5,[[],["cudaextent",3]]],[11,"clone","","",6,[[],["cudapos",3]]],[11,"clone","","",7,[[],["cudamemcpy3dparms",3]]],[11,"clone","","",8,[[],["cudamemcpy3dpeerparms",3]]],[11,"clone","","",9,[[],["cudamemsetparams",3]]],[11,"clone","","",10,[[],["cudahostnodeparams",3]]],[11,"clone","","",48,[[],["cudastreamcapturestatus",4]]],[11,"clone","","",49,[[],["cudastreamcapturemode",4]]],[11,"clone","","",83,[[],["cudagraphicsresource",3]]],[11,"clone","","",50,[[],["cudagraphicsregisterflags",4]]],[11,"clone","","",51,[[],["cudagraphicsmapflags",4]]],[11,"clone","","",52,[[],["cudagraphicscubeface",4]]],[11,"clone","","",53,[[],["cudaresourcetype",4]]],[11,"clone","","",54,[[],["cudaresourceviewformat",4]]],[11,"clone","","",11,[[],["cudaresourcedesc",3]]],[11,"clone","","",39,[[],["cudaresourcedesc__bindgen_ty_1",19]]],[11,"clone","","",12,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",13,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_2",3]]],[11,"clone","","",14,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_3",3]]],[11,"clone","","",15,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_4",3]]],[11,"clone","","",16,[[],["cudaresourceviewdesc",3]]],[11,"clone","","",17,[[],["cudapointerattributes",3]]],[11,"clone","","",18,[[],["cudafuncattributes",3]]],[11,"clone","","",55,[[],["cudafuncattribute",4]]],[11,"clone","","",56,[[],["cudafunccache",4]]],[11,"clone","","",57,[[],["cudasharedmemconfig",4]]],[11,"clone","","",58,[[],["cudasharedcarveout",4]]],[11,"clone","","",59,[[],["cudacomputemode",4]]],[11,"clone","","",60,[[],["cudalimit",4]]],[11,"clone","","",61,[[],["cudamemoryadvise",4]]],[11,"clone","","",62,[[],["cudamemrangeattribute",4]]],[11,"clone","","",63,[[],["cudaoutputmode",4]]],[11,"clone","","",64,[[],["cudadeviceattr",4]]],[11,"clone","","",65,[[],["cudadevicep2pattr",4]]],[11,"clone","","",19,[[],["cuuuid_st",3]]],[11,"clone","","",20,[[],["cudadeviceprop",3]]],[11,"clone","","",21,[[],["cudaipceventhandle_st",3]]],[11,"clone","","",22,[[],["cudaipcmemhandle_st",3]]],[11,"clone","","",66,[[],["cudaexternalmemoryhandletype",4]]],[11,"clone","","",23,[[],["cudaexternalmemoryhandledesc",3]]],[11,"clone","","",40,[[],["cudaexternalmemoryhandledesc__bindgen_ty_1",19]]],[11,"clone","","",24,[[],["cudaexternalmemoryhandledesc__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",25,[[],["cudaexternalmemorybufferdesc",3]]],[11,"clone","","",26,[[],["cudaexternalmemorymipmappedarraydesc",3]]],[11,"clone","","",67,[[],["cudaexternalsemaphorehandletype",4]]],[11,"clone","","",27,[[],["cudaexternalsemaphorehandledesc",3]]],[11,"clone","","",41,[[],["cudaexternalsemaphorehandledesc__bindgen_ty_1",19]]],[11,"clone","","",28,[[],["cudaexternalsemaphorehandledesc__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",29,[[],["cudaexternalsemaphoresignalparams",3]]],[11,"clone","","",30,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1",3]]],[11,"clone","","",31,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",42,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_2",19]]],[11,"clone","","",32,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_3",3]]],[11,"clone","","",33,[[],["cudaexternalsemaphorewaitparams",3]]],[11,"clone","","",34,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1",3]]],[11,"clone","","",35,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",43,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_2",19]]],[11,"clone","","",36,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_3",3]]],[11,"clone","","",84,[[],["custream_st",3]]],[11,"clone","","",85,[[],["cuevent_st",3]]],[11,"clone","","",86,[[],["cuexternalmemory_st",3]]],[11,"clone","","",87,[[],["cuexternalsemaphore_st",3]]],[11,"clone","","",88,[[],["cugraph_st",3]]],[11,"clone","","",89,[[],["cugraphnode_st",3]]],[11,"clone","","",68,[[],["cudacgscope",4]]],[11,"clone","","",37,[[],["cudalaunchparams",3]]],[11,"clone","","",38,[[],["cudakernelnodeparams",3]]],[11,"clone","","",69,[[],["cudagraphnodetype",4]]],[11,"clone","","",90,[[],["cugraphexec_st",3]]],[11,"clone","","",70,[[],["cudagraphexecupdateresult",4]]],[11,"clone","","",71,[[],["cudadatatype_t",4]]],[11,"clone","","",72,[[],["cublasstatus_t",4]]],[11,"clone","","",73,[[],["cublasfillmode_t",4]]],[11,"clone","","",74,[[],["cublasdiagtype_t",4]]],[11,"clone","","",75,[[],["cublassidemode_t",4]]],[11,"clone","","",76,[[],["cublasoperation_t",4]]],[11,"clone","","",77,[[],["cublaspointermode_t",4]]],[11,"clone","","",78,[[],["cublasatomicsmode_t",4]]],[11,"clone","","",79,[[],["cublasgemmalgo_t",4]]],[11,"clone","","",80,[[],["cublasmath_t",4]]],[11,"clone","","",91,[[],["cublascontext",3]]],[11,"eq","","",44,[[["cudaerror",4]]]],[11,"eq","","",45,[[["cudachannelformatkind",4]]]],[11,"eq","","",46,[[["cudamemorytype",4]]]],[11,"eq","","",47,[[["cudamemcpykind",4]]]],[11,"eq","","",48,[[["cudastreamcapturestatus",4]]]],[11,"eq","","",49,[[["cudastreamcapturemode",4]]]],[11,"eq","","",50,[[["cudagraphicsregisterflags",4]]]],[11,"eq","","",51,[[["cudagraphicsmapflags",4]]]],[11,"eq","","",52,[[["cudagraphicscubeface",4]]]],[11,"eq","","",53,[[["cudaresourcetype",4]]]],[11,"eq","","",54,[[["cudaresourceviewformat",4]]]],[11,"eq","","",55,[[["cudafuncattribute",4]]]],[11,"eq","","",56,[[["cudafunccache",4]]]],[11,"eq","","",57,[[["cudasharedmemconfig",4]]]],[11,"eq","","",58,[[["cudasharedcarveout",4]]]],[11,"eq","","",59,[[["cudacomputemode",4]]]],[11,"eq","","",60,[[["cudalimit",4]]]],[11,"eq","","",61,[[["cudamemoryadvise",4]]]],[11,"eq","","",62,[[["cudamemrangeattribute",4]]]],[11,"eq","","",63,[[["cudaoutputmode",4]]]],[11,"eq","","",64,[[["cudadeviceattr",4]]]],[11,"eq","","",65,[[["cudadevicep2pattr",4]]]],[11,"eq","","",66,[[["cudaexternalmemoryhandletype",4]]]],[11,"eq","","",67,[[["cudaexternalsemaphorehandletype",4]]]],[11,"eq","","",68,[[["cudacgscope",4]]]],[11,"eq","","",69,[[["cudagraphnodetype",4]]]],[11,"eq","","",70,[[["cudagraphexecupdateresult",4]]]],[11,"eq","","",71,[[["cudadatatype_t",4]]]],[11,"eq","","",72,[[["cublasstatus_t",4]]]],[11,"eq","","",73,[[["cublasfillmode_t",4]]]],[11,"eq","","",74,[[["cublasdiagtype_t",4]]]],[11,"eq","","",75,[[["cublassidemode_t",4]]]],[11,"eq","","",76,[[["cublasoperation_t",4]]]],[11,"eq","","",77,[[["cublaspointermode_t",4]]]],[11,"eq","","",78,[[["cublasatomicsmode_t",4]]]],[11,"eq","","",79,[[["cublasgemmalgo_t",4]]]],[11,"eq","","",80,[[["cublasmath_t",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",62,[[]]],[11,"hash","","",63,[[]]],[11,"hash","","",64,[[]]],[11,"hash","","",65,[[]]],[11,"hash","","",66,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",68,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",70,[[]]],[11,"hash","","",71,[[]]],[11,"hash","","",72,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",76,[[]]],[11,"hash","","",77,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",80,[[]]]],"p":[[3,"float2"],[3,"double2"],[3,"dim3"],[3,"cudaChannelFormatDesc"],[3,"cudaPitchedPtr"],[3,"cudaExtent"],[3,"cudaPos"],[3,"cudaMemcpy3DParms"],[3,"cudaMemcpy3DPeerParms"],[3,"cudaMemsetParams"],[3,"cudaHostNodeParams"],[3,"cudaResourceDesc"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4"],[3,"cudaResourceViewDesc"],[3,"cudaPointerAttributes"],[3,"cudaFuncAttributes"],[3,"CUuuid_st"],[3,"cudaDeviceProp"],[3,"cudaIpcEventHandle_st"],[3,"cudaIpcMemHandle_st"],[3,"cudaExternalMemoryHandleDesc"],[3,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalMemoryBufferDesc"],[3,"cudaExternalMemoryMipmappedArrayDesc"],[3,"cudaExternalSemaphoreHandleDesc"],[3,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3"],[3,"cudaExternalSemaphoreWaitParams"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3"],[3,"cudaLaunchParams"],[3,"cudaKernelNodeParams"],[19,"cudaResourceDesc__bindgen_ty_1"],[19,"cudaExternalMemoryHandleDesc__bindgen_ty_1"],[19,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1"],[19,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2"],[19,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2"],[4,"cudaError"],[4,"cudaChannelFormatKind"],[4,"cudaMemoryType"],[4,"cudaMemcpyKind"],[4,"cudaStreamCaptureStatus"],[4,"cudaStreamCaptureMode"],[4,"cudaGraphicsRegisterFlags"],[4,"cudaGraphicsMapFlags"],[4,"cudaGraphicsCubeFace"],[4,"cudaResourceType"],[4,"cudaResourceViewFormat"],[4,"cudaFuncAttribute"],[4,"cudaFuncCache"],[4,"cudaSharedMemConfig"],[4,"cudaSharedCarveout"],[4,"cudaComputeMode"],[4,"cudaLimit"],[4,"cudaMemoryAdvise"],[4,"cudaMemRangeAttribute"],[4,"cudaOutputMode"],[4,"cudaDeviceAttr"],[4,"cudaDeviceP2PAttr"],[4,"cudaExternalMemoryHandleType"],[4,"cudaExternalSemaphoreHandleType"],[4,"cudaCGScope"],[4,"cudaGraphNodeType"],[4,"cudaGraphExecUpdateResult"],[4,"cudaDataType_t"],[4,"cublasStatus_t"],[4,"cublasFillMode_t"],[4,"cublasDiagType_t"],[4,"cublasSideMode_t"],[4,"cublasOperation_t"],[4,"cublasPointerMode_t"],[4,"cublasAtomicsMode_t"],[4,"cublasGemmAlgo_t"],[4,"cublasMath_t"],[3,"cudaArray"],[3,"cudaMipmappedArray"],[3,"cudaGraphicsResource"],[3,"CUstream_st"],[3,"CUevent_st"],[3,"CUexternalMemory_st"],[3,"CUexternalSemaphore_st"],[3,"CUgraph_st"],[3,"CUgraphNode_st"],[3,"CUgraphExec_st"],[3,"cublasContext"]]},\
"rcudnn":{"doc":"Provides a safe and convenient wrapper for the [CUDA…","i":[[17,"CUDNN_MAJOR","rcudnn","",null,null],[17,"CUDNN_MINOR","","",null,null],[17,"CUDNN_PATCHLEVEL","","",null,null],[17,"CUDNN_VERSION","","",null,null],[17,"CUDNN_DIM_MAX","","",null,null],[17,"CUDNN_LRN_MIN_N","","",null,null],[17,"CUDNN_LRN_MAX_N","","",null,null],[17,"CUDNN_LRN_MIN_K","","",null,null],[17,"CUDNN_LRN_MIN_BETA","","",null,null],[17,"CUDNN_BN_MIN_EPSILON","","",null,null],[17,"CUDNN_SEQDATA_DIM_COUNT","","",null,null],[17,"CUDNN_ATTN_QUERYMAP_ALL_TO_ONE","","",null,null],[17,"CUDNN_ATTN_QUERYMAP_ONE_TO_ONE","","",null,null],[17,"CUDNN_ATTN_DISABLE_PROJ_BIASES","","",null,null],[17,"CUDNN_ATTN_ENABLE_PROJ_BIASES","","",null,null],[17,"CUDNN_ATTN_WKIND_COUNT","","",null,null],[6,"cudaArray_t","","CUDA array",null,null],[6,"cudaArray_const_t","","CUDA array (as source copy argument)",null,null],[6,"cudaMipmappedArray_t","","CUDA mipmapped array",null,null],[6,"cudaMipmappedArray_const_t","","CUDA mipmapped array (as source argument)",null,null],[6,"cudaHostFn_t","","CUDA host function \\\\param userData Argument value passed…",null,null],[6,"CUuuid","","",null,null],[6,"cudaUUID_t","","",null,null],[6,"cudaIpcEventHandle_t","","CUDA IPC event handle",null,null],[6,"cudaIpcMemHandle_t","","CUDA IPC memory handle",null,null],[6,"cudaStream_t","","CUDA stream",null,null],[6,"cudaEvent_t","","CUDA event types",null,null],[6,"cudaGraphicsResource_t","","CUDA graphics resource types",null,null],[6,"cudaExternalMemory_t","","CUDA external memory",null,null],[6,"cudaExternalSemaphore_t","","CUDA external semaphore",null,null],[6,"cudaGraph_t","","CUDA graph",null,null],[6,"cudaGraphNode_t","","CUDA graph node.",null,null],[6,"cudaGraphExec_t","","CUDA executable (launchable) graph",null,null],[6,"cudaSurfaceObject_t","","An opaque value that represents a CUDA Surface object",null,null],[6,"cudaTextureObject_t","","An opaque value that represents a CUDA texture object",null,null],[17,"libraryPropertyType_t_MAJOR_VERSION","","",null,null],[17,"libraryPropertyType_t_MINOR_VERSION","","",null,null],[17,"libraryPropertyType_t_PATCH_LEVEL","","",null,null],[6,"libraryPropertyType_t","","",null,null],[6,"libraryPropertyType","","",null,null],[5,"cudaDeviceReset","","\\\\brief Destroy all allocations and reset all state on the…",null,[[],["cudaerror",4]]],[5,"cudaDeviceSynchronize","","\\\\brief Wait for compute device to finish",null,[[],["cudaerror",4]]],[5,"cudaDeviceSetLimit","","\\\\brief Set resource limits",null,[[["cudalimit",4]],["cudaerror",4]]],[5,"cudaDeviceGetLimit","","\\\\brief Returns resource limits",null,[[["cudalimit",4]],["cudaerror",4]]],[5,"cudaDeviceGetCacheConfig","","\\\\brief Returns the preferred cache configuration for the…",null,[[],["cudaerror",4]]],[5,"cudaDeviceGetStreamPriorityRange","","\\\\brief Returns numerical values that correspond to the…",null,[[],["cudaerror",4]]],[5,"cudaDeviceSetCacheConfig","","\\\\brief Sets the preferred cache configuration for the…",null,[[["cudafunccache",4]],["cudaerror",4]]],[5,"cudaDeviceGetSharedMemConfig","","\\\\brief Returns the shared memory configuration for the…",null,[[],["cudaerror",4]]],[5,"cudaDeviceSetSharedMemConfig","","\\\\brief Sets the shared memory configuration for the…",null,[[["cudasharedmemconfig",4]],["cudaerror",4]]],[5,"cudaDeviceGetByPCIBusId","","\\\\brief Returns a handle to a compute device",null,[[],["cudaerror",4]]],[5,"cudaDeviceGetPCIBusId","","\\\\brief Returns a PCI Bus Id string for the device",null,[[],["cudaerror",4]]],[5,"cudaIpcGetEventHandle","","\\\\brief Gets an interprocess handle for a previously…",null,[[],["cudaerror",4]]],[5,"cudaIpcOpenEventHandle","","\\\\brief Opens an interprocess event handle for use in the…",null,[[["cudaipceventhandle_st",3]],["cudaerror",4]]],[5,"cudaIpcGetMemHandle","","\\\\brief Gets an interprocess memory handle for an existing…",null,[[],["cudaerror",4]]],[5,"cudaIpcOpenMemHandle","","\\\\brief Opens an interprocess memory handle exported from…",null,[[["cudaipcmemhandle_st",3]],["cudaerror",4]]],[5,"cudaIpcCloseMemHandle","","\\\\brief Close memory mapped with cudaIpcOpenMemHandle",null,[[],["cudaerror",4]]],[5,"cudaThreadExit","","\\\\brief Exit and clean up from CUDA launches",null,[[],["cudaerror",4]]],[5,"cudaThreadSynchronize","","\\\\brief Wait for compute device to finish",null,[[],["cudaerror",4]]],[5,"cudaThreadSetLimit","","\\\\brief Set resource limits",null,[[["cudalimit",4]],["cudaerror",4]]],[5,"cudaThreadGetLimit","","\\\\brief Returns resource limits",null,[[["cudalimit",4]],["cudaerror",4]]],[5,"cudaThreadGetCacheConfig","","\\\\brief Returns the preferred cache configuration for the…",null,[[],["cudaerror",4]]],[5,"cudaThreadSetCacheConfig","","\\\\brief Sets the preferred cache configuration for the…",null,[[["cudafunccache",4]],["cudaerror",4]]],[5,"cudaGetLastError","","\\\\brief Returns the last error from a runtime call",null,[[],["cudaerror",4]]],[5,"cudaPeekAtLastError","","\\\\brief Returns the last error from a runtime call",null,[[],["cudaerror",4]]],[5,"cudaGetErrorName","","\\\\brief Returns the string representation of an error code…",null,[[["cudaerror",4]]]],[5,"cudaGetErrorString","","\\\\brief Returns the description string for an error code",null,[[["cudaerror",4]]]],[5,"cudaGetDeviceCount","","\\\\brief Returns the number of compute-capable devices",null,[[],["cudaerror",4]]],[5,"cudaGetDeviceProperties","","\\\\brief Returns information about the compute-device",null,[[],["cudaerror",4]]],[5,"cudaDeviceGetAttribute","","\\\\brief Returns information about the device",null,[[["cudadeviceattr",4]],["cudaerror",4]]],[5,"cudaDeviceGetNvSciSyncAttributes","","\\\\brief Return NvSciSync attributes that this device can…",null,[[],["cudaerror",4]]],[5,"cudaDeviceGetP2PAttribute","","\\\\brief Queries attributes of the link between two devices.",null,[[["cudadevicep2pattr",4]],["cudaerror",4]]],[5,"cudaChooseDevice","","\\\\brief Select compute-device which best matches criteria",null,[[],["cudaerror",4]]],[5,"cudaSetDevice","","\\\\brief Set device to be used for GPU executions",null,[[],["cudaerror",4]]],[5,"cudaGetDevice","","\\\\brief Returns which device is currently being used",null,[[],["cudaerror",4]]],[5,"cudaSetValidDevices","","\\\\brief Set a list of devices that can be used for CUDA",null,[[],["cudaerror",4]]],[5,"cudaSetDeviceFlags","","\\\\brief Sets flags to be used for device executions",null,[[],["cudaerror",4]]],[5,"cudaGetDeviceFlags","","\\\\brief Gets the flags for the current device",null,[[],["cudaerror",4]]],[5,"cudaStreamCreate","","\\\\brief Create an asynchronous stream",null,[[],["cudaerror",4]]],[5,"cudaStreamCreateWithFlags","","\\\\brief Create an asynchronous stream",null,[[],["cudaerror",4]]],[5,"cudaStreamCreateWithPriority","","\\\\brief Create an asynchronous stream with the specified…",null,[[],["cudaerror",4]]],[5,"cudaStreamGetPriority","","\\\\brief Query the priority of a stream",null,[[],["cudaerror",4]]],[5,"cudaStreamGetFlags","","\\\\brief Query the flags of a stream",null,[[],["cudaerror",4]]],[5,"cudaStreamDestroy","","\\\\brief Destroys and cleans up an asynchronous stream",null,[[],["cudaerror",4]]],[5,"cudaStreamWaitEvent","","\\\\brief Make a compute stream wait on an event",null,[[],["cudaerror",4]]],[6,"cudaStreamCallback_t","","Type of stream callback functions. \\\\param stream The…",null,null],[5,"cudaStreamAddCallback","","\\\\brief Add a callback to a compute stream",null,[[["option",4]],["cudaerror",4]]],[5,"cudaStreamSynchronize","","\\\\brief Waits for stream tasks to complete",null,[[],["cudaerror",4]]],[5,"cudaStreamQuery","","\\\\brief Queries an asynchronous stream for completion status",null,[[],["cudaerror",4]]],[5,"cudaStreamAttachMemAsync","","\\\\brief Attach memory to a stream asynchronously",null,[[],["cudaerror",4]]],[5,"cudaStreamBeginCapture","","\\\\brief Begins graph capture on a stream",null,[[["cudastreamcapturemode",4]],["cudaerror",4]]],[5,"cudaThreadExchangeStreamCaptureMode","","\\\\brief Swaps the stream capture interaction mode for a…",null,[[],["cudaerror",4]]],[5,"cudaStreamEndCapture","","\\\\brief Ends capture on a stream, returning the captured…",null,[[],["cudaerror",4]]],[5,"cudaStreamIsCapturing","","\\\\brief Returns a stream\'s capture status",null,[[],["cudaerror",4]]],[5,"cudaStreamGetCaptureInfo","","\\\\brief Query capture status of a stream",null,[[],["cudaerror",4]]],[5,"cudaEventCreate","","\\\\brief Creates an event object",null,[[],["cudaerror",4]]],[5,"cudaEventCreateWithFlags","","\\\\brief Creates an event object with the specified flags",null,[[],["cudaerror",4]]],[5,"cudaEventRecord","","\\\\brief Records an event",null,[[],["cudaerror",4]]],[5,"cudaEventQuery","","\\\\brief Queries an event\'s status",null,[[],["cudaerror",4]]],[5,"cudaEventSynchronize","","\\\\brief Waits for an event to complete",null,[[],["cudaerror",4]]],[5,"cudaEventDestroy","","\\\\brief Destroys an event object",null,[[],["cudaerror",4]]],[5,"cudaEventElapsedTime","","\\\\brief Computes the elapsed time between events",null,[[],["cudaerror",4]]],[5,"cudaImportExternalMemory","","\\\\brief Imports an external memory object",null,[[],["cudaerror",4]]],[5,"cudaExternalMemoryGetMappedBuffer","","\\\\brief Maps a buffer onto an imported memory object",null,[[],["cudaerror",4]]],[5,"cudaExternalMemoryGetMappedMipmappedArray","","\\\\brief Maps a CUDA mipmapped array onto an external memory…",null,[[],["cudaerror",4]]],[5,"cudaDestroyExternalMemory","","\\\\brief Destroys an external memory object.",null,[[],["cudaerror",4]]],[5,"cudaImportExternalSemaphore","","\\\\brief Imports an external semaphore",null,[[],["cudaerror",4]]],[5,"cudaSignalExternalSemaphoresAsync","","\\\\brief Signals a set of external semaphore objects",null,[[],["cudaerror",4]]],[5,"cudaWaitExternalSemaphoresAsync","","\\\\brief Waits on a set of external semaphore objects",null,[[],["cudaerror",4]]],[5,"cudaDestroyExternalSemaphore","","\\\\brief Destroys an external semaphore",null,[[],["cudaerror",4]]],[5,"cudaLaunchKernel","","\\\\brief Launches a device function",null,[[["dim3",3]],["cudaerror",4]]],[5,"cudaLaunchCooperativeKernel","","\\\\brief Launches a device function where thread blocks can…",null,[[["dim3",3]],["cudaerror",4]]],[5,"cudaLaunchCooperativeKernelMultiDevice","","\\\\brief Launches device functions on multiple devices where…",null,[[],["cudaerror",4]]],[5,"cudaFuncSetCacheConfig","","\\\\brief Sets the preferred cache configuration for a device…",null,[[["cudafunccache",4]],["cudaerror",4]]],[5,"cudaFuncSetSharedMemConfig","","\\\\brief Sets the shared memory configuration for a device…",null,[[["cudasharedmemconfig",4]],["cudaerror",4]]],[5,"cudaFuncGetAttributes","","\\\\brief Find out attributes for a given function",null,[[],["cudaerror",4]]],[5,"cudaFuncSetAttribute","","\\\\brief Set attributes for a given function",null,[[["cudafuncattribute",4]],["cudaerror",4]]],[5,"cudaSetDoubleForDevice","","\\\\brief Converts a double argument to be executed on a device",null,[[],["cudaerror",4]]],[5,"cudaSetDoubleForHost","","\\\\brief Converts a double argument after execution on a…",null,[[],["cudaerror",4]]],[5,"cudaLaunchHostFunc","","\\\\brief Enqueues a host function call in a stream",null,[[["option",4]],["cudaerror",4]]],[5,"cudaOccupancyMaxActiveBlocksPerMultiprocessor","","\\\\brief Returns occupancy for a device function",null,[[],["cudaerror",4]]],[5,"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","","\\\\brief Returns occupancy for a device function with the…",null,[[],["cudaerror",4]]],[5,"cudaMallocManaged","","\\\\brief Allocates memory that will be automatically managed…",null,[[],["cudaerror",4]]],[5,"cudaMalloc","","\\\\brief Allocate memory on the device",null,[[],["cudaerror",4]]],[5,"cudaMallocHost","","\\\\brief Allocates page-locked memory on the host",null,[[],["cudaerror",4]]],[5,"cudaMallocPitch","","\\\\brief Allocates pitched memory on the device",null,[[],["cudaerror",4]]],[5,"cudaMallocArray","","\\\\brief Allocate an array on the device",null,[[],["cudaerror",4]]],[5,"cudaFree","","\\\\brief Frees memory on the device",null,[[],["cudaerror",4]]],[5,"cudaFreeHost","","\\\\brief Frees page-locked memory",null,[[],["cudaerror",4]]],[5,"cudaFreeArray","","\\\\brief Frees an array on the device",null,[[],["cudaerror",4]]],[5,"cudaFreeMipmappedArray","","\\\\brief Frees a mipmapped array on the device",null,[[],["cudaerror",4]]],[5,"cudaHostAlloc","","\\\\brief Allocates page-locked memory on the host",null,[[],["cudaerror",4]]],[5,"cudaHostRegister","","\\\\brief Registers an existing host memory range for use by…",null,[[],["cudaerror",4]]],[5,"cudaHostUnregister","","\\\\brief Unregisters a memory range that was registered with…",null,[[],["cudaerror",4]]],[5,"cudaHostGetDevicePointer","","\\\\brief Passes back device pointer of mapped host memory…",null,[[],["cudaerror",4]]],[5,"cudaHostGetFlags","","\\\\brief Passes back flags used to allocate pinned host…",null,[[],["cudaerror",4]]],[5,"cudaMalloc3D","","\\\\brief Allocates logical 1D, 2D, or 3D memory objects on…",null,[[["cudaextent",3]],["cudaerror",4]]],[5,"cudaMalloc3DArray","","\\\\brief Allocate an array on the device",null,[[["cudaextent",3]],["cudaerror",4]]],[5,"cudaMallocMipmappedArray","","\\\\brief Allocate a mipmapped array on the device",null,[[["cudaextent",3]],["cudaerror",4]]],[5,"cudaGetMipmappedArrayLevel","","\\\\brief Gets a mipmap level of a CUDA mipmapped array",null,[[],["cudaerror",4]]],[5,"cudaMemcpy3D","","\\\\brief Copies data between 3D objects",null,[[],["cudaerror",4]]],[5,"cudaMemcpy3DPeer","","\\\\brief Copies memory between devices",null,[[],["cudaerror",4]]],[5,"cudaMemcpy3DAsync","","\\\\brief Copies data between 3D objects",null,[[],["cudaerror",4]]],[5,"cudaMemcpy3DPeerAsync","","\\\\brief Copies memory between devices asynchronously.",null,[[],["cudaerror",4]]],[5,"cudaMemGetInfo","","\\\\brief Gets free and total device memory",null,[[],["cudaerror",4]]],[5,"cudaArrayGetInfo","","\\\\brief Gets info about the specified cudaArray",null,[[],["cudaerror",4]]],[5,"cudaMemcpy","","\\\\brief Copies data between host and device",null,[[["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyPeer","","\\\\brief Copies memory between two devices",null,[[],["cudaerror",4]]],[5,"cudaMemcpy2D","","\\\\brief Copies data between host and device",null,[[["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpy2DToArray","","\\\\brief Copies data between host and device",null,[[["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpy2DFromArray","","\\\\brief Copies data between host and device",null,[[["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpy2DArrayToArray","","\\\\brief Copies data between host and device",null,[[["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyToSymbol","","\\\\brief Copies data to the given symbol on the device",null,[[["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyFromSymbol","","\\\\brief Copies data from the given symbol on the device",null,[[["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyAsync","","\\\\brief Copies data between host and device",null,[[["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyPeerAsync","","\\\\brief Copies memory between two devices asynchronously.",null,[[],["cudaerror",4]]],[5,"cudaMemcpy2DAsync","","\\\\brief Copies data between host and device",null,[[["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpy2DToArrayAsync","","\\\\brief Copies data between host and device",null,[[["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpy2DFromArrayAsync","","\\\\brief Copies data between host and device",null,[[["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyToSymbolAsync","","\\\\brief Copies data to the given symbol on the device",null,[[["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyFromSymbolAsync","","\\\\brief Copies data from the given symbol on the device",null,[[["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemset","","\\\\brief Initializes or sets device memory to a value",null,[[],["cudaerror",4]]],[5,"cudaMemset2D","","\\\\brief Initializes or sets device memory to a value",null,[[],["cudaerror",4]]],[5,"cudaMemset3D","","\\\\brief Initializes or sets device memory to a value",null,[[["cudaextent",3],["cudapitchedptr",3]],["cudaerror",4]]],[5,"cudaMemsetAsync","","\\\\brief Initializes or sets device memory to a value",null,[[],["cudaerror",4]]],[5,"cudaMemset2DAsync","","\\\\brief Initializes or sets device memory to a value",null,[[],["cudaerror",4]]],[5,"cudaMemset3DAsync","","\\\\brief Initializes or sets device memory to a value",null,[[["cudaextent",3],["cudapitchedptr",3]],["cudaerror",4]]],[5,"cudaGetSymbolAddress","","\\\\brief Finds the address associated with a CUDA symbol",null,[[],["cudaerror",4]]],[5,"cudaGetSymbolSize","","\\\\brief Finds the size of the object associated with a CUDA…",null,[[],["cudaerror",4]]],[5,"cudaMemPrefetchAsync","","\\\\brief Prefetches memory to the specified destination device",null,[[],["cudaerror",4]]],[5,"cudaMemAdvise","","\\\\brief Advise about the usage of a given memory range",null,[[["cudamemoryadvise",4]],["cudaerror",4]]],[5,"cudaMemRangeGetAttribute","","\\\\brief Query an attribute of a given memory range",null,[[["cudamemrangeattribute",4]],["cudaerror",4]]],[5,"cudaMemRangeGetAttributes","","\\\\brief Query attributes of a given memory range.",null,[[],["cudaerror",4]]],[5,"cudaMemcpyToArray","","\\\\brief Copies data between host and device",null,[[["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyFromArray","","\\\\brief Copies data between host and device",null,[[["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyArrayToArray","","\\\\brief Copies data between host and device",null,[[["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyToArrayAsync","","\\\\brief Copies data between host and device",null,[[["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaMemcpyFromArrayAsync","","\\\\brief Copies data between host and device",null,[[["cudamemcpykind",4]],["cudaerror",4]]],[5,"cudaPointerGetAttributes","","\\\\brief Returns attributes about a specified pointer",null,[[],["cudaerror",4]]],[5,"cudaDeviceCanAccessPeer","","\\\\brief Queries if a device may directly access a peer…",null,[[],["cudaerror",4]]],[5,"cudaDeviceEnablePeerAccess","","\\\\brief Enables direct access to memory allocations on a…",null,[[],["cudaerror",4]]],[5,"cudaDeviceDisablePeerAccess","","\\\\brief Disables direct access to memory allocations on a…",null,[[],["cudaerror",4]]],[5,"cudaGraphicsUnregisterResource","","\\\\brief Unregisters a graphics resource for access by CUDA",null,[[],["cudaerror",4]]],[5,"cudaGraphicsResourceSetMapFlags","","\\\\brief Set usage flags for mapping a graphics resource",null,[[],["cudaerror",4]]],[5,"cudaGraphicsMapResources","","\\\\brief Map graphics resources for access by CUDA",null,[[],["cudaerror",4]]],[5,"cudaGraphicsUnmapResources","","\\\\brief Unmap graphics resources.",null,[[],["cudaerror",4]]],[5,"cudaGraphicsResourceGetMappedPointer","","\\\\brief Get an device pointer through which to access a…",null,[[],["cudaerror",4]]],[5,"cudaGraphicsSubResourceGetMappedArray","","\\\\brief Get an array through which to access a subresource…",null,[[],["cudaerror",4]]],[5,"cudaGraphicsResourceGetMappedMipmappedArray","","\\\\brief Get a mipmapped array through which to access a…",null,[[],["cudaerror",4]]],[5,"cudaBindTexture","","\\\\brief Binds a memory area to a texture",null,[[],["cudaerror",4]]],[5,"cudaBindTexture2D","","\\\\brief Binds a 2D memory area to a texture",null,[[],["cudaerror",4]]],[5,"cudaBindTextureToArray","","\\\\brief Binds an array to a texture",null,[[],["cudaerror",4]]],[5,"cudaBindTextureToMipmappedArray","","\\\\brief Binds a mipmapped array to a texture",null,[[],["cudaerror",4]]],[5,"cudaUnbindTexture","","\\\\brief Unbinds a texture",null,[[],["cudaerror",4]]],[5,"cudaGetTextureAlignmentOffset","","\\\\brief Get the alignment offset of a texture",null,[[],["cudaerror",4]]],[5,"cudaGetTextureReference","","\\\\brief Get the texture reference associated with a symbol",null,[[],["cudaerror",4]]],[5,"cudaBindSurfaceToArray","","\\\\brief Binds an array to a surface",null,[[],["cudaerror",4]]],[5,"cudaGetSurfaceReference","","\\\\brief Get the surface reference associated with a symbol",null,[[],["cudaerror",4]]],[5,"cudaGetChannelDesc","","\\\\brief Get the channel descriptor of an array",null,[[],["cudaerror",4]]],[5,"cudaCreateChannelDesc","","\\\\brief Returns a channel descriptor using the specified…",null,[[["cudachannelformatkind",4]],["cudachannelformatdesc",3]]],[5,"cudaCreateTextureObject","","\\\\brief Creates a texture object",null,[[],["cudaerror",4]]],[5,"cudaDestroyTextureObject","","\\\\brief Destroys a texture object",null,[[],["cudaerror",4]]],[5,"cudaGetTextureObjectResourceDesc","","\\\\brief Returns a texture object\'s resource descriptor",null,[[],["cudaerror",4]]],[5,"cudaGetTextureObjectTextureDesc","","\\\\brief Returns a texture object\'s texture descriptor",null,[[],["cudaerror",4]]],[5,"cudaGetTextureObjectResourceViewDesc","","\\\\brief Returns a texture object\'s resource view descriptor",null,[[],["cudaerror",4]]],[5,"cudaCreateSurfaceObject","","\\\\brief Creates a surface object",null,[[],["cudaerror",4]]],[5,"cudaDestroySurfaceObject","","\\\\brief Destroys a surface object",null,[[],["cudaerror",4]]],[5,"cudaGetSurfaceObjectResourceDesc","","\\\\brief Returns a surface object\'s resource descriptor…",null,[[],["cudaerror",4]]],[5,"cudaDriverGetVersion","","\\\\brief Returns the latest version of CUDA supported by the…",null,[[],["cudaerror",4]]],[5,"cudaRuntimeGetVersion","","\\\\brief Returns the CUDA Runtime version",null,[[],["cudaerror",4]]],[5,"cudaGraphCreate","","\\\\brief Creates a graph",null,[[],["cudaerror",4]]],[5,"cudaGraphAddKernelNode","","\\\\brief Creates a kernel execution node and adds it to a…",null,[[],["cudaerror",4]]],[5,"cudaGraphKernelNodeGetParams","","\\\\brief Returns a kernel node\'s parameters",null,[[],["cudaerror",4]]],[5,"cudaGraphKernelNodeSetParams","","\\\\brief Sets a kernel node\'s parameters",null,[[],["cudaerror",4]]],[5,"cudaGraphAddMemcpyNode","","\\\\brief Creates a memcpy node and adds it to a graph",null,[[],["cudaerror",4]]],[5,"cudaGraphMemcpyNodeGetParams","","\\\\brief Returns a memcpy node\'s parameters",null,[[],["cudaerror",4]]],[5,"cudaGraphMemcpyNodeSetParams","","\\\\brief Sets a memcpy node\'s parameters",null,[[],["cudaerror",4]]],[5,"cudaGraphAddMemsetNode","","\\\\brief Creates a memset node and adds it to a graph",null,[[],["cudaerror",4]]],[5,"cudaGraphMemsetNodeGetParams","","\\\\brief Returns a memset node\'s parameters",null,[[],["cudaerror",4]]],[5,"cudaGraphMemsetNodeSetParams","","\\\\brief Sets a memset node\'s parameters",null,[[],["cudaerror",4]]],[5,"cudaGraphAddHostNode","","\\\\brief Creates a host execution node and adds it to a graph",null,[[],["cudaerror",4]]],[5,"cudaGraphHostNodeGetParams","","\\\\brief Returns a host node\'s parameters",null,[[],["cudaerror",4]]],[5,"cudaGraphHostNodeSetParams","","\\\\brief Sets a host node\'s parameters",null,[[],["cudaerror",4]]],[5,"cudaGraphAddChildGraphNode","","\\\\brief Creates a child graph node and adds it to a graph",null,[[],["cudaerror",4]]],[5,"cudaGraphChildGraphNodeGetGraph","","\\\\brief Gets a handle to the embedded graph of a child…",null,[[],["cudaerror",4]]],[5,"cudaGraphAddEmptyNode","","\\\\brief Creates an empty node and adds it to a graph",null,[[],["cudaerror",4]]],[5,"cudaGraphClone","","\\\\brief Clones a graph",null,[[],["cudaerror",4]]],[5,"cudaGraphNodeFindInClone","","\\\\brief Finds a cloned version of a node",null,[[],["cudaerror",4]]],[5,"cudaGraphNodeGetType","","\\\\brief Returns a node\'s type",null,[[],["cudaerror",4]]],[5,"cudaGraphGetNodes","","\\\\brief Returns a graph\'s nodes",null,[[],["cudaerror",4]]],[5,"cudaGraphGetRootNodes","","\\\\brief Returns a graph\'s root nodes",null,[[],["cudaerror",4]]],[5,"cudaGraphGetEdges","","\\\\brief Returns a graph\'s dependency edges",null,[[],["cudaerror",4]]],[5,"cudaGraphNodeGetDependencies","","\\\\brief Returns a node\'s dependencies",null,[[],["cudaerror",4]]],[5,"cudaGraphNodeGetDependentNodes","","\\\\brief Returns a node\'s dependent nodes",null,[[],["cudaerror",4]]],[5,"cudaGraphAddDependencies","","\\\\brief Adds dependency edges to a graph.",null,[[],["cudaerror",4]]],[5,"cudaGraphRemoveDependencies","","\\\\brief Removes dependency edges from a graph.",null,[[],["cudaerror",4]]],[5,"cudaGraphDestroyNode","","\\\\brief Remove a node from the graph",null,[[],["cudaerror",4]]],[5,"cudaGraphInstantiate","","\\\\brief Creates an executable graph from a graph",null,[[],["cudaerror",4]]],[5,"cudaGraphExecKernelNodeSetParams","","\\\\brief Sets the parameters for a kernel node in the given…",null,[[],["cudaerror",4]]],[5,"cudaGraphExecMemcpyNodeSetParams","","\\\\brief Sets the parameters for a memcpy node in the given…",null,[[],["cudaerror",4]]],[5,"cudaGraphExecMemsetNodeSetParams","","\\\\brief Sets the parameters for a memset node in the given…",null,[[],["cudaerror",4]]],[5,"cudaGraphExecHostNodeSetParams","","\\\\brief Sets the parameters for a host node in the given…",null,[[],["cudaerror",4]]],[5,"cudaGraphExecUpdate","","\\\\brief Check whether an executable graph can be updated…",null,[[],["cudaerror",4]]],[5,"cudaGraphLaunch","","\\\\brief Launches an executable graph in a stream",null,[[],["cudaerror",4]]],[5,"cudaGraphExecDestroy","","\\\\brief Destroys an executable graph",null,[[],["cudaerror",4]]],[5,"cudaGraphDestroy","","\\\\brief Destroys a graph",null,[[],["cudaerror",4]]],[5,"cudaGetExportTable","","\\\\cond impl_private",null,[[],["cudaerror",4]]],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"cudnnHandle_t","","",null,null],[5,"cudnnGetVersion","","",null,[[]]],[5,"cudnnGetCudartVersion","","",null,[[]]],[5,"cudnnGetErrorString","","",null,[[["cudnnstatus_t",4]]]],[5,"cudnnQueryRuntimeError","","",null,[[["cudnnerrquerymode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetProperty","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreate","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroy","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetStream","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetStream","","",null,[[],["cudnnstatus_t",4]]],[6,"cudnnTensorDescriptor_t","","",null,null],[6,"cudnnConvolutionDescriptor_t","","",null,null],[6,"cudnnPoolingDescriptor_t","","",null,null],[6,"cudnnFilterDescriptor_t","","",null,null],[6,"cudnnLRNDescriptor_t","","",null,null],[6,"cudnnActivationDescriptor_t","","",null,null],[6,"cudnnSpatialTransformerDescriptor_t","","",null,null],[6,"cudnnOpTensorDescriptor_t","","",null,null],[6,"cudnnReduceTensorDescriptor_t","","",null,null],[6,"cudnnCTCLossDescriptor_t","","",null,null],[6,"cudnnTensorTransformDescriptor_t","","",null,null],[5,"cudnnCreateTensorDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetTensor4dDescriptor","","",null,[[["cudnndatatype_t",4],["cudnntensorformat_t",4]],["cudnnstatus_t",4]]],[5,"cudnnSetTensor4dDescriptorEx","","",null,[[["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetTensor4dDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetTensorNdDescriptor","","",null,[[["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnSetTensorNdDescriptorEx","","",null,[[["cudnndatatype_t",4],["cudnntensorformat_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetTensorNdDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetTensorSizeInBytes","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyTensorDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnInitTransformDest","","Create a destination descriptor for cudnnTransformTensor",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreateTensorTransformDescriptor","","Create an empty tensor transform descriptor",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetTensorTransformDescriptor","","Initialize a previously created tensor transform descriptor.",null,[[["cudnnfoldingdirection_t",4],["cudnntensorformat_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetTensorTransformDescriptor","","Retrieves the values stored in a previously initialized…",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyTensorTransformDescriptor","","Destroys a previously created tensor transform descriptor.",null,[[],["cudnnstatus_t",4]]],[5,"cudnnTransformTensor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnTransformTensorEx","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetFoldedConvBackwardDataDescriptors","","",null,[[["cudnntensorformat_t",4]],["cudnnstatus_t",4]]],[5,"cudnnAddTensor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreateOpTensorDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetOpTensorDescriptor","","",null,[[["cudnnoptensorop_t",4],["cudnnnanpropagation_t",4],["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetOpTensorDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyOpTensorDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnOpTensor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreateReduceTensorDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetReduceTensorDescriptor","","",null,[[["cudnnreducetensorop_t",4],["cudnnnanpropagation_t",4],["cudnnindicestype_t",4],["cudnnreducetensorindices_t",4],["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetReduceTensorDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyReduceTensorDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetReductionIndicesSize","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetReductionWorkspaceSize","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnReduceTensor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetTensor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnScaleTensor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreateFilterDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetFilter4dDescriptor","","",null,[[["cudnntensorformat_t",4],["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetFilter4dDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetFilterNdDescriptor","","",null,[[["cudnntensorformat_t",4],["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetFilterNdDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetFilterSizeInBytes","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnTransformFilter","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyFilterDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnReorderFilterAndBias","","",null,[[["cudnnreordertype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnCreateConvolutionDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetConvolutionMathType","","",null,[[["cudnnmathtype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionMathType","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetConvolutionGroupCount","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionGroupCount","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetConvolutionReorderType","","",null,[[["cudnnreordertype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionReorderType","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetConvolution2dDescriptor","","",null,[[["cudnnconvolutionmode_t",4],["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolution2dDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetConvolution2dForwardOutputDim","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetConvolutionNdDescriptor","","",null,[[["cudnnconvolutionmode_t",4],["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionNdDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionNdForwardOutputDim","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyConvolutionDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionForwardAlgorithmMaxCount","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnFindConvolutionForwardAlgorithm","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnFindConvolutionForwardAlgorithmEx","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionForwardAlgorithm","","",null,[[["cudnnconvolutionfwdpreference_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionForwardAlgorithm_v7","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionForwardWorkspaceSize","","",null,[[["cudnnconvolutionfwdalgo_t",4]],["cudnnstatus_t",4]]],[5,"cudnnConvolutionForward","","",null,[[["cudnnconvolutionfwdalgo_t",4]],["cudnnstatus_t",4]]],[5,"cudnnConvolutionBiasActivationForward","","",null,[[["cudnnconvolutionfwdalgo_t",4]],["cudnnstatus_t",4]]],[5,"cudnnConvolutionBackwardBias","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionBackwardFilterAlgorithmMaxCount","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnFindConvolutionBackwardFilterAlgorithm","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnFindConvolutionBackwardFilterAlgorithmEx","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionBackwardFilterAlgorithm","","",null,[[["cudnnconvolutionbwdfilterpreference_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionBackwardFilterAlgorithm_v7","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionBackwardFilterWorkspaceSize","","",null,[[["cudnnconvolutionbwdfilteralgo_t",4]],["cudnnstatus_t",4]]],[5,"cudnnConvolutionBackwardFilter","","",null,[[["cudnnconvolutionbwdfilteralgo_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionBackwardDataAlgorithmMaxCount","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnFindConvolutionBackwardDataAlgorithm","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnFindConvolutionBackwardDataAlgorithmEx","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionBackwardDataAlgorithm","","",null,[[["cudnnconvolutionbwddatapreference_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionBackwardDataAlgorithm_v7","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetConvolutionBackwardDataWorkspaceSize","","",null,[[["cudnnconvolutionbwddataalgo_t",4]],["cudnnstatus_t",4]]],[5,"cudnnConvolutionBackwardData","","",null,[[["cudnnconvolutionbwddataalgo_t",4]],["cudnnstatus_t",4]]],[5,"cudnnIm2Col","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSoftmaxForward","","",null,[[["cudnnsoftmaxalgorithm_t",4],["cudnnsoftmaxmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnSoftmaxBackward","","",null,[[["cudnnsoftmaxalgorithm_t",4],["cudnnsoftmaxmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnCreatePoolingDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetPooling2dDescriptor","","",null,[[["cudnnnanpropagation_t",4],["cudnnpoolingmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetPooling2dDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetPoolingNdDescriptor","","",null,[[["cudnnnanpropagation_t",4],["cudnnpoolingmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetPoolingNdDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetPoolingNdForwardOutputDim","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetPooling2dForwardOutputDim","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyPoolingDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnPoolingForward","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnPoolingBackward","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreateActivationDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetActivationDescriptor","","",null,[[["cudnnactivationmode_t",4],["cudnnnanpropagation_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetActivationDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyActivationDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnActivationForward","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnActivationBackward","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreateLRNDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetLRNDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetLRNDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyLRNDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnLRNCrossChannelForward","","",null,[[["cudnnlrnmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnLRNCrossChannelBackward","","",null,[[["cudnnlrnmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnDivisiveNormalizationForward","","",null,[[["cudnndivnormmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnDivisiveNormalizationBackward","","",null,[[["cudnndivnormmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnDeriveBNTensorDescriptor","","",null,[[["cudnnbatchnormmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetBatchNormalizationForwardTrainingExWorkspaceSize","","",null,[[["cudnnbatchnormmode_t",4],["cudnnbatchnormops_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetBatchNormalizationBackwardExWorkspaceSize","","",null,[[["cudnnbatchnormmode_t",4],["cudnnbatchnormops_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetBatchNormalizationTrainingExReserveSpaceSize","","",null,[[["cudnnbatchnormmode_t",4],["cudnnbatchnormops_t",4]],["cudnnstatus_t",4]]],[5,"cudnnBatchNormalizationForwardTraining","","",null,[[["cudnnbatchnormmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnBatchNormalizationForwardTrainingEx","","",null,[[["cudnnbatchnormmode_t",4],["cudnnbatchnormops_t",4]],["cudnnstatus_t",4]]],[5,"cudnnBatchNormalizationForwardInference","","",null,[[["cudnnbatchnormmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnBatchNormalizationBackward","","",null,[[["cudnnbatchnormmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnBatchNormalizationBackwardEx","","",null,[[["cudnnbatchnormmode_t",4],["cudnnbatchnormops_t",4]],["cudnnstatus_t",4]]],[5,"cudnnCreateSpatialTransformerDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetSpatialTransformerNdDescriptor","","",null,[[["cudnnsamplertype_t",4],["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnDestroySpatialTransformerDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSpatialTfGridGeneratorForward","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSpatialTfGridGeneratorBackward","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSpatialTfSamplerForward","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSpatialTfSamplerBackward","","",null,[[],["cudnnstatus_t",4]]],[6,"cudnnDropoutDescriptor_t","","",null,null],[5,"cudnnCreateDropoutDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyDropoutDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDropoutGetStatesSize","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDropoutGetReserveSpaceSize","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetDropoutDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnRestoreDropoutDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetDropoutDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDropoutForward","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDropoutBackward","","",null,[[],["cudnnstatus_t",4]]],[6,"cudnnRNNDescriptor_t","","",null,null],[6,"cudnnPersistentRNNPlan_t","","",null,null],[6,"cudnnRNNDataDescriptor_t","","",null,null],[5,"cudnnCreateRNNDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyRNNDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetRNNDescriptor","","",null,[[["cudnnrnnalgo_t",4],["cudnnrnninputmode_t",4],["cudnndirectionmode_t",4],["cudnnrnnmode_t",4],["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetRNNMatrixMathType","","",null,[[["cudnnmathtype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNMatrixMathType","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetRNNBiasMode","","",null,[[["cudnnrnnbiasmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNBiasMode","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnRNNSetClip","","",null,[[["cudnnrnnclipmode_t",4],["cudnnnanpropagation_t",4]],["cudnnstatus_t",4]]],[5,"cudnnRNNGetClip","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetRNNProjectionLayers","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetRNNProjectionLayers","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreatePersistentRNNPlan","","",null,[[["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnDestroyPersistentRNNPlan","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetPersistentRNNPlan","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetRNNWorkspaceSize","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetRNNTrainingReserveSize","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetRNNParamsSize","","",null,[[["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNLinLayerMatrixParams","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetRNNLinLayerBiasParams","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnRNNForwardInference","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnRNNForwardTraining","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnRNNBackwardData","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnRNNBackwardWeights","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetRNNPaddingMode","","",null,[[["cudnnrnnpaddingmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNPaddingMode","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreateRNNDataDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyRNNDataDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetRNNDataDescriptor","","",null,[[["cudnnrnndatalayout_t",4],["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetRNNDataDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnRNNForwardTrainingEx","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnRNNForwardInferenceEx","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnRNNBackwardDataEx","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnRNNBackwardWeightsEx","","",null,[[],["cudnnstatus_t",4]]],[6,"cudnnAlgorithmDescriptor_t","","",null,null],[6,"cudnnAlgorithmPerformance_t","","",null,null],[5,"cudnnSetRNNAlgorithmDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetRNNForwardInferenceAlgorithmMaxCount","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnFindRNNForwardInferenceAlgorithmEx","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetRNNForwardTrainingAlgorithmMaxCount","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnFindRNNForwardTrainingAlgorithmEx","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetRNNBackwardDataAlgorithmMaxCount","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnFindRNNBackwardDataAlgorithmEx","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetRNNBackwardWeightsAlgorithmMaxCount","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnFindRNNBackwardWeightsAlgorithmEx","","",null,[[],["cudnnstatus_t",4]]],[6,"cudnnSeqDataDescriptor_t","","",null,null],[5,"cudnnCreateSeqDataDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroySeqDataDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetSeqDataDescriptor","","",null,[[["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetSeqDataDescriptor","","",null,[[],["cudnnstatus_t",4]]],[6,"cudnnAttnQueryMap_t","","",null,null],[6,"cudnnAttnDescriptor_t","","",null,null],[5,"cudnnCreateAttnDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyAttnDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetAttnDescriptor","","",null,[[["cudnnmathtype_t",4],["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetAttnDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetMultiHeadAttnBuffers","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetMultiHeadAttnWeights","","",null,[[["cudnnmultiheadattnweightkind_t",4]],["cudnnstatus_t",4]]],[5,"cudnnMultiHeadAttnForward","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnMultiHeadAttnBackwardData","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnMultiHeadAttnBackwardWeights","","",null,[[["cudnnwgradmode_t",4]],["cudnnstatus_t",4]]],[5,"cudnnCreateCTCLossDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetCTCLossDescriptor","","",null,[[["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnSetCTCLossDescriptorEx","","",null,[[["cudnnnanpropagation_t",4],["cudnnlossnormalizationmode_t",4],["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetCTCLossDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetCTCLossDescriptorEx","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyCTCLossDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCTCLoss","","",null,[[["cudnnctclossalgo_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetCTCLossWorkspaceSize","","",null,[[["cudnnctclossalgo_t",4]],["cudnnstatus_t",4]]],[5,"cudnnCreateAlgorithmDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetAlgorithmDescriptor","","",null,[[["cudnnalgorithm_t",3]],["cudnnstatus_t",4]]],[5,"cudnnGetAlgorithmDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCopyAlgorithmDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyAlgorithmDescriptor","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnCreateAlgorithmPerformance","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetAlgorithmPerformance","","",null,[[["cudnnstatus_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetAlgorithmPerformance","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnDestroyAlgorithmPerformance","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnGetAlgorithmSpaceSize","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSaveAlgorithm","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnRestoreAlgorithm","","",null,[[],["cudnnstatus_t",4]]],[6,"cudnnCallback_t","","",null,null],[5,"cudnnSetCallback","","",null,[[["option",4]],["cudnnstatus_t",4]]],[5,"cudnnGetCallback","","",null,[[],["cudnnstatus_t",4]]],[6,"cudnnFusedOpsConstParamPack_t","","",null,null],[6,"cudnnFusedOpsVariantParamPack_t","","",null,null],[6,"cudnnFusedOpsPlan_t","","",null,null],[5,"cudnnCreateFusedOpsConstParamPack","","",null,[[["cudnnfusedops_t",4]],["cudnnstatus_t",4]]],[5,"cudnnDestroyFusedOpsConstParamPack","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetFusedOpsConstParamPackAttribute","","",null,[[["cudnnfusedopsconstparamlabel_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetFusedOpsConstParamPackAttribute","","",null,[[["cudnnfusedopsconstparamlabel_t",4]],["cudnnstatus_t",4]]],[5,"cudnnCreateFusedOpsVariantParamPack","","",null,[[["cudnnfusedops_t",4]],["cudnnstatus_t",4]]],[5,"cudnnDestroyFusedOpsVariantParamPack","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetFusedOpsVariantParamPackAttribute","","",null,[[["cudnnfusedopsvariantparamlabel_t",4]],["cudnnstatus_t",4]]],[5,"cudnnGetFusedOpsVariantParamPackAttribute","","",null,[[["cudnnfusedopsvariantparamlabel_t",4]],["cudnnstatus_t",4]]],[5,"cudnnCreateFusedOpsPlan","","",null,[[["cudnnfusedops_t",4]],["cudnnstatus_t",4]]],[5,"cudnnDestroyFusedOpsPlan","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnMakeFusedOpsPlan","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnFusedOpsExecute","","",null,[[],["cudnnstatus_t",4]]],[5,"cudnnSetRNNDescriptor_v6","","",null,[[["cudnnrnnalgo_t",4],["cudnnrnninputmode_t",4],["cudnndirectionmode_t",4],["cudnnrnnmode_t",4],["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[5,"cudnnSetRNNDescriptor_v5","","",null,[[["cudnnrnninputmode_t",4],["cudnndirectionmode_t",4],["cudnnrnnmode_t",4],["cudnndatatype_t",4]],["cudnnstatus_t",4]]],[3,"dim3","","",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[12,"z","","",0,null],[4,"cudaError","","CUDA error types",null,null],[13,"cudaSuccess","","The API call returned with no errors. In the case of query…",1,null],[13,"cudaErrorInvalidValue","","This indicates that one or more of the parameters passed…",1,null],[13,"cudaErrorMemoryAllocation","","The API call failed because it was unable to allocate…",1,null],[13,"cudaErrorInitializationError","","The API call failed because the CUDA driver and runtime…",1,null],[13,"cudaErrorCudartUnloading","","This indicates that a CUDA Runtime API call cannot be…",1,null],[13,"cudaErrorProfilerDisabled","","This indicates profiler is not initialized for this run.…",1,null],[13,"cudaErrorProfilerNotInitialized","","\\\\deprecated This error return is deprecated as of CUDA…",1,null],[13,"cudaErrorProfilerAlreadyStarted","","\\\\deprecated This error return is deprecated as of CUDA…",1,null],[13,"cudaErrorProfilerAlreadyStopped","","\\\\deprecated This error return is deprecated as of CUDA…",1,null],[13,"cudaErrorInvalidConfiguration","","This indicates that a kernel launch is requesting…",1,null],[13,"cudaErrorInvalidPitchValue","","This indicates that one or more of the pitch-related…",1,null],[13,"cudaErrorInvalidSymbol","","This indicates that the symbol name/identifier passed to…",1,null],[13,"cudaErrorInvalidHostPointer","","This indicates that at least one host pointer passed to…",1,null],[13,"cudaErrorInvalidDevicePointer","","This indicates that at least one device pointer passed to…",1,null],[13,"cudaErrorInvalidTexture","","This indicates that the texture passed to the API call is…",1,null],[13,"cudaErrorInvalidTextureBinding","","This indicates that the texture binding is not valid. This…",1,null],[13,"cudaErrorInvalidChannelDescriptor","","This indicates that the channel descriptor passed to the…",1,null],[13,"cudaErrorInvalidMemcpyDirection","","This indicates that the direction of the memcpy passed to…",1,null],[13,"cudaErrorAddressOfConstant","","This indicated that the user has taken the address of a…",1,null],[13,"cudaErrorTextureFetchFailed","","This indicated that a texture fetch was not able to be…",1,null],[13,"cudaErrorTextureNotBound","","This indicated that a texture was not bound for access.…",1,null],[13,"cudaErrorSynchronizationError","","This indicated that a synchronization operation had…",1,null],[13,"cudaErrorInvalidFilterSetting","","This indicates that a non-float texture was being accessed…",1,null],[13,"cudaErrorInvalidNormSetting","","This indicates that an attempt was made to read a…",1,null],[13,"cudaErrorMixedDeviceExecution","","Mixing of device and device emulation code was not…",1,null],[13,"cudaErrorNotYetImplemented","","This indicates that the API call is not yet implemented.…",1,null],[13,"cudaErrorMemoryValueTooLarge","","This indicated that an emulated device pointer exceeded…",1,null],[13,"cudaErrorInsufficientDriver","","This indicates that the installed NVIDIA CUDA driver is…",1,null],[13,"cudaErrorInvalidSurface","","This indicates that the surface passed to the API call is…",1,null],[13,"cudaErrorDuplicateVariableName","","This indicates that multiple global or constant variables…",1,null],[13,"cudaErrorDuplicateTextureName","","This indicates that multiple textures (across separate…",1,null],[13,"cudaErrorDuplicateSurfaceName","","This indicates that multiple surfaces (across separate…",1,null],[13,"cudaErrorDevicesUnavailable","","This indicates that all CUDA devices are busy or…",1,null],[13,"cudaErrorIncompatibleDriverContext","","This indicates that the current context is not compatible…",1,null],[13,"cudaErrorMissingConfiguration","","The device function being invoked (usually via…",1,null],[13,"cudaErrorPriorLaunchFailure","","This indicated that a previous kernel launch failed. This…",1,null],[13,"cudaErrorLaunchMaxDepthExceeded","","This error indicates that a device runtime grid launch did…",1,null],[13,"cudaErrorLaunchFileScopedTex","","This error indicates that a grid launch did not occur…",1,null],[13,"cudaErrorLaunchFileScopedSurf","","This error indicates that a grid launch did not occur…",1,null],[13,"cudaErrorSyncDepthExceeded","","This error indicates that a call to…",1,null],[13,"cudaErrorLaunchPendingCountExceeded","","This error indicates that a device runtime grid launch…",1,null],[13,"cudaErrorInvalidDeviceFunction","","The requested device function does not exist or is not…",1,null],[13,"cudaErrorNoDevice","","This indicates that no CUDA-capable devices were detected…",1,null],[13,"cudaErrorInvalidDevice","","This indicates that the device ordinal supplied by the…",1,null],[13,"cudaErrorStartupFailure","","This indicates an internal startup failure in the CUDA…",1,null],[13,"cudaErrorInvalidKernelImage","","This indicates that the device kernel image is invalid.",1,null],[13,"cudaErrorDeviceUninitialized","","This most frequently indicates that there is no context…",1,null],[13,"cudaErrorMapBufferObjectFailed","","This indicates that the buffer object could not be mapped.",1,null],[13,"cudaErrorUnmapBufferObjectFailed","","This indicates that the buffer object could not be unmapped.",1,null],[13,"cudaErrorArrayIsMapped","","This indicates that the specified array is currently…",1,null],[13,"cudaErrorAlreadyMapped","","This indicates that the resource is already mapped.",1,null],[13,"cudaErrorNoKernelImageForDevice","","This indicates that there is no kernel image available…",1,null],[13,"cudaErrorAlreadyAcquired","","This indicates that a resource has already been acquired.",1,null],[13,"cudaErrorNotMapped","","This indicates that a resource is not mapped.",1,null],[13,"cudaErrorNotMappedAsArray","","This indicates that a mapped resource is not available for…",1,null],[13,"cudaErrorNotMappedAsPointer","","This indicates that a mapped resource is not available for…",1,null],[13,"cudaErrorECCUncorrectable","","This indicates that an uncorrectable ECC error was…",1,null],[13,"cudaErrorUnsupportedLimit","","This indicates that the ::cudaLimit passed to the API call…",1,null],[13,"cudaErrorDeviceAlreadyInUse","","This indicates that a call tried to access an…",1,null],[13,"cudaErrorPeerAccessUnsupported","","This error indicates that P2P access is not supported…",1,null],[13,"cudaErrorInvalidPtx","","A PTX compilation failed. The runtime may fall back to…",1,null],[13,"cudaErrorInvalidGraphicsContext","","This indicates an error with the OpenGL or DirectX context.",1,null],[13,"cudaErrorNvlinkUncorrectable","","This indicates that an uncorrectable NVLink error was…",1,null],[13,"cudaErrorJitCompilerNotFound","","This indicates that the PTX JIT compiler library was not…",1,null],[13,"cudaErrorInvalidSource","","This indicates that the device kernel source is invalid.",1,null],[13,"cudaErrorFileNotFound","","This indicates that the file specified was not found.",1,null],[13,"cudaErrorSharedObjectSymbolNotFound","","This indicates that a link to a shared object failed to…",1,null],[13,"cudaErrorSharedObjectInitFailed","","This indicates that initialization of a shared object…",1,null],[13,"cudaErrorOperatingSystem","","This error indicates that an OS call failed.",1,null],[13,"cudaErrorInvalidResourceHandle","","This indicates that a resource handle passed to the API…",1,null],[13,"cudaErrorIllegalState","","This indicates that a resource required by the API call is…",1,null],[13,"cudaErrorSymbolNotFound","","This indicates that a named symbol was not found. Examples…",1,null],[13,"cudaErrorNotReady","","This indicates that asynchronous operations issued…",1,null],[13,"cudaErrorIllegalAddress","","The device encountered a load or store instruction on an…",1,null],[13,"cudaErrorLaunchOutOfResources","","This indicates that a launch did not occur because it did…",1,null],[13,"cudaErrorLaunchTimeout","","This indicates that the device kernel took too long to…",1,null],[13,"cudaErrorLaunchIncompatibleTexturing","","This error indicates a kernel launch that uses an…",1,null],[13,"cudaErrorPeerAccessAlreadyEnabled","","This error indicates that a call to…",1,null],[13,"cudaErrorPeerAccessNotEnabled","","This error indicates that ::cudaDeviceDisablePeerAccess()…",1,null],[13,"cudaErrorSetOnActiveProcess","","This indicates that the user has called…",1,null],[13,"cudaErrorContextIsDestroyed","","This error indicates that the context current to the…",1,null],[13,"cudaErrorAssert","","An assert triggered in device code during kernel…",1,null],[13,"cudaErrorTooManyPeers","","This error indicates that the hardware resources required…",1,null],[13,"cudaErrorHostMemoryAlreadyRegistered","","This error indicates that the memory range passed to…",1,null],[13,"cudaErrorHostMemoryNotRegistered","","This error indicates that the pointer passed to…",1,null],[13,"cudaErrorHardwareStackError","","Device encountered an error in the call stack during…",1,null],[13,"cudaErrorIllegalInstruction","","The device encountered an illegal instruction during…",1,null],[13,"cudaErrorMisalignedAddress","","The device encountered a load or store instruction on a…",1,null],[13,"cudaErrorInvalidAddressSpace","","While executing a kernel, the device encountered an…",1,null],[13,"cudaErrorInvalidPc","","The device encountered an invalid program counter. This…",1,null],[13,"cudaErrorLaunchFailure","","An exception occurred on the device while executing a…",1,null],[13,"cudaErrorCooperativeLaunchTooLarge","","This error indicates that the number of blocks launched…",1,null],[13,"cudaErrorNotPermitted","","This error indicates the attempted operation is not…",1,null],[13,"cudaErrorNotSupported","","This error indicates the attempted operation is not…",1,null],[13,"cudaErrorSystemNotReady","","This error indicates that the system is not yet ready to…",1,null],[13,"cudaErrorSystemDriverMismatch","","This error indicates that there is a mismatch between the…",1,null],[13,"cudaErrorCompatNotSupportedOnDevice","","This error indicates that the system was upgraded to run…",1,null],[13,"cudaErrorStreamCaptureUnsupported","","The operation is not permitted when the stream is capturing.",1,null],[13,"cudaErrorStreamCaptureInvalidated","","The current capture sequence on the stream has been…",1,null],[13,"cudaErrorStreamCaptureMerge","","The operation would have resulted in a merge of two…",1,null],[13,"cudaErrorStreamCaptureUnmatched","","The capture was not initiated in this stream.",1,null],[13,"cudaErrorStreamCaptureUnjoined","","The capture sequence contains a fork that was not joined…",1,null],[13,"cudaErrorStreamCaptureIsolation","","A dependency would have been created which crosses the…",1,null],[13,"cudaErrorStreamCaptureImplicit","","The operation would have resulted in a disallowed implicit…",1,null],[13,"cudaErrorCapturedEvent","","The operation is not permitted on an event which was last…",1,null],[13,"cudaErrorStreamCaptureWrongThread","","A stream capture sequence not initiated with the…",1,null],[13,"cudaErrorTimeout","","This indicates that the wait operation has timed out.",1,null],[13,"cudaErrorGraphExecUpdateFailure","","This error indicates that the graph update was not…",1,null],[13,"cudaErrorUnknown","","This indicates that an unknown internal error has occurred.",1,null],[13,"cudaErrorApiFailureBase","","Any unhandled CUDA driver error is added to this value and…",1,null],[4,"cudaChannelFormatKind","","Channel format kind",null,null],[13,"cudaChannelFormatKindSigned","","< Signed channel format",2,null],[13,"cudaChannelFormatKindUnsigned","","< Unsigned channel format",2,null],[13,"cudaChannelFormatKindFloat","","< Float channel format",2,null],[13,"cudaChannelFormatKindNone","","< No channel format",2,null],[3,"cudaChannelFormatDesc","","CUDA Channel format descriptor",null,null],[12,"x","","< x",3,null],[12,"y","","< y",3,null],[12,"z","","< z",3,null],[12,"w","","< w",3,null],[12,"f","","< Channel format kind",3,null],[3,"cudaArray","","",null,null],[3,"cudaMipmappedArray","","",null,null],[4,"cudaMemoryType","","CUDA memory types",null,null],[13,"cudaMemoryTypeUnregistered","","< Unregistered memory",4,null],[13,"cudaMemoryTypeHost","","< Host memory",4,null],[13,"cudaMemoryTypeDevice","","< Device memory",4,null],[13,"cudaMemoryTypeManaged","","< Managed memory",4,null],[4,"cudaMemcpyKind","","CUDA memory copy types",null,null],[13,"cudaMemcpyHostToHost","","< Host   -> Host",5,null],[13,"cudaMemcpyHostToDevice","","< Host   -> Device",5,null],[13,"cudaMemcpyDeviceToHost","","< Device -> Host",5,null],[13,"cudaMemcpyDeviceToDevice","","< Device -> Device",5,null],[13,"cudaMemcpyDefault","","< Direction of the transfer is inferred from the pointer…",5,null],[3,"cudaPitchedPtr","","CUDA Pitched memory pointer",null,null],[12,"ptr","","< Pointer to allocated memory",6,null],[12,"pitch","","< Pitch of allocated memory in bytes",6,null],[12,"xsize","","< Logical width of allocation in elements",6,null],[12,"ysize","","< Logical height of allocation in elements",6,null],[3,"cudaExtent","","CUDA extent",null,null],[12,"width","","< Width in elements when referring to array memory, in…",7,null],[12,"height","","< Height in elements",7,null],[12,"depth","","< Depth in elements",7,null],[3,"cudaPos","","CUDA 3D position",null,null],[12,"x","","< x",8,null],[12,"y","","< y",8,null],[12,"z","","< z",8,null],[3,"cudaMemcpy3DParms","","CUDA 3D memory copying parameters",null,null],[12,"srcArray","","< Source memory address",9,null],[12,"srcPos","","< Source position offset",9,null],[12,"srcPtr","","< Pitched source memory address",9,null],[12,"dstArray","","< Destination memory address",9,null],[12,"dstPos","","< Destination position offset",9,null],[12,"dstPtr","","< Pitched destination memory address",9,null],[12,"extent","","< Requested memory copy size",9,null],[12,"kind","","< Type of transfer",9,null],[3,"cudaMemcpy3DPeerParms","","CUDA 3D cross-device memory copying parameters",null,null],[12,"srcArray","","< Source memory address",10,null],[12,"srcPos","","< Source position offset",10,null],[12,"srcPtr","","< Pitched source memory address",10,null],[12,"srcDevice","","< Source device",10,null],[12,"dstArray","","< Destination memory address",10,null],[12,"dstPos","","< Destination position offset",10,null],[12,"dstPtr","","< Pitched destination memory address",10,null],[12,"dstDevice","","< Destination device",10,null],[12,"extent","","< Requested memory copy size",10,null],[3,"cudaMemsetParams","","CUDA Memset node parameters",null,null],[12,"dst","","< Destination device pointer",11,null],[12,"pitch","","< Pitch of destination device pointer. Unused if height is 1",11,null],[12,"value","","< Value to be set",11,null],[12,"elementSize","","< Size of each element in bytes. Must be 1, 2, or 4.",11,null],[12,"width","","< Width in bytes, of the row",11,null],[12,"height","","< Number of rows",11,null],[3,"cudaHostNodeParams","","CUDA host node parameters",null,null],[12,"fn_","","< The function to call when the node executes",12,null],[12,"userData","","< Argument to pass to the function",12,null],[4,"cudaStreamCaptureStatus","","Possible stream capture statuses returned by…",null,null],[13,"cudaStreamCaptureStatusNone","","< Stream is not capturing",13,null],[13,"cudaStreamCaptureStatusActive","","< Stream is actively capturing",13,null],[13,"cudaStreamCaptureStatusInvalidated","","< Stream is part of a capture sequence that has been…",13,null],[4,"cudaStreamCaptureMode","","Possible modes for stream capture thread interactions. For…",null,null],[13,"cudaStreamCaptureModeGlobal","","",14,null],[13,"cudaStreamCaptureModeThreadLocal","","",14,null],[13,"cudaStreamCaptureModeRelaxed","","",14,null],[3,"cudaGraphicsResource","","CUDA graphics interop resource",null,null],[4,"cudaGraphicsRegisterFlags","","CUDA graphics interop register flags",null,null],[13,"cudaGraphicsRegisterFlagsNone","","< Default",15,null],[13,"cudaGraphicsRegisterFlagsReadOnly","","< CUDA will not write to this resource",15,null],[13,"cudaGraphicsRegisterFlagsWriteDiscard","","< CUDA will only write to and will not read from this…",15,null],[13,"cudaGraphicsRegisterFlagsSurfaceLoadStore","","< CUDA will bind this resource to a surface reference",15,null],[13,"cudaGraphicsRegisterFlagsTextureGather","","< CUDA will perform texture gather operations on this…",15,null],[4,"cudaGraphicsMapFlags","","CUDA graphics interop map flags",null,null],[13,"cudaGraphicsMapFlagsNone","","< Default; Assume resource can be read/written",16,null],[13,"cudaGraphicsMapFlagsReadOnly","","< CUDA will not write to this resource",16,null],[13,"cudaGraphicsMapFlagsWriteDiscard","","< CUDA will only write to and will not read from this…",16,null],[4,"cudaGraphicsCubeFace","","CUDA graphics interop array indices for cube maps",null,null],[13,"cudaGraphicsCubeFacePositiveX","","< Positive X face of cubemap",17,null],[13,"cudaGraphicsCubeFaceNegativeX","","< Negative X face of cubemap",17,null],[13,"cudaGraphicsCubeFacePositiveY","","< Positive Y face of cubemap",17,null],[13,"cudaGraphicsCubeFaceNegativeY","","< Negative Y face of cubemap",17,null],[13,"cudaGraphicsCubeFacePositiveZ","","< Positive Z face of cubemap",17,null],[13,"cudaGraphicsCubeFaceNegativeZ","","< Negative Z face of cubemap",17,null],[4,"cudaResourceType","","CUDA resource types",null,null],[13,"cudaResourceTypeArray","","< Array resource",18,null],[13,"cudaResourceTypeMipmappedArray","","< Mipmapped array resource",18,null],[13,"cudaResourceTypeLinear","","< Linear resource",18,null],[13,"cudaResourceTypePitch2D","","< Pitch 2D resource",18,null],[4,"cudaResourceViewFormat","","CUDA texture resource view formats",null,null],[13,"cudaResViewFormatNone","","< No resource view format (use underlying resource format)",19,null],[13,"cudaResViewFormatUnsignedChar1","","< 1 channel unsigned 8-bit integers",19,null],[13,"cudaResViewFormatUnsignedChar2","","< 2 channel unsigned 8-bit integers",19,null],[13,"cudaResViewFormatUnsignedChar4","","< 4 channel unsigned 8-bit integers",19,null],[13,"cudaResViewFormatSignedChar1","","< 1 channel signed 8-bit integers",19,null],[13,"cudaResViewFormatSignedChar2","","< 2 channel signed 8-bit integers",19,null],[13,"cudaResViewFormatSignedChar4","","< 4 channel signed 8-bit integers",19,null],[13,"cudaResViewFormatUnsignedShort1","","< 1 channel unsigned 16-bit integers",19,null],[13,"cudaResViewFormatUnsignedShort2","","< 2 channel unsigned 16-bit integers",19,null],[13,"cudaResViewFormatUnsignedShort4","","< 4 channel unsigned 16-bit integers",19,null],[13,"cudaResViewFormatSignedShort1","","< 1 channel signed 16-bit integers",19,null],[13,"cudaResViewFormatSignedShort2","","< 2 channel signed 16-bit integers",19,null],[13,"cudaResViewFormatSignedShort4","","< 4 channel signed 16-bit integers",19,null],[13,"cudaResViewFormatUnsignedInt1","","< 1 channel unsigned 32-bit integers",19,null],[13,"cudaResViewFormatUnsignedInt2","","< 2 channel unsigned 32-bit integers",19,null],[13,"cudaResViewFormatUnsignedInt4","","< 4 channel unsigned 32-bit integers",19,null],[13,"cudaResViewFormatSignedInt1","","< 1 channel signed 32-bit integers",19,null],[13,"cudaResViewFormatSignedInt2","","< 2 channel signed 32-bit integers",19,null],[13,"cudaResViewFormatSignedInt4","","< 4 channel signed 32-bit integers",19,null],[13,"cudaResViewFormatHalf1","","< 1 channel 16-bit floating point",19,null],[13,"cudaResViewFormatHalf2","","< 2 channel 16-bit floating point",19,null],[13,"cudaResViewFormatHalf4","","< 4 channel 16-bit floating point",19,null],[13,"cudaResViewFormatFloat1","","< 1 channel 32-bit floating point",19,null],[13,"cudaResViewFormatFloat2","","< 2 channel 32-bit floating point",19,null],[13,"cudaResViewFormatFloat4","","< 4 channel 32-bit floating point",19,null],[13,"cudaResViewFormatUnsignedBlockCompressed1","","< Block compressed 1",19,null],[13,"cudaResViewFormatUnsignedBlockCompressed2","","< Block compressed 2",19,null],[13,"cudaResViewFormatUnsignedBlockCompressed3","","< Block compressed 3",19,null],[13,"cudaResViewFormatUnsignedBlockCompressed4","","< Block compressed 4 unsigned",19,null],[13,"cudaResViewFormatSignedBlockCompressed4","","< Block compressed 4 signed",19,null],[13,"cudaResViewFormatUnsignedBlockCompressed5","","< Block compressed 5 unsigned",19,null],[13,"cudaResViewFormatSignedBlockCompressed5","","< Block compressed 5 signed",19,null],[13,"cudaResViewFormatUnsignedBlockCompressed6H","","< Block compressed 6 unsigned half-float",19,null],[13,"cudaResViewFormatSignedBlockCompressed6H","","< Block compressed 6 signed half-float",19,null],[13,"cudaResViewFormatUnsignedBlockCompressed7","","< Block compressed 7",19,null],[3,"cudaResourceDesc","","CUDA resource descriptor",null,null],[12,"resType","","< Resource type",20,null],[12,"res","","",20,null],[19,"cudaResourceDesc__bindgen_ty_1","","",null,null],[12,"array","","",21,null],[12,"mipmap","","",21,null],[12,"linear","","",21,null],[12,"pitch2D","","",21,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"array","","< CUDA array",22,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"mipmap","","< CUDA mipmapped array",23,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3","","",null,null],[12,"devPtr","","< Device pointer",24,null],[12,"desc","","< Channel descriptor",24,null],[12,"sizeInBytes","","< Size in bytes",24,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4","","",null,null],[12,"devPtr","","< Device pointer",25,null],[12,"desc","","< Channel descriptor",25,null],[12,"width","","< Width of the array in elements",25,null],[12,"height","","< Height of the array in elements",25,null],[12,"pitchInBytes","","< Pitch between two rows in bytes",25,null],[3,"cudaResourceViewDesc","","CUDA resource view descriptor",null,null],[12,"format","","< Resource view format",26,null],[12,"width","","< Width of the resource view",26,null],[12,"height","","< Height of the resource view",26,null],[12,"depth","","< Depth of the resource view",26,null],[12,"firstMipmapLevel","","< First defined mipmap level",26,null],[12,"lastMipmapLevel","","< Last defined mipmap level",26,null],[12,"firstLayer","","< First layer index",26,null],[12,"lastLayer","","< Last layer index",26,null],[3,"cudaPointerAttributes","","CUDA pointer attributes",null,null],[12,"memoryType","","\\\\deprecated",27,null],[12,"type_","","The type of memory - ::cudaMemoryTypeUnregistered,…",27,null],[12,"device","","The device against which the memory was allocated or…",27,null],[12,"devicePointer","","The address which may be dereferenced on the current…",27,null],[12,"hostPointer","","The address which may be dereferenced on the host to…",27,null],[12,"isManaged","","\\\\deprecated",27,null],[3,"cudaFuncAttributes","","CUDA function attributes",null,null],[12,"sharedSizeBytes","","The size in bytes of statically-allocated shared memory…",28,null],[12,"constSizeBytes","","The size in bytes of user-allocated constant memory…",28,null],[12,"localSizeBytes","","The size in bytes of local memory used by each thread of…",28,null],[12,"maxThreadsPerBlock","","The maximum number of threads per block, beyond which a…",28,null],[12,"numRegs","","The number of registers used by each thread of this…",28,null],[12,"ptxVersion","","The PTX virtual architecture version for which the…",28,null],[12,"binaryVersion","","The binary architecture version for which the function was…",28,null],[12,"cacheModeCA","","The attribute to indicate whether the function has been…",28,null],[12,"maxDynamicSharedSizeBytes","","The maximum size in bytes of dynamic shared memory per…",28,null],[12,"preferredShmemCarveout","","On devices where the L1 cache and shared memory use the…",28,null],[4,"cudaFuncAttribute","","CUDA function attributes that can be set using…",null,null],[13,"cudaFuncAttributeMaxDynamicSharedMemorySize","","< Maximum dynamic shared memory size",29,null],[13,"cudaFuncAttributePreferredSharedMemoryCarveout","","< Preferred shared memory-L1 cache split",29,null],[13,"cudaFuncAttributeMax","","",29,null],[4,"cudaFuncCache","","CUDA function cache configurations",null,null],[13,"cudaFuncCachePreferNone","","< Default function cache configuration, no preference",30,null],[13,"cudaFuncCachePreferShared","","< Prefer larger shared memory and smaller L1 cache",30,null],[13,"cudaFuncCachePreferL1","","< Prefer larger L1 cache and smaller shared memory",30,null],[13,"cudaFuncCachePreferEqual","","< Prefer equal size L1 cache and shared memory",30,null],[4,"cudaSharedMemConfig","","CUDA shared memory configuration",null,null],[13,"cudaSharedMemBankSizeDefault","","",31,null],[13,"cudaSharedMemBankSizeFourByte","","",31,null],[13,"cudaSharedMemBankSizeEightByte","","",31,null],[4,"cudaSharedCarveout","","Shared memory carveout configurations. These may be passed…",null,null],[13,"cudaSharedmemCarveoutDefault","","< No preference for shared memory or L1 (default)",32,null],[13,"cudaSharedmemCarveoutMaxShared","","< Prefer maximum available shared memory, minimum L1 cache",32,null],[13,"cudaSharedmemCarveoutMaxL1","","< Prefer maximum available L1 cache, minimum shared memory",32,null],[4,"cudaComputeMode","","CUDA device compute modes",null,null],[13,"cudaComputeModeDefault","","< Default compute mode (Multiple threads can use…",33,null],[13,"cudaComputeModeExclusive","","< Compute-exclusive-thread mode (Only one thread in one…",33,null],[13,"cudaComputeModeProhibited","","< Compute-prohibited mode (No threads can use…",33,null],[13,"cudaComputeModeExclusiveProcess","","< Compute-exclusive-process mode (Many threads in one…",33,null],[4,"cudaLimit","","CUDA Limits",null,null],[13,"cudaLimitStackSize","","< GPU thread stack size",34,null],[13,"cudaLimitPrintfFifoSize","","< GPU printf FIFO size",34,null],[13,"cudaLimitMallocHeapSize","","< GPU malloc heap size",34,null],[13,"cudaLimitDevRuntimeSyncDepth","","< GPU device runtime synchronize depth",34,null],[13,"cudaLimitDevRuntimePendingLaunchCount","","< GPU device runtime pending launch count",34,null],[13,"cudaLimitMaxL2FetchGranularity","","< A value between 0 and 128 that indicates the maximum…",34,null],[4,"cudaMemoryAdvise","","CUDA Memory Advise values",null,null],[13,"cudaMemAdviseSetReadMostly","","< Data will mostly be read and only occassionally be…",35,null],[13,"cudaMemAdviseUnsetReadMostly","","< Undo the effect of ::cudaMemAdviseSetReadMostly",35,null],[13,"cudaMemAdviseSetPreferredLocation","","< Set the preferred location for the data as the specified…",35,null],[13,"cudaMemAdviseUnsetPreferredLocation","","< Clear the preferred location for the data",35,null],[13,"cudaMemAdviseSetAccessedBy","","< Data will be accessed by the specified device, so…",35,null],[13,"cudaMemAdviseUnsetAccessedBy","","< Let the Unified Memory subsystem decide on the page…",35,null],[4,"cudaMemRangeAttribute","","CUDA range attributes",null,null],[13,"cudaMemRangeAttributeReadMostly","","< Whether the range will mostly be read and only…",36,null],[13,"cudaMemRangeAttributePreferredLocation","","< The preferred location of the range",36,null],[13,"cudaMemRangeAttributeAccessedBy","","< Memory range has ::cudaMemAdviseSetAccessedBy set for…",36,null],[13,"cudaMemRangeAttributeLastPrefetchLocation","","< The last location to which the range was prefetched",36,null],[4,"cudaOutputMode","","CUDA Profiler Output modes",null,null],[13,"cudaKeyValuePair","","< Output mode Key-Value pair format.",37,null],[13,"cudaCSV","","< Output mode Comma separated values format.",37,null],[4,"cudaDeviceAttr","","CUDA device attributes",null,null],[13,"cudaDevAttrMaxThreadsPerBlock","","< Maximum number of threads per block",38,null],[13,"cudaDevAttrMaxBlockDimX","","< Maximum block dimension X",38,null],[13,"cudaDevAttrMaxBlockDimY","","< Maximum block dimension Y",38,null],[13,"cudaDevAttrMaxBlockDimZ","","< Maximum block dimension Z",38,null],[13,"cudaDevAttrMaxGridDimX","","< Maximum grid dimension X",38,null],[13,"cudaDevAttrMaxGridDimY","","< Maximum grid dimension Y",38,null],[13,"cudaDevAttrMaxGridDimZ","","< Maximum grid dimension Z",38,null],[13,"cudaDevAttrMaxSharedMemoryPerBlock","","< Maximum shared memory available per block in bytes",38,null],[13,"cudaDevAttrTotalConstantMemory","","< Memory available on device for constant variables in a…",38,null],[13,"cudaDevAttrWarpSize","","< Warp size in threads",38,null],[13,"cudaDevAttrMaxPitch","","< Maximum pitch in bytes allowed by memory copies",38,null],[13,"cudaDevAttrMaxRegistersPerBlock","","< Maximum number of 32-bit registers available per block",38,null],[13,"cudaDevAttrClockRate","","< Peak clock frequency in kilohertz",38,null],[13,"cudaDevAttrTextureAlignment","","< Alignment requirement for textures",38,null],[13,"cudaDevAttrGpuOverlap","","< Device can possibly copy memory and execute a kernel…",38,null],[13,"cudaDevAttrMultiProcessorCount","","< Number of multiprocessors on device",38,null],[13,"cudaDevAttrKernelExecTimeout","","< Specifies whether there is a run time limit on kernels",38,null],[13,"cudaDevAttrIntegrated","","< Device is integrated with host memory",38,null],[13,"cudaDevAttrCanMapHostMemory","","< Device can map host memory into CUDA address space",38,null],[13,"cudaDevAttrComputeMode","","< Compute mode (See ::cudaComputeMode for details)",38,null],[13,"cudaDevAttrMaxTexture1DWidth","","< Maximum 1D texture width",38,null],[13,"cudaDevAttrMaxTexture2DWidth","","< Maximum 2D texture width",38,null],[13,"cudaDevAttrMaxTexture2DHeight","","< Maximum 2D texture height",38,null],[13,"cudaDevAttrMaxTexture3DWidth","","< Maximum 3D texture width",38,null],[13,"cudaDevAttrMaxTexture3DHeight","","< Maximum 3D texture height",38,null],[13,"cudaDevAttrMaxTexture3DDepth","","< Maximum 3D texture depth",38,null],[13,"cudaDevAttrMaxTexture2DLayeredWidth","","< Maximum 2D layered texture width",38,null],[13,"cudaDevAttrMaxTexture2DLayeredHeight","","< Maximum 2D layered texture height",38,null],[13,"cudaDevAttrMaxTexture2DLayeredLayers","","< Maximum layers in a 2D layered texture",38,null],[13,"cudaDevAttrSurfaceAlignment","","< Alignment requirement for surfaces",38,null],[13,"cudaDevAttrConcurrentKernels","","< Device can possibly execute multiple kernels concurrently",38,null],[13,"cudaDevAttrEccEnabled","","< Device has ECC support enabled",38,null],[13,"cudaDevAttrPciBusId","","< PCI bus ID of the device",38,null],[13,"cudaDevAttrPciDeviceId","","< PCI device ID of the device",38,null],[13,"cudaDevAttrTccDriver","","< Device is using TCC driver model",38,null],[13,"cudaDevAttrMemoryClockRate","","< Peak memory clock frequency in kilohertz",38,null],[13,"cudaDevAttrGlobalMemoryBusWidth","","< Global memory bus width in bits",38,null],[13,"cudaDevAttrL2CacheSize","","< Size of L2 cache in bytes",38,null],[13,"cudaDevAttrMaxThreadsPerMultiProcessor","","< Maximum resident threads per multiprocessor",38,null],[13,"cudaDevAttrAsyncEngineCount","","< Number of asynchronous engines",38,null],[13,"cudaDevAttrUnifiedAddressing","","< Device shares a unified address space with the host",38,null],[13,"cudaDevAttrMaxTexture1DLayeredWidth","","< Maximum 1D layered texture width",38,null],[13,"cudaDevAttrMaxTexture1DLayeredLayers","","< Maximum layers in a 1D layered texture",38,null],[13,"cudaDevAttrMaxTexture2DGatherWidth","","< Maximum 2D texture width if cudaArrayTextureGather is set",38,null],[13,"cudaDevAttrMaxTexture2DGatherHeight","","< Maximum 2D texture height if cudaArrayTextureGather is set",38,null],[13,"cudaDevAttrMaxTexture3DWidthAlt","","< Alternate maximum 3D texture width",38,null],[13,"cudaDevAttrMaxTexture3DHeightAlt","","< Alternate maximum 3D texture height",38,null],[13,"cudaDevAttrMaxTexture3DDepthAlt","","< Alternate maximum 3D texture depth",38,null],[13,"cudaDevAttrPciDomainId","","< PCI domain ID of the device",38,null],[13,"cudaDevAttrTexturePitchAlignment","","< Pitch alignment requirement for textures",38,null],[13,"cudaDevAttrMaxTextureCubemapWidth","","< Maximum cubemap texture width/height",38,null],[13,"cudaDevAttrMaxTextureCubemapLayeredWidth","","< Maximum cubemap layered texture width/height",38,null],[13,"cudaDevAttrMaxTextureCubemapLayeredLayers","","< Maximum layers in a cubemap layered texture",38,null],[13,"cudaDevAttrMaxSurface1DWidth","","< Maximum 1D surface width",38,null],[13,"cudaDevAttrMaxSurface2DWidth","","< Maximum 2D surface width",38,null],[13,"cudaDevAttrMaxSurface2DHeight","","< Maximum 2D surface height",38,null],[13,"cudaDevAttrMaxSurface3DWidth","","< Maximum 3D surface width",38,null],[13,"cudaDevAttrMaxSurface3DHeight","","< Maximum 3D surface height",38,null],[13,"cudaDevAttrMaxSurface3DDepth","","< Maximum 3D surface depth",38,null],[13,"cudaDevAttrMaxSurface1DLayeredWidth","","< Maximum 1D layered surface width",38,null],[13,"cudaDevAttrMaxSurface1DLayeredLayers","","< Maximum layers in a 1D layered surface",38,null],[13,"cudaDevAttrMaxSurface2DLayeredWidth","","< Maximum 2D layered surface width",38,null],[13,"cudaDevAttrMaxSurface2DLayeredHeight","","< Maximum 2D layered surface height",38,null],[13,"cudaDevAttrMaxSurface2DLayeredLayers","","< Maximum layers in a 2D layered surface",38,null],[13,"cudaDevAttrMaxSurfaceCubemapWidth","","< Maximum cubemap surface width",38,null],[13,"cudaDevAttrMaxSurfaceCubemapLayeredWidth","","< Maximum cubemap layered surface width",38,null],[13,"cudaDevAttrMaxSurfaceCubemapLayeredLayers","","< Maximum layers in a cubemap layered surface",38,null],[13,"cudaDevAttrMaxTexture1DLinearWidth","","< Maximum 1D linear texture width",38,null],[13,"cudaDevAttrMaxTexture2DLinearWidth","","< Maximum 2D linear texture width",38,null],[13,"cudaDevAttrMaxTexture2DLinearHeight","","< Maximum 2D linear texture height",38,null],[13,"cudaDevAttrMaxTexture2DLinearPitch","","< Maximum 2D linear texture pitch in bytes",38,null],[13,"cudaDevAttrMaxTexture2DMipmappedWidth","","< Maximum mipmapped 2D texture width",38,null],[13,"cudaDevAttrMaxTexture2DMipmappedHeight","","< Maximum mipmapped 2D texture height",38,null],[13,"cudaDevAttrComputeCapabilityMajor","","< Major compute capability version number",38,null],[13,"cudaDevAttrComputeCapabilityMinor","","< Minor compute capability version number",38,null],[13,"cudaDevAttrMaxTexture1DMipmappedWidth","","< Maximum mipmapped 1D texture width",38,null],[13,"cudaDevAttrStreamPrioritiesSupported","","< Device supports stream priorities",38,null],[13,"cudaDevAttrGlobalL1CacheSupported","","< Device supports caching globals in L1",38,null],[13,"cudaDevAttrLocalL1CacheSupported","","< Device supports caching locals in L1",38,null],[13,"cudaDevAttrMaxSharedMemoryPerMultiprocessor","","< Maximum shared memory available per multiprocessor in…",38,null],[13,"cudaDevAttrMaxRegistersPerMultiprocessor","","< Maximum number of 32-bit registers available per…",38,null],[13,"cudaDevAttrManagedMemory","","< Device can allocate managed memory on this system",38,null],[13,"cudaDevAttrIsMultiGpuBoard","","< Device is on a multi-GPU board",38,null],[13,"cudaDevAttrMultiGpuBoardGroupID","","< Unique identifier for a group of devices on the same…",38,null],[13,"cudaDevAttrHostNativeAtomicSupported","","< Link between the device and the host supports native…",38,null],[13,"cudaDevAttrSingleToDoublePrecisionPerfRatio","","< Ratio of single precision performance (in floating-point…",38,null],[13,"cudaDevAttrPageableMemoryAccess","","< Device supports coherently accessing pageable memory…",38,null],[13,"cudaDevAttrConcurrentManagedAccess","","< Device can coherently access managed memory concurrently…",38,null],[13,"cudaDevAttrComputePreemptionSupported","","< Device supports Compute Preemption",38,null],[13,"cudaDevAttrCanUseHostPointerForRegisteredMem","","< Device can access host registered memory at the same…",38,null],[13,"cudaDevAttrReserved92","","",38,null],[13,"cudaDevAttrReserved93","","",38,null],[13,"cudaDevAttrReserved94","","",38,null],[13,"cudaDevAttrCooperativeLaunch","","< Device supports launching cooperative kernels via…",38,null],[13,"cudaDevAttrCooperativeMultiDeviceLaunch","","< Device can participate in cooperative kernels launched…",38,null],[13,"cudaDevAttrMaxSharedMemoryPerBlockOptin","","< The maximum optin shared memory per block. This value…",38,null],[13,"cudaDevAttrCanFlushRemoteWrites","","< Device supports flushing of outstanding remote writes.",38,null],[13,"cudaDevAttrHostRegisterSupported","","< Device supports host memory registration via…",38,null],[13,"cudaDevAttrPageableMemoryAccessUsesHostPageTables","","< Device accesses pageable memory via the host\'s page…",38,null],[13,"cudaDevAttrDirectManagedMemAccessFromHost","","< Host can directly access managed memory on the device…",38,null],[4,"cudaDeviceP2PAttr","","CUDA device P2P attributes",null,null],[13,"cudaDevP2PAttrPerformanceRank","","< A relative value indicating the performance of the link…",39,null],[13,"cudaDevP2PAttrAccessSupported","","< Peer access is enabled",39,null],[13,"cudaDevP2PAttrNativeAtomicSupported","","< Native atomic operation over the link supported",39,null],[13,"cudaDevP2PAttrCudaArrayAccessSupported","","< Accessing CUDA arrays over the link supported",39,null],[3,"CUuuid_st","","",null,null],[12,"bytes","","",40,null],[3,"cudaDeviceProp","","CUDA device properties",null,null],[12,"name","","< ASCII string identifying device",41,null],[12,"uuid","","< 16-byte unique identifier",41,null],[12,"luid","","< 8-byte locally unique identifier. Value is undefined on…",41,null],[12,"luidDeviceNodeMask","","< LUID device node mask. Value is undefined on TCC and…",41,null],[12,"totalGlobalMem","","< Global memory available on device in bytes",41,null],[12,"sharedMemPerBlock","","< Shared memory available per block in bytes",41,null],[12,"regsPerBlock","","< 32-bit registers available per block",41,null],[12,"warpSize","","< Warp size in threads",41,null],[12,"memPitch","","< Maximum pitch in bytes allowed by memory copies",41,null],[12,"maxThreadsPerBlock","","< Maximum number of threads per block",41,null],[12,"maxThreadsDim","","< Maximum size of each dimension of a block",41,null],[12,"maxGridSize","","< Maximum size of each dimension of a grid",41,null],[12,"clockRate","","< Clock frequency in kilohertz",41,null],[12,"totalConstMem","","< Constant memory available on device in bytes",41,null],[12,"major","","< Major compute capability",41,null],[12,"minor","","< Minor compute capability",41,null],[12,"textureAlignment","","< Alignment requirement for textures",41,null],[12,"texturePitchAlignment","","< Pitch alignment requirement for texture references bound…",41,null],[12,"deviceOverlap","","< Device can concurrently copy memory and execute a…",41,null],[12,"multiProcessorCount","","< Number of multiprocessors on device",41,null],[12,"kernelExecTimeoutEnabled","","< Specified whether there is a run time limit on kernels",41,null],[12,"integrated","","< Device is integrated as opposed to discrete",41,null],[12,"canMapHostMemory","","< Device can map host memory with…",41,null],[12,"computeMode","","< Compute mode (See ::cudaComputeMode)",41,null],[12,"maxTexture1D","","< Maximum 1D texture size",41,null],[12,"maxTexture1DMipmap","","< Maximum 1D mipmapped texture size",41,null],[12,"maxTexture1DLinear","","< Maximum size for 1D textures bound to linear memory",41,null],[12,"maxTexture2D","","< Maximum 2D texture dimensions",41,null],[12,"maxTexture2DMipmap","","< Maximum 2D mipmapped texture dimensions",41,null],[12,"maxTexture2DLinear","","< Maximum dimensions (width, height, pitch) for 2D…",41,null],[12,"maxTexture2DGather","","< Maximum 2D texture dimensions if texture gather…",41,null],[12,"maxTexture3D","","< Maximum 3D texture dimensions",41,null],[12,"maxTexture3DAlt","","< Maximum alternate 3D texture dimensions",41,null],[12,"maxTextureCubemap","","< Maximum Cubemap texture dimensions",41,null],[12,"maxTexture1DLayered","","< Maximum 1D layered texture dimensions",41,null],[12,"maxTexture2DLayered","","< Maximum 2D layered texture dimensions",41,null],[12,"maxTextureCubemapLayered","","< Maximum Cubemap layered texture dimensions",41,null],[12,"maxSurface1D","","< Maximum 1D surface size",41,null],[12,"maxSurface2D","","< Maximum 2D surface dimensions",41,null],[12,"maxSurface3D","","< Maximum 3D surface dimensions",41,null],[12,"maxSurface1DLayered","","< Maximum 1D layered surface dimensions",41,null],[12,"maxSurface2DLayered","","< Maximum 2D layered surface dimensions",41,null],[12,"maxSurfaceCubemap","","< Maximum Cubemap surface dimensions",41,null],[12,"maxSurfaceCubemapLayered","","< Maximum Cubemap layered surface dimensions",41,null],[12,"surfaceAlignment","","< Alignment requirements for surfaces",41,null],[12,"concurrentKernels","","< Device can possibly execute multiple kernels concurrently",41,null],[12,"ECCEnabled","","< Device has ECC support enabled",41,null],[12,"pciBusID","","< PCI bus ID of the device",41,null],[12,"pciDeviceID","","< PCI device ID of the device",41,null],[12,"pciDomainID","","< PCI domain ID of the device",41,null],[12,"tccDriver","","< 1 if device is a Tesla device using TCC driver, 0…",41,null],[12,"asyncEngineCount","","< Number of asynchronous engines",41,null],[12,"unifiedAddressing","","< Device shares a unified address space with the host",41,null],[12,"memoryClockRate","","< Peak memory clock frequency in kilohertz",41,null],[12,"memoryBusWidth","","< Global memory bus width in bits",41,null],[12,"l2CacheSize","","< Size of L2 cache in bytes",41,null],[12,"maxThreadsPerMultiProcessor","","< Maximum resident threads per multiprocessor",41,null],[12,"streamPrioritiesSupported","","< Device supports stream priorities",41,null],[12,"globalL1CacheSupported","","< Device supports caching globals in L1",41,null],[12,"localL1CacheSupported","","< Device supports caching locals in L1",41,null],[12,"sharedMemPerMultiprocessor","","< Shared memory available per multiprocessor in bytes",41,null],[12,"regsPerMultiprocessor","","< 32-bit registers available per multiprocessor",41,null],[12,"managedMemory","","< Device supports allocating managed memory on this system",41,null],[12,"isMultiGpuBoard","","< Device is on a multi-GPU board",41,null],[12,"multiGpuBoardGroupID","","< Unique identifier for a group of devices on the same…",41,null],[12,"hostNativeAtomicSupported","","< Link between the device and the host supports native…",41,null],[12,"singleToDoublePrecisionPerfRatio","","< Ratio of single precision performance (in floating-point…",41,null],[12,"pageableMemoryAccess","","< Device supports coherently accessing pageable memory…",41,null],[12,"concurrentManagedAccess","","< Device can coherently access managed memory concurrently…",41,null],[12,"computePreemptionSupported","","< Device supports Compute Preemption",41,null],[12,"canUseHostPointerForRegisteredMem","","< Device can access host registered memory at the same…",41,null],[12,"cooperativeLaunch","","< Device supports launching cooperative kernels via…",41,null],[12,"cooperativeMultiDeviceLaunch","","< Device can participate in cooperative kernels launched…",41,null],[12,"sharedMemPerBlockOptin","","< Per device maximum shared memory per block usable by…",41,null],[12,"pageableMemoryAccessUsesHostPageTables","","< Device accesses pageable memory via the host\'s page tables",41,null],[12,"directManagedMemAccessFromHost","","< Host can directly access managed memory on the device…",41,null],[3,"cudaIpcEventHandle_st","","CUDA IPC event handle",null,null],[12,"reserved","","",42,null],[3,"cudaIpcMemHandle_st","","CUDA IPC memory handle",null,null],[12,"reserved","","",43,null],[4,"cudaExternalMemoryHandleType","","External memory handle types",null,null],[13,"cudaExternalMemoryHandleTypeOpaqueFd","","Handle is an opaque file descriptor",44,null],[13,"cudaExternalMemoryHandleTypeOpaqueWin32","","Handle is an opaque shared NT handle",44,null],[13,"cudaExternalMemoryHandleTypeOpaqueWin32Kmt","","Handle is an opaque, globally shared handle",44,null],[13,"cudaExternalMemoryHandleTypeD3D12Heap","","Handle is a D3D12 heap object",44,null],[13,"cudaExternalMemoryHandleTypeD3D12Resource","","Handle is a D3D12 committed resource",44,null],[13,"cudaExternalMemoryHandleTypeD3D11Resource","","Handle is a shared NT handle to a D3D11 resource",44,null],[13,"cudaExternalMemoryHandleTypeD3D11ResourceKmt","","Handle is a globally shared handle to a D3D11 resource",44,null],[13,"cudaExternalMemoryHandleTypeNvSciBuf","","Handle is an NvSciBuf object",44,null],[3,"cudaExternalMemoryHandleDesc","","External memory handle descriptor",null,null],[12,"type_","","Type of the handle",45,null],[12,"handle","","",45,null],[12,"size","","Size of the memory allocation",45,null],[12,"flags","","Flags must either be zero or ::cudaExternalMemoryDedicated",45,null],[19,"cudaExternalMemoryHandleDesc__bindgen_ty_1","","",null,null],[12,"fd","","File descriptor referencing the memory object. Valid when…",46,null],[12,"win32","","",46,null],[12,"nvSciBufObject","","A handle representing NvSciBuf Object. Valid when type is…",46,null],[3,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1","","Win32 handle referencing the semaphore object. Valid when…",null,null],[12,"handle","","Valid NT handle. Must be NULL if \'name\' is non-NULL",47,null],[12,"name","","Name of a valid memory object. Must be NULL if \'handle\' is…",47,null],[3,"cudaExternalMemoryBufferDesc","","External memory buffer descriptor",null,null],[12,"offset","","Offset into the memory object where the buffer\'s base is",48,null],[12,"size","","Size of the buffer",48,null],[12,"flags","","Flags reserved for future use. Must be zero.",48,null],[3,"cudaExternalMemoryMipmappedArrayDesc","","External memory mipmap descriptor",null,null],[12,"offset","","Offset into the memory object where the base level of the…",49,null],[12,"formatDesc","","Format of base level of the mipmap chain",49,null],[12,"extent","","Dimensions of base level of the mipmap chain",49,null],[12,"flags","","Flags associated with CUDA mipmapped arrays. See…",49,null],[12,"numLevels","","Total number of levels in the mipmap chain",49,null],[4,"cudaExternalSemaphoreHandleType","","External semaphore handle types",null,null],[13,"cudaExternalSemaphoreHandleTypeOpaqueFd","","Handle is an opaque file descriptor",50,null],[13,"cudaExternalSemaphoreHandleTypeOpaqueWin32","","Handle is an opaque shared NT handle",50,null],[13,"cudaExternalSemaphoreHandleTypeOpaqueWin32Kmt","","Handle is an opaque, globally shared handle",50,null],[13,"cudaExternalSemaphoreHandleTypeD3D12Fence","","Handle is a shared NT handle referencing a D3D12 fence…",50,null],[13,"cudaExternalSemaphoreHandleTypeD3D11Fence","","Handle is a shared NT handle referencing a D3D11 fence…",50,null],[13,"cudaExternalSemaphoreHandleTypeNvSciSync","","Opaque handle to NvSciSync Object",50,null],[13,"cudaExternalSemaphoreHandleTypeKeyedMutex","","Handle is a shared NT handle referencing a D3D11 keyed…",50,null],[13,"cudaExternalSemaphoreHandleTypeKeyedMutexKmt","","Handle is a shared KMT handle referencing a D3D11 keyed…",50,null],[3,"cudaExternalSemaphoreHandleDesc","","External semaphore handle descriptor",null,null],[12,"type_","","Type of the handle",51,null],[12,"handle","","",51,null],[12,"flags","","Flags reserved for the future. Must be zero.",51,null],[19,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1","","",null,null],[12,"fd","","File descriptor referencing the semaphore object. Valid…",52,null],[12,"win32","","",52,null],[12,"nvSciSyncObj","","Valid NvSciSyncObj. Must be non NULL",52,null],[3,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1","","Win32 handle referencing the semaphore object. Valid when…",null,null],[12,"handle","","Valid NT handle. Must be NULL if \'name\' is non-NULL",53,null],[12,"name","","Name of a valid synchronization primitive. Must be NULL if…",53,null],[3,"cudaExternalSemaphoreSignalParams","","External semaphore  signal parameters",null,null],[12,"params","","",54,null],[12,"flags","","Only when ::cudaExternalSemaphoreSignalParams is used to…",54,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1","","",null,null],[12,"fence","","",55,null],[12,"nvSciSync","","",55,null],[12,"keyedMutex","","",55,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1","","Parameters for fence objects",null,null],[12,"value","","Value of fence to be signaled",56,null],[19,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"fence","","Pointer to NvSciSyncFence. Valid if…",57,null],[12,"reserved","","",57,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3","","Parameters for keyed mutex objects",null,null],[12,"key","","",58,null],[3,"cudaExternalSemaphoreWaitParams","","External semaphore wait parameters",null,null],[12,"params","","",59,null],[12,"flags","","Only when ::cudaExternalSemaphoreSignalParams is used to…",59,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1","","",null,null],[12,"fence","","",60,null],[12,"nvSciSync","","",60,null],[12,"keyedMutex","","",60,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1","","Parameters for fence objects",null,null],[12,"value","","Value of fence to be waited on",61,null],[19,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"fence","","Pointer to NvSciSyncFence. Valid if…",62,null],[12,"reserved","","",62,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3","","Parameters for keyed mutex objects",null,null],[12,"key","","Value of key to acquire the mutex with",63,null],[12,"timeoutMs","","Timeout in milliseconds to wait to acquire the mutex",63,null],[3,"CUstream_st","","",null,null],[3,"CUevent_st","","",null,null],[3,"CUexternalMemory_st","","",null,null],[3,"CUexternalSemaphore_st","","",null,null],[3,"CUgraph_st","","",null,null],[3,"CUgraphNode_st","","",null,null],[4,"cudaCGScope","","CUDA cooperative group scope",null,null],[13,"cudaCGScopeInvalid","","< Invalid cooperative group scope",64,null],[13,"cudaCGScopeGrid","","< Scope represented by a grid_group",64,null],[13,"cudaCGScopeMultiGrid","","< Scope represented by a multi_grid_group",64,null],[3,"cudaLaunchParams","","CUDA launch parameters",null,null],[12,"func","","< Device function symbol",65,null],[12,"gridDim","","< Grid dimentions",65,null],[12,"blockDim","","< Block dimentions",65,null],[12,"args","","< Arguments",65,null],[12,"sharedMem","","< Shared memory",65,null],[12,"stream","","< Stream identifier",65,null],[3,"cudaKernelNodeParams","","CUDA GPU kernel node parameters",null,null],[12,"func","","< Kernel to launch",66,null],[12,"gridDim","","< Grid dimensions",66,null],[12,"blockDim","","< Block dimensions",66,null],[12,"sharedMemBytes","","< Dynamic shared-memory size per thread block in bytes",66,null],[12,"kernelParams","","< Array of pointers to individual kernel arguments",66,null],[12,"extra","","< Pointer to kernel arguments in the \\\"extra\\\" format",66,null],[4,"cudaGraphNodeType","","CUDA Graph node types",null,null],[13,"cudaGraphNodeTypeKernel","","< GPU kernel node",67,null],[13,"cudaGraphNodeTypeMemcpy","","< Memcpy node",67,null],[13,"cudaGraphNodeTypeMemset","","< Memset node",67,null],[13,"cudaGraphNodeTypeHost","","< Host (executable) node",67,null],[13,"cudaGraphNodeTypeGraph","","< Node which executes an embedded graph",67,null],[13,"cudaGraphNodeTypeEmpty","","< Empty (no-op) node",67,null],[13,"cudaGraphNodeTypeCount","","",67,null],[3,"CUgraphExec_st","","",null,null],[4,"cudaGraphExecUpdateResult","","CUDA Graph Update error types",null,null],[13,"cudaGraphExecUpdateSuccess","","< The update succeeded",68,null],[13,"cudaGraphExecUpdateError","","< The update failed for an unexpected reason which is…",68,null],[13,"cudaGraphExecUpdateErrorTopologyChanged","","< The update failed because the topology changed",68,null],[13,"cudaGraphExecUpdateErrorNodeTypeChanged","","< The update failed because a node type changed",68,null],[13,"cudaGraphExecUpdateErrorFunctionChanged","","< The update failed because the function of a kernel node…",68,null],[13,"cudaGraphExecUpdateErrorParametersChanged","","< The update failed because the parameters changed in a…",68,null],[13,"cudaGraphExecUpdateErrorNotSupported","","< The update failed because something about the node is…",68,null],[4,"cudaRoundMode","","",null,null],[13,"cudaRoundNearest","","",69,null],[13,"cudaRoundZero","","",69,null],[13,"cudaRoundPosInf","","",69,null],[13,"cudaRoundMinInf","","",69,null],[4,"cudaSurfaceBoundaryMode","","CUDA Surface boundary modes",null,null],[13,"cudaBoundaryModeZero","","< Zero boundary mode",70,null],[13,"cudaBoundaryModeClamp","","< Clamp boundary mode",70,null],[13,"cudaBoundaryModeTrap","","< Trap boundary mode",70,null],[4,"cudaSurfaceFormatMode","","CUDA Surface format modes",null,null],[13,"cudaFormatModeForced","","< Forced format mode",71,null],[13,"cudaFormatModeAuto","","< Auto format mode",71,null],[3,"surfaceReference","","CUDA Surface reference",null,null],[12,"channelDesc","","Channel descriptor for surface reference",72,null],[4,"cudaTextureAddressMode","","CUDA texture address modes",null,null],[13,"cudaAddressModeWrap","","< Wrapping address mode",73,null],[13,"cudaAddressModeClamp","","< Clamp to edge address mode",73,null],[13,"cudaAddressModeMirror","","< Mirror address mode",73,null],[13,"cudaAddressModeBorder","","< Border address mode",73,null],[4,"cudaTextureFilterMode","","CUDA texture filter modes",null,null],[13,"cudaFilterModePoint","","< Point filter mode",74,null],[13,"cudaFilterModeLinear","","< Linear filter mode",74,null],[4,"cudaTextureReadMode","","CUDA texture read modes",null,null],[13,"cudaReadModeElementType","","< Read texture as specified element type",75,null],[13,"cudaReadModeNormalizedFloat","","< Read texture as normalized float",75,null],[3,"textureReference","","CUDA texture reference",null,null],[12,"normalized","","Indicates whether texture reads are normalized or not",76,null],[12,"filterMode","","Texture filter mode",76,null],[12,"addressMode","","Texture address mode for up to 3 dimensions",76,null],[12,"channelDesc","","Channel descriptor for the texture reference",76,null],[12,"sRGB","","Perform sRGB->linear conversion during texture read",76,null],[12,"maxAnisotropy","","Limit to the anisotropy ratio",76,null],[12,"mipmapFilterMode","","Mipmap filter mode",76,null],[12,"mipmapLevelBias","","Offset applied to the supplied mipmap level",76,null],[12,"minMipmapLevelClamp","","Lower end of the mipmap level range to clamp access to",76,null],[12,"maxMipmapLevelClamp","","Upper end of the mipmap level range to clamp access to",76,null],[12,"__cudaReserved","","",76,null],[3,"cudaTextureDesc","","CUDA texture descriptor",null,null],[12,"addressMode","","Texture address mode for up to 3 dimensions",77,null],[12,"filterMode","","Texture filter mode",77,null],[12,"readMode","","Texture read mode",77,null],[12,"sRGB","","Perform sRGB->linear conversion during texture read",77,null],[12,"borderColor","","Texture Border Color",77,null],[12,"normalizedCoords","","Indicates whether texture reads are normalized or not",77,null],[12,"maxAnisotropy","","Limit to the anisotropy ratio",77,null],[12,"mipmapFilterMode","","Mipmap filter mode",77,null],[12,"mipmapLevelBias","","Offset applied to the supplied mipmap level",77,null],[12,"minMipmapLevelClamp","","Lower end of the mipmap level range to clamp access to",77,null],[12,"maxMipmapLevelClamp","","Upper end of the mipmap level range to clamp access to",77,null],[4,"cudaDataType_t","","",null,null],[13,"CUDA_R_16F","","",78,null],[13,"CUDA_C_16F","","",78,null],[13,"CUDA_R_32F","","",78,null],[13,"CUDA_C_32F","","",78,null],[13,"CUDA_R_64F","","",78,null],[13,"CUDA_C_64F","","",78,null],[13,"CUDA_R_8I","","",78,null],[13,"CUDA_C_8I","","",78,null],[13,"CUDA_R_8U","","",78,null],[13,"CUDA_C_8U","","",78,null],[13,"CUDA_R_32I","","",78,null],[13,"CUDA_C_32I","","",78,null],[13,"CUDA_R_32U","","",78,null],[13,"CUDA_C_32U","","",78,null],[3,"cudnnContext","","",null,null],[4,"cudnnStatus_t","","",null,null],[13,"CUDNN_STATUS_SUCCESS","","",79,null],[13,"CUDNN_STATUS_NOT_INITIALIZED","","",79,null],[13,"CUDNN_STATUS_ALLOC_FAILED","","",79,null],[13,"CUDNN_STATUS_BAD_PARAM","","",79,null],[13,"CUDNN_STATUS_INTERNAL_ERROR","","",79,null],[13,"CUDNN_STATUS_INVALID_VALUE","","",79,null],[13,"CUDNN_STATUS_ARCH_MISMATCH","","",79,null],[13,"CUDNN_STATUS_MAPPING_ERROR","","",79,null],[13,"CUDNN_STATUS_EXECUTION_FAILED","","",79,null],[13,"CUDNN_STATUS_NOT_SUPPORTED","","",79,null],[13,"CUDNN_STATUS_LICENSE_ERROR","","",79,null],[13,"CUDNN_STATUS_RUNTIME_PREREQUISITE_MISSING","","",79,null],[13,"CUDNN_STATUS_RUNTIME_IN_PROGRESS","","",79,null],[13,"CUDNN_STATUS_RUNTIME_FP_OVERFLOW","","",79,null],[3,"cudnnRuntimeTag_t","","",null,null],[4,"cudnnErrQueryMode_t","","",null,null],[13,"CUDNN_ERRQUERY_RAWCODE","","",80,null],[13,"CUDNN_ERRQUERY_NONBLOCKING","","",80,null],[13,"CUDNN_ERRQUERY_BLOCKING","","",80,null],[3,"cudnnTensorStruct","","",null,null],[3,"cudnnConvolutionStruct","","",null,null],[3,"cudnnPoolingStruct","","",null,null],[3,"cudnnFilterStruct","","",null,null],[3,"cudnnLRNStruct","","",null,null],[3,"cudnnActivationStruct","","",null,null],[3,"cudnnSpatialTransformerStruct","","",null,null],[3,"cudnnOpTensorStruct","","",null,null],[3,"cudnnReduceTensorStruct","","",null,null],[3,"cudnnCTCLossStruct","","",null,null],[3,"cudnnTensorTransformStruct","","",null,null],[4,"cudnnDataType_t","","",null,null],[13,"CUDNN_DATA_FLOAT","","",81,null],[13,"CUDNN_DATA_DOUBLE","","",81,null],[13,"CUDNN_DATA_HALF","","",81,null],[13,"CUDNN_DATA_INT8","","",81,null],[13,"CUDNN_DATA_INT32","","",81,null],[13,"CUDNN_DATA_INT8x4","","",81,null],[13,"CUDNN_DATA_UINT8","","",81,null],[13,"CUDNN_DATA_UINT8x4","","",81,null],[13,"CUDNN_DATA_INT8x32","","",81,null],[4,"cudnnMathType_t","","",null,null],[13,"CUDNN_DEFAULT_MATH","","",82,null],[13,"CUDNN_TENSOR_OP_MATH","","",82,null],[13,"CUDNN_TENSOR_OP_MATH_ALLOW_CONVERSION","","",82,null],[4,"cudnnNanPropagation_t","","",null,null],[13,"CUDNN_NOT_PROPAGATE_NAN","","",83,null],[13,"CUDNN_PROPAGATE_NAN","","",83,null],[4,"cudnnDeterminism_t","","",null,null],[13,"CUDNN_NON_DETERMINISTIC","","",84,null],[13,"CUDNN_DETERMINISTIC","","",84,null],[4,"cudnnReorderType_t","","",null,null],[13,"CUDNN_DEFAULT_REORDER","","",85,null],[13,"CUDNN_NO_REORDER","","",85,null],[4,"cudnnTensorFormat_t","","",null,null],[13,"CUDNN_TENSOR_NCHW","","",86,null],[13,"CUDNN_TENSOR_NHWC","","",86,null],[13,"CUDNN_TENSOR_NCHW_VECT_C","","",86,null],[4,"cudnnFoldingDirection_t","","",null,null],[13,"CUDNN_TRANSFORM_FOLD","","",87,null],[13,"CUDNN_TRANSFORM_UNFOLD","","",87,null],[4,"cudnnOpTensorOp_t","","",null,null],[13,"CUDNN_OP_TENSOR_ADD","","",88,null],[13,"CUDNN_OP_TENSOR_MUL","","",88,null],[13,"CUDNN_OP_TENSOR_MIN","","",88,null],[13,"CUDNN_OP_TENSOR_MAX","","",88,null],[13,"CUDNN_OP_TENSOR_SQRT","","",88,null],[13,"CUDNN_OP_TENSOR_NOT","","",88,null],[4,"cudnnReduceTensorOp_t","","",null,null],[13,"CUDNN_REDUCE_TENSOR_ADD","","",89,null],[13,"CUDNN_REDUCE_TENSOR_MUL","","",89,null],[13,"CUDNN_REDUCE_TENSOR_MIN","","",89,null],[13,"CUDNN_REDUCE_TENSOR_MAX","","",89,null],[13,"CUDNN_REDUCE_TENSOR_AMAX","","",89,null],[13,"CUDNN_REDUCE_TENSOR_AVG","","",89,null],[13,"CUDNN_REDUCE_TENSOR_NORM1","","",89,null],[13,"CUDNN_REDUCE_TENSOR_NORM2","","",89,null],[13,"CUDNN_REDUCE_TENSOR_MUL_NO_ZEROS","","",89,null],[4,"cudnnReduceTensorIndices_t","","",null,null],[13,"CUDNN_REDUCE_TENSOR_NO_INDICES","","",90,null],[13,"CUDNN_REDUCE_TENSOR_FLATTENED_INDICES","","",90,null],[4,"cudnnIndicesType_t","","",null,null],[13,"CUDNN_32BIT_INDICES","","",91,null],[13,"CUDNN_64BIT_INDICES","","",91,null],[13,"CUDNN_16BIT_INDICES","","",91,null],[13,"CUDNN_8BIT_INDICES","","",91,null],[4,"cudnnConvolutionMode_t","","",null,null],[13,"CUDNN_CONVOLUTION","","",92,null],[13,"CUDNN_CROSS_CORRELATION","","",92,null],[4,"cudnnConvolutionFwdPreference_t","","",null,null],[13,"CUDNN_CONVOLUTION_FWD_NO_WORKSPACE","","",93,null],[13,"CUDNN_CONVOLUTION_FWD_PREFER_FASTEST","","",93,null],[13,"CUDNN_CONVOLUTION_FWD_SPECIFY_WORKSPACE_LIMIT","","",93,null],[4,"cudnnConvolutionFwdAlgo_t","","",null,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_GEMM","","",94,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM","","",94,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_GEMM","","",94,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_DIRECT","","",94,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_FFT","","",94,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_FFT_TILING","","",94,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD","","",94,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD_NONFUSED","","",94,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_COUNT","","",94,null],[3,"cudnnConvolutionFwdAlgoPerf_t","","",null,null],[12,"algo","","",95,null],[12,"status","","",95,null],[12,"time","","",95,null],[12,"memory","","",95,null],[12,"determinism","","",95,null],[12,"mathType","","",95,null],[12,"reserved","","",95,null],[4,"cudnnConvolutionBwdFilterPreference_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_NO_WORKSPACE","","",96,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_PREFER_FASTEST","","",96,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_SPECIFY_WORKSPACE_LIMIT","","",96,null],[4,"cudnnConvolutionBwdFilterAlgo_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_0","","",97,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_1","","",97,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT","","",97,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_3","","",97,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD","","",97,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD_NONFUSED","","",97,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT_TILING","","",97,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_COUNT","","",97,null],[3,"cudnnConvolutionBwdFilterAlgoPerf_t","","",null,null],[12,"algo","","",98,null],[12,"status","","",98,null],[12,"time","","",98,null],[12,"memory","","",98,null],[12,"determinism","","",98,null],[12,"mathType","","",98,null],[12,"reserved","","",98,null],[4,"cudnnConvolutionBwdDataPreference_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_NO_WORKSPACE","","",99,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_PREFER_FASTEST","","",99,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_SPECIFY_WORKSPACE_LIMIT","","",99,null],[4,"cudnnConvolutionBwdDataAlgo_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_0","","",100,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_1","","",100,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT","","",100,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT_TILING","","",100,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD","","",100,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD_NONFUSED","","",100,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_COUNT","","",100,null],[3,"cudnnConvolutionBwdDataAlgoPerf_t","","",null,null],[12,"algo","","",101,null],[12,"status","","",101,null],[12,"time","","",101,null],[12,"memory","","",101,null],[12,"determinism","","",101,null],[12,"mathType","","",101,null],[12,"reserved","","",101,null],[4,"cudnnSoftmaxAlgorithm_t","","",null,null],[13,"CUDNN_SOFTMAX_FAST","","",102,null],[13,"CUDNN_SOFTMAX_ACCURATE","","",102,null],[13,"CUDNN_SOFTMAX_LOG","","",102,null],[4,"cudnnSoftmaxMode_t","","",null,null],[13,"CUDNN_SOFTMAX_MODE_INSTANCE","","",103,null],[13,"CUDNN_SOFTMAX_MODE_CHANNEL","","",103,null],[4,"cudnnPoolingMode_t","","",null,null],[13,"CUDNN_POOLING_MAX","","",104,null],[13,"CUDNN_POOLING_AVERAGE_COUNT_INCLUDE_PADDING","","",104,null],[13,"CUDNN_POOLING_AVERAGE_COUNT_EXCLUDE_PADDING","","",104,null],[13,"CUDNN_POOLING_MAX_DETERMINISTIC","","",104,null],[4,"cudnnActivationMode_t","","",null,null],[13,"CUDNN_ACTIVATION_SIGMOID","","",105,null],[13,"CUDNN_ACTIVATION_RELU","","",105,null],[13,"CUDNN_ACTIVATION_TANH","","",105,null],[13,"CUDNN_ACTIVATION_CLIPPED_RELU","","",105,null],[13,"CUDNN_ACTIVATION_ELU","","",105,null],[13,"CUDNN_ACTIVATION_IDENTITY","","",105,null],[4,"cudnnLRNMode_t","","",null,null],[13,"CUDNN_LRN_CROSS_CHANNEL_DIM1","","",106,null],[4,"cudnnDivNormMode_t","","",null,null],[13,"CUDNN_DIVNORM_PRECOMPUTED_MEANS","","",107,null],[4,"cudnnBatchNormMode_t","","",null,null],[13,"CUDNN_BATCHNORM_PER_ACTIVATION","","",108,null],[13,"CUDNN_BATCHNORM_SPATIAL","","",108,null],[13,"CUDNN_BATCHNORM_SPATIAL_PERSISTENT","","",108,null],[4,"cudnnBatchNormOps_t","","",null,null],[13,"CUDNN_BATCHNORM_OPS_BN","","",109,null],[13,"CUDNN_BATCHNORM_OPS_BN_ACTIVATION","","",109,null],[13,"CUDNN_BATCHNORM_OPS_BN_ADD_ACTIVATION","","",109,null],[4,"cudnnSamplerType_t","","",null,null],[13,"CUDNN_SAMPLER_BILINEAR","","",110,null],[3,"cudnnDropoutStruct","","",null,null],[4,"cudnnRNNAlgo_t","","",null,null],[13,"CUDNN_RNN_ALGO_STANDARD","","",111,null],[13,"CUDNN_RNN_ALGO_PERSIST_STATIC","","",111,null],[13,"CUDNN_RNN_ALGO_PERSIST_DYNAMIC","","",111,null],[13,"CUDNN_RNN_ALGO_COUNT","","",111,null],[4,"cudnnRNNMode_t","","",null,null],[13,"CUDNN_RNN_RELU","","",112,null],[13,"CUDNN_RNN_TANH","","",112,null],[13,"CUDNN_LSTM","","",112,null],[13,"CUDNN_GRU","","",112,null],[4,"cudnnRNNBiasMode_t","","",null,null],[13,"CUDNN_RNN_NO_BIAS","","",113,null],[13,"CUDNN_RNN_SINGLE_INP_BIAS","","",113,null],[13,"CUDNN_RNN_DOUBLE_BIAS","","",113,null],[13,"CUDNN_RNN_SINGLE_REC_BIAS","","",113,null],[4,"cudnnDirectionMode_t","","",null,null],[13,"CUDNN_UNIDIRECTIONAL","","",114,null],[13,"CUDNN_BIDIRECTIONAL","","",114,null],[4,"cudnnRNNInputMode_t","","",null,null],[13,"CUDNN_LINEAR_INPUT","","",115,null],[13,"CUDNN_SKIP_INPUT","","",115,null],[4,"cudnnRNNClipMode_t","","",null,null],[13,"CUDNN_RNN_CLIP_NONE","","",116,null],[13,"CUDNN_RNN_CLIP_MINMAX","","",116,null],[4,"cudnnRNNDataLayout_t","","",null,null],[13,"CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_UNPACKED","","",117,null],[13,"CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_PACKED","","",117,null],[13,"CUDNN_RNN_DATA_LAYOUT_BATCH_MAJOR_UNPACKED","","",117,null],[4,"cudnnRNNPaddingMode_t","","",null,null],[13,"CUDNN_RNN_PADDED_IO_DISABLED","","",118,null],[13,"CUDNN_RNN_PADDED_IO_ENABLED","","",118,null],[3,"cudnnRNNStruct","","",null,null],[3,"cudnnPersistentRNNPlan","","",null,null],[3,"cudnnRNNDataStruct","","",null,null],[3,"cudnnAlgorithmStruct","","",null,null],[3,"cudnnAlgorithmPerformanceStruct","","",null,null],[4,"cudnnSeqDataAxis_t","","",null,null],[13,"CUDNN_SEQDATA_TIME_DIM","","",119,null],[13,"CUDNN_SEQDATA_BATCH_DIM","","",119,null],[13,"CUDNN_SEQDATA_BEAM_DIM","","",119,null],[13,"CUDNN_SEQDATA_VECT_DIM","","",119,null],[3,"cudnnSeqDataStruct","","",null,null],[3,"cudnnAttnStruct","","",null,null],[4,"cudnnMultiHeadAttnWeightKind_t","","",null,null],[13,"CUDNN_MH_ATTN_Q_WEIGHTS","","",120,null],[13,"CUDNN_MH_ATTN_K_WEIGHTS","","",120,null],[13,"CUDNN_MH_ATTN_V_WEIGHTS","","",120,null],[13,"CUDNN_MH_ATTN_O_WEIGHTS","","",120,null],[13,"CUDNN_MH_ATTN_Q_BIASES","","",120,null],[13,"CUDNN_MH_ATTN_K_BIASES","","",120,null],[13,"CUDNN_MH_ATTN_V_BIASES","","",120,null],[13,"CUDNN_MH_ATTN_O_BIASES","","",120,null],[4,"cudnnWgradMode_t","","",null,null],[13,"CUDNN_WGRAD_MODE_ADD","","",121,null],[13,"CUDNN_WGRAD_MODE_SET","","",121,null],[4,"cudnnCTCLossAlgo_t","","",null,null],[13,"CUDNN_CTC_LOSS_ALGO_DETERMINISTIC","","",122,null],[13,"CUDNN_CTC_LOSS_ALGO_NON_DETERMINISTIC","","",122,null],[4,"cudnnLossNormalizationMode_t","","",null,null],[13,"CUDNN_LOSS_NORMALIZATION_NONE","","",123,null],[13,"CUDNN_LOSS_NORMALIZATION_SOFTMAX","","",123,null],[3,"cudnnAlgorithm_t","","",null,null],[12,"algo","","",124,null],[19,"cudnnAlgorithm_t_Algorithm","","",null,null],[12,"convFwdAlgo","","",125,null],[12,"convBwdFilterAlgo","","",125,null],[12,"convBwdDataAlgo","","",125,null],[12,"RNNAlgo","","",125,null],[12,"CTCLossAlgo","","",125,null],[4,"cudnnSeverity_t","","",null,null],[13,"CUDNN_SEV_FATAL","","",126,null],[13,"CUDNN_SEV_ERROR","","",126,null],[13,"CUDNN_SEV_WARNING","","",126,null],[13,"CUDNN_SEV_INFO","","",126,null],[3,"cudnnDebug_t","","",null,null],[12,"cudnn_version","","",127,null],[12,"cudnnStatus","","",127,null],[12,"time_sec","","",127,null],[12,"time_usec","","",127,null],[12,"time_delta","","",127,null],[12,"handle","","",127,null],[12,"stream","","",127,null],[12,"pid","","",127,null],[12,"tid","","",127,null],[12,"cudaDeviceId","","",127,null],[12,"reserved","","",127,null],[3,"cudnnFusedOpsConstParamStruct","","",null,null],[3,"cudnnFusedOpsVariantParamStruct","","",null,null],[3,"cudnnFusedOpsPlanStruct","","",null,null],[4,"cudnnFusedOps_t","","",null,null],[13,"CUDNN_FUSED_SCALE_BIAS_ACTIVATION_CONV_BNSTATS","","",128,null],[13,"CUDNN_FUSED_SCALE_BIAS_ACTIVATION_WGRAD","","",128,null],[13,"CUDNN_FUSED_BN_FINALIZE_STATISTICS_TRAINING","","",128,null],[13,"CUDNN_FUSED_BN_FINALIZE_STATISTICS_INFERENCE","","",128,null],[13,"CUDNN_FUSED_CONV_SCALE_BIAS_ADD_ACTIVATION","","",128,null],[13,"CUDNN_FUSED_SCALE_BIAS_ADD_ACTIVATION_GEN_BITMASK","","",128,null],[13,"CUDNN_FUSED_DACTIVATION_FORK_DBATCHNORM","","",128,null],[4,"cudnnFusedOpsConstParamLabel_t","","",null,null],[13,"CUDNN_PARAM_XDESC","","",129,null],[13,"CUDNN_PARAM_XDATA_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_MODE","","",129,null],[13,"CUDNN_PARAM_BN_EQSCALEBIAS_DESC","","",129,null],[13,"CUDNN_PARAM_BN_EQSCALE_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_EQBIAS_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_ACTIVATION_DESC","","",129,null],[13,"CUDNN_PARAM_CONV_DESC","","",129,null],[13,"CUDNN_PARAM_WDESC","","",129,null],[13,"CUDNN_PARAM_WDATA_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_DWDESC","","",129,null],[13,"CUDNN_PARAM_DWDATA_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_YDESC","","",129,null],[13,"CUDNN_PARAM_YDATA_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_DYDESC","","",129,null],[13,"CUDNN_PARAM_DYDATA_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_YSTATS_DESC","","",129,null],[13,"CUDNN_PARAM_YSUM_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_YSQSUM_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_SCALEBIAS_MEANVAR_DESC","","",129,null],[13,"CUDNN_PARAM_BN_SCALE_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_BIAS_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_SAVED_MEAN_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_SAVED_INVSTD_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_RUNNING_MEAN_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_RUNNING_VAR_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_ZDESC","","",129,null],[13,"CUDNN_PARAM_ZDATA_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_Z_EQSCALEBIAS_DESC","","",129,null],[13,"CUDNN_PARAM_BN_Z_EQSCALE_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_Z_EQBIAS_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_ACTIVATION_BITMASK_DESC","","",129,null],[13,"CUDNN_PARAM_ACTIVATION_BITMASK_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_DXDESC","","",129,null],[13,"CUDNN_PARAM_DXDATA_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_DZDESC","","",129,null],[13,"CUDNN_PARAM_DZDATA_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_DSCALE_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_DBIAS_PLACEHOLDER","","",129,null],[4,"cudnnFusedOpsPointerPlaceHolder_t","","",null,null],[13,"CUDNN_PTR_NULL","","",130,null],[13,"CUDNN_PTR_ELEM_ALIGNED","","",130,null],[13,"CUDNN_PTR_16B_ALIGNED","","",130,null],[4,"cudnnFusedOpsVariantParamLabel_t","","",null,null],[13,"CUDNN_PTR_XDATA","","",131,null],[13,"CUDNN_PTR_BN_EQSCALE","","",131,null],[13,"CUDNN_PTR_BN_EQBIAS","","",131,null],[13,"CUDNN_PTR_WDATA","","",131,null],[13,"CUDNN_PTR_DWDATA","","",131,null],[13,"CUDNN_PTR_YDATA","","",131,null],[13,"CUDNN_PTR_DYDATA","","",131,null],[13,"CUDNN_PTR_YSUM","","",131,null],[13,"CUDNN_PTR_YSQSUM","","",131,null],[13,"CUDNN_PTR_WORKSPACE","","",131,null],[13,"CUDNN_PTR_BN_SCALE","","",131,null],[13,"CUDNN_PTR_BN_BIAS","","",131,null],[13,"CUDNN_PTR_BN_SAVED_MEAN","","",131,null],[13,"CUDNN_PTR_BN_SAVED_INVSTD","","",131,null],[13,"CUDNN_PTR_BN_RUNNING_MEAN","","",131,null],[13,"CUDNN_PTR_BN_RUNNING_VAR","","",131,null],[13,"CUDNN_PTR_ZDATA","","",131,null],[13,"CUDNN_PTR_BN_Z_EQSCALE","","",131,null],[13,"CUDNN_PTR_BN_Z_EQBIAS","","",131,null],[13,"CUDNN_PTR_ACTIVATION_BITMASK","","",131,null],[13,"CUDNN_PTR_DXDATA","","",131,null],[13,"CUDNN_PTR_DZDATA","","",131,null],[13,"CUDNN_PTR_BN_DSCALE","","",131,null],[13,"CUDNN_PTR_BN_DBIAS","","",131,null],[13,"CUDNN_SCALAR_SIZE_T_WORKSPACE_SIZE_IN_BYTES","","",131,null],[13,"CUDNN_SCALAR_INT64_T_BN_ACCUMULATION_COUNT","","",131,null],[13,"CUDNN_SCALAR_DOUBLE_BN_EXP_AVG_FACTOR","","",131,null],[13,"CUDNN_SCALAR_DOUBLE_BN_EPSILON","","",131,null],[4,"cudaError_t","","CUDA error types",null,null],[13,"cudaSuccess","","The API call returned with no errors. In the case of query…",1,null],[13,"cudaErrorInvalidValue","","This indicates that one or more of the parameters passed…",1,null],[13,"cudaErrorMemoryAllocation","","The API call failed because it was unable to allocate…",1,null],[13,"cudaErrorInitializationError","","The API call failed because the CUDA driver and runtime…",1,null],[13,"cudaErrorCudartUnloading","","This indicates that a CUDA Runtime API call cannot be…",1,null],[13,"cudaErrorProfilerDisabled","","This indicates profiler is not initialized for this run.…",1,null],[13,"cudaErrorProfilerNotInitialized","","\\\\deprecated This error return is deprecated as of CUDA…",1,null],[13,"cudaErrorProfilerAlreadyStarted","","\\\\deprecated This error return is deprecated as of CUDA…",1,null],[13,"cudaErrorProfilerAlreadyStopped","","\\\\deprecated This error return is deprecated as of CUDA…",1,null],[13,"cudaErrorInvalidConfiguration","","This indicates that a kernel launch is requesting…",1,null],[13,"cudaErrorInvalidPitchValue","","This indicates that one or more of the pitch-related…",1,null],[13,"cudaErrorInvalidSymbol","","This indicates that the symbol name/identifier passed to…",1,null],[13,"cudaErrorInvalidHostPointer","","This indicates that at least one host pointer passed to…",1,null],[13,"cudaErrorInvalidDevicePointer","","This indicates that at least one device pointer passed to…",1,null],[13,"cudaErrorInvalidTexture","","This indicates that the texture passed to the API call is…",1,null],[13,"cudaErrorInvalidTextureBinding","","This indicates that the texture binding is not valid. This…",1,null],[13,"cudaErrorInvalidChannelDescriptor","","This indicates that the channel descriptor passed to the…",1,null],[13,"cudaErrorInvalidMemcpyDirection","","This indicates that the direction of the memcpy passed to…",1,null],[13,"cudaErrorAddressOfConstant","","This indicated that the user has taken the address of a…",1,null],[13,"cudaErrorTextureFetchFailed","","This indicated that a texture fetch was not able to be…",1,null],[13,"cudaErrorTextureNotBound","","This indicated that a texture was not bound for access.…",1,null],[13,"cudaErrorSynchronizationError","","This indicated that a synchronization operation had…",1,null],[13,"cudaErrorInvalidFilterSetting","","This indicates that a non-float texture was being accessed…",1,null],[13,"cudaErrorInvalidNormSetting","","This indicates that an attempt was made to read a…",1,null],[13,"cudaErrorMixedDeviceExecution","","Mixing of device and device emulation code was not…",1,null],[13,"cudaErrorNotYetImplemented","","This indicates that the API call is not yet implemented.…",1,null],[13,"cudaErrorMemoryValueTooLarge","","This indicated that an emulated device pointer exceeded…",1,null],[13,"cudaErrorInsufficientDriver","","This indicates that the installed NVIDIA CUDA driver is…",1,null],[13,"cudaErrorInvalidSurface","","This indicates that the surface passed to the API call is…",1,null],[13,"cudaErrorDuplicateVariableName","","This indicates that multiple global or constant variables…",1,null],[13,"cudaErrorDuplicateTextureName","","This indicates that multiple textures (across separate…",1,null],[13,"cudaErrorDuplicateSurfaceName","","This indicates that multiple surfaces (across separate…",1,null],[13,"cudaErrorDevicesUnavailable","","This indicates that all CUDA devices are busy or…",1,null],[13,"cudaErrorIncompatibleDriverContext","","This indicates that the current context is not compatible…",1,null],[13,"cudaErrorMissingConfiguration","","The device function being invoked (usually via…",1,null],[13,"cudaErrorPriorLaunchFailure","","This indicated that a previous kernel launch failed. This…",1,null],[13,"cudaErrorLaunchMaxDepthExceeded","","This error indicates that a device runtime grid launch did…",1,null],[13,"cudaErrorLaunchFileScopedTex","","This error indicates that a grid launch did not occur…",1,null],[13,"cudaErrorLaunchFileScopedSurf","","This error indicates that a grid launch did not occur…",1,null],[13,"cudaErrorSyncDepthExceeded","","This error indicates that a call to…",1,null],[13,"cudaErrorLaunchPendingCountExceeded","","This error indicates that a device runtime grid launch…",1,null],[13,"cudaErrorInvalidDeviceFunction","","The requested device function does not exist or is not…",1,null],[13,"cudaErrorNoDevice","","This indicates that no CUDA-capable devices were detected…",1,null],[13,"cudaErrorInvalidDevice","","This indicates that the device ordinal supplied by the…",1,null],[13,"cudaErrorStartupFailure","","This indicates an internal startup failure in the CUDA…",1,null],[13,"cudaErrorInvalidKernelImage","","This indicates that the device kernel image is invalid.",1,null],[13,"cudaErrorDeviceUninitialized","","This most frequently indicates that there is no context…",1,null],[13,"cudaErrorMapBufferObjectFailed","","This indicates that the buffer object could not be mapped.",1,null],[13,"cudaErrorUnmapBufferObjectFailed","","This indicates that the buffer object could not be unmapped.",1,null],[13,"cudaErrorArrayIsMapped","","This indicates that the specified array is currently…",1,null],[13,"cudaErrorAlreadyMapped","","This indicates that the resource is already mapped.",1,null],[13,"cudaErrorNoKernelImageForDevice","","This indicates that there is no kernel image available…",1,null],[13,"cudaErrorAlreadyAcquired","","This indicates that a resource has already been acquired.",1,null],[13,"cudaErrorNotMapped","","This indicates that a resource is not mapped.",1,null],[13,"cudaErrorNotMappedAsArray","","This indicates that a mapped resource is not available for…",1,null],[13,"cudaErrorNotMappedAsPointer","","This indicates that a mapped resource is not available for…",1,null],[13,"cudaErrorECCUncorrectable","","This indicates that an uncorrectable ECC error was…",1,null],[13,"cudaErrorUnsupportedLimit","","This indicates that the ::cudaLimit passed to the API call…",1,null],[13,"cudaErrorDeviceAlreadyInUse","","This indicates that a call tried to access an…",1,null],[13,"cudaErrorPeerAccessUnsupported","","This error indicates that P2P access is not supported…",1,null],[13,"cudaErrorInvalidPtx","","A PTX compilation failed. The runtime may fall back to…",1,null],[13,"cudaErrorInvalidGraphicsContext","","This indicates an error with the OpenGL or DirectX context.",1,null],[13,"cudaErrorNvlinkUncorrectable","","This indicates that an uncorrectable NVLink error was…",1,null],[13,"cudaErrorJitCompilerNotFound","","This indicates that the PTX JIT compiler library was not…",1,null],[13,"cudaErrorInvalidSource","","This indicates that the device kernel source is invalid.",1,null],[13,"cudaErrorFileNotFound","","This indicates that the file specified was not found.",1,null],[13,"cudaErrorSharedObjectSymbolNotFound","","This indicates that a link to a shared object failed to…",1,null],[13,"cudaErrorSharedObjectInitFailed","","This indicates that initialization of a shared object…",1,null],[13,"cudaErrorOperatingSystem","","This error indicates that an OS call failed.",1,null],[13,"cudaErrorInvalidResourceHandle","","This indicates that a resource handle passed to the API…",1,null],[13,"cudaErrorIllegalState","","This indicates that a resource required by the API call is…",1,null],[13,"cudaErrorSymbolNotFound","","This indicates that a named symbol was not found. Examples…",1,null],[13,"cudaErrorNotReady","","This indicates that asynchronous operations issued…",1,null],[13,"cudaErrorIllegalAddress","","The device encountered a load or store instruction on an…",1,null],[13,"cudaErrorLaunchOutOfResources","","This indicates that a launch did not occur because it did…",1,null],[13,"cudaErrorLaunchTimeout","","This indicates that the device kernel took too long to…",1,null],[13,"cudaErrorLaunchIncompatibleTexturing","","This error indicates a kernel launch that uses an…",1,null],[13,"cudaErrorPeerAccessAlreadyEnabled","","This error indicates that a call to…",1,null],[13,"cudaErrorPeerAccessNotEnabled","","This error indicates that ::cudaDeviceDisablePeerAccess()…",1,null],[13,"cudaErrorSetOnActiveProcess","","This indicates that the user has called…",1,null],[13,"cudaErrorContextIsDestroyed","","This error indicates that the context current to the…",1,null],[13,"cudaErrorAssert","","An assert triggered in device code during kernel…",1,null],[13,"cudaErrorTooManyPeers","","This error indicates that the hardware resources required…",1,null],[13,"cudaErrorHostMemoryAlreadyRegistered","","This error indicates that the memory range passed to…",1,null],[13,"cudaErrorHostMemoryNotRegistered","","This error indicates that the pointer passed to…",1,null],[13,"cudaErrorHardwareStackError","","Device encountered an error in the call stack during…",1,null],[13,"cudaErrorIllegalInstruction","","The device encountered an illegal instruction during…",1,null],[13,"cudaErrorMisalignedAddress","","The device encountered a load or store instruction on a…",1,null],[13,"cudaErrorInvalidAddressSpace","","While executing a kernel, the device encountered an…",1,null],[13,"cudaErrorInvalidPc","","The device encountered an invalid program counter. This…",1,null],[13,"cudaErrorLaunchFailure","","An exception occurred on the device while executing a…",1,null],[13,"cudaErrorCooperativeLaunchTooLarge","","This error indicates that the number of blocks launched…",1,null],[13,"cudaErrorNotPermitted","","This error indicates the attempted operation is not…",1,null],[13,"cudaErrorNotSupported","","This error indicates the attempted operation is not…",1,null],[13,"cudaErrorSystemNotReady","","This error indicates that the system is not yet ready to…",1,null],[13,"cudaErrorSystemDriverMismatch","","This error indicates that there is a mismatch between the…",1,null],[13,"cudaErrorCompatNotSupportedOnDevice","","This error indicates that the system was upgraded to run…",1,null],[13,"cudaErrorStreamCaptureUnsupported","","The operation is not permitted when the stream is capturing.",1,null],[13,"cudaErrorStreamCaptureInvalidated","","The current capture sequence on the stream has been…",1,null],[13,"cudaErrorStreamCaptureMerge","","The operation would have resulted in a merge of two…",1,null],[13,"cudaErrorStreamCaptureUnmatched","","The capture was not initiated in this stream.",1,null],[13,"cudaErrorStreamCaptureUnjoined","","The capture sequence contains a fork that was not joined…",1,null],[13,"cudaErrorStreamCaptureIsolation","","A dependency would have been created which crosses the…",1,null],[13,"cudaErrorStreamCaptureImplicit","","The operation would have resulted in a disallowed implicit…",1,null],[13,"cudaErrorCapturedEvent","","The operation is not permitted on an event which was last…",1,null],[13,"cudaErrorStreamCaptureWrongThread","","A stream capture sequence not initiated with the…",1,null],[13,"cudaErrorTimeout","","This indicates that the wait operation has timed out.",1,null],[13,"cudaErrorGraphExecUpdateFailure","","This error indicates that the graph update was not…",1,null],[13,"cudaErrorUnknown","","This indicates that an unknown internal error has occurred.",1,null],[13,"cudaErrorApiFailureBase","","Any unhandled CUDA driver error is added to this value and…",1,null],[4,"cudaOutputMode_t","","CUDA Profiler Output modes",null,null],[13,"cudaKeyValuePair","","< Output mode Key-Value pair format.",37,null],[13,"cudaCSV","","< Output mode Comma separated values format.",37,null],[4,"cudaDataType","","",null,null],[13,"CUDA_R_16F","","",78,null],[13,"CUDA_C_16F","","",78,null],[13,"CUDA_R_32F","","",78,null],[13,"CUDA_C_32F","","",78,null],[13,"CUDA_R_64F","","",78,null],[13,"CUDA_C_64F","","",78,null],[13,"CUDA_R_8I","","",78,null],[13,"CUDA_C_8I","","",78,null],[13,"CUDA_R_8U","","",78,null],[13,"CUDA_C_8U","","",78,null],[13,"CUDA_R_32I","","",78,null],[13,"CUDA_C_32I","","",78,null],[13,"CUDA_R_32U","","",78,null],[13,"CUDA_C_32U","","",78,null],[3,"ActivationDescriptor","","Describes a ActivationDescriptor.",null,null],[3,"ConvolutionDescriptor","","Describes a Convolution Descriptor.",null,null],[3,"Cudnn","","Provides a the high-level interface to CUDA\'s cuDNN.",null,null],[3,"DropoutDescriptor","","Describes a DropoutDescriptor.",null,null],[3,"FilterDescriptor","","Describes a Filter Descriptor.",null,null],[3,"NormalizationDescriptor","","Describes a LRN Descriptor.",null,null],[3,"PoolingDescriptor","","Describes a Pooling Descriptor.",null,null],[3,"TensorDescriptor","","Describes a TensorDescriptor.",null,null],[3,"RnnDescriptor","","Describes a Recurrent Descriptor.",null,null],[3,"API","","Defines the Cuda cuDNN API.",null,null],[4,"Error","","Defines CUDA\'s cuDNN errors.",null,null],[13,"NotInitialized","","Failure with CUDA cuDNN initialization.",132,null],[13,"AllocFailed","","Failure with allocation.",132,null],[13,"BadParam","","Failure with a provided parameter.",132,null],[13,"InternalError","","Failure with cuDNN.",132,null],[13,"InvalidValue","","Failure with provided value.",132,null],[13,"ArchMismatch","","Failure with the hardware architecture.",132,null],[13,"MappingError","","Failure with memory access or internal error/bug.",132,null],[13,"ExecutionFailed","","Failure with Kernel execution.",132,null],[13,"NotSupported","","Failure with an unsupported request.",132,null],[13,"LicenseError","","Failure CUDA License.",132,null],[13,"Unknown","","Failure",132,null],[11,"new","","Initializes a new CUDA cuDNN Activation Descriptor.",133,[[["cudnnactivationmode_t",4]],[["error",4],["activationdescriptor",3],["result",4]]]],[11,"from_c","","Initializes a new CUDA cuDNN Activation Descriptor from…",133,[[["cudnnactivationdescriptor_t",6]],["activationdescriptor",3]]],[11,"id_c","","Returns the CUDA cuDNN Activation Descriptor as its C type.",133,[[],["cudnnactivationdescriptor_t",6]]],[11,"create_activation_descriptor","","Create a generic CUDA cuDNN ActivationDescriptor.",134,[[],[["result",4],["cudnnactivationdescriptor_t",6],["error",4]]]],[11,"destroy_activation_descriptor","","Destroys a CUDA cuDNN Activation Descriptor.",134,[[["cudnnactivationdescriptor_t",6]],[["result",4],["error",4]]]],[11,"set_activation_descriptor","","Initializes a generic CUDA cuDNN Activation Descriptor…",134,[[["cudnnactivationdescriptor_t",6],["cudnnnanpropagation_t",4],["cudnnactivationmode_t",4]],[["result",4],["error",4]]]],[11,"activation_forward","","Computes an activation forward function.",134,[[["cudnnactivationdescriptor_t",6],["cudnntensordescriptor_t",6],["cudnnhandle_t",6]],[["result",4],["error",4]]]],[11,"activation_backward","","Computes an activation backward function.",134,[[["cudnnactivationdescriptor_t",6],["cudnntensordescriptor_t",6],["cudnnhandle_t",6]],[["result",4],["error",4]]]],[11,"create_filter_descriptor","","Creates a generic CUDA cuDNN Filter Descriptor.",134,[[],[["cudnnfilterdescriptor_t",6],["result",4],["error",4]]]],[11,"destroy_filter_descriptor","","Destroys a CUDA cuDNN Filter Descriptor.",134,[[["cudnnfilterdescriptor_t",6]],[["result",4],["error",4]]]],[11,"set_filter_descriptor","","Initializes a generic CUDA cuDNN Filter Descriptor with…",134,[[["cudnndatatype_t",4],["cudnntensorformat_t",4],["c_int",6],["cudnnfilterdescriptor_t",6]],[["result",4],["error",4]]]],[11,"find_convolution_forward_algorithm","","cuDNN Convolution Configuration",134,[[["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["cudnnfilterdescriptor_t",6],["cudnnconvolutiondescriptor_t",6]],[["result",4],["error",4],["vec",3]]]],[11,"get_convolution_forward_workspace_size","","Returns the workspace size in byte, which are needed for…",134,[[["cudnnconvolutionfwdalgo_t",4],["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["cudnnfilterdescriptor_t",6],["cudnnconvolutiondescriptor_t",6]],[["error",4],["result",4]]]],[11,"find_convolution_backward_filter_algorithm","","Returns the most performant convolutional backward data…",134,[[["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["cudnnfilterdescriptor_t",6],["cudnnconvolutiondescriptor_t",6]],[["error",4],["vec",3],["result",4]]]],[11,"get_convolution_backward_filter_workspace_size","","Returns the workspace size in byte, which are needed for…",134,[[["cudnnconvolutionbwdfilteralgo_t",4],["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["cudnnfilterdescriptor_t",6],["cudnnconvolutiondescriptor_t",6]],[["error",4],["result",4]]]],[11,"find_convolution_backward_data_algorithm","","Returns the most performant convolutional backward data…",134,[[["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["cudnnfilterdescriptor_t",6],["cudnnconvolutiondescriptor_t",6]],[["result",4],["vec",3],["error",4]]]],[11,"get_convolution_backward_data_workspace_size","","Returns the workspace size in byte, which are needed for…",134,[[["cudnnconvolutionbwddataalgo_t",4],["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["cudnnfilterdescriptor_t",6],["cudnnconvolutiondescriptor_t",6]],[["error",4],["result",4]]]],[11,"create_convolution_descriptor","","Creates a generic CUDA cuDNN Convolution Descriptor.",134,[[],[["cudnnconvolutiondescriptor_t",6],["error",4],["result",4]]]],[11,"destroy_convolution_descriptor","","Destroys a CUDA cuDNN Convolution Descriptor.",134,[[["cudnnconvolutiondescriptor_t",6]],[["result",4],["error",4]]]],[11,"set_convolution_descriptor","","Initializes a generic CUDA cuDNN Convolution Descriptor…",134,[[["cudnndatatype_t",4],["c_int",6],["cudnnconvolutionmode_t",4],["cudnnconvolutiondescriptor_t",6]],[["result",4],["error",4]]]],[11,"convolution_forward","","Computes a convolution forward function.",134,[[["cudnnconvolutionfwdalgo_t",4],["size_t",6],["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["cudnnfilterdescriptor_t",6],["cudnnconvolutiondescriptor_t",6]],[["result",4],["error",4]]]],[11,"convolution_backward_bias","","Computes a convolution backward function w.r.t the bias.",134,[[["cudnnhandle_t",6],["cudnntensordescriptor_t",6]],[["result",4],["error",4]]]],[11,"convolution_backward_filter","","Computes a convolution backward function w.r.t filter…",134,[[["size_t",6],["cudnnconvolutionbwdfilteralgo_t",4],["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["cudnnfilterdescriptor_t",6],["cudnnconvolutiondescriptor_t",6]],[["result",4],["error",4]]]],[11,"convolution_backward_data","","Computes a convolution backward function w.r.t the output…",134,[[["size_t",6],["cudnnconvolutionbwddataalgo_t",4],["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["cudnnfilterdescriptor_t",6],["cudnnconvolutiondescriptor_t",6]],[["result",4],["error",4]]]],[11,"cuda_allocate_device_memory","","Initialize the CUDA cuDNN API with needed context and…",134,[[],[["result",4],["error",4]]]],[11,"cuda_free_device_memory","","Destroys the CUDA cuDNN context and resources associated…",134,[[],[["result",4],["error",4]]]],[11,"create_dropout_descriptor","","Create a generic CUDA cuDNN DropoutDescriptor",134,[[],[["cudnndropoutdescriptor_t",6],["error",4],["result",4]]]],[11,"destroy_dropout_descriptor","","Destroys a CUDA cuDNN Dropout Descriptor.",134,[[["cudnndropoutdescriptor_t",6]],[["result",4],["error",4]]]],[11,"dropout_get_states_size","","Get the states size (GPU memory).",134,[[["cudnnhandle_t",6]],[["error",4],["result",4]]]],[11,"dropout_get_reserve_space_size","","Get the reserve space size.",134,[[["cudnntensordescriptor_t",6]],[["error",4],["result",4]]]],[11,"set_dropout_descriptor","","Initializes a generic CUDA cuDNN Activation Descriptor…",134,[[["cudnnhandle_t",6],["cudnndropoutdescriptor_t",6],["c_ulonglong",6]],[["result",4],["error",4]]]],[11,"dropout_forward","","Computes the dropout forward function.",134,[[["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["cudnndropoutdescriptor_t",6]],[["result",4],["error",4]]]],[11,"dropout_backward","","Computes the dropout backward function.",134,[[["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["cudnndropoutdescriptor_t",6]],[["result",4],["error",4]]]],[11,"create_lrn_descriptor","","Creates a generic CUDA cuDNN LRN Descriptor.",134,[[],[["cudnnlrndescriptor_t",6],["error",4],["result",4]]]],[11,"destroy_lrn_descriptor","","Destroys a CUDA cuDNN LRN Descriptor.",134,[[["cudnnlrndescriptor_t",6]],[["result",4],["error",4]]]],[11,"set_lrn_descriptor","","Initializes a generic CUDA cuDNN LRN Descriptor with…",134,[[["cudnnlrndescriptor_t",6],["c_double",6],["c_uint",6]],[["result",4],["error",4]]]],[11,"lrn_cross_channel_forward","","Computes an LRN cross channel forward function.",134,[[["cudnnlrndescriptor_t",6],["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["cudnnlrnmode_t",4]],[["result",4],["error",4]]]],[11,"lrn_cross_channel_backward","","Computes an LRN cross channel backward function.",134,[[["cudnnlrndescriptor_t",6],["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["cudnnlrnmode_t",4]],[["result",4],["error",4]]]],[11,"divisive_normalization_forward","","Computes an devisive normalization forward function.",134,[[["cudnnlrndescriptor_t",6],["cudnndivnormmode_t",4],["cudnntensordescriptor_t",6],["cudnnhandle_t",6]],[["result",4],["error",4]]]],[11,"divisive_normalization_backward","","Computes an devisive normalization backward function.",134,[[["cudnnlrndescriptor_t",6],["cudnndivnormmode_t",4],["cudnntensordescriptor_t",6],["cudnnhandle_t",6]],[["result",4],["error",4]]]],[11,"create_pooling_descriptor","","Creates a generic CUDA cuDNN Pooling Descriptor.",134,[[],[["error",4],["cudnnpoolingdescriptor_t",6],["result",4]]]],[11,"destroy_pooling_descriptor","","Destroys a CUDA cuDNN Pooling Descriptor.",134,[[["cudnnpoolingdescriptor_t",6]],[["result",4],["error",4]]]],[11,"set_pooling_descriptor","","Initializes a generic CUDA cuDNN Pooling Descriptor with…",134,[[["cudnnnanpropagation_t",4],["c_int",6],["cudnnpoolingdescriptor_t",6],["cudnnpoolingmode_t",4]],[["result",4],["error",4]]]],[11,"get_pooling_descriptor","","Return information about a generic CUDA cuDNN Pooling…",134,[[["c_int",6],["cudnnpoolingdescriptor_t",6]],[["result",4],["error",4]]]],[11,"set_pooling_2d_descriptor","","Initializes a generic CUDA cuDNN Pooling Descriptor with…",134,[[["cudnnnanpropagation_t",4],["c_int",6],["cudnnpoolingdescriptor_t",6],["cudnnpoolingmode_t",4]],[["result",4],["error",4]]]],[11,"get_pooling_2d_descriptor","","Return information about a generic CUDA cuDNN Pooling…",134,[[["cudnnpoolingdescriptor_t",6]],[["result",4],["error",4]]]],[11,"get_pooling_forward_output_dim","","Initializes a generic CUDA cuDNN Pooling Descriptor with…",134,[[["c_int",6],["cudnnpoolingdescriptor_t",6],["cudnntensordescriptor_t",6]],[["result",4],["error",4]]]],[11,"pooling_forward","","Computes a pooling forward function.",134,[[["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["cudnnpoolingdescriptor_t",6]],[["result",4],["error",4]]]],[11,"pooling_backward","","Computes a pooling backward function.",134,[[["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["cudnnpoolingdescriptor_t",6]],[["result",4],["error",4]]]],[11,"get_rnn_workspace_size","","Returns the workspace size in byte, which are needed for…",134,[[["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["vec",3],["cudnnrnndescriptor_t",6]],[["error",4],["result",4]]]],[11,"get_rnn_training_reserve_size","","Size of Reserve Space for RNN Training…",134,[[["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["c_int",6],["vec",3],["cudnnrnndescriptor_t",6]],[["error",4],["result",4]]]],[11,"get_rnn_params_size","","cudnnGetRNNParamsSize[1] Query the amount of parameter…",134,[[["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["datatype",4],["cudnnrnndescriptor_t",6]],[["error",4],["result",4]]]],[11,"create_rnn_descriptor","","Creates a generic CUDA cuDNN RNN Descriptor.",134,[[],[["result",4],["error",4],["cudnnrnndescriptor_t",6]]]],[11,"create_rnn_data_descriptor","","cudnnCreateRNNDataDescriptor()…",134,[[],[["result",4],["error",4],["cudnnrnndatadescriptor_t",6]]]],[11,"destroy_rnn_descriptor","","Destroys a CUDA cuDNN RNN Descriptor.",134,[[["cudnnrnndescriptor_t",6]],[["result",4],["error",4]]]],[11,"set_rnn_descriptor","","Initializes a generic CUDA cuDNN RNN Descriptor with…",134,[[["cudnndirectionmode_t",4],["cudnnrnninputmode_t",4],["cudnnrnnmode_t",4],["cudnndropoutdescriptor_t",6],["datatype",4],["cudnnhandle_t",6],["cudnnrnnalgo_t",4],["cudnnrnndescriptor_t",6]],[["result",4],["error",4]]]],[11,"set_rnn_matrix_math_type","","Set RNN Matrix Math Type [cudnnSetRNNMatrixMathType][1]…",134,[[["cudnnmathtype_t",4],["cudnnrnndescriptor_t",6]],[["result",4],["error",4]]]],[11,"set_rnn_padding_mode","","Set RNN Padding Model [cudnnSetRNNPaddingMode][1] This…",134,[[["cudnnrnnpaddingmode_t",4],["cudnnrnndescriptor_t",6]],[["result",4],["error",4]]]],[11,"rnn_forward_training","","Trains a RNN through the Forward Process",134,[[["cudnnfilterdescriptor_t",6],["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["c_int",6],["vec",3],["cudnnrnndescriptor_t",6]],[["result",4],["error",4]]]],[11,"rnn_forward_inference","","Execute a RNN without Training This routine executes the…",134,[[["size_t",6],["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["c_int",6],["cudnnfilterdescriptor_t",6],["cudnnrnndescriptor_t",6]],[["result",4],["error",4]]]],[11,"rnn_backward_data","","CUDNN Rnn Backward Data This routine executes the…",134,[[["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["c_int",6],["cudnnfilterdescriptor_t",6],["cudnnrnndescriptor_t",6]],[["result",4],["error",4]]]],[11,"rnn_backward_weights","","CUDNN Rnn Backward Weights This routine accumulates weight…",134,[[["cudnntensordescriptor_t",6],["cudnnhandle_t",6],["c_int",6],["cudnnfilterdescriptor_t",6],["cudnnrnndescriptor_t",6]],[["result",4],["error",4]]]],[11,"softmax_forward","","Computes an softmax forward function.",134,[[["cudnnsoftmaxalgorithm_t",4],["cudnnsoftmaxmode_t",4],["cudnnhandle_t",6],["cudnntensordescriptor_t",6]],[["result",4],["error",4]]]],[11,"softmax_backward","","Computes an softmax backward function.",134,[[["cudnnsoftmaxalgorithm_t",4],["cudnnsoftmaxmode_t",4],["cudnnhandle_t",6],["cudnntensordescriptor_t",6]],[["result",4],["error",4]]]],[11,"create_tensor_descriptor","","Creates a generic CUDA cuDNN Tensor Descriptor.",134,[[],[["error",4],["result",4],["cudnntensordescriptor_t",6]]]],[11,"destroy_tensor_descriptor","","Destroys a CUDA cuDNN Tensor Descriptor.",134,[[["cudnntensordescriptor_t",6]],[["result",4],["error",4]]]],[11,"set_tensor_descriptor","","Initializes a generic CUDA cuDNN Tensor Descriptor with…",134,[[["cudnndatatype_t",4],["c_int",6],["cudnntensordescriptor_t",6]],[["result",4],["error",4]]]],[11,"get_tensor_descriptor","","Returns informations about a generic CUDA cuDNN Tensor…",134,[[["c_int",6],["cudnntensordescriptor_t",6]],[["result",4],["error",4]]]],[11,"transform_tensor","","Transforms a CUDA cuDNN Tensor from to another Tensor with…",134,[[["cudnnhandle_t",6],["cudnntensordescriptor_t",6]],[["result",4],["error",4]]]],[11,"add_tensor","","Adds the scaled values from one a CUDA cuDNN Tensor to…",134,[[["cudnnhandle_t",6],["cudnntensordescriptor_t",6]],[["result",4],["error",4]]]],[11,"set_tensor","","Sets all elements of a tensor to a given value.",134,[[["cudnnhandle_t",6],["cudnntensordescriptor_t",6]],[["result",4],["error",4]]]],[11,"scale_tensor","","Scales all elements of a tensor by a given factor.",134,[[["cudnnhandle_t",6],["cudnntensordescriptor_t",6]],[["result",4],["error",4]]]],[11,"init","","Initialize the CUDA cuDNN API with needed context and…",134,[[],[["cudnnhandle_t",6],["error",4],["result",4]]]],[11,"destroy","","Destroys the CUDA cuDNN context and resources associated…",134,[[["cudnnhandle_t",6]],[["result",4],["error",4]]]],[11,"get_version","","Returns the version of the CUDA cuDNN API.",134,[[]]],[11,"cudnn_data_type","","Convert to CUDNN Data Type",134,[[["datatype",4]],["cudnndatatype_t",4]]],[11,"new","","Initializes a new CUDA cuDNN ConvolutionDescriptor.",135,[[["datatype",4]],[["error",4],["result",4],["convolutiondescriptor",3]]]],[11,"from_c","","Initializes a new CUDA cuDNN ConvolutionDescriptor from…",135,[[["cudnnconvolutiondescriptor_t",6]],["convolutiondescriptor",3]]],[11,"id_c","","Returns the CUDA cuDNN ConvolutionDescriptor as its C type.",135,[[],["cudnnconvolutiondescriptor_t",6]]],[0,"cuda","","Defines Cuda Device Memory.",null,null],[3,"CudaDeviceMemory","rcudnn::cuda","A pointer to memory existing on a nvidia GPU",null,null],[11,"new","","Saw fun X Y Z",136,[[],[["result",4],["cudadevicememory",3],["error",4]]]],[11,"from_c","","Initializes a new CUDA Device Memory from its C type.",136,[[],["cudadevicememory",3]]],[11,"id_c","","Returns the CUDA Device Memory ptr as its C type.",136,[[]]],[11,"size","","Returns the size of the CUDA Device Memory chunk.",136,[[]]],[11,"new","rcudnn","Initializes a new CUDA cuDNN context.",137,[[],[["result",4],["cudnn",3],["error",4]]]],[11,"from_c","","Initializes a new CUDA cuDNN Context from its C type.",137,[[["cudnnhandle_t",6]],["cudnn",3]]],[11,"id_c","","Returns the CUDA cuDNN Context as its C type.",137,[[],["cudnnhandle_t",6]]],[11,"version","","Returns the version of the CUDA cuDNN library.",137,[[]]],[11,"init_convolution","","Initializes the parameters and configurations for running…",137,[[["tensordescriptor",3],["filterdescriptor",3],["convolutiondescriptor",3]],[["result",4],["convolutionconfig",3],["error",4]]]],[11,"init_normalization","","Initializes the parameters and configurations for running…",137,[[],[["normalizationconfig",3],["result",4],["error",4]]]],[11,"init_pooling","","Initializes the parameters and configurations for running…",137,[[],[["result",4],["poolingconfig",3],["error",4]]]],[11,"init_activation","","Initializes the parameters and configurations for running…",137,[[],[["activationconfig",3],["error",4],["result",4]]]],[11,"init_dropout","","Initializes the parameters and configurations for running…",137,[[],[["result",4],["error",4],["dropoutconfig",3]]]],[11,"init_rnn","","Initialize RNN",137,[[["cudnndirectionmode_t",4],["cudnnmathtype_t",4],["cudnnrnninputmode_t",4],["cudnnrnnmode_t",4],["cudnndropoutdescriptor_t",6],["datatype",4],["rnndescriptor",3],["cudnnrnnalgo_t",4]],[["error",4],["result",4],["rnnconfig",3]]]],[11,"rnn_forward","","Train & Return Results for RNN",137,[[["vec",3],["filterdescriptor",3],["tensordescriptor",3],["tensordescriptor",3],["rnnconfig",3]],[["result",4],["error",4]]]],[11,"rnn_backward_data","","Train & Return Results for RNN",137,[[["vec",3],["filterdescriptor",3],["tensordescriptor",3],["tensordescriptor",3],["rnnconfig",3]],[["result",4],["error",4]]]],[11,"rnn_backward_weights","","Train & Return Results for RNN",137,[[["vec",3],["tensordescriptor",3],["tensordescriptor",3],["rnnconfig",3],["filterdescriptor",3]],[["result",4],["error",4]]]],[11,"sigmoid_forward","","Computes the forward Sigmoid Activation function.",137,[[["scalparams",3],["activationconfig",3],["tensordescriptor",3]],[["result",4],["error",4]]]],[11,"sigmoid_backward","","Computes the backward Sigmoid Activation function.",137,[[["scalparams",3],["activationconfig",3],["tensordescriptor",3]],[["result",4],["error",4]]]],[11,"relu_forward","","Computes the forward Rectified Linear Activation function.",137,[[["scalparams",3],["activationconfig",3],["tensordescriptor",3]],[["result",4],["error",4]]]],[11,"relu_backward","","Computes the backward Rectified Linear Activation function.",137,[[["scalparams",3],["activationconfig",3],["tensordescriptor",3]],[["result",4],["error",4]]]],[11,"tanh_forward","","Computes the forward Hyperbolic Tangent Activation function.",137,[[["scalparams",3],["activationconfig",3],["tensordescriptor",3]],[["result",4],["error",4]]]],[11,"tanh_backward","","Computes the backward Hyperbolic Tangent Activation…",137,[[["scalparams",3],["activationconfig",3],["tensordescriptor",3]],[["result",4],["error",4]]]],[11,"convolution_forward","","Computes the forward Convolution function.",137,[[["convolutionconfig",3],["scalparams",3],["tensordescriptor",3]],[["result",4],["error",4]]]],[11,"convolution_backward_bias","","Computes the backward Convolution function w.r.t the bias.",137,[[["scalparams",3],["tensordescriptor",3]],[["result",4],["error",4]]]],[11,"convolution_backward_filter","","Computes the backward Convolution function w.r.t the filter.",137,[[["convolutionconfig",3],["scalparams",3],["tensordescriptor",3]],[["result",4],["error",4]]]],[11,"convolution_backward_data","","Computes the backward Convolution function w.r.t the data.",137,[[["convolutionconfig",3],["scalparams",3],["tensordescriptor",3]],[["result",4],["error",4]]]],[11,"softmax_forward","","Computes the forward softmax function.",137,[[["scalparams",3],["tensordescriptor",3]],[["result",4],["error",4]]]],[11,"softmax_backward","","Computes the backward softmax function.",137,[[["scalparams",3],["tensordescriptor",3]],[["result",4],["error",4]]]],[11,"log_softmax_forward","","Computes the forward logarithmic softmax function.",137,[[["scalparams",3],["tensordescriptor",3]],[["result",4],["error",4]]]],[11,"log_softmax_backward","","Computes the backward logarithmic softmax function.",137,[[["scalparams",3],["tensordescriptor",3]],[["result",4],["error",4]]]],[11,"lrn_forward","","Computes the forward local response normalization function.",137,[[["tensordescriptor",3],["scalparams",3],["normalizationconfig",3]],[["result",4],["error",4]]]],[11,"lrn_backward","","Computes the backward local response normalization function.",137,[[["tensordescriptor",3],["scalparams",3],["normalizationconfig",3]],[["result",4],["error",4]]]],[11,"pooling_avg_forward","","Computes the forward average pooling function.",137,[[["tensordescriptor",3],["scalparams",3],["poolingconfig",3]],[["result",4],["error",4]]]],[11,"pooling_avg_backward","","Computes the backward average pooling function.",137,[[["tensordescriptor",3],["scalparams",3],["poolingconfig",3]],[["result",4],["error",4]]]],[11,"pooling_max_forward","","Computes the forward max pooling function.",137,[[["tensordescriptor",3],["scalparams",3],["poolingconfig",3]],[["result",4],["error",4]]]],[11,"pooling_max_backward","","Computes the backward max pooling function.",137,[[["tensordescriptor",3],["scalparams",3],["poolingconfig",3]],[["result",4],["error",4]]]],[11,"dropout_forward","","Computes probability and applies it to Dropout",137,[[["dropoutconfig",3],["tensordescriptor",3]],[["result",4],["error",4]]]],[11,"dropout_backward","","Computes probability and applies it to Dropout",137,[[["dropoutconfig",3],["tensordescriptor",3]],[["result",4],["error",4]]]],[11,"new","","Initializes a new CUDA cuDNN Dropout Descriptor.",138,[[["cudnn",3]],[["error",4],["dropoutdescriptor",3],["result",4]]]],[11,"get_required_size","","Get the size for a tensor",138,[[]]],[11,"from_c","","Initializes a new CUDA cuDNN Tensor Descriptor from its C…",138,[[["cudnndropoutdescriptor_t",6]],["dropoutdescriptor",3]]],[11,"id_c","","Returns the CUDA cuDNN Tensor Descriptor as its C type.",138,[[],["cudnndropoutdescriptor_t",6]]],[11,"new","","Initializes a new CUDA cuDNN FilterDescriptor.",139,[[["datatype",4]],[["filterdescriptor",3],["result",4],["error",4]]]],[11,"from_c","","Initializes a new CUDA cuDNN FilterDescriptor from its C…",139,[[["cudnnfilterdescriptor_t",6]],["filterdescriptor",3]]],[11,"id_c","","Returns the CUDA cuDNN FilterDescriptor as its C type.",139,[[],["cudnnfilterdescriptor_t",6]]],[11,"new","","Initializes a new CUDA cuDNN LRNDescriptor.",140,[[],[["error",4],["result",4],["normalizationdescriptor",3]]]],[11,"from_c","","Initializes a new CUDA cuDNN NormalizationDescriptor from…",140,[[["cudnnlrndescriptor_t",6]],["normalizationdescriptor",3]]],[11,"id_c","","Returns the CUDA cuDNN NormalizationDescriptor as its C…",140,[[],["cudnnlrndescriptor_t",6]]],[11,"new","","Initializes a new CUDA cuDNN Pooling Descriptor.",141,[[["cudnnpoolingmode_t",4]],[["result",4],["error",4],["poolingdescriptor",3]]]],[11,"from_c","","Initializes a new CUDA cuDNN PoolingDescriptor from its C…",141,[[["cudnnpoolingdescriptor_t",6]],["poolingdescriptor",3]]],[11,"id_c","","Returns the CUDA cuDNN Pooling Descriptor as its C type.",141,[[],["cudnnpoolingdescriptor_t",6]]],[11,"new","","Initializes a new CUDA cuDNN Tensor Descriptor.",142,[[["datatype",4]],[["result",4],["tensordescriptor",3],["error",4]]]],[11,"from_c","","Initializes a new CUDA cuDNN Tensor Descriptor from its C…",142,[[["cudnntensordescriptor_t",6]],["tensordescriptor",3]]],[11,"id_c","","Returns the CUDA cuDNN Tensor Descriptor as its C type.",142,[[],["cudnntensordescriptor_t",6]]],[11,"new","","Initializes a new CUDA cuDNN RnnDescriptor.",143,[[["cudnndirectionmode_t",4],["cudnn",3],["cudnnrnninputmode_t",4],["cudnnrnnmode_t",4],["datatype",4],["dropoutconfig",3],["cudnnrnnpaddingmode_t",4],["cudnnrnnalgo_t",4]],[["result",4],["rnndescriptor",3],["error",4]]]],[11,"from_c","","Initializes a new CUDA cuDNN RnnDescriptor from its C type.",143,[[["dropoutconfig",3],["cudnnrnndescriptor_t",6]],["rnndescriptor",3]]],[11,"id_c","","Returns the CUDA cuDNN RnnDescriptor as its C type.",143,[[],["cudnnrnndescriptor_t",6]]],[0,"utils","","Describes utility functionality for CUDA cuDNN.",null,null],[3,"ConvolutionConfig","rcudnn::utils","Provides a convenient interface to access cuDNN\'s…",null,null],[3,"NormalizationConfig","","Provides a convenient interface to access cuDNN\'s…",null,null],[3,"PoolingConfig","","Provides a convenient interface to access cuDNN\'s Pooling…",null,null],[3,"ActivationConfig","","Provides a convenient interface to access cuDNN\'s…",null,null],[3,"DropoutConfig","","Provides a convenient interface to access cuDNN\'s Dropout…",null,null],[3,"RnnConfig","","Provides an interfaces for CUDNN\'s Rnn Descriptor #…",null,null],[12,"hidden_size","","Size of Hidden Layer",144,null],[12,"num_layers","","Number of Hidden Layers",144,null],[12,"sequence_length","","Length of Sequence",144,null],[3,"ScalParams","","Provides a convenient interface for cuDNN\'s scaling…",null,null],[12,"a","","Alpha",145,null],[12,"b","","Beta",145,null],[4,"DataType","","Defines the available data types for the CUDA cuDNN data…",null,null],[13,"Float","","F32",146,null],[13,"Double","","F64",146,null],[13,"Half","","F16 (no native Rust support yet)",146,null],[8,"DataTypeInfo","","CuDnn type info for generic use.",null,null],[10,"cudnn_data_type","","Mostly internal.",147,[[],["datatype",4]]],[11,"new","","Returns a new ConvolutionConfig",148,[[["cudnnconvolutionfwdalgo_t",4],["cudnnconvolutionbwddataalgo_t",4],["cudnnconvolutionbwdfilteralgo_t",4],["filterdescriptor",3],["convolutiondescriptor",3]],["convolutionconfig",3]]],[11,"largest_workspace_size","","Returns the largest workspace size out of the three.",148,[[]]],[11,"forward_algo","","Returns `forward_algo`.",148,[[],["cudnnconvolutionfwdalgo_t",4]]],[11,"forward_workspace_size","","Returns `forward_workspace_size`.",148,[[]]],[11,"backward_filter_algo","","Returns `backward_filter_algo`.",148,[[],["cudnnconvolutionbwdfilteralgo_t",4]]],[11,"backward_filter_workspace_size","","Returns `backward_filter_workspace_size`.",148,[[]]],[11,"backward_data_algo","","Returns `backward_data_algo`.",148,[[],["cudnnconvolutionbwddataalgo_t",4]]],[11,"backward_data_workspace_size","","Returns `backward_data_workspace_size`.",148,[[]]],[11,"conv_desc","","Returns `conv_desc`.",148,[[],["convolutiondescriptor",3]]],[11,"filter_desc","","Returns `filter_desc`.",148,[[],["filterdescriptor",3]]],[11,"new","","Returns a new LRN Config.",149,[[["normalizationdescriptor",3]],["normalizationconfig",3]]],[11,"lrn_desc","","Returns `lrn_desc`.",149,[[],["normalizationdescriptor",3]]],[11,"new","","Returns a new PoolingConfig.",150,[[["poolingdescriptor",3]],["poolingconfig",3]]],[11,"pooling_avg_desc","","Returns `pooling_avg_desc`.",150,[[],["poolingdescriptor",3]]],[11,"pooling_max_desc","","Returns `pooling_max_desc`.",150,[[],["poolingdescriptor",3]]],[11,"new","","Returns a new ActivationConfig.",151,[[["activationdescriptor",3]],["activationconfig",3]]],[11,"activation_sigmoid_desc","","Returns `activation_sigmoid_desc`.",151,[[],["activationdescriptor",3]]],[11,"activation_relu_desc","","Returns `activation_relu_desc`.",151,[[],["activationdescriptor",3]]],[11,"activation_clipped_relu_desc","","Returns `activation_clipped_relu_desc`.",151,[[],["activationdescriptor",3]]],[11,"activation_tanh_desc","","Returns `activation_tanh_desc`.",151,[[],["activationdescriptor",3]]],[11,"new","","Returns a new DropoutConfig.",152,[[["dropoutdescriptor",3],["cudadevicememory",3]],["dropoutconfig",3]]],[11,"dropout_desc","","Returns `dropout_desc`.",152,[[],["dropoutdescriptor",3]]],[11,"take_mem","","Take the Reserve Memory of the DropoutDescriptor",152,[[],["cudadevicememory",3]]],[11,"reserved_space","","Returns the reserved space.",152,[[],["cudadevicememory",3]]],[11,"new","","Initialise a RNN Config",144,[[["cudnndirectionmode_t",4],["cudnndatatype_t",4],["cudnnrnninputmode_t",4],["cudnnrnnmode_t",4],["cudnndropoutdescriptor_t",6],["cudadevicememory",3],["rnndescriptor",3],["cudnnrnnalgo_t",4]],["rnnconfig",3]]],[11,"rnn_workspace_size","","Workspace Size required for RNN Operations",144,[[]]],[11,"largest_workspace_size","","Largest Workspace Size for RNN",144,[[]]],[11,"training_reserve_size","","Training Reserve Size for RNN",144,[[]]],[11,"training_reserve","","Training Reserve Space on GPU for RNN",144,[[],["cudadevicememory",3]]],[11,"rnn_desc","","Accessor function for Rnn Descriptor",144,[[],["rnndescriptor",3]]],[11,"sequence_length","","Accessor function for Sequence Length",144,[[]]],[11,"from","rcudnn","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"to_string","","",132,[[],["string",3]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","rcudnn::cuda","",136,[[]]],[11,"into","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","rcudnn::utils","",148,[[]]],[11,"into","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"hash","rcudnn","",84,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",107,[[]]],[11,"hash","","",115,[[]]],[11,"hash","","",119,[[]]],[11,"hash","","",82,[[]]],[11,"hash","","",131,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",126,[[]]],[11,"hash","","",116,[[]]],[11,"hash","","",91,[[]]],[11,"hash","","",86,[[]]],[11,"hash","","",70,[[]]],[11,"hash","","",123,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",120,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",105,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",129,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",93,[[]]],[11,"hash","","",83,[[]]],[11,"hash","","",104,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",90,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",88,[[]]],[11,"hash","","",100,[[]]],[11,"hash","","",109,[[]]],[11,"hash","","",71,[[]]],[11,"hash","","",97,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",128,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",108,[[]]],[11,"hash","","",102,[[]]],[11,"hash","","",87,[[]]],[11,"hash","","",122,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",92,[[]]],[11,"hash","","",110,[[]]],[11,"hash","","",113,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",85,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",111,[[]]],[11,"hash","","",121,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",118,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",96,[[]]],[11,"hash","","",80,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",99,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",64,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",114,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",103,[[]]],[11,"hash","","",112,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",89,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",130,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",68,[[]]],[11,"hash","","",94,[[]]],[11,"hash","","",106,[[]]],[11,"clone","","",66,[[],["cudakernelnodeparams",3]]],[11,"clone","","",15,[[],["cudagraphicsregisterflags",4]]],[11,"clone","","",186,[[],["cudnnfusedopsplanstruct",3]]],[11,"clone","","",14,[[],["cudastreamcapturemode",4]]],[11,"clone","","",153,[[],["cudaarray",3]]],[11,"clone","","",51,[[],["cudaexternalsemaphorehandledesc",3]]],[11,"clone","","",110,[[],["cudnnsamplertype_t",4]]],[11,"clone","","",184,[[],["cudnnfusedopsconstparamstruct",3]]],[11,"clone","","",56,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",173,[[],["cudnnreducetensorstruct",3]]],[11,"clone","","",60,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1",3]]],[11,"clone","","",2,[[],["cudachannelformatkind",4]]],[11,"clone","","",107,[[],["cudnndivnormmode_t",4]]],[11,"clone","","",157,[[],["cuevent_st",3]]],[11,"clone","","",163,[[],["cudnncontext",3]]],[11,"clone","","",106,[[],["cudnnlrnmode_t",4]]],[11,"clone","","",6,[[],["cudapitchedptr",3]]],[11,"clone","","",121,[[],["cudnnwgradmode_t",4]]],[11,"clone","","",3,[[],["cudachannelformatdesc",3]]],[11,"clone","","",87,[[],["cudnnfoldingdirection_t",4]]],[11,"clone","","",41,[[],["cudadeviceprop",3]]],[11,"clone","","",24,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_3",3]]],[11,"clone","","",5,[[],["cudamemcpykind",4]]],[11,"clone","","",111,[[],["cudnnrnnalgo_t",4]]],[11,"clone","","",62,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_2",19]]],[11,"clone","","",100,[[],["cudnnconvolutionbwddataalgo_t",4]]],[11,"clone","","",114,[[],["cudnndirectionmode_t",4]]],[11,"clone","","",167,[[],["cudnnpoolingstruct",3]]],[11,"clone","","",181,[[],["cudnnalgorithmperformancestruct",3]]],[11,"clone","","",64,[[],["cudacgscope",4]]],[11,"clone","","",71,[[],["cudasurfaceformatmode",4]]],[11,"clone","","",68,[[],["cudagraphexecupdateresult",4]]],[11,"clone","","",72,[[],["surfacereference",3]]],[11,"clone","","",34,[[],["cudalimit",4]]],[11,"clone","","",125,[[],["cudnnalgorithm_t_algorithm",19]]],[11,"clone","","",30,[[],["cudafunccache",4]]],[11,"clone","","",46,[[],["cudaexternalmemoryhandledesc__bindgen_ty_1",19]]],[11,"clone","","",180,[[],["cudnnalgorithmstruct",3]]],[11,"clone","","",117,[[],["cudnnrnndatalayout_t",4]]],[11,"clone","","",45,[[],["cudaexternalmemoryhandledesc",3]]],[11,"clone","","",82,[[],["cudnnmathtype_t",4]]],[11,"clone","","",93,[[],["cudnnconvolutionfwdpreference_t",4]]],[11,"clone","","",16,[[],["cudagraphicsmapflags",4]]],[11,"clone","","",98,[[],["cudnnconvolutionbwdfilteralgoperf_t",3]]],[11,"clone","","",113,[[],["cudnnrnnbiasmode_t",4]]],[11,"clone","","",131,[[],["cudnnfusedopsvariantparamlabel_t",4]]],[11,"clone","","",37,[[],["cudaoutputmode",4]]],[11,"clone","","",86,[[],["cudnntensorformat_t",4]]],[11,"clone","","",118,[[],["cudnnrnnpaddingmode_t",4]]],[11,"clone","","",127,[[],["cudnndebug_t",3]]],[11,"clone","","",85,[[],["cudnnreordertype_t",4]]],[11,"clone","","",47,[[],["cudaexternalmemoryhandledesc__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",155,[[],["cudagraphicsresource",3]]],[11,"clone","","",88,[[],["cudnnoptensorop_t",4]]],[11,"clone","","",42,[[],["cudaipceventhandle_st",3]]],[11,"clone","","",20,[[],["cudaresourcedesc",3]]],[11,"clone","","",103,[[],["cudnnsoftmaxmode_t",4]]],[11,"clone","","",170,[[],["cudnnactivationstruct",3]]],[11,"clone","","",9,[[],["cudamemcpy3dparms",3]]],[11,"clone","","",13,[[],["cudastreamcapturestatus",4]]],[11,"clone","","",52,[[],["cudaexternalsemaphorehandledesc__bindgen_ty_1",19]]],[11,"clone","","",91,[[],["cudnnindicestype_t",4]]],[11,"clone","","",63,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_3",3]]],[11,"clone","","",109,[[],["cudnnbatchnormops_t",4]]],[11,"clone","","",19,[[],["cudaresourceviewformat",4]]],[11,"clone","","",0,[[],["dim3",3]]],[11,"clone","","",115,[[],["cudnnrnninputmode_t",4]]],[11,"clone","","",120,[[],["cudnnmultiheadattnweightkind_t",4]]],[11,"clone","","",38,[[],["cudadeviceattr",4]]],[11,"clone","","",94,[[],["cudnnconvolutionfwdalgo_t",4]]],[11,"clone","","",83,[[],["cudnnnanpropagation_t",4]]],[11,"clone","","",168,[[],["cudnnfilterstruct",3]]],[11,"clone","","",158,[[],["cuexternalmemory_st",3]]],[11,"clone","","",156,[[],["custream_st",3]]],[11,"clone","","",89,[[],["cudnnreducetensorop_t",4]]],[11,"clone","","",164,[[],["cudnnruntimetag_t",3]]],[11,"clone","","",28,[[],["cudafuncattributes",3]]],[11,"clone","","",166,[[],["cudnnconvolutionstruct",3]]],[11,"clone","","",162,[[],["cugraphexec_st",3]]],[11,"clone","","",69,[[],["cudaroundmode",4]]],[11,"clone","","",77,[[],["cudatexturedesc",3]]],[11,"clone","","",81,[[],["cudnndatatype_t",4]]],[11,"clone","","",58,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_3",3]]],[11,"clone","","",11,[[],["cudamemsetparams",3]]],[11,"clone","","",23,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_2",3]]],[11,"clone","","",73,[[],["cudatextureaddressmode",4]]],[11,"clone","","",39,[[],["cudadevicep2pattr",4]]],[11,"clone","","",108,[[],["cudnnbatchnormmode_t",4]]],[11,"clone","","",159,[[],["cuexternalsemaphore_st",3]]],[11,"clone","","",59,[[],["cudaexternalsemaphorewaitparams",3]]],[11,"clone","","",126,[[],["cudnnseverity_t",4]]],[11,"clone","","",22,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",12,[[],["cudahostnodeparams",3]]],[11,"clone","","",169,[[],["cudnnlrnstruct",3]]],[11,"clone","","",29,[[],["cudafuncattribute",4]]],[11,"clone","","",27,[[],["cudapointerattributes",3]]],[11,"clone","","",176,[[],["cudnndropoutstruct",3]]],[11,"clone","","",185,[[],["cudnnfusedopsvariantparamstruct",3]]],[11,"clone","","",92,[[],["cudnnconvolutionmode_t",4]]],[11,"clone","","",175,[[],["cudnntensortransformstruct",3]]],[11,"clone","","",80,[[],["cudnnerrquerymode_t",4]]],[11,"clone","","",8,[[],["cudapos",3]]],[11,"clone","","",53,[[],["cudaexternalsemaphorehandledesc__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",57,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_2",19]]],[11,"clone","","",172,[[],["cudnnoptensorstruct",3]]],[11,"clone","","",124,[[],["cudnnalgorithm_t",3]]],[11,"clone","","",129,[[],["cudnnfusedopsconstparamlabel_t",4]]],[11,"clone","","",95,[[],["cudnnconvolutionfwdalgoperf_t",3]]],[11,"clone","","",101,[[],["cudnnconvolutionbwddataalgoperf_t",3]]],[11,"clone","","",50,[[],["cudaexternalsemaphorehandletype",4]]],[11,"clone","","",43,[[],["cudaipcmemhandle_st",3]]],[11,"clone","","",7,[[],["cudaextent",3]]],[11,"clone","","",182,[[],["cudnnseqdatastruct",3]]],[11,"clone","","",123,[[],["cudnnlossnormalizationmode_t",4]]],[11,"clone","","",25,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_4",3]]],[11,"clone","","",90,[[],["cudnnreducetensorindices_t",4]]],[11,"clone","","",74,[[],["cudatexturefiltermode",4]]],[11,"clone","","",154,[[],["cudamipmappedarray",3]]],[11,"clone","","",161,[[],["cugraphnode_st",3]]],[11,"clone","","",119,[[],["cudnnseqdataaxis_t",4]]],[11,"clone","","",10,[[],["cudamemcpy3dpeerparms",3]]],[11,"clone","","",48,[[],["cudaexternalmemorybufferdesc",3]]],[11,"clone","","",79,[[],["cudnnstatus_t",4]]],[11,"clone","","",1,[[],["cudaerror",4]]],[11,"clone","","",179,[[],["cudnnrnndatastruct",3]]],[11,"clone","","",102,[[],["cudnnsoftmaxalgorithm_t",4]]],[11,"clone","","",40,[[],["cuuuid_st",3]]],[11,"clone","","",116,[[],["cudnnrnnclipmode_t",4]]],[11,"clone","","",35,[[],["cudamemoryadvise",4]]],[11,"clone","","",31,[[],["cudasharedmemconfig",4]]],[11,"clone","","",54,[[],["cudaexternalsemaphoresignalparams",3]]],[11,"clone","","",49,[[],["cudaexternalmemorymipmappedarraydesc",3]]],[11,"clone","","",105,[[],["cudnnactivationmode_t",4]]],[11,"clone","","",84,[[],["cudnndeterminism_t",4]]],[11,"clone","","",70,[[],["cudasurfaceboundarymode",4]]],[11,"clone","","",26,[[],["cudaresourceviewdesc",3]]],[11,"clone","","",171,[[],["cudnnspatialtransformerstruct",3]]],[11,"clone","","",183,[[],["cudnnattnstruct",3]]],[11,"clone","","",67,[[],["cudagraphnodetype",4]]],[11,"clone","","",160,[[],["cugraph_st",3]]],[11,"clone","","",36,[[],["cudamemrangeattribute",4]]],[11,"clone","","",130,[[],["cudnnfusedopspointerplaceholder_t",4]]],[11,"clone","","",177,[[],["cudnnrnnstruct",3]]],[11,"clone","","",4,[[],["cudamemorytype",4]]],[11,"clone","","",78,[[],["cudadatatype_t",4]]],[11,"clone","","",32,[[],["cudasharedcarveout",4]]],[11,"clone","","",75,[[],["cudatexturereadmode",4]]],[11,"clone","","",174,[[],["cudnnctclossstruct",3]]],[11,"clone","","",178,[[],["cudnnpersistentrnnplan",3]]],[11,"clone","","",76,[[],["texturereference",3]]],[11,"clone","","",96,[[],["cudnnconvolutionbwdfilterpreference_t",4]]],[11,"clone","","",165,[[],["cudnntensorstruct",3]]],[11,"clone","","",65,[[],["cudalaunchparams",3]]],[11,"clone","","",97,[[],["cudnnconvolutionbwdfilteralgo_t",4]]],[11,"clone","","",122,[[],["cudnnctclossalgo_t",4]]],[11,"clone","","",128,[[],["cudnnfusedops_t",4]]],[11,"clone","","",33,[[],["cudacomputemode",4]]],[11,"clone","","",44,[[],["cudaexternalmemoryhandletype",4]]],[11,"clone","","",104,[[],["cudnnpoolingmode_t",4]]],[11,"clone","","",55,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1",3]]],[11,"clone","","",112,[[],["cudnnrnnmode_t",4]]],[11,"clone","","",99,[[],["cudnnconvolutionbwddatapreference_t",4]]],[11,"clone","","",17,[[],["cudagraphicscubeface",4]]],[11,"clone","","",18,[[],["cudaresourcetype",4]]],[11,"clone","","",61,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",21,[[],["cudaresourcedesc__bindgen_ty_1",19]]],[11,"eq","","",114,[[["cudnndirectionmode_t",4]]]],[11,"eq","","",15,[[["cudagraphicsregisterflags",4]]]],[11,"eq","","",81,[[["cudnndatatype_t",4]]]],[11,"eq","","",116,[[["cudnnrnnclipmode_t",4]]]],[11,"eq","","",119,[[["cudnnseqdataaxis_t",4]]]],[11,"eq","","",75,[[["cudatexturereadmode",4]]]],[11,"eq","","",82,[[["cudnnmathtype_t",4]]]],[11,"eq","","",33,[[["cudacomputemode",4]]]],[11,"eq","","",1,[[["cudaerror",4]]]],[11,"eq","","",78,[[["cudadatatype_t",4]]]],[11,"eq","","",68,[[["cudagraphexecupdateresult",4]]]],[11,"eq","","",117,[[["cudnnrnndatalayout_t",4]]]],[11,"eq","","",35,[[["cudamemoryadvise",4]]]],[11,"eq","","",70,[[["cudasurfaceboundarymode",4]]]],[11,"eq","","",91,[[["cudnnindicestype_t",4]]]],[11,"eq","","",69,[[["cudaroundmode",4]]]],[11,"eq","","",131,[[["cudnnfusedopsvariantparamlabel_t",4]]]],[11,"eq","","",96,[[["cudnnconvolutionbwdfilterpreference_t",4]]]],[11,"eq","","",128,[[["cudnnfusedops_t",4]]]],[11,"eq","","",16,[[["cudagraphicsmapflags",4]]]],[11,"eq","","",79,[[["cudnnstatus_t",4]]]],[11,"eq","","",4,[[["cudamemorytype",4]]]],[11,"eq","","",115,[[["cudnnrnninputmode_t",4]]]],[11,"eq","","",118,[[["cudnnrnnpaddingmode_t",4]]]],[11,"eq","","",50,[[["cudaexternalsemaphorehandletype",4]]]],[11,"eq","","",80,[[["cudnnerrquerymode_t",4]]]],[11,"eq","","",126,[[["cudnnseverity_t",4]]]],[11,"eq","","",67,[[["cudagraphnodetype",4]]]],[11,"eq","","",93,[[["cudnnconvolutionfwdpreference_t",4]]]],[11,"eq","","",103,[[["cudnnsoftmaxmode_t",4]]]],[11,"eq","","",100,[[["cudnnconvolutionbwddataalgo_t",4]]]],[11,"eq","","",2,[[["cudachannelformatkind",4]]]],[11,"eq","","",83,[[["cudnnnanpropagation_t",4]]]],[11,"eq","","",37,[[["cudaoutputmode",4]]]],[11,"eq","","",17,[[["cudagraphicscubeface",4]]]],[11,"eq","","",5,[[["cudamemcpykind",4]]]],[11,"eq","","",104,[[["cudnnpoolingmode_t",4]]]],[11,"eq","","",88,[[["cudnnoptensorop_t",4]]]],[11,"eq","","",108,[[["cudnnbatchnormmode_t",4]]]],[11,"eq","","",89,[[["cudnnreducetensorop_t",4]]]],[11,"eq","","",13,[[["cudastreamcapturestatus",4]]]],[11,"eq","","",99,[[["cudnnconvolutionbwddatapreference_t",4]]]],[11,"eq","","",106,[[["cudnnlrnmode_t",4]]]],[11,"eq","","",94,[[["cudnnconvolutionfwdalgo_t",4]]]],[11,"eq","","",14,[[["cudastreamcapturemode",4]]]],[11,"eq","","",102,[[["cudnnsoftmaxalgorithm_t",4]]]],[11,"eq","","",120,[[["cudnnmultiheadattnweightkind_t",4]]]],[11,"eq","","",109,[[["cudnnbatchnormops_t",4]]]],[11,"eq","","",71,[[["cudasurfaceformatmode",4]]]],[11,"eq","","",122,[[["cudnnctclossalgo_t",4]]]],[11,"eq","","",130,[[["cudnnfusedopspointerplaceholder_t",4]]]],[11,"eq","","",38,[[["cudadeviceattr",4]]]],[11,"eq","","",111,[[["cudnnrnnalgo_t",4]]]],[11,"eq","","",73,[[["cudatextureaddressmode",4]]]],[11,"eq","","",29,[[["cudafuncattribute",4]]]],[11,"eq","","",18,[[["cudaresourcetype",4]]]],[11,"eq","","",129,[[["cudnnfusedopsconstparamlabel_t",4]]]],[11,"eq","","",110,[[["cudnnsamplertype_t",4]]]],[11,"eq","","",19,[[["cudaresourceviewformat",4]]]],[11,"eq","","",74,[[["cudatexturefiltermode",4]]]],[11,"eq","","",107,[[["cudnndivnormmode_t",4]]]],[11,"eq","","",85,[[["cudnnreordertype_t",4]]]],[11,"eq","","",34,[[["cudalimit",4]]]],[11,"eq","","",112,[[["cudnnrnnmode_t",4]]]],[11,"eq","","",86,[[["cudnntensorformat_t",4]]]],[11,"eq","","",44,[[["cudaexternalmemoryhandletype",4]]]],[11,"eq","","",121,[[["cudnnwgradmode_t",4]]]],[11,"eq","","",39,[[["cudadevicep2pattr",4]]]],[11,"eq","","",113,[[["cudnnrnnbiasmode_t",4]]]],[11,"eq","","",31,[[["cudasharedmemconfig",4]]]],[11,"eq","","",32,[[["cudasharedcarveout",4]]]],[11,"eq","","",123,[[["cudnnlossnormalizationmode_t",4]]]],[11,"eq","","",105,[[["cudnnactivationmode_t",4]]]],[11,"eq","","",90,[[["cudnnreducetensorindices_t",4]]]],[11,"eq","","",87,[[["cudnnfoldingdirection_t",4]]]],[11,"eq","","",97,[[["cudnnconvolutionbwdfilteralgo_t",4]]]],[11,"eq","","",36,[[["cudamemrangeattribute",4]]]],[11,"eq","","",64,[[["cudacgscope",4]]]],[11,"eq","","",30,[[["cudafunccache",4]]]],[11,"eq","","",84,[[["cudnndeterminism_t",4]]]],[11,"eq","","",92,[[["cudnnconvolutionmode_t",4]]]],[11,"fmt","","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",127,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",130,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",177,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",99,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",163,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",183,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",168,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",97,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",174,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",119,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",184,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",175,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",118,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",180,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",181,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",131,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",122,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",156,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",123,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",176,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",165,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",96,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",115,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",126,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",128,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",164,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",154,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",117,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",129,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",116,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",169,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",178,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",98,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",185,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",120,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",157,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",80,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",155,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",121,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","",98,[[],["cudnnconvolutionbwdfilteralgoperf_t",3]]],[11,"default","","",101,[[],["cudnnconvolutionbwddataalgoperf_t",3]]],[11,"default","","",95,[[],["cudnnconvolutionfwdalgoperf_t",3]]],[11,"drop","","",133,[[]]],[11,"drop","","",135,[[]]],[11,"drop","rcudnn::cuda","",136,[[]]],[11,"drop","rcudnn","",137,[[]]],[11,"drop","","",138,[[]]],[11,"drop","","",139,[[]]],[11,"drop","","",140,[[]]],[11,"drop","","",141,[[]]],[11,"drop","","",142,[[]]],[11,"drop","","",143,[[]]],[11,"clone","","",134,[[],["api",3]]],[11,"clone","","",133,[[],["activationdescriptor",3]]],[11,"clone","","",135,[[],["convolutiondescriptor",3]]],[11,"clone","","",137,[[],["cudnn",3]]],[11,"clone","","",138,[[],["dropoutdescriptor",3]]],[11,"clone","","",132,[[],["error",4]]],[11,"clone","","",139,[[],["filterdescriptor",3]]],[11,"clone","","",140,[[],["normalizationdescriptor",3]]],[11,"clone","","",141,[[],["poolingdescriptor",3]]],[11,"clone","","",142,[[],["tensordescriptor",3]]],[11,"clone","rcudnn::utils","",146,[[],["datatype",4]]],[11,"default","","Provides default values for ScalParams.",145,[[],["scalparams",3]]],[11,"fmt","rcudnn","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","rcudnn::cuda","",136,[[["formatter",3]],["result",6]]],[11,"fmt","rcudnn","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","rcudnn::utils","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","rcudnn","",132,[[["formatter",3]],["result",6]]],[11,"description","","",132,[[]]],[11,"cause","","",132,[[],[["error",8],["option",4]]]]],"p":[[3,"dim3"],[4,"cudaError_t"],[4,"cudaChannelFormatKind"],[3,"cudaChannelFormatDesc"],[4,"cudaMemoryType"],[4,"cudaMemcpyKind"],[3,"cudaPitchedPtr"],[3,"cudaExtent"],[3,"cudaPos"],[3,"cudaMemcpy3DParms"],[3,"cudaMemcpy3DPeerParms"],[3,"cudaMemsetParams"],[3,"cudaHostNodeParams"],[4,"cudaStreamCaptureStatus"],[4,"cudaStreamCaptureMode"],[4,"cudaGraphicsRegisterFlags"],[4,"cudaGraphicsMapFlags"],[4,"cudaGraphicsCubeFace"],[4,"cudaResourceType"],[4,"cudaResourceViewFormat"],[3,"cudaResourceDesc"],[19,"cudaResourceDesc__bindgen_ty_1"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4"],[3,"cudaResourceViewDesc"],[3,"cudaPointerAttributes"],[3,"cudaFuncAttributes"],[4,"cudaFuncAttribute"],[4,"cudaFuncCache"],[4,"cudaSharedMemConfig"],[4,"cudaSharedCarveout"],[4,"cudaComputeMode"],[4,"cudaLimit"],[4,"cudaMemoryAdvise"],[4,"cudaMemRangeAttribute"],[4,"cudaOutputMode_t"],[4,"cudaDeviceAttr"],[4,"cudaDeviceP2PAttr"],[3,"CUuuid_st"],[3,"cudaDeviceProp"],[3,"cudaIpcEventHandle_st"],[3,"cudaIpcMemHandle_st"],[4,"cudaExternalMemoryHandleType"],[3,"cudaExternalMemoryHandleDesc"],[19,"cudaExternalMemoryHandleDesc__bindgen_ty_1"],[3,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalMemoryBufferDesc"],[3,"cudaExternalMemoryMipmappedArrayDesc"],[4,"cudaExternalSemaphoreHandleType"],[3,"cudaExternalSemaphoreHandleDesc"],[19,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1"],[3,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1"],[19,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3"],[3,"cudaExternalSemaphoreWaitParams"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1"],[19,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3"],[4,"cudaCGScope"],[3,"cudaLaunchParams"],[3,"cudaKernelNodeParams"],[4,"cudaGraphNodeType"],[4,"cudaGraphExecUpdateResult"],[4,"cudaRoundMode"],[4,"cudaSurfaceBoundaryMode"],[4,"cudaSurfaceFormatMode"],[3,"surfaceReference"],[4,"cudaTextureAddressMode"],[4,"cudaTextureFilterMode"],[4,"cudaTextureReadMode"],[3,"textureReference"],[3,"cudaTextureDesc"],[4,"cudaDataType"],[4,"cudnnStatus_t"],[4,"cudnnErrQueryMode_t"],[4,"cudnnDataType_t"],[4,"cudnnMathType_t"],[4,"cudnnNanPropagation_t"],[4,"cudnnDeterminism_t"],[4,"cudnnReorderType_t"],[4,"cudnnTensorFormat_t"],[4,"cudnnFoldingDirection_t"],[4,"cudnnOpTensorOp_t"],[4,"cudnnReduceTensorOp_t"],[4,"cudnnReduceTensorIndices_t"],[4,"cudnnIndicesType_t"],[4,"cudnnConvolutionMode_t"],[4,"cudnnConvolutionFwdPreference_t"],[4,"cudnnConvolutionFwdAlgo_t"],[3,"cudnnConvolutionFwdAlgoPerf_t"],[4,"cudnnConvolutionBwdFilterPreference_t"],[4,"cudnnConvolutionBwdFilterAlgo_t"],[3,"cudnnConvolutionBwdFilterAlgoPerf_t"],[4,"cudnnConvolutionBwdDataPreference_t"],[4,"cudnnConvolutionBwdDataAlgo_t"],[3,"cudnnConvolutionBwdDataAlgoPerf_t"],[4,"cudnnSoftmaxAlgorithm_t"],[4,"cudnnSoftmaxMode_t"],[4,"cudnnPoolingMode_t"],[4,"cudnnActivationMode_t"],[4,"cudnnLRNMode_t"],[4,"cudnnDivNormMode_t"],[4,"cudnnBatchNormMode_t"],[4,"cudnnBatchNormOps_t"],[4,"cudnnSamplerType_t"],[4,"cudnnRNNAlgo_t"],[4,"cudnnRNNMode_t"],[4,"cudnnRNNBiasMode_t"],[4,"cudnnDirectionMode_t"],[4,"cudnnRNNInputMode_t"],[4,"cudnnRNNClipMode_t"],[4,"cudnnRNNDataLayout_t"],[4,"cudnnRNNPaddingMode_t"],[4,"cudnnSeqDataAxis_t"],[4,"cudnnMultiHeadAttnWeightKind_t"],[4,"cudnnWgradMode_t"],[4,"cudnnCTCLossAlgo_t"],[4,"cudnnLossNormalizationMode_t"],[3,"cudnnAlgorithm_t"],[19,"cudnnAlgorithm_t_Algorithm"],[4,"cudnnSeverity_t"],[3,"cudnnDebug_t"],[4,"cudnnFusedOps_t"],[4,"cudnnFusedOpsConstParamLabel_t"],[4,"cudnnFusedOpsPointerPlaceHolder_t"],[4,"cudnnFusedOpsVariantParamLabel_t"],[4,"Error"],[3,"ActivationDescriptor"],[3,"API"],[3,"ConvolutionDescriptor"],[3,"CudaDeviceMemory"],[3,"Cudnn"],[3,"DropoutDescriptor"],[3,"FilterDescriptor"],[3,"NormalizationDescriptor"],[3,"PoolingDescriptor"],[3,"TensorDescriptor"],[3,"RnnDescriptor"],[3,"RnnConfig"],[3,"ScalParams"],[4,"DataType"],[8,"DataTypeInfo"],[3,"ConvolutionConfig"],[3,"NormalizationConfig"],[3,"PoolingConfig"],[3,"ActivationConfig"],[3,"DropoutConfig"],[3,"cudaArray"],[3,"cudaMipmappedArray"],[3,"cudaGraphicsResource"],[3,"CUstream_st"],[3,"CUevent_st"],[3,"CUexternalMemory_st"],[3,"CUexternalSemaphore_st"],[3,"CUgraph_st"],[3,"CUgraphNode_st"],[3,"CUgraphExec_st"],[3,"cudnnContext"],[3,"cudnnRuntimeTag_t"],[3,"cudnnTensorStruct"],[3,"cudnnConvolutionStruct"],[3,"cudnnPoolingStruct"],[3,"cudnnFilterStruct"],[3,"cudnnLRNStruct"],[3,"cudnnActivationStruct"],[3,"cudnnSpatialTransformerStruct"],[3,"cudnnOpTensorStruct"],[3,"cudnnReduceTensorStruct"],[3,"cudnnCTCLossStruct"],[3,"cudnnTensorTransformStruct"],[3,"cudnnDropoutStruct"],[3,"cudnnRNNStruct"],[3,"cudnnPersistentRNNPlan"],[3,"cudnnRNNDataStruct"],[3,"cudnnAlgorithmStruct"],[3,"cudnnAlgorithmPerformanceStruct"],[3,"cudnnSeqDataStruct"],[3,"cudnnAttnStruct"],[3,"cudnnFusedOpsConstParamStruct"],[3,"cudnnFusedOpsVariantParamStruct"],[3,"cudnnFusedOpsPlanStruct"]]},\
"rcudnn_sys":{"doc":"","i":[[3,"dim3","rcudnn_sys","",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[12,"z","","",0,null],[3,"cudaChannelFormatDesc","","CUDA Channel format descriptor",null,null],[12,"x","","< x",1,null],[12,"y","","< y",1,null],[12,"z","","< z",1,null],[12,"w","","< w",1,null],[12,"f","","< Channel format kind",1,null],[3,"cudaArray","","",null,null],[3,"cudaMipmappedArray","","",null,null],[3,"cudaPitchedPtr","","CUDA Pitched memory pointer",null,null],[12,"ptr","","< Pointer to allocated memory",2,null],[12,"pitch","","< Pitch of allocated memory in bytes",2,null],[12,"xsize","","< Logical width of allocation in elements",2,null],[12,"ysize","","< Logical height of allocation in elements",2,null],[3,"cudaExtent","","CUDA extent",null,null],[12,"width","","< Width in elements when referring to array memory, in…",3,null],[12,"height","","< Height in elements",3,null],[12,"depth","","< Depth in elements",3,null],[3,"cudaPos","","CUDA 3D position",null,null],[12,"x","","< x",4,null],[12,"y","","< y",4,null],[12,"z","","< z",4,null],[3,"cudaMemcpy3DParms","","CUDA 3D memory copying parameters",null,null],[12,"srcArray","","< Source memory address",5,null],[12,"srcPos","","< Source position offset",5,null],[12,"srcPtr","","< Pitched source memory address",5,null],[12,"dstArray","","< Destination memory address",5,null],[12,"dstPos","","< Destination position offset",5,null],[12,"dstPtr","","< Pitched destination memory address",5,null],[12,"extent","","< Requested memory copy size",5,null],[12,"kind","","< Type of transfer",5,null],[3,"cudaMemcpy3DPeerParms","","CUDA 3D cross-device memory copying parameters",null,null],[12,"srcArray","","< Source memory address",6,null],[12,"srcPos","","< Source position offset",6,null],[12,"srcPtr","","< Pitched source memory address",6,null],[12,"srcDevice","","< Source device",6,null],[12,"dstArray","","< Destination memory address",6,null],[12,"dstPos","","< Destination position offset",6,null],[12,"dstPtr","","< Pitched destination memory address",6,null],[12,"dstDevice","","< Destination device",6,null],[12,"extent","","< Requested memory copy size",6,null],[3,"cudaMemsetParams","","CUDA Memset node parameters",null,null],[12,"dst","","< Destination device pointer",7,null],[12,"pitch","","< Pitch of destination device pointer. Unused if height is 1",7,null],[12,"value","","< Value to be set",7,null],[12,"elementSize","","< Size of each element in bytes. Must be 1, 2, or 4.",7,null],[12,"width","","< Width in bytes, of the row",7,null],[12,"height","","< Number of rows",7,null],[3,"cudaHostNodeParams","","CUDA host node parameters",null,null],[12,"fn_","","< The function to call when the node executes",8,null],[12,"userData","","< Argument to pass to the function",8,null],[3,"cudaGraphicsResource","","CUDA graphics interop resource",null,null],[3,"cudaResourceDesc","","CUDA resource descriptor",null,null],[12,"resType","","< Resource type",9,null],[12,"res","","",9,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"array","","< CUDA array",10,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"mipmap","","< CUDA mipmapped array",11,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3","","",null,null],[12,"devPtr","","< Device pointer",12,null],[12,"desc","","< Channel descriptor",12,null],[12,"sizeInBytes","","< Size in bytes",12,null],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4","","",null,null],[12,"devPtr","","< Device pointer",13,null],[12,"desc","","< Channel descriptor",13,null],[12,"width","","< Width of the array in elements",13,null],[12,"height","","< Height of the array in elements",13,null],[12,"pitchInBytes","","< Pitch between two rows in bytes",13,null],[3,"cudaResourceViewDesc","","CUDA resource view descriptor",null,null],[12,"format","","< Resource view format",14,null],[12,"width","","< Width of the resource view",14,null],[12,"height","","< Height of the resource view",14,null],[12,"depth","","< Depth of the resource view",14,null],[12,"firstMipmapLevel","","< First defined mipmap level",14,null],[12,"lastMipmapLevel","","< Last defined mipmap level",14,null],[12,"firstLayer","","< First layer index",14,null],[12,"lastLayer","","< Last layer index",14,null],[3,"cudaPointerAttributes","","CUDA pointer attributes",null,null],[12,"memoryType","","\\\\deprecated",15,null],[12,"type_","","The type of memory - ::cudaMemoryTypeUnregistered,…",15,null],[12,"device","","The device against which the memory was allocated or…",15,null],[12,"devicePointer","","The address which may be dereferenced on the current…",15,null],[12,"hostPointer","","The address which may be dereferenced on the host to…",15,null],[12,"isManaged","","\\\\deprecated",15,null],[3,"cudaFuncAttributes","","CUDA function attributes",null,null],[12,"sharedSizeBytes","","The size in bytes of statically-allocated shared memory…",16,null],[12,"constSizeBytes","","The size in bytes of user-allocated constant memory…",16,null],[12,"localSizeBytes","","The size in bytes of local memory used by each thread of…",16,null],[12,"maxThreadsPerBlock","","The maximum number of threads per block, beyond which a…",16,null],[12,"numRegs","","The number of registers used by each thread of this…",16,null],[12,"ptxVersion","","The PTX virtual architecture version for which the…",16,null],[12,"binaryVersion","","The binary architecture version for which the function was…",16,null],[12,"cacheModeCA","","The attribute to indicate whether the function has been…",16,null],[12,"maxDynamicSharedSizeBytes","","The maximum size in bytes of dynamic shared memory per…",16,null],[12,"preferredShmemCarveout","","On devices where the L1 cache and shared memory use the…",16,null],[3,"CUuuid_st","","",null,null],[12,"bytes","","",17,null],[3,"cudaDeviceProp","","CUDA device properties",null,null],[12,"name","","< ASCII string identifying device",18,null],[12,"uuid","","< 16-byte unique identifier",18,null],[12,"luid","","< 8-byte locally unique identifier. Value is undefined on…",18,null],[12,"luidDeviceNodeMask","","< LUID device node mask. Value is undefined on TCC and…",18,null],[12,"totalGlobalMem","","< Global memory available on device in bytes",18,null],[12,"sharedMemPerBlock","","< Shared memory available per block in bytes",18,null],[12,"regsPerBlock","","< 32-bit registers available per block",18,null],[12,"warpSize","","< Warp size in threads",18,null],[12,"memPitch","","< Maximum pitch in bytes allowed by memory copies",18,null],[12,"maxThreadsPerBlock","","< Maximum number of threads per block",18,null],[12,"maxThreadsDim","","< Maximum size of each dimension of a block",18,null],[12,"maxGridSize","","< Maximum size of each dimension of a grid",18,null],[12,"clockRate","","< Clock frequency in kilohertz",18,null],[12,"totalConstMem","","< Constant memory available on device in bytes",18,null],[12,"major","","< Major compute capability",18,null],[12,"minor","","< Minor compute capability",18,null],[12,"textureAlignment","","< Alignment requirement for textures",18,null],[12,"texturePitchAlignment","","< Pitch alignment requirement for texture references bound…",18,null],[12,"deviceOverlap","","< Device can concurrently copy memory and execute a…",18,null],[12,"multiProcessorCount","","< Number of multiprocessors on device",18,null],[12,"kernelExecTimeoutEnabled","","< Specified whether there is a run time limit on kernels",18,null],[12,"integrated","","< Device is integrated as opposed to discrete",18,null],[12,"canMapHostMemory","","< Device can map host memory with…",18,null],[12,"computeMode","","< Compute mode (See ::cudaComputeMode)",18,null],[12,"maxTexture1D","","< Maximum 1D texture size",18,null],[12,"maxTexture1DMipmap","","< Maximum 1D mipmapped texture size",18,null],[12,"maxTexture1DLinear","","< Maximum size for 1D textures bound to linear memory",18,null],[12,"maxTexture2D","","< Maximum 2D texture dimensions",18,null],[12,"maxTexture2DMipmap","","< Maximum 2D mipmapped texture dimensions",18,null],[12,"maxTexture2DLinear","","< Maximum dimensions (width, height, pitch) for 2D…",18,null],[12,"maxTexture2DGather","","< Maximum 2D texture dimensions if texture gather…",18,null],[12,"maxTexture3D","","< Maximum 3D texture dimensions",18,null],[12,"maxTexture3DAlt","","< Maximum alternate 3D texture dimensions",18,null],[12,"maxTextureCubemap","","< Maximum Cubemap texture dimensions",18,null],[12,"maxTexture1DLayered","","< Maximum 1D layered texture dimensions",18,null],[12,"maxTexture2DLayered","","< Maximum 2D layered texture dimensions",18,null],[12,"maxTextureCubemapLayered","","< Maximum Cubemap layered texture dimensions",18,null],[12,"maxSurface1D","","< Maximum 1D surface size",18,null],[12,"maxSurface2D","","< Maximum 2D surface dimensions",18,null],[12,"maxSurface3D","","< Maximum 3D surface dimensions",18,null],[12,"maxSurface1DLayered","","< Maximum 1D layered surface dimensions",18,null],[12,"maxSurface2DLayered","","< Maximum 2D layered surface dimensions",18,null],[12,"maxSurfaceCubemap","","< Maximum Cubemap surface dimensions",18,null],[12,"maxSurfaceCubemapLayered","","< Maximum Cubemap layered surface dimensions",18,null],[12,"surfaceAlignment","","< Alignment requirements for surfaces",18,null],[12,"concurrentKernels","","< Device can possibly execute multiple kernels concurrently",18,null],[12,"ECCEnabled","","< Device has ECC support enabled",18,null],[12,"pciBusID","","< PCI bus ID of the device",18,null],[12,"pciDeviceID","","< PCI device ID of the device",18,null],[12,"pciDomainID","","< PCI domain ID of the device",18,null],[12,"tccDriver","","< 1 if device is a Tesla device using TCC driver, 0…",18,null],[12,"asyncEngineCount","","< Number of asynchronous engines",18,null],[12,"unifiedAddressing","","< Device shares a unified address space with the host",18,null],[12,"memoryClockRate","","< Peak memory clock frequency in kilohertz",18,null],[12,"memoryBusWidth","","< Global memory bus width in bits",18,null],[12,"l2CacheSize","","< Size of L2 cache in bytes",18,null],[12,"maxThreadsPerMultiProcessor","","< Maximum resident threads per multiprocessor",18,null],[12,"streamPrioritiesSupported","","< Device supports stream priorities",18,null],[12,"globalL1CacheSupported","","< Device supports caching globals in L1",18,null],[12,"localL1CacheSupported","","< Device supports caching locals in L1",18,null],[12,"sharedMemPerMultiprocessor","","< Shared memory available per multiprocessor in bytes",18,null],[12,"regsPerMultiprocessor","","< 32-bit registers available per multiprocessor",18,null],[12,"managedMemory","","< Device supports allocating managed memory on this system",18,null],[12,"isMultiGpuBoard","","< Device is on a multi-GPU board",18,null],[12,"multiGpuBoardGroupID","","< Unique identifier for a group of devices on the same…",18,null],[12,"hostNativeAtomicSupported","","< Link between the device and the host supports native…",18,null],[12,"singleToDoublePrecisionPerfRatio","","< Ratio of single precision performance (in floating-point…",18,null],[12,"pageableMemoryAccess","","< Device supports coherently accessing pageable memory…",18,null],[12,"concurrentManagedAccess","","< Device can coherently access managed memory concurrently…",18,null],[12,"computePreemptionSupported","","< Device supports Compute Preemption",18,null],[12,"canUseHostPointerForRegisteredMem","","< Device can access host registered memory at the same…",18,null],[12,"cooperativeLaunch","","< Device supports launching cooperative kernels via…",18,null],[12,"cooperativeMultiDeviceLaunch","","< Device can participate in cooperative kernels launched…",18,null],[12,"sharedMemPerBlockOptin","","< Per device maximum shared memory per block usable by…",18,null],[12,"pageableMemoryAccessUsesHostPageTables","","< Device accesses pageable memory via the host\'s page tables",18,null],[12,"directManagedMemAccessFromHost","","< Host can directly access managed memory on the device…",18,null],[3,"cudaIpcEventHandle_st","","CUDA IPC event handle",null,null],[12,"reserved","","",19,null],[3,"cudaIpcMemHandle_st","","CUDA IPC memory handle",null,null],[12,"reserved","","",20,null],[3,"cudaExternalMemoryHandleDesc","","External memory handle descriptor",null,null],[12,"type_","","Type of the handle",21,null],[12,"handle","","",21,null],[12,"size","","Size of the memory allocation",21,null],[12,"flags","","Flags must either be zero or ::cudaExternalMemoryDedicated",21,null],[3,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1","","Win32 handle referencing the semaphore object. Valid when…",null,null],[12,"handle","","Valid NT handle. Must be NULL if \'name\' is non-NULL",22,null],[12,"name","","Name of a valid memory object. Must be NULL if \'handle\' is…",22,null],[3,"cudaExternalMemoryBufferDesc","","External memory buffer descriptor",null,null],[12,"offset","","Offset into the memory object where the buffer\'s base is",23,null],[12,"size","","Size of the buffer",23,null],[12,"flags","","Flags reserved for future use. Must be zero.",23,null],[3,"cudaExternalMemoryMipmappedArrayDesc","","External memory mipmap descriptor",null,null],[12,"offset","","Offset into the memory object where the base level of the…",24,null],[12,"formatDesc","","Format of base level of the mipmap chain",24,null],[12,"extent","","Dimensions of base level of the mipmap chain",24,null],[12,"flags","","Flags associated with CUDA mipmapped arrays. See…",24,null],[12,"numLevels","","Total number of levels in the mipmap chain",24,null],[3,"cudaExternalSemaphoreHandleDesc","","External semaphore handle descriptor",null,null],[12,"type_","","Type of the handle",25,null],[12,"handle","","",25,null],[12,"flags","","Flags reserved for the future. Must be zero.",25,null],[3,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1","","Win32 handle referencing the semaphore object. Valid when…",null,null],[12,"handle","","Valid NT handle. Must be NULL if \'name\' is non-NULL",26,null],[12,"name","","Name of a valid synchronization primitive. Must be NULL if…",26,null],[3,"cudaExternalSemaphoreSignalParams","","External semaphore  signal parameters",null,null],[12,"params","","",27,null],[12,"flags","","Only when ::cudaExternalSemaphoreSignalParams is used to…",27,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1","","",null,null],[12,"fence","","",28,null],[12,"nvSciSync","","",28,null],[12,"keyedMutex","","",28,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1","","Parameters for fence objects",null,null],[12,"value","","Value of fence to be signaled",29,null],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3","","Parameters for keyed mutex objects",null,null],[12,"key","","",30,null],[3,"cudaExternalSemaphoreWaitParams","","External semaphore wait parameters",null,null],[12,"params","","",31,null],[12,"flags","","Only when ::cudaExternalSemaphoreSignalParams is used to…",31,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1","","",null,null],[12,"fence","","",32,null],[12,"nvSciSync","","",32,null],[12,"keyedMutex","","",32,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1","","Parameters for fence objects",null,null],[12,"value","","Value of fence to be waited on",33,null],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3","","Parameters for keyed mutex objects",null,null],[12,"key","","Value of key to acquire the mutex with",34,null],[12,"timeoutMs","","Timeout in milliseconds to wait to acquire the mutex",34,null],[3,"CUstream_st","","",null,null],[3,"CUevent_st","","",null,null],[3,"CUexternalMemory_st","","",null,null],[3,"CUexternalSemaphore_st","","",null,null],[3,"CUgraph_st","","",null,null],[3,"CUgraphNode_st","","",null,null],[3,"cudaLaunchParams","","CUDA launch parameters",null,null],[12,"func","","< Device function symbol",35,null],[12,"gridDim","","< Grid dimentions",35,null],[12,"blockDim","","< Block dimentions",35,null],[12,"args","","< Arguments",35,null],[12,"sharedMem","","< Shared memory",35,null],[12,"stream","","< Stream identifier",35,null],[3,"cudaKernelNodeParams","","CUDA GPU kernel node parameters",null,null],[12,"func","","< Kernel to launch",36,null],[12,"gridDim","","< Grid dimensions",36,null],[12,"blockDim","","< Block dimensions",36,null],[12,"sharedMemBytes","","< Dynamic shared-memory size per thread block in bytes",36,null],[12,"kernelParams","","< Array of pointers to individual kernel arguments",36,null],[12,"extra","","< Pointer to kernel arguments in the \\\"extra\\\" format",36,null],[3,"CUgraphExec_st","","",null,null],[3,"surfaceReference","","CUDA Surface reference",null,null],[12,"channelDesc","","Channel descriptor for surface reference",37,null],[3,"textureReference","","CUDA texture reference",null,null],[12,"normalized","","Indicates whether texture reads are normalized or not",38,null],[12,"filterMode","","Texture filter mode",38,null],[12,"addressMode","","Texture address mode for up to 3 dimensions",38,null],[12,"channelDesc","","Channel descriptor for the texture reference",38,null],[12,"sRGB","","Perform sRGB->linear conversion during texture read",38,null],[12,"maxAnisotropy","","Limit to the anisotropy ratio",38,null],[12,"mipmapFilterMode","","Mipmap filter mode",38,null],[12,"mipmapLevelBias","","Offset applied to the supplied mipmap level",38,null],[12,"minMipmapLevelClamp","","Lower end of the mipmap level range to clamp access to",38,null],[12,"maxMipmapLevelClamp","","Upper end of the mipmap level range to clamp access to",38,null],[12,"__cudaReserved","","",38,null],[3,"cudaTextureDesc","","CUDA texture descriptor",null,null],[12,"addressMode","","Texture address mode for up to 3 dimensions",39,null],[12,"filterMode","","Texture filter mode",39,null],[12,"readMode","","Texture read mode",39,null],[12,"sRGB","","Perform sRGB->linear conversion during texture read",39,null],[12,"borderColor","","Texture Border Color",39,null],[12,"normalizedCoords","","Indicates whether texture reads are normalized or not",39,null],[12,"maxAnisotropy","","Limit to the anisotropy ratio",39,null],[12,"mipmapFilterMode","","Mipmap filter mode",39,null],[12,"mipmapLevelBias","","Offset applied to the supplied mipmap level",39,null],[12,"minMipmapLevelClamp","","Lower end of the mipmap level range to clamp access to",39,null],[12,"maxMipmapLevelClamp","","Upper end of the mipmap level range to clamp access to",39,null],[3,"cudnnContext","","",null,null],[3,"cudnnRuntimeTag_t","","",null,null],[3,"cudnnTensorStruct","","",null,null],[3,"cudnnConvolutionStruct","","",null,null],[3,"cudnnPoolingStruct","","",null,null],[3,"cudnnFilterStruct","","",null,null],[3,"cudnnLRNStruct","","",null,null],[3,"cudnnActivationStruct","","",null,null],[3,"cudnnSpatialTransformerStruct","","",null,null],[3,"cudnnOpTensorStruct","","",null,null],[3,"cudnnReduceTensorStruct","","",null,null],[3,"cudnnCTCLossStruct","","",null,null],[3,"cudnnTensorTransformStruct","","",null,null],[3,"cudnnConvolutionFwdAlgoPerf_t","","",null,null],[12,"algo","","",40,null],[12,"status","","",40,null],[12,"time","","",40,null],[12,"memory","","",40,null],[12,"determinism","","",40,null],[12,"mathType","","",40,null],[12,"reserved","","",40,null],[3,"cudnnConvolutionBwdFilterAlgoPerf_t","","",null,null],[12,"algo","","",41,null],[12,"status","","",41,null],[12,"time","","",41,null],[12,"memory","","",41,null],[12,"determinism","","",41,null],[12,"mathType","","",41,null],[12,"reserved","","",41,null],[3,"cudnnConvolutionBwdDataAlgoPerf_t","","",null,null],[12,"algo","","",42,null],[12,"status","","",42,null],[12,"time","","",42,null],[12,"memory","","",42,null],[12,"determinism","","",42,null],[12,"mathType","","",42,null],[12,"reserved","","",42,null],[3,"cudnnDropoutStruct","","",null,null],[3,"cudnnRNNStruct","","",null,null],[3,"cudnnPersistentRNNPlan","","",null,null],[3,"cudnnRNNDataStruct","","",null,null],[3,"cudnnAlgorithmStruct","","",null,null],[3,"cudnnAlgorithmPerformanceStruct","","",null,null],[3,"cudnnSeqDataStruct","","",null,null],[3,"cudnnAttnStruct","","",null,null],[3,"cudnnAlgorithm_t","","",null,null],[12,"algo","","",43,null],[3,"cudnnDebug_t","","",null,null],[12,"cudnn_version","","",44,null],[12,"cudnnStatus","","",44,null],[12,"time_sec","","",44,null],[12,"time_usec","","",44,null],[12,"time_delta","","",44,null],[12,"handle","","",44,null],[12,"stream","","",44,null],[12,"pid","","",44,null],[12,"tid","","",44,null],[12,"cudaDeviceId","","",44,null],[12,"reserved","","",44,null],[3,"cudnnFusedOpsConstParamStruct","","",null,null],[3,"cudnnFusedOpsVariantParamStruct","","",null,null],[3,"cudnnFusedOpsPlanStruct","","",null,null],[19,"cudaResourceDesc__bindgen_ty_1","","",null,null],[12,"array","","",45,null],[12,"mipmap","","",45,null],[12,"linear","","",45,null],[12,"pitch2D","","",45,null],[19,"cudaExternalMemoryHandleDesc__bindgen_ty_1","","",null,null],[12,"fd","","File descriptor referencing the memory object. Valid when…",46,null],[12,"win32","","",46,null],[12,"nvSciBufObject","","A handle representing NvSciBuf Object. Valid when type is…",46,null],[19,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1","","",null,null],[12,"fd","","File descriptor referencing the semaphore object. Valid…",47,null],[12,"win32","","",47,null],[12,"nvSciSyncObj","","Valid NvSciSyncObj. Must be non NULL",47,null],[19,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"fence","","Pointer to NvSciSyncFence. Valid if…",48,null],[12,"reserved","","",48,null],[19,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"fence","","Pointer to NvSciSyncFence. Valid if…",49,null],[12,"reserved","","",49,null],[19,"cudnnAlgorithm_t_Algorithm","","",null,null],[12,"convFwdAlgo","","",50,null],[12,"convBwdFilterAlgo","","",50,null],[12,"convBwdDataAlgo","","",50,null],[12,"RNNAlgo","","",50,null],[12,"CTCLossAlgo","","",50,null],[4,"cudaError","","CUDA error types",null,null],[13,"cudaSuccess","","The API call returned with no errors. In the case of query…",51,null],[13,"cudaErrorInvalidValue","","This indicates that one or more of the parameters passed…",51,null],[13,"cudaErrorMemoryAllocation","","The API call failed because it was unable to allocate…",51,null],[13,"cudaErrorInitializationError","","The API call failed because the CUDA driver and runtime…",51,null],[13,"cudaErrorCudartUnloading","","This indicates that a CUDA Runtime API call cannot be…",51,null],[13,"cudaErrorProfilerDisabled","","This indicates profiler is not initialized for this run.…",51,null],[13,"cudaErrorProfilerNotInitialized","","\\\\deprecated This error return is deprecated as of CUDA…",51,null],[13,"cudaErrorProfilerAlreadyStarted","","\\\\deprecated This error return is deprecated as of CUDA…",51,null],[13,"cudaErrorProfilerAlreadyStopped","","\\\\deprecated This error return is deprecated as of CUDA…",51,null],[13,"cudaErrorInvalidConfiguration","","This indicates that a kernel launch is requesting…",51,null],[13,"cudaErrorInvalidPitchValue","","This indicates that one or more of the pitch-related…",51,null],[13,"cudaErrorInvalidSymbol","","This indicates that the symbol name/identifier passed to…",51,null],[13,"cudaErrorInvalidHostPointer","","This indicates that at least one host pointer passed to…",51,null],[13,"cudaErrorInvalidDevicePointer","","This indicates that at least one device pointer passed to…",51,null],[13,"cudaErrorInvalidTexture","","This indicates that the texture passed to the API call is…",51,null],[13,"cudaErrorInvalidTextureBinding","","This indicates that the texture binding is not valid. This…",51,null],[13,"cudaErrorInvalidChannelDescriptor","","This indicates that the channel descriptor passed to the…",51,null],[13,"cudaErrorInvalidMemcpyDirection","","This indicates that the direction of the memcpy passed to…",51,null],[13,"cudaErrorAddressOfConstant","","This indicated that the user has taken the address of a…",51,null],[13,"cudaErrorTextureFetchFailed","","This indicated that a texture fetch was not able to be…",51,null],[13,"cudaErrorTextureNotBound","","This indicated that a texture was not bound for access.…",51,null],[13,"cudaErrorSynchronizationError","","This indicated that a synchronization operation had…",51,null],[13,"cudaErrorInvalidFilterSetting","","This indicates that a non-float texture was being accessed…",51,null],[13,"cudaErrorInvalidNormSetting","","This indicates that an attempt was made to read a…",51,null],[13,"cudaErrorMixedDeviceExecution","","Mixing of device and device emulation code was not…",51,null],[13,"cudaErrorNotYetImplemented","","This indicates that the API call is not yet implemented.…",51,null],[13,"cudaErrorMemoryValueTooLarge","","This indicated that an emulated device pointer exceeded…",51,null],[13,"cudaErrorInsufficientDriver","","This indicates that the installed NVIDIA CUDA driver is…",51,null],[13,"cudaErrorInvalidSurface","","This indicates that the surface passed to the API call is…",51,null],[13,"cudaErrorDuplicateVariableName","","This indicates that multiple global or constant variables…",51,null],[13,"cudaErrorDuplicateTextureName","","This indicates that multiple textures (across separate…",51,null],[13,"cudaErrorDuplicateSurfaceName","","This indicates that multiple surfaces (across separate…",51,null],[13,"cudaErrorDevicesUnavailable","","This indicates that all CUDA devices are busy or…",51,null],[13,"cudaErrorIncompatibleDriverContext","","This indicates that the current context is not compatible…",51,null],[13,"cudaErrorMissingConfiguration","","The device function being invoked (usually via…",51,null],[13,"cudaErrorPriorLaunchFailure","","This indicated that a previous kernel launch failed. This…",51,null],[13,"cudaErrorLaunchMaxDepthExceeded","","This error indicates that a device runtime grid launch did…",51,null],[13,"cudaErrorLaunchFileScopedTex","","This error indicates that a grid launch did not occur…",51,null],[13,"cudaErrorLaunchFileScopedSurf","","This error indicates that a grid launch did not occur…",51,null],[13,"cudaErrorSyncDepthExceeded","","This error indicates that a call to…",51,null],[13,"cudaErrorLaunchPendingCountExceeded","","This error indicates that a device runtime grid launch…",51,null],[13,"cudaErrorInvalidDeviceFunction","","The requested device function does not exist or is not…",51,null],[13,"cudaErrorNoDevice","","This indicates that no CUDA-capable devices were detected…",51,null],[13,"cudaErrorInvalidDevice","","This indicates that the device ordinal supplied by the…",51,null],[13,"cudaErrorStartupFailure","","This indicates an internal startup failure in the CUDA…",51,null],[13,"cudaErrorInvalidKernelImage","","This indicates that the device kernel image is invalid.",51,null],[13,"cudaErrorDeviceUninitialized","","This most frequently indicates that there is no context…",51,null],[13,"cudaErrorMapBufferObjectFailed","","This indicates that the buffer object could not be mapped.",51,null],[13,"cudaErrorUnmapBufferObjectFailed","","This indicates that the buffer object could not be unmapped.",51,null],[13,"cudaErrorArrayIsMapped","","This indicates that the specified array is currently…",51,null],[13,"cudaErrorAlreadyMapped","","This indicates that the resource is already mapped.",51,null],[13,"cudaErrorNoKernelImageForDevice","","This indicates that there is no kernel image available…",51,null],[13,"cudaErrorAlreadyAcquired","","This indicates that a resource has already been acquired.",51,null],[13,"cudaErrorNotMapped","","This indicates that a resource is not mapped.",51,null],[13,"cudaErrorNotMappedAsArray","","This indicates that a mapped resource is not available for…",51,null],[13,"cudaErrorNotMappedAsPointer","","This indicates that a mapped resource is not available for…",51,null],[13,"cudaErrorECCUncorrectable","","This indicates that an uncorrectable ECC error was…",51,null],[13,"cudaErrorUnsupportedLimit","","This indicates that the ::cudaLimit passed to the API call…",51,null],[13,"cudaErrorDeviceAlreadyInUse","","This indicates that a call tried to access an…",51,null],[13,"cudaErrorPeerAccessUnsupported","","This error indicates that P2P access is not supported…",51,null],[13,"cudaErrorInvalidPtx","","A PTX compilation failed. The runtime may fall back to…",51,null],[13,"cudaErrorInvalidGraphicsContext","","This indicates an error with the OpenGL or DirectX context.",51,null],[13,"cudaErrorNvlinkUncorrectable","","This indicates that an uncorrectable NVLink error was…",51,null],[13,"cudaErrorJitCompilerNotFound","","This indicates that the PTX JIT compiler library was not…",51,null],[13,"cudaErrorInvalidSource","","This indicates that the device kernel source is invalid.",51,null],[13,"cudaErrorFileNotFound","","This indicates that the file specified was not found.",51,null],[13,"cudaErrorSharedObjectSymbolNotFound","","This indicates that a link to a shared object failed to…",51,null],[13,"cudaErrorSharedObjectInitFailed","","This indicates that initialization of a shared object…",51,null],[13,"cudaErrorOperatingSystem","","This error indicates that an OS call failed.",51,null],[13,"cudaErrorInvalidResourceHandle","","This indicates that a resource handle passed to the API…",51,null],[13,"cudaErrorIllegalState","","This indicates that a resource required by the API call is…",51,null],[13,"cudaErrorSymbolNotFound","","This indicates that a named symbol was not found. Examples…",51,null],[13,"cudaErrorNotReady","","This indicates that asynchronous operations issued…",51,null],[13,"cudaErrorIllegalAddress","","The device encountered a load or store instruction on an…",51,null],[13,"cudaErrorLaunchOutOfResources","","This indicates that a launch did not occur because it did…",51,null],[13,"cudaErrorLaunchTimeout","","This indicates that the device kernel took too long to…",51,null],[13,"cudaErrorLaunchIncompatibleTexturing","","This error indicates a kernel launch that uses an…",51,null],[13,"cudaErrorPeerAccessAlreadyEnabled","","This error indicates that a call to…",51,null],[13,"cudaErrorPeerAccessNotEnabled","","This error indicates that ::cudaDeviceDisablePeerAccess()…",51,null],[13,"cudaErrorSetOnActiveProcess","","This indicates that the user has called…",51,null],[13,"cudaErrorContextIsDestroyed","","This error indicates that the context current to the…",51,null],[13,"cudaErrorAssert","","An assert triggered in device code during kernel…",51,null],[13,"cudaErrorTooManyPeers","","This error indicates that the hardware resources required…",51,null],[13,"cudaErrorHostMemoryAlreadyRegistered","","This error indicates that the memory range passed to…",51,null],[13,"cudaErrorHostMemoryNotRegistered","","This error indicates that the pointer passed to…",51,null],[13,"cudaErrorHardwareStackError","","Device encountered an error in the call stack during…",51,null],[13,"cudaErrorIllegalInstruction","","The device encountered an illegal instruction during…",51,null],[13,"cudaErrorMisalignedAddress","","The device encountered a load or store instruction on a…",51,null],[13,"cudaErrorInvalidAddressSpace","","While executing a kernel, the device encountered an…",51,null],[13,"cudaErrorInvalidPc","","The device encountered an invalid program counter. This…",51,null],[13,"cudaErrorLaunchFailure","","An exception occurred on the device while executing a…",51,null],[13,"cudaErrorCooperativeLaunchTooLarge","","This error indicates that the number of blocks launched…",51,null],[13,"cudaErrorNotPermitted","","This error indicates the attempted operation is not…",51,null],[13,"cudaErrorNotSupported","","This error indicates the attempted operation is not…",51,null],[13,"cudaErrorSystemNotReady","","This error indicates that the system is not yet ready to…",51,null],[13,"cudaErrorSystemDriverMismatch","","This error indicates that there is a mismatch between the…",51,null],[13,"cudaErrorCompatNotSupportedOnDevice","","This error indicates that the system was upgraded to run…",51,null],[13,"cudaErrorStreamCaptureUnsupported","","The operation is not permitted when the stream is capturing.",51,null],[13,"cudaErrorStreamCaptureInvalidated","","The current capture sequence on the stream has been…",51,null],[13,"cudaErrorStreamCaptureMerge","","The operation would have resulted in a merge of two…",51,null],[13,"cudaErrorStreamCaptureUnmatched","","The capture was not initiated in this stream.",51,null],[13,"cudaErrorStreamCaptureUnjoined","","The capture sequence contains a fork that was not joined…",51,null],[13,"cudaErrorStreamCaptureIsolation","","A dependency would have been created which crosses the…",51,null],[13,"cudaErrorStreamCaptureImplicit","","The operation would have resulted in a disallowed implicit…",51,null],[13,"cudaErrorCapturedEvent","","The operation is not permitted on an event which was last…",51,null],[13,"cudaErrorStreamCaptureWrongThread","","A stream capture sequence not initiated with the…",51,null],[13,"cudaErrorTimeout","","This indicates that the wait operation has timed out.",51,null],[13,"cudaErrorGraphExecUpdateFailure","","This error indicates that the graph update was not…",51,null],[13,"cudaErrorUnknown","","This indicates that an unknown internal error has occurred.",51,null],[13,"cudaErrorApiFailureBase","","Any unhandled CUDA driver error is added to this value and…",51,null],[4,"cudaChannelFormatKind","","Channel format kind",null,null],[13,"cudaChannelFormatKindSigned","","< Signed channel format",52,null],[13,"cudaChannelFormatKindUnsigned","","< Unsigned channel format",52,null],[13,"cudaChannelFormatKindFloat","","< Float channel format",52,null],[13,"cudaChannelFormatKindNone","","< No channel format",52,null],[4,"cudaMemoryType","","CUDA memory types",null,null],[13,"cudaMemoryTypeUnregistered","","< Unregistered memory",53,null],[13,"cudaMemoryTypeHost","","< Host memory",53,null],[13,"cudaMemoryTypeDevice","","< Device memory",53,null],[13,"cudaMemoryTypeManaged","","< Managed memory",53,null],[4,"cudaMemcpyKind","","CUDA memory copy types",null,null],[13,"cudaMemcpyHostToHost","","< Host   -> Host",54,null],[13,"cudaMemcpyHostToDevice","","< Host   -> Device",54,null],[13,"cudaMemcpyDeviceToHost","","< Device -> Host",54,null],[13,"cudaMemcpyDeviceToDevice","","< Device -> Device",54,null],[13,"cudaMemcpyDefault","","< Direction of the transfer is inferred from the pointer…",54,null],[4,"cudaStreamCaptureStatus","","Possible stream capture statuses returned by…",null,null],[13,"cudaStreamCaptureStatusNone","","< Stream is not capturing",55,null],[13,"cudaStreamCaptureStatusActive","","< Stream is actively capturing",55,null],[13,"cudaStreamCaptureStatusInvalidated","","< Stream is part of a capture sequence that has been…",55,null],[4,"cudaStreamCaptureMode","","Possible modes for stream capture thread interactions. For…",null,null],[13,"cudaStreamCaptureModeGlobal","","",56,null],[13,"cudaStreamCaptureModeThreadLocal","","",56,null],[13,"cudaStreamCaptureModeRelaxed","","",56,null],[4,"cudaGraphicsRegisterFlags","","CUDA graphics interop register flags",null,null],[13,"cudaGraphicsRegisterFlagsNone","","< Default",57,null],[13,"cudaGraphicsRegisterFlagsReadOnly","","< CUDA will not write to this resource",57,null],[13,"cudaGraphicsRegisterFlagsWriteDiscard","","< CUDA will only write to and will not read from this…",57,null],[13,"cudaGraphicsRegisterFlagsSurfaceLoadStore","","< CUDA will bind this resource to a surface reference",57,null],[13,"cudaGraphicsRegisterFlagsTextureGather","","< CUDA will perform texture gather operations on this…",57,null],[4,"cudaGraphicsMapFlags","","CUDA graphics interop map flags",null,null],[13,"cudaGraphicsMapFlagsNone","","< Default; Assume resource can be read/written",58,null],[13,"cudaGraphicsMapFlagsReadOnly","","< CUDA will not write to this resource",58,null],[13,"cudaGraphicsMapFlagsWriteDiscard","","< CUDA will only write to and will not read from this…",58,null],[4,"cudaGraphicsCubeFace","","CUDA graphics interop array indices for cube maps",null,null],[13,"cudaGraphicsCubeFacePositiveX","","< Positive X face of cubemap",59,null],[13,"cudaGraphicsCubeFaceNegativeX","","< Negative X face of cubemap",59,null],[13,"cudaGraphicsCubeFacePositiveY","","< Positive Y face of cubemap",59,null],[13,"cudaGraphicsCubeFaceNegativeY","","< Negative Y face of cubemap",59,null],[13,"cudaGraphicsCubeFacePositiveZ","","< Positive Z face of cubemap",59,null],[13,"cudaGraphicsCubeFaceNegativeZ","","< Negative Z face of cubemap",59,null],[4,"cudaResourceType","","CUDA resource types",null,null],[13,"cudaResourceTypeArray","","< Array resource",60,null],[13,"cudaResourceTypeMipmappedArray","","< Mipmapped array resource",60,null],[13,"cudaResourceTypeLinear","","< Linear resource",60,null],[13,"cudaResourceTypePitch2D","","< Pitch 2D resource",60,null],[4,"cudaResourceViewFormat","","CUDA texture resource view formats",null,null],[13,"cudaResViewFormatNone","","< No resource view format (use underlying resource format)",61,null],[13,"cudaResViewFormatUnsignedChar1","","< 1 channel unsigned 8-bit integers",61,null],[13,"cudaResViewFormatUnsignedChar2","","< 2 channel unsigned 8-bit integers",61,null],[13,"cudaResViewFormatUnsignedChar4","","< 4 channel unsigned 8-bit integers",61,null],[13,"cudaResViewFormatSignedChar1","","< 1 channel signed 8-bit integers",61,null],[13,"cudaResViewFormatSignedChar2","","< 2 channel signed 8-bit integers",61,null],[13,"cudaResViewFormatSignedChar4","","< 4 channel signed 8-bit integers",61,null],[13,"cudaResViewFormatUnsignedShort1","","< 1 channel unsigned 16-bit integers",61,null],[13,"cudaResViewFormatUnsignedShort2","","< 2 channel unsigned 16-bit integers",61,null],[13,"cudaResViewFormatUnsignedShort4","","< 4 channel unsigned 16-bit integers",61,null],[13,"cudaResViewFormatSignedShort1","","< 1 channel signed 16-bit integers",61,null],[13,"cudaResViewFormatSignedShort2","","< 2 channel signed 16-bit integers",61,null],[13,"cudaResViewFormatSignedShort4","","< 4 channel signed 16-bit integers",61,null],[13,"cudaResViewFormatUnsignedInt1","","< 1 channel unsigned 32-bit integers",61,null],[13,"cudaResViewFormatUnsignedInt2","","< 2 channel unsigned 32-bit integers",61,null],[13,"cudaResViewFormatUnsignedInt4","","< 4 channel unsigned 32-bit integers",61,null],[13,"cudaResViewFormatSignedInt1","","< 1 channel signed 32-bit integers",61,null],[13,"cudaResViewFormatSignedInt2","","< 2 channel signed 32-bit integers",61,null],[13,"cudaResViewFormatSignedInt4","","< 4 channel signed 32-bit integers",61,null],[13,"cudaResViewFormatHalf1","","< 1 channel 16-bit floating point",61,null],[13,"cudaResViewFormatHalf2","","< 2 channel 16-bit floating point",61,null],[13,"cudaResViewFormatHalf4","","< 4 channel 16-bit floating point",61,null],[13,"cudaResViewFormatFloat1","","< 1 channel 32-bit floating point",61,null],[13,"cudaResViewFormatFloat2","","< 2 channel 32-bit floating point",61,null],[13,"cudaResViewFormatFloat4","","< 4 channel 32-bit floating point",61,null],[13,"cudaResViewFormatUnsignedBlockCompressed1","","< Block compressed 1",61,null],[13,"cudaResViewFormatUnsignedBlockCompressed2","","< Block compressed 2",61,null],[13,"cudaResViewFormatUnsignedBlockCompressed3","","< Block compressed 3",61,null],[13,"cudaResViewFormatUnsignedBlockCompressed4","","< Block compressed 4 unsigned",61,null],[13,"cudaResViewFormatSignedBlockCompressed4","","< Block compressed 4 signed",61,null],[13,"cudaResViewFormatUnsignedBlockCompressed5","","< Block compressed 5 unsigned",61,null],[13,"cudaResViewFormatSignedBlockCompressed5","","< Block compressed 5 signed",61,null],[13,"cudaResViewFormatUnsignedBlockCompressed6H","","< Block compressed 6 unsigned half-float",61,null],[13,"cudaResViewFormatSignedBlockCompressed6H","","< Block compressed 6 signed half-float",61,null],[13,"cudaResViewFormatUnsignedBlockCompressed7","","< Block compressed 7",61,null],[4,"cudaFuncAttribute","","CUDA function attributes that can be set using…",null,null],[13,"cudaFuncAttributeMaxDynamicSharedMemorySize","","< Maximum dynamic shared memory size",62,null],[13,"cudaFuncAttributePreferredSharedMemoryCarveout","","< Preferred shared memory-L1 cache split",62,null],[13,"cudaFuncAttributeMax","","",62,null],[4,"cudaFuncCache","","CUDA function cache configurations",null,null],[13,"cudaFuncCachePreferNone","","< Default function cache configuration, no preference",63,null],[13,"cudaFuncCachePreferShared","","< Prefer larger shared memory and smaller L1 cache",63,null],[13,"cudaFuncCachePreferL1","","< Prefer larger L1 cache and smaller shared memory",63,null],[13,"cudaFuncCachePreferEqual","","< Prefer equal size L1 cache and shared memory",63,null],[4,"cudaSharedMemConfig","","CUDA shared memory configuration",null,null],[13,"cudaSharedMemBankSizeDefault","","",64,null],[13,"cudaSharedMemBankSizeFourByte","","",64,null],[13,"cudaSharedMemBankSizeEightByte","","",64,null],[4,"cudaSharedCarveout","","Shared memory carveout configurations. These may be passed…",null,null],[13,"cudaSharedmemCarveoutDefault","","< No preference for shared memory or L1 (default)",65,null],[13,"cudaSharedmemCarveoutMaxShared","","< Prefer maximum available shared memory, minimum L1 cache",65,null],[13,"cudaSharedmemCarveoutMaxL1","","< Prefer maximum available L1 cache, minimum shared memory",65,null],[4,"cudaComputeMode","","CUDA device compute modes",null,null],[13,"cudaComputeModeDefault","","< Default compute mode (Multiple threads can use…",66,null],[13,"cudaComputeModeExclusive","","< Compute-exclusive-thread mode (Only one thread in one…",66,null],[13,"cudaComputeModeProhibited","","< Compute-prohibited mode (No threads can use…",66,null],[13,"cudaComputeModeExclusiveProcess","","< Compute-exclusive-process mode (Many threads in one…",66,null],[4,"cudaLimit","","CUDA Limits",null,null],[13,"cudaLimitStackSize","","< GPU thread stack size",67,null],[13,"cudaLimitPrintfFifoSize","","< GPU printf FIFO size",67,null],[13,"cudaLimitMallocHeapSize","","< GPU malloc heap size",67,null],[13,"cudaLimitDevRuntimeSyncDepth","","< GPU device runtime synchronize depth",67,null],[13,"cudaLimitDevRuntimePendingLaunchCount","","< GPU device runtime pending launch count",67,null],[13,"cudaLimitMaxL2FetchGranularity","","< A value between 0 and 128 that indicates the maximum…",67,null],[4,"cudaMemoryAdvise","","CUDA Memory Advise values",null,null],[13,"cudaMemAdviseSetReadMostly","","< Data will mostly be read and only occassionally be…",68,null],[13,"cudaMemAdviseUnsetReadMostly","","< Undo the effect of ::cudaMemAdviseSetReadMostly",68,null],[13,"cudaMemAdviseSetPreferredLocation","","< Set the preferred location for the data as the specified…",68,null],[13,"cudaMemAdviseUnsetPreferredLocation","","< Clear the preferred location for the data",68,null],[13,"cudaMemAdviseSetAccessedBy","","< Data will be accessed by the specified device, so…",68,null],[13,"cudaMemAdviseUnsetAccessedBy","","< Let the Unified Memory subsystem decide on the page…",68,null],[4,"cudaMemRangeAttribute","","CUDA range attributes",null,null],[13,"cudaMemRangeAttributeReadMostly","","< Whether the range will mostly be read and only…",69,null],[13,"cudaMemRangeAttributePreferredLocation","","< The preferred location of the range",69,null],[13,"cudaMemRangeAttributeAccessedBy","","< Memory range has ::cudaMemAdviseSetAccessedBy set for…",69,null],[13,"cudaMemRangeAttributeLastPrefetchLocation","","< The last location to which the range was prefetched",69,null],[4,"cudaOutputMode","","CUDA Profiler Output modes",null,null],[13,"cudaKeyValuePair","","< Output mode Key-Value pair format.",70,null],[13,"cudaCSV","","< Output mode Comma separated values format.",70,null],[4,"cudaDeviceAttr","","CUDA device attributes",null,null],[13,"cudaDevAttrMaxThreadsPerBlock","","< Maximum number of threads per block",71,null],[13,"cudaDevAttrMaxBlockDimX","","< Maximum block dimension X",71,null],[13,"cudaDevAttrMaxBlockDimY","","< Maximum block dimension Y",71,null],[13,"cudaDevAttrMaxBlockDimZ","","< Maximum block dimension Z",71,null],[13,"cudaDevAttrMaxGridDimX","","< Maximum grid dimension X",71,null],[13,"cudaDevAttrMaxGridDimY","","< Maximum grid dimension Y",71,null],[13,"cudaDevAttrMaxGridDimZ","","< Maximum grid dimension Z",71,null],[13,"cudaDevAttrMaxSharedMemoryPerBlock","","< Maximum shared memory available per block in bytes",71,null],[13,"cudaDevAttrTotalConstantMemory","","< Memory available on device for constant variables in a…",71,null],[13,"cudaDevAttrWarpSize","","< Warp size in threads",71,null],[13,"cudaDevAttrMaxPitch","","< Maximum pitch in bytes allowed by memory copies",71,null],[13,"cudaDevAttrMaxRegistersPerBlock","","< Maximum number of 32-bit registers available per block",71,null],[13,"cudaDevAttrClockRate","","< Peak clock frequency in kilohertz",71,null],[13,"cudaDevAttrTextureAlignment","","< Alignment requirement for textures",71,null],[13,"cudaDevAttrGpuOverlap","","< Device can possibly copy memory and execute a kernel…",71,null],[13,"cudaDevAttrMultiProcessorCount","","< Number of multiprocessors on device",71,null],[13,"cudaDevAttrKernelExecTimeout","","< Specifies whether there is a run time limit on kernels",71,null],[13,"cudaDevAttrIntegrated","","< Device is integrated with host memory",71,null],[13,"cudaDevAttrCanMapHostMemory","","< Device can map host memory into CUDA address space",71,null],[13,"cudaDevAttrComputeMode","","< Compute mode (See ::cudaComputeMode for details)",71,null],[13,"cudaDevAttrMaxTexture1DWidth","","< Maximum 1D texture width",71,null],[13,"cudaDevAttrMaxTexture2DWidth","","< Maximum 2D texture width",71,null],[13,"cudaDevAttrMaxTexture2DHeight","","< Maximum 2D texture height",71,null],[13,"cudaDevAttrMaxTexture3DWidth","","< Maximum 3D texture width",71,null],[13,"cudaDevAttrMaxTexture3DHeight","","< Maximum 3D texture height",71,null],[13,"cudaDevAttrMaxTexture3DDepth","","< Maximum 3D texture depth",71,null],[13,"cudaDevAttrMaxTexture2DLayeredWidth","","< Maximum 2D layered texture width",71,null],[13,"cudaDevAttrMaxTexture2DLayeredHeight","","< Maximum 2D layered texture height",71,null],[13,"cudaDevAttrMaxTexture2DLayeredLayers","","< Maximum layers in a 2D layered texture",71,null],[13,"cudaDevAttrSurfaceAlignment","","< Alignment requirement for surfaces",71,null],[13,"cudaDevAttrConcurrentKernels","","< Device can possibly execute multiple kernels concurrently",71,null],[13,"cudaDevAttrEccEnabled","","< Device has ECC support enabled",71,null],[13,"cudaDevAttrPciBusId","","< PCI bus ID of the device",71,null],[13,"cudaDevAttrPciDeviceId","","< PCI device ID of the device",71,null],[13,"cudaDevAttrTccDriver","","< Device is using TCC driver model",71,null],[13,"cudaDevAttrMemoryClockRate","","< Peak memory clock frequency in kilohertz",71,null],[13,"cudaDevAttrGlobalMemoryBusWidth","","< Global memory bus width in bits",71,null],[13,"cudaDevAttrL2CacheSize","","< Size of L2 cache in bytes",71,null],[13,"cudaDevAttrMaxThreadsPerMultiProcessor","","< Maximum resident threads per multiprocessor",71,null],[13,"cudaDevAttrAsyncEngineCount","","< Number of asynchronous engines",71,null],[13,"cudaDevAttrUnifiedAddressing","","< Device shares a unified address space with the host",71,null],[13,"cudaDevAttrMaxTexture1DLayeredWidth","","< Maximum 1D layered texture width",71,null],[13,"cudaDevAttrMaxTexture1DLayeredLayers","","< Maximum layers in a 1D layered texture",71,null],[13,"cudaDevAttrMaxTexture2DGatherWidth","","< Maximum 2D texture width if cudaArrayTextureGather is set",71,null],[13,"cudaDevAttrMaxTexture2DGatherHeight","","< Maximum 2D texture height if cudaArrayTextureGather is set",71,null],[13,"cudaDevAttrMaxTexture3DWidthAlt","","< Alternate maximum 3D texture width",71,null],[13,"cudaDevAttrMaxTexture3DHeightAlt","","< Alternate maximum 3D texture height",71,null],[13,"cudaDevAttrMaxTexture3DDepthAlt","","< Alternate maximum 3D texture depth",71,null],[13,"cudaDevAttrPciDomainId","","< PCI domain ID of the device",71,null],[13,"cudaDevAttrTexturePitchAlignment","","< Pitch alignment requirement for textures",71,null],[13,"cudaDevAttrMaxTextureCubemapWidth","","< Maximum cubemap texture width/height",71,null],[13,"cudaDevAttrMaxTextureCubemapLayeredWidth","","< Maximum cubemap layered texture width/height",71,null],[13,"cudaDevAttrMaxTextureCubemapLayeredLayers","","< Maximum layers in a cubemap layered texture",71,null],[13,"cudaDevAttrMaxSurface1DWidth","","< Maximum 1D surface width",71,null],[13,"cudaDevAttrMaxSurface2DWidth","","< Maximum 2D surface width",71,null],[13,"cudaDevAttrMaxSurface2DHeight","","< Maximum 2D surface height",71,null],[13,"cudaDevAttrMaxSurface3DWidth","","< Maximum 3D surface width",71,null],[13,"cudaDevAttrMaxSurface3DHeight","","< Maximum 3D surface height",71,null],[13,"cudaDevAttrMaxSurface3DDepth","","< Maximum 3D surface depth",71,null],[13,"cudaDevAttrMaxSurface1DLayeredWidth","","< Maximum 1D layered surface width",71,null],[13,"cudaDevAttrMaxSurface1DLayeredLayers","","< Maximum layers in a 1D layered surface",71,null],[13,"cudaDevAttrMaxSurface2DLayeredWidth","","< Maximum 2D layered surface width",71,null],[13,"cudaDevAttrMaxSurface2DLayeredHeight","","< Maximum 2D layered surface height",71,null],[13,"cudaDevAttrMaxSurface2DLayeredLayers","","< Maximum layers in a 2D layered surface",71,null],[13,"cudaDevAttrMaxSurfaceCubemapWidth","","< Maximum cubemap surface width",71,null],[13,"cudaDevAttrMaxSurfaceCubemapLayeredWidth","","< Maximum cubemap layered surface width",71,null],[13,"cudaDevAttrMaxSurfaceCubemapLayeredLayers","","< Maximum layers in a cubemap layered surface",71,null],[13,"cudaDevAttrMaxTexture1DLinearWidth","","< Maximum 1D linear texture width",71,null],[13,"cudaDevAttrMaxTexture2DLinearWidth","","< Maximum 2D linear texture width",71,null],[13,"cudaDevAttrMaxTexture2DLinearHeight","","< Maximum 2D linear texture height",71,null],[13,"cudaDevAttrMaxTexture2DLinearPitch","","< Maximum 2D linear texture pitch in bytes",71,null],[13,"cudaDevAttrMaxTexture2DMipmappedWidth","","< Maximum mipmapped 2D texture width",71,null],[13,"cudaDevAttrMaxTexture2DMipmappedHeight","","< Maximum mipmapped 2D texture height",71,null],[13,"cudaDevAttrComputeCapabilityMajor","","< Major compute capability version number",71,null],[13,"cudaDevAttrComputeCapabilityMinor","","< Minor compute capability version number",71,null],[13,"cudaDevAttrMaxTexture1DMipmappedWidth","","< Maximum mipmapped 1D texture width",71,null],[13,"cudaDevAttrStreamPrioritiesSupported","","< Device supports stream priorities",71,null],[13,"cudaDevAttrGlobalL1CacheSupported","","< Device supports caching globals in L1",71,null],[13,"cudaDevAttrLocalL1CacheSupported","","< Device supports caching locals in L1",71,null],[13,"cudaDevAttrMaxSharedMemoryPerMultiprocessor","","< Maximum shared memory available per multiprocessor in…",71,null],[13,"cudaDevAttrMaxRegistersPerMultiprocessor","","< Maximum number of 32-bit registers available per…",71,null],[13,"cudaDevAttrManagedMemory","","< Device can allocate managed memory on this system",71,null],[13,"cudaDevAttrIsMultiGpuBoard","","< Device is on a multi-GPU board",71,null],[13,"cudaDevAttrMultiGpuBoardGroupID","","< Unique identifier for a group of devices on the same…",71,null],[13,"cudaDevAttrHostNativeAtomicSupported","","< Link between the device and the host supports native…",71,null],[13,"cudaDevAttrSingleToDoublePrecisionPerfRatio","","< Ratio of single precision performance (in floating-point…",71,null],[13,"cudaDevAttrPageableMemoryAccess","","< Device supports coherently accessing pageable memory…",71,null],[13,"cudaDevAttrConcurrentManagedAccess","","< Device can coherently access managed memory concurrently…",71,null],[13,"cudaDevAttrComputePreemptionSupported","","< Device supports Compute Preemption",71,null],[13,"cudaDevAttrCanUseHostPointerForRegisteredMem","","< Device can access host registered memory at the same…",71,null],[13,"cudaDevAttrReserved92","","",71,null],[13,"cudaDevAttrReserved93","","",71,null],[13,"cudaDevAttrReserved94","","",71,null],[13,"cudaDevAttrCooperativeLaunch","","< Device supports launching cooperative kernels via…",71,null],[13,"cudaDevAttrCooperativeMultiDeviceLaunch","","< Device can participate in cooperative kernels launched…",71,null],[13,"cudaDevAttrMaxSharedMemoryPerBlockOptin","","< The maximum optin shared memory per block. This value…",71,null],[13,"cudaDevAttrCanFlushRemoteWrites","","< Device supports flushing of outstanding remote writes.",71,null],[13,"cudaDevAttrHostRegisterSupported","","< Device supports host memory registration via…",71,null],[13,"cudaDevAttrPageableMemoryAccessUsesHostPageTables","","< Device accesses pageable memory via the host\'s page…",71,null],[13,"cudaDevAttrDirectManagedMemAccessFromHost","","< Host can directly access managed memory on the device…",71,null],[4,"cudaDeviceP2PAttr","","CUDA device P2P attributes",null,null],[13,"cudaDevP2PAttrPerformanceRank","","< A relative value indicating the performance of the link…",72,null],[13,"cudaDevP2PAttrAccessSupported","","< Peer access is enabled",72,null],[13,"cudaDevP2PAttrNativeAtomicSupported","","< Native atomic operation over the link supported",72,null],[13,"cudaDevP2PAttrCudaArrayAccessSupported","","< Accessing CUDA arrays over the link supported",72,null],[4,"cudaExternalMemoryHandleType","","External memory handle types",null,null],[13,"cudaExternalMemoryHandleTypeOpaqueFd","","Handle is an opaque file descriptor",73,null],[13,"cudaExternalMemoryHandleTypeOpaqueWin32","","Handle is an opaque shared NT handle",73,null],[13,"cudaExternalMemoryHandleTypeOpaqueWin32Kmt","","Handle is an opaque, globally shared handle",73,null],[13,"cudaExternalMemoryHandleTypeD3D12Heap","","Handle is a D3D12 heap object",73,null],[13,"cudaExternalMemoryHandleTypeD3D12Resource","","Handle is a D3D12 committed resource",73,null],[13,"cudaExternalMemoryHandleTypeD3D11Resource","","Handle is a shared NT handle to a D3D11 resource",73,null],[13,"cudaExternalMemoryHandleTypeD3D11ResourceKmt","","Handle is a globally shared handle to a D3D11 resource",73,null],[13,"cudaExternalMemoryHandleTypeNvSciBuf","","Handle is an NvSciBuf object",73,null],[4,"cudaExternalSemaphoreHandleType","","External semaphore handle types",null,null],[13,"cudaExternalSemaphoreHandleTypeOpaqueFd","","Handle is an opaque file descriptor",74,null],[13,"cudaExternalSemaphoreHandleTypeOpaqueWin32","","Handle is an opaque shared NT handle",74,null],[13,"cudaExternalSemaphoreHandleTypeOpaqueWin32Kmt","","Handle is an opaque, globally shared handle",74,null],[13,"cudaExternalSemaphoreHandleTypeD3D12Fence","","Handle is a shared NT handle referencing a D3D12 fence…",74,null],[13,"cudaExternalSemaphoreHandleTypeD3D11Fence","","Handle is a shared NT handle referencing a D3D11 fence…",74,null],[13,"cudaExternalSemaphoreHandleTypeNvSciSync","","Opaque handle to NvSciSync Object",74,null],[13,"cudaExternalSemaphoreHandleTypeKeyedMutex","","Handle is a shared NT handle referencing a D3D11 keyed…",74,null],[13,"cudaExternalSemaphoreHandleTypeKeyedMutexKmt","","Handle is a shared KMT handle referencing a D3D11 keyed…",74,null],[4,"cudaError_t","","CUDA error types",null,null],[13,"cudaSuccess","","The API call returned with no errors. In the case of query…",51,null],[13,"cudaErrorInvalidValue","","This indicates that one or more of the parameters passed…",51,null],[13,"cudaErrorMemoryAllocation","","The API call failed because it was unable to allocate…",51,null],[13,"cudaErrorInitializationError","","The API call failed because the CUDA driver and runtime…",51,null],[13,"cudaErrorCudartUnloading","","This indicates that a CUDA Runtime API call cannot be…",51,null],[13,"cudaErrorProfilerDisabled","","This indicates profiler is not initialized for this run.…",51,null],[13,"cudaErrorProfilerNotInitialized","","\\\\deprecated This error return is deprecated as of CUDA…",51,null],[13,"cudaErrorProfilerAlreadyStarted","","\\\\deprecated This error return is deprecated as of CUDA…",51,null],[13,"cudaErrorProfilerAlreadyStopped","","\\\\deprecated This error return is deprecated as of CUDA…",51,null],[13,"cudaErrorInvalidConfiguration","","This indicates that a kernel launch is requesting…",51,null],[13,"cudaErrorInvalidPitchValue","","This indicates that one or more of the pitch-related…",51,null],[13,"cudaErrorInvalidSymbol","","This indicates that the symbol name/identifier passed to…",51,null],[13,"cudaErrorInvalidHostPointer","","This indicates that at least one host pointer passed to…",51,null],[13,"cudaErrorInvalidDevicePointer","","This indicates that at least one device pointer passed to…",51,null],[13,"cudaErrorInvalidTexture","","This indicates that the texture passed to the API call is…",51,null],[13,"cudaErrorInvalidTextureBinding","","This indicates that the texture binding is not valid. This…",51,null],[13,"cudaErrorInvalidChannelDescriptor","","This indicates that the channel descriptor passed to the…",51,null],[13,"cudaErrorInvalidMemcpyDirection","","This indicates that the direction of the memcpy passed to…",51,null],[13,"cudaErrorAddressOfConstant","","This indicated that the user has taken the address of a…",51,null],[13,"cudaErrorTextureFetchFailed","","This indicated that a texture fetch was not able to be…",51,null],[13,"cudaErrorTextureNotBound","","This indicated that a texture was not bound for access.…",51,null],[13,"cudaErrorSynchronizationError","","This indicated that a synchronization operation had…",51,null],[13,"cudaErrorInvalidFilterSetting","","This indicates that a non-float texture was being accessed…",51,null],[13,"cudaErrorInvalidNormSetting","","This indicates that an attempt was made to read a…",51,null],[13,"cudaErrorMixedDeviceExecution","","Mixing of device and device emulation code was not…",51,null],[13,"cudaErrorNotYetImplemented","","This indicates that the API call is not yet implemented.…",51,null],[13,"cudaErrorMemoryValueTooLarge","","This indicated that an emulated device pointer exceeded…",51,null],[13,"cudaErrorInsufficientDriver","","This indicates that the installed NVIDIA CUDA driver is…",51,null],[13,"cudaErrorInvalidSurface","","This indicates that the surface passed to the API call is…",51,null],[13,"cudaErrorDuplicateVariableName","","This indicates that multiple global or constant variables…",51,null],[13,"cudaErrorDuplicateTextureName","","This indicates that multiple textures (across separate…",51,null],[13,"cudaErrorDuplicateSurfaceName","","This indicates that multiple surfaces (across separate…",51,null],[13,"cudaErrorDevicesUnavailable","","This indicates that all CUDA devices are busy or…",51,null],[13,"cudaErrorIncompatibleDriverContext","","This indicates that the current context is not compatible…",51,null],[13,"cudaErrorMissingConfiguration","","The device function being invoked (usually via…",51,null],[13,"cudaErrorPriorLaunchFailure","","This indicated that a previous kernel launch failed. This…",51,null],[13,"cudaErrorLaunchMaxDepthExceeded","","This error indicates that a device runtime grid launch did…",51,null],[13,"cudaErrorLaunchFileScopedTex","","This error indicates that a grid launch did not occur…",51,null],[13,"cudaErrorLaunchFileScopedSurf","","This error indicates that a grid launch did not occur…",51,null],[13,"cudaErrorSyncDepthExceeded","","This error indicates that a call to…",51,null],[13,"cudaErrorLaunchPendingCountExceeded","","This error indicates that a device runtime grid launch…",51,null],[13,"cudaErrorInvalidDeviceFunction","","The requested device function does not exist or is not…",51,null],[13,"cudaErrorNoDevice","","This indicates that no CUDA-capable devices were detected…",51,null],[13,"cudaErrorInvalidDevice","","This indicates that the device ordinal supplied by the…",51,null],[13,"cudaErrorStartupFailure","","This indicates an internal startup failure in the CUDA…",51,null],[13,"cudaErrorInvalidKernelImage","","This indicates that the device kernel image is invalid.",51,null],[13,"cudaErrorDeviceUninitialized","","This most frequently indicates that there is no context…",51,null],[13,"cudaErrorMapBufferObjectFailed","","This indicates that the buffer object could not be mapped.",51,null],[13,"cudaErrorUnmapBufferObjectFailed","","This indicates that the buffer object could not be unmapped.",51,null],[13,"cudaErrorArrayIsMapped","","This indicates that the specified array is currently…",51,null],[13,"cudaErrorAlreadyMapped","","This indicates that the resource is already mapped.",51,null],[13,"cudaErrorNoKernelImageForDevice","","This indicates that there is no kernel image available…",51,null],[13,"cudaErrorAlreadyAcquired","","This indicates that a resource has already been acquired.",51,null],[13,"cudaErrorNotMapped","","This indicates that a resource is not mapped.",51,null],[13,"cudaErrorNotMappedAsArray","","This indicates that a mapped resource is not available for…",51,null],[13,"cudaErrorNotMappedAsPointer","","This indicates that a mapped resource is not available for…",51,null],[13,"cudaErrorECCUncorrectable","","This indicates that an uncorrectable ECC error was…",51,null],[13,"cudaErrorUnsupportedLimit","","This indicates that the ::cudaLimit passed to the API call…",51,null],[13,"cudaErrorDeviceAlreadyInUse","","This indicates that a call tried to access an…",51,null],[13,"cudaErrorPeerAccessUnsupported","","This error indicates that P2P access is not supported…",51,null],[13,"cudaErrorInvalidPtx","","A PTX compilation failed. The runtime may fall back to…",51,null],[13,"cudaErrorInvalidGraphicsContext","","This indicates an error with the OpenGL or DirectX context.",51,null],[13,"cudaErrorNvlinkUncorrectable","","This indicates that an uncorrectable NVLink error was…",51,null],[13,"cudaErrorJitCompilerNotFound","","This indicates that the PTX JIT compiler library was not…",51,null],[13,"cudaErrorInvalidSource","","This indicates that the device kernel source is invalid.",51,null],[13,"cudaErrorFileNotFound","","This indicates that the file specified was not found.",51,null],[13,"cudaErrorSharedObjectSymbolNotFound","","This indicates that a link to a shared object failed to…",51,null],[13,"cudaErrorSharedObjectInitFailed","","This indicates that initialization of a shared object…",51,null],[13,"cudaErrorOperatingSystem","","This error indicates that an OS call failed.",51,null],[13,"cudaErrorInvalidResourceHandle","","This indicates that a resource handle passed to the API…",51,null],[13,"cudaErrorIllegalState","","This indicates that a resource required by the API call is…",51,null],[13,"cudaErrorSymbolNotFound","","This indicates that a named symbol was not found. Examples…",51,null],[13,"cudaErrorNotReady","","This indicates that asynchronous operations issued…",51,null],[13,"cudaErrorIllegalAddress","","The device encountered a load or store instruction on an…",51,null],[13,"cudaErrorLaunchOutOfResources","","This indicates that a launch did not occur because it did…",51,null],[13,"cudaErrorLaunchTimeout","","This indicates that the device kernel took too long to…",51,null],[13,"cudaErrorLaunchIncompatibleTexturing","","This error indicates a kernel launch that uses an…",51,null],[13,"cudaErrorPeerAccessAlreadyEnabled","","This error indicates that a call to…",51,null],[13,"cudaErrorPeerAccessNotEnabled","","This error indicates that ::cudaDeviceDisablePeerAccess()…",51,null],[13,"cudaErrorSetOnActiveProcess","","This indicates that the user has called…",51,null],[13,"cudaErrorContextIsDestroyed","","This error indicates that the context current to the…",51,null],[13,"cudaErrorAssert","","An assert triggered in device code during kernel…",51,null],[13,"cudaErrorTooManyPeers","","This error indicates that the hardware resources required…",51,null],[13,"cudaErrorHostMemoryAlreadyRegistered","","This error indicates that the memory range passed to…",51,null],[13,"cudaErrorHostMemoryNotRegistered","","This error indicates that the pointer passed to…",51,null],[13,"cudaErrorHardwareStackError","","Device encountered an error in the call stack during…",51,null],[13,"cudaErrorIllegalInstruction","","The device encountered an illegal instruction during…",51,null],[13,"cudaErrorMisalignedAddress","","The device encountered a load or store instruction on a…",51,null],[13,"cudaErrorInvalidAddressSpace","","While executing a kernel, the device encountered an…",51,null],[13,"cudaErrorInvalidPc","","The device encountered an invalid program counter. This…",51,null],[13,"cudaErrorLaunchFailure","","An exception occurred on the device while executing a…",51,null],[13,"cudaErrorCooperativeLaunchTooLarge","","This error indicates that the number of blocks launched…",51,null],[13,"cudaErrorNotPermitted","","This error indicates the attempted operation is not…",51,null],[13,"cudaErrorNotSupported","","This error indicates the attempted operation is not…",51,null],[13,"cudaErrorSystemNotReady","","This error indicates that the system is not yet ready to…",51,null],[13,"cudaErrorSystemDriverMismatch","","This error indicates that there is a mismatch between the…",51,null],[13,"cudaErrorCompatNotSupportedOnDevice","","This error indicates that the system was upgraded to run…",51,null],[13,"cudaErrorStreamCaptureUnsupported","","The operation is not permitted when the stream is capturing.",51,null],[13,"cudaErrorStreamCaptureInvalidated","","The current capture sequence on the stream has been…",51,null],[13,"cudaErrorStreamCaptureMerge","","The operation would have resulted in a merge of two…",51,null],[13,"cudaErrorStreamCaptureUnmatched","","The capture was not initiated in this stream.",51,null],[13,"cudaErrorStreamCaptureUnjoined","","The capture sequence contains a fork that was not joined…",51,null],[13,"cudaErrorStreamCaptureIsolation","","A dependency would have been created which crosses the…",51,null],[13,"cudaErrorStreamCaptureImplicit","","The operation would have resulted in a disallowed implicit…",51,null],[13,"cudaErrorCapturedEvent","","The operation is not permitted on an event which was last…",51,null],[13,"cudaErrorStreamCaptureWrongThread","","A stream capture sequence not initiated with the…",51,null],[13,"cudaErrorTimeout","","This indicates that the wait operation has timed out.",51,null],[13,"cudaErrorGraphExecUpdateFailure","","This error indicates that the graph update was not…",51,null],[13,"cudaErrorUnknown","","This indicates that an unknown internal error has occurred.",51,null],[13,"cudaErrorApiFailureBase","","Any unhandled CUDA driver error is added to this value and…",51,null],[4,"cudaOutputMode_t","","CUDA Profiler Output modes",null,null],[13,"cudaKeyValuePair","","< Output mode Key-Value pair format.",70,null],[13,"cudaCSV","","< Output mode Comma separated values format.",70,null],[4,"cudaCGScope","","CUDA cooperative group scope",null,null],[13,"cudaCGScopeInvalid","","< Invalid cooperative group scope",75,null],[13,"cudaCGScopeGrid","","< Scope represented by a grid_group",75,null],[13,"cudaCGScopeMultiGrid","","< Scope represented by a multi_grid_group",75,null],[4,"cudaGraphNodeType","","CUDA Graph node types",null,null],[13,"cudaGraphNodeTypeKernel","","< GPU kernel node",76,null],[13,"cudaGraphNodeTypeMemcpy","","< Memcpy node",76,null],[13,"cudaGraphNodeTypeMemset","","< Memset node",76,null],[13,"cudaGraphNodeTypeHost","","< Host (executable) node",76,null],[13,"cudaGraphNodeTypeGraph","","< Node which executes an embedded graph",76,null],[13,"cudaGraphNodeTypeEmpty","","< Empty (no-op) node",76,null],[13,"cudaGraphNodeTypeCount","","",76,null],[4,"cudaGraphExecUpdateResult","","CUDA Graph Update error types",null,null],[13,"cudaGraphExecUpdateSuccess","","< The update succeeded",77,null],[13,"cudaGraphExecUpdateError","","< The update failed for an unexpected reason which is…",77,null],[13,"cudaGraphExecUpdateErrorTopologyChanged","","< The update failed because the topology changed",77,null],[13,"cudaGraphExecUpdateErrorNodeTypeChanged","","< The update failed because a node type changed",77,null],[13,"cudaGraphExecUpdateErrorFunctionChanged","","< The update failed because the function of a kernel node…",77,null],[13,"cudaGraphExecUpdateErrorParametersChanged","","< The update failed because the parameters changed in a…",77,null],[13,"cudaGraphExecUpdateErrorNotSupported","","< The update failed because something about the node is…",77,null],[4,"cudaRoundMode","","",null,null],[13,"cudaRoundNearest","","",78,null],[13,"cudaRoundZero","","",78,null],[13,"cudaRoundPosInf","","",78,null],[13,"cudaRoundMinInf","","",78,null],[4,"cudaSurfaceBoundaryMode","","CUDA Surface boundary modes",null,null],[13,"cudaBoundaryModeZero","","< Zero boundary mode",79,null],[13,"cudaBoundaryModeClamp","","< Clamp boundary mode",79,null],[13,"cudaBoundaryModeTrap","","< Trap boundary mode",79,null],[4,"cudaSurfaceFormatMode","","CUDA Surface format modes",null,null],[13,"cudaFormatModeForced","","< Forced format mode",80,null],[13,"cudaFormatModeAuto","","< Auto format mode",80,null],[4,"cudaTextureAddressMode","","CUDA texture address modes",null,null],[13,"cudaAddressModeWrap","","< Wrapping address mode",81,null],[13,"cudaAddressModeClamp","","< Clamp to edge address mode",81,null],[13,"cudaAddressModeMirror","","< Mirror address mode",81,null],[13,"cudaAddressModeBorder","","< Border address mode",81,null],[4,"cudaTextureFilterMode","","CUDA texture filter modes",null,null],[13,"cudaFilterModePoint","","< Point filter mode",82,null],[13,"cudaFilterModeLinear","","< Linear filter mode",82,null],[4,"cudaTextureReadMode","","CUDA texture read modes",null,null],[13,"cudaReadModeElementType","","< Read texture as specified element type",83,null],[13,"cudaReadModeNormalizedFloat","","< Read texture as normalized float",83,null],[4,"cudaDataType_t","","",null,null],[13,"CUDA_R_16F","","",84,null],[13,"CUDA_C_16F","","",84,null],[13,"CUDA_R_32F","","",84,null],[13,"CUDA_C_32F","","",84,null],[13,"CUDA_R_64F","","",84,null],[13,"CUDA_C_64F","","",84,null],[13,"CUDA_R_8I","","",84,null],[13,"CUDA_C_8I","","",84,null],[13,"CUDA_R_8U","","",84,null],[13,"CUDA_C_8U","","",84,null],[13,"CUDA_R_32I","","",84,null],[13,"CUDA_C_32I","","",84,null],[13,"CUDA_R_32U","","",84,null],[13,"CUDA_C_32U","","",84,null],[4,"cudaDataType","","",null,null],[13,"CUDA_R_16F","","",84,null],[13,"CUDA_C_16F","","",84,null],[13,"CUDA_R_32F","","",84,null],[13,"CUDA_C_32F","","",84,null],[13,"CUDA_R_64F","","",84,null],[13,"CUDA_C_64F","","",84,null],[13,"CUDA_R_8I","","",84,null],[13,"CUDA_C_8I","","",84,null],[13,"CUDA_R_8U","","",84,null],[13,"CUDA_C_8U","","",84,null],[13,"CUDA_R_32I","","",84,null],[13,"CUDA_C_32I","","",84,null],[13,"CUDA_R_32U","","",84,null],[13,"CUDA_C_32U","","",84,null],[4,"cudnnStatus_t","","",null,null],[13,"CUDNN_STATUS_SUCCESS","","",85,null],[13,"CUDNN_STATUS_NOT_INITIALIZED","","",85,null],[13,"CUDNN_STATUS_ALLOC_FAILED","","",85,null],[13,"CUDNN_STATUS_BAD_PARAM","","",85,null],[13,"CUDNN_STATUS_INTERNAL_ERROR","","",85,null],[13,"CUDNN_STATUS_INVALID_VALUE","","",85,null],[13,"CUDNN_STATUS_ARCH_MISMATCH","","",85,null],[13,"CUDNN_STATUS_MAPPING_ERROR","","",85,null],[13,"CUDNN_STATUS_EXECUTION_FAILED","","",85,null],[13,"CUDNN_STATUS_NOT_SUPPORTED","","",85,null],[13,"CUDNN_STATUS_LICENSE_ERROR","","",85,null],[13,"CUDNN_STATUS_RUNTIME_PREREQUISITE_MISSING","","",85,null],[13,"CUDNN_STATUS_RUNTIME_IN_PROGRESS","","",85,null],[13,"CUDNN_STATUS_RUNTIME_FP_OVERFLOW","","",85,null],[4,"cudnnErrQueryMode_t","","",null,null],[13,"CUDNN_ERRQUERY_RAWCODE","","",86,null],[13,"CUDNN_ERRQUERY_NONBLOCKING","","",86,null],[13,"CUDNN_ERRQUERY_BLOCKING","","",86,null],[4,"cudnnDataType_t","","",null,null],[13,"CUDNN_DATA_FLOAT","","",87,null],[13,"CUDNN_DATA_DOUBLE","","",87,null],[13,"CUDNN_DATA_HALF","","",87,null],[13,"CUDNN_DATA_INT8","","",87,null],[13,"CUDNN_DATA_INT32","","",87,null],[13,"CUDNN_DATA_INT8x4","","",87,null],[13,"CUDNN_DATA_UINT8","","",87,null],[13,"CUDNN_DATA_UINT8x4","","",87,null],[13,"CUDNN_DATA_INT8x32","","",87,null],[4,"cudnnMathType_t","","",null,null],[13,"CUDNN_DEFAULT_MATH","","",88,null],[13,"CUDNN_TENSOR_OP_MATH","","",88,null],[13,"CUDNN_TENSOR_OP_MATH_ALLOW_CONVERSION","","",88,null],[4,"cudnnNanPropagation_t","","",null,null],[13,"CUDNN_NOT_PROPAGATE_NAN","","",89,null],[13,"CUDNN_PROPAGATE_NAN","","",89,null],[4,"cudnnDeterminism_t","","",null,null],[13,"CUDNN_NON_DETERMINISTIC","","",90,null],[13,"CUDNN_DETERMINISTIC","","",90,null],[4,"cudnnReorderType_t","","",null,null],[13,"CUDNN_DEFAULT_REORDER","","",91,null],[13,"CUDNN_NO_REORDER","","",91,null],[4,"cudnnTensorFormat_t","","",null,null],[13,"CUDNN_TENSOR_NCHW","","",92,null],[13,"CUDNN_TENSOR_NHWC","","",92,null],[13,"CUDNN_TENSOR_NCHW_VECT_C","","",92,null],[4,"cudnnFoldingDirection_t","","",null,null],[13,"CUDNN_TRANSFORM_FOLD","","",93,null],[13,"CUDNN_TRANSFORM_UNFOLD","","",93,null],[4,"cudnnOpTensorOp_t","","",null,null],[13,"CUDNN_OP_TENSOR_ADD","","",94,null],[13,"CUDNN_OP_TENSOR_MUL","","",94,null],[13,"CUDNN_OP_TENSOR_MIN","","",94,null],[13,"CUDNN_OP_TENSOR_MAX","","",94,null],[13,"CUDNN_OP_TENSOR_SQRT","","",94,null],[13,"CUDNN_OP_TENSOR_NOT","","",94,null],[4,"cudnnReduceTensorOp_t","","",null,null],[13,"CUDNN_REDUCE_TENSOR_ADD","","",95,null],[13,"CUDNN_REDUCE_TENSOR_MUL","","",95,null],[13,"CUDNN_REDUCE_TENSOR_MIN","","",95,null],[13,"CUDNN_REDUCE_TENSOR_MAX","","",95,null],[13,"CUDNN_REDUCE_TENSOR_AMAX","","",95,null],[13,"CUDNN_REDUCE_TENSOR_AVG","","",95,null],[13,"CUDNN_REDUCE_TENSOR_NORM1","","",95,null],[13,"CUDNN_REDUCE_TENSOR_NORM2","","",95,null],[13,"CUDNN_REDUCE_TENSOR_MUL_NO_ZEROS","","",95,null],[4,"cudnnReduceTensorIndices_t","","",null,null],[13,"CUDNN_REDUCE_TENSOR_NO_INDICES","","",96,null],[13,"CUDNN_REDUCE_TENSOR_FLATTENED_INDICES","","",96,null],[4,"cudnnIndicesType_t","","",null,null],[13,"CUDNN_32BIT_INDICES","","",97,null],[13,"CUDNN_64BIT_INDICES","","",97,null],[13,"CUDNN_16BIT_INDICES","","",97,null],[13,"CUDNN_8BIT_INDICES","","",97,null],[4,"cudnnConvolutionMode_t","","",null,null],[13,"CUDNN_CONVOLUTION","","",98,null],[13,"CUDNN_CROSS_CORRELATION","","",98,null],[4,"cudnnConvolutionFwdPreference_t","","",null,null],[13,"CUDNN_CONVOLUTION_FWD_NO_WORKSPACE","","",99,null],[13,"CUDNN_CONVOLUTION_FWD_PREFER_FASTEST","","",99,null],[13,"CUDNN_CONVOLUTION_FWD_SPECIFY_WORKSPACE_LIMIT","","",99,null],[4,"cudnnConvolutionFwdAlgo_t","","",null,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_GEMM","","",100,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM","","",100,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_GEMM","","",100,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_DIRECT","","",100,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_FFT","","",100,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_FFT_TILING","","",100,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD","","",100,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_WINOGRAD_NONFUSED","","",100,null],[13,"CUDNN_CONVOLUTION_FWD_ALGO_COUNT","","",100,null],[4,"cudnnConvolutionBwdFilterPreference_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_NO_WORKSPACE","","",101,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_PREFER_FASTEST","","",101,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_SPECIFY_WORKSPACE_LIMIT","","",101,null],[4,"cudnnConvolutionBwdFilterAlgo_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_0","","",102,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_1","","",102,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT","","",102,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_3","","",102,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD","","",102,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD_NONFUSED","","",102,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_FFT_TILING","","",102,null],[13,"CUDNN_CONVOLUTION_BWD_FILTER_ALGO_COUNT","","",102,null],[4,"cudnnConvolutionBwdDataPreference_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_NO_WORKSPACE","","",103,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_PREFER_FASTEST","","",103,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_SPECIFY_WORKSPACE_LIMIT","","",103,null],[4,"cudnnConvolutionBwdDataAlgo_t","","",null,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_0","","",104,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_1","","",104,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT","","",104,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_FFT_TILING","","",104,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD","","",104,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_WINOGRAD_NONFUSED","","",104,null],[13,"CUDNN_CONVOLUTION_BWD_DATA_ALGO_COUNT","","",104,null],[4,"cudnnSoftmaxAlgorithm_t","","",null,null],[13,"CUDNN_SOFTMAX_FAST","","",105,null],[13,"CUDNN_SOFTMAX_ACCURATE","","",105,null],[13,"CUDNN_SOFTMAX_LOG","","",105,null],[4,"cudnnSoftmaxMode_t","","",null,null],[13,"CUDNN_SOFTMAX_MODE_INSTANCE","","",106,null],[13,"CUDNN_SOFTMAX_MODE_CHANNEL","","",106,null],[4,"cudnnPoolingMode_t","","",null,null],[13,"CUDNN_POOLING_MAX","","",107,null],[13,"CUDNN_POOLING_AVERAGE_COUNT_INCLUDE_PADDING","","",107,null],[13,"CUDNN_POOLING_AVERAGE_COUNT_EXCLUDE_PADDING","","",107,null],[13,"CUDNN_POOLING_MAX_DETERMINISTIC","","",107,null],[4,"cudnnActivationMode_t","","",null,null],[13,"CUDNN_ACTIVATION_SIGMOID","","",108,null],[13,"CUDNN_ACTIVATION_RELU","","",108,null],[13,"CUDNN_ACTIVATION_TANH","","",108,null],[13,"CUDNN_ACTIVATION_CLIPPED_RELU","","",108,null],[13,"CUDNN_ACTIVATION_ELU","","",108,null],[13,"CUDNN_ACTIVATION_IDENTITY","","",108,null],[4,"cudnnLRNMode_t","","",null,null],[13,"CUDNN_LRN_CROSS_CHANNEL_DIM1","","",109,null],[4,"cudnnDivNormMode_t","","",null,null],[13,"CUDNN_DIVNORM_PRECOMPUTED_MEANS","","",110,null],[4,"cudnnBatchNormMode_t","","",null,null],[13,"CUDNN_BATCHNORM_PER_ACTIVATION","","",111,null],[13,"CUDNN_BATCHNORM_SPATIAL","","",111,null],[13,"CUDNN_BATCHNORM_SPATIAL_PERSISTENT","","",111,null],[4,"cudnnBatchNormOps_t","","",null,null],[13,"CUDNN_BATCHNORM_OPS_BN","","",112,null],[13,"CUDNN_BATCHNORM_OPS_BN_ACTIVATION","","",112,null],[13,"CUDNN_BATCHNORM_OPS_BN_ADD_ACTIVATION","","",112,null],[4,"cudnnSamplerType_t","","",null,null],[13,"CUDNN_SAMPLER_BILINEAR","","",113,null],[4,"cudnnRNNAlgo_t","","",null,null],[13,"CUDNN_RNN_ALGO_STANDARD","","",114,null],[13,"CUDNN_RNN_ALGO_PERSIST_STATIC","","",114,null],[13,"CUDNN_RNN_ALGO_PERSIST_DYNAMIC","","",114,null],[13,"CUDNN_RNN_ALGO_COUNT","","",114,null],[4,"cudnnRNNMode_t","","",null,null],[13,"CUDNN_RNN_RELU","","",115,null],[13,"CUDNN_RNN_TANH","","",115,null],[13,"CUDNN_LSTM","","",115,null],[13,"CUDNN_GRU","","",115,null],[4,"cudnnRNNBiasMode_t","","",null,null],[13,"CUDNN_RNN_NO_BIAS","","",116,null],[13,"CUDNN_RNN_SINGLE_INP_BIAS","","",116,null],[13,"CUDNN_RNN_DOUBLE_BIAS","","",116,null],[13,"CUDNN_RNN_SINGLE_REC_BIAS","","",116,null],[4,"cudnnDirectionMode_t","","",null,null],[13,"CUDNN_UNIDIRECTIONAL","","",117,null],[13,"CUDNN_BIDIRECTIONAL","","",117,null],[4,"cudnnRNNInputMode_t","","",null,null],[13,"CUDNN_LINEAR_INPUT","","",118,null],[13,"CUDNN_SKIP_INPUT","","",118,null],[4,"cudnnRNNClipMode_t","","",null,null],[13,"CUDNN_RNN_CLIP_NONE","","",119,null],[13,"CUDNN_RNN_CLIP_MINMAX","","",119,null],[4,"cudnnRNNDataLayout_t","","",null,null],[13,"CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_UNPACKED","","",120,null],[13,"CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_PACKED","","",120,null],[13,"CUDNN_RNN_DATA_LAYOUT_BATCH_MAJOR_UNPACKED","","",120,null],[4,"cudnnRNNPaddingMode_t","","",null,null],[13,"CUDNN_RNN_PADDED_IO_DISABLED","","",121,null],[13,"CUDNN_RNN_PADDED_IO_ENABLED","","",121,null],[4,"cudnnSeqDataAxis_t","","",null,null],[13,"CUDNN_SEQDATA_TIME_DIM","","",122,null],[13,"CUDNN_SEQDATA_BATCH_DIM","","",122,null],[13,"CUDNN_SEQDATA_BEAM_DIM","","",122,null],[13,"CUDNN_SEQDATA_VECT_DIM","","",122,null],[4,"cudnnMultiHeadAttnWeightKind_t","","",null,null],[13,"CUDNN_MH_ATTN_Q_WEIGHTS","","",123,null],[13,"CUDNN_MH_ATTN_K_WEIGHTS","","",123,null],[13,"CUDNN_MH_ATTN_V_WEIGHTS","","",123,null],[13,"CUDNN_MH_ATTN_O_WEIGHTS","","",123,null],[13,"CUDNN_MH_ATTN_Q_BIASES","","",123,null],[13,"CUDNN_MH_ATTN_K_BIASES","","",123,null],[13,"CUDNN_MH_ATTN_V_BIASES","","",123,null],[13,"CUDNN_MH_ATTN_O_BIASES","","",123,null],[4,"cudnnWgradMode_t","","",null,null],[13,"CUDNN_WGRAD_MODE_ADD","","",124,null],[13,"CUDNN_WGRAD_MODE_SET","","",124,null],[4,"cudnnCTCLossAlgo_t","","",null,null],[13,"CUDNN_CTC_LOSS_ALGO_DETERMINISTIC","","",125,null],[13,"CUDNN_CTC_LOSS_ALGO_NON_DETERMINISTIC","","",125,null],[4,"cudnnLossNormalizationMode_t","","",null,null],[13,"CUDNN_LOSS_NORMALIZATION_NONE","","",126,null],[13,"CUDNN_LOSS_NORMALIZATION_SOFTMAX","","",126,null],[4,"cudnnSeverity_t","","",null,null],[13,"CUDNN_SEV_FATAL","","",127,null],[13,"CUDNN_SEV_ERROR","","",127,null],[13,"CUDNN_SEV_WARNING","","",127,null],[13,"CUDNN_SEV_INFO","","",127,null],[4,"cudnnFusedOps_t","","",null,null],[13,"CUDNN_FUSED_SCALE_BIAS_ACTIVATION_CONV_BNSTATS","","",128,null],[13,"CUDNN_FUSED_SCALE_BIAS_ACTIVATION_WGRAD","","",128,null],[13,"CUDNN_FUSED_BN_FINALIZE_STATISTICS_TRAINING","","",128,null],[13,"CUDNN_FUSED_BN_FINALIZE_STATISTICS_INFERENCE","","",128,null],[13,"CUDNN_FUSED_CONV_SCALE_BIAS_ADD_ACTIVATION","","",128,null],[13,"CUDNN_FUSED_SCALE_BIAS_ADD_ACTIVATION_GEN_BITMASK","","",128,null],[13,"CUDNN_FUSED_DACTIVATION_FORK_DBATCHNORM","","",128,null],[4,"cudnnFusedOpsConstParamLabel_t","","",null,null],[13,"CUDNN_PARAM_XDESC","","",129,null],[13,"CUDNN_PARAM_XDATA_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_MODE","","",129,null],[13,"CUDNN_PARAM_BN_EQSCALEBIAS_DESC","","",129,null],[13,"CUDNN_PARAM_BN_EQSCALE_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_EQBIAS_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_ACTIVATION_DESC","","",129,null],[13,"CUDNN_PARAM_CONV_DESC","","",129,null],[13,"CUDNN_PARAM_WDESC","","",129,null],[13,"CUDNN_PARAM_WDATA_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_DWDESC","","",129,null],[13,"CUDNN_PARAM_DWDATA_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_YDESC","","",129,null],[13,"CUDNN_PARAM_YDATA_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_DYDESC","","",129,null],[13,"CUDNN_PARAM_DYDATA_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_YSTATS_DESC","","",129,null],[13,"CUDNN_PARAM_YSUM_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_YSQSUM_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_SCALEBIAS_MEANVAR_DESC","","",129,null],[13,"CUDNN_PARAM_BN_SCALE_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_BIAS_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_SAVED_MEAN_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_SAVED_INVSTD_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_RUNNING_MEAN_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_RUNNING_VAR_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_ZDESC","","",129,null],[13,"CUDNN_PARAM_ZDATA_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_Z_EQSCALEBIAS_DESC","","",129,null],[13,"CUDNN_PARAM_BN_Z_EQSCALE_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_Z_EQBIAS_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_ACTIVATION_BITMASK_DESC","","",129,null],[13,"CUDNN_PARAM_ACTIVATION_BITMASK_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_DXDESC","","",129,null],[13,"CUDNN_PARAM_DXDATA_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_DZDESC","","",129,null],[13,"CUDNN_PARAM_DZDATA_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_DSCALE_PLACEHOLDER","","",129,null],[13,"CUDNN_PARAM_BN_DBIAS_PLACEHOLDER","","",129,null],[4,"cudnnFusedOpsPointerPlaceHolder_t","","",null,null],[13,"CUDNN_PTR_NULL","","",130,null],[13,"CUDNN_PTR_ELEM_ALIGNED","","",130,null],[13,"CUDNN_PTR_16B_ALIGNED","","",130,null],[4,"cudnnFusedOpsVariantParamLabel_t","","",null,null],[13,"CUDNN_PTR_XDATA","","",131,null],[13,"CUDNN_PTR_BN_EQSCALE","","",131,null],[13,"CUDNN_PTR_BN_EQBIAS","","",131,null],[13,"CUDNN_PTR_WDATA","","",131,null],[13,"CUDNN_PTR_DWDATA","","",131,null],[13,"CUDNN_PTR_YDATA","","",131,null],[13,"CUDNN_PTR_DYDATA","","",131,null],[13,"CUDNN_PTR_YSUM","","",131,null],[13,"CUDNN_PTR_YSQSUM","","",131,null],[13,"CUDNN_PTR_WORKSPACE","","",131,null],[13,"CUDNN_PTR_BN_SCALE","","",131,null],[13,"CUDNN_PTR_BN_BIAS","","",131,null],[13,"CUDNN_PTR_BN_SAVED_MEAN","","",131,null],[13,"CUDNN_PTR_BN_SAVED_INVSTD","","",131,null],[13,"CUDNN_PTR_BN_RUNNING_MEAN","","",131,null],[13,"CUDNN_PTR_BN_RUNNING_VAR","","",131,null],[13,"CUDNN_PTR_ZDATA","","",131,null],[13,"CUDNN_PTR_BN_Z_EQSCALE","","",131,null],[13,"CUDNN_PTR_BN_Z_EQBIAS","","",131,null],[13,"CUDNN_PTR_ACTIVATION_BITMASK","","",131,null],[13,"CUDNN_PTR_DXDATA","","",131,null],[13,"CUDNN_PTR_DZDATA","","",131,null],[13,"CUDNN_PTR_BN_DSCALE","","",131,null],[13,"CUDNN_PTR_BN_DBIAS","","",131,null],[13,"CUDNN_SCALAR_SIZE_T_WORKSPACE_SIZE_IN_BYTES","","",131,null],[13,"CUDNN_SCALAR_INT64_T_BN_ACCUMULATION_COUNT","","",131,null],[13,"CUDNN_SCALAR_DOUBLE_BN_EXP_AVG_FACTOR","","",131,null],[13,"CUDNN_SCALAR_DOUBLE_BN_EPSILON","","",131,null],[5,"cudaDeviceReset","","\\\\brief Destroy all allocations and reset all state on the…",null,null],[5,"cudaDeviceSynchronize","","\\\\brief Wait for compute device to finish",null,null],[5,"cudaDeviceSetLimit","","\\\\brief Set resource limits",null,null],[5,"cudaDeviceGetLimit","","\\\\brief Returns resource limits",null,null],[5,"cudaDeviceGetCacheConfig","","\\\\brief Returns the preferred cache configuration for the…",null,null],[5,"cudaDeviceGetStreamPriorityRange","","\\\\brief Returns numerical values that correspond to the…",null,null],[5,"cudaDeviceSetCacheConfig","","\\\\brief Sets the preferred cache configuration for the…",null,null],[5,"cudaDeviceGetSharedMemConfig","","\\\\brief Returns the shared memory configuration for the…",null,null],[5,"cudaDeviceSetSharedMemConfig","","\\\\brief Sets the shared memory configuration for the…",null,null],[5,"cudaDeviceGetByPCIBusId","","\\\\brief Returns a handle to a compute device",null,null],[5,"cudaDeviceGetPCIBusId","","\\\\brief Returns a PCI Bus Id string for the device",null,null],[5,"cudaIpcGetEventHandle","","\\\\brief Gets an interprocess handle for a previously…",null,null],[5,"cudaIpcOpenEventHandle","","\\\\brief Opens an interprocess event handle for use in the…",null,null],[5,"cudaIpcGetMemHandle","","\\\\brief Gets an interprocess memory handle for an existing…",null,null],[5,"cudaIpcOpenMemHandle","","\\\\brief Opens an interprocess memory handle exported from…",null,null],[5,"cudaIpcCloseMemHandle","","\\\\brief Close memory mapped with cudaIpcOpenMemHandle",null,null],[5,"cudaThreadExit","","\\\\brief Exit and clean up from CUDA launches",null,null],[5,"cudaThreadSynchronize","","\\\\brief Wait for compute device to finish",null,null],[5,"cudaThreadSetLimit","","\\\\brief Set resource limits",null,null],[5,"cudaThreadGetLimit","","\\\\brief Returns resource limits",null,null],[5,"cudaThreadGetCacheConfig","","\\\\brief Returns the preferred cache configuration for the…",null,null],[5,"cudaThreadSetCacheConfig","","\\\\brief Sets the preferred cache configuration for the…",null,null],[5,"cudaGetLastError","","\\\\brief Returns the last error from a runtime call",null,null],[5,"cudaPeekAtLastError","","\\\\brief Returns the last error from a runtime call",null,null],[5,"cudaGetErrorName","","\\\\brief Returns the string representation of an error code…",null,null],[5,"cudaGetErrorString","","\\\\brief Returns the description string for an error code",null,null],[5,"cudaGetDeviceCount","","\\\\brief Returns the number of compute-capable devices",null,null],[5,"cudaGetDeviceProperties","","\\\\brief Returns information about the compute-device",null,null],[5,"cudaDeviceGetAttribute","","\\\\brief Returns information about the device",null,null],[5,"cudaDeviceGetNvSciSyncAttributes","","\\\\brief Return NvSciSync attributes that this device can…",null,null],[5,"cudaDeviceGetP2PAttribute","","\\\\brief Queries attributes of the link between two devices.",null,null],[5,"cudaChooseDevice","","\\\\brief Select compute-device which best matches criteria",null,null],[5,"cudaSetDevice","","\\\\brief Set device to be used for GPU executions",null,null],[5,"cudaGetDevice","","\\\\brief Returns which device is currently being used",null,null],[5,"cudaSetValidDevices","","\\\\brief Set a list of devices that can be used for CUDA",null,null],[5,"cudaSetDeviceFlags","","\\\\brief Sets flags to be used for device executions",null,null],[5,"cudaGetDeviceFlags","","\\\\brief Gets the flags for the current device",null,null],[5,"cudaStreamCreate","","\\\\brief Create an asynchronous stream",null,null],[5,"cudaStreamCreateWithFlags","","\\\\brief Create an asynchronous stream",null,null],[5,"cudaStreamCreateWithPriority","","\\\\brief Create an asynchronous stream with the specified…",null,null],[5,"cudaStreamGetPriority","","\\\\brief Query the priority of a stream",null,null],[5,"cudaStreamGetFlags","","\\\\brief Query the flags of a stream",null,null],[5,"cudaStreamDestroy","","\\\\brief Destroys and cleans up an asynchronous stream",null,null],[5,"cudaStreamWaitEvent","","\\\\brief Make a compute stream wait on an event",null,null],[5,"cudaStreamAddCallback","","\\\\brief Add a callback to a compute stream",null,null],[5,"cudaStreamSynchronize","","\\\\brief Waits for stream tasks to complete",null,null],[5,"cudaStreamQuery","","\\\\brief Queries an asynchronous stream for completion status",null,null],[5,"cudaStreamAttachMemAsync","","\\\\brief Attach memory to a stream asynchronously",null,null],[5,"cudaStreamBeginCapture","","\\\\brief Begins graph capture on a stream",null,null],[5,"cudaThreadExchangeStreamCaptureMode","","\\\\brief Swaps the stream capture interaction mode for a…",null,null],[5,"cudaStreamEndCapture","","\\\\brief Ends capture on a stream, returning the captured…",null,null],[5,"cudaStreamIsCapturing","","\\\\brief Returns a stream\'s capture status",null,null],[5,"cudaStreamGetCaptureInfo","","\\\\brief Query capture status of a stream",null,null],[5,"cudaEventCreate","","\\\\brief Creates an event object",null,null],[5,"cudaEventCreateWithFlags","","\\\\brief Creates an event object with the specified flags",null,null],[5,"cudaEventRecord","","\\\\brief Records an event",null,null],[5,"cudaEventQuery","","\\\\brief Queries an event\'s status",null,null],[5,"cudaEventSynchronize","","\\\\brief Waits for an event to complete",null,null],[5,"cudaEventDestroy","","\\\\brief Destroys an event object",null,null],[5,"cudaEventElapsedTime","","\\\\brief Computes the elapsed time between events",null,null],[5,"cudaImportExternalMemory","","\\\\brief Imports an external memory object",null,null],[5,"cudaExternalMemoryGetMappedBuffer","","\\\\brief Maps a buffer onto an imported memory object",null,null],[5,"cudaExternalMemoryGetMappedMipmappedArray","","\\\\brief Maps a CUDA mipmapped array onto an external memory…",null,null],[5,"cudaDestroyExternalMemory","","\\\\brief Destroys an external memory object.",null,null],[5,"cudaImportExternalSemaphore","","\\\\brief Imports an external semaphore",null,null],[5,"cudaSignalExternalSemaphoresAsync","","\\\\brief Signals a set of external semaphore objects",null,null],[5,"cudaWaitExternalSemaphoresAsync","","\\\\brief Waits on a set of external semaphore objects",null,null],[5,"cudaDestroyExternalSemaphore","","\\\\brief Destroys an external semaphore",null,null],[5,"cudaLaunchKernel","","\\\\brief Launches a device function",null,null],[5,"cudaLaunchCooperativeKernel","","\\\\brief Launches a device function where thread blocks can…",null,null],[5,"cudaLaunchCooperativeKernelMultiDevice","","\\\\brief Launches device functions on multiple devices where…",null,null],[5,"cudaFuncSetCacheConfig","","\\\\brief Sets the preferred cache configuration for a device…",null,null],[5,"cudaFuncSetSharedMemConfig","","\\\\brief Sets the shared memory configuration for a device…",null,null],[5,"cudaFuncGetAttributes","","\\\\brief Find out attributes for a given function",null,null],[5,"cudaFuncSetAttribute","","\\\\brief Set attributes for a given function",null,null],[5,"cudaSetDoubleForDevice","","\\\\brief Converts a double argument to be executed on a device",null,null],[5,"cudaSetDoubleForHost","","\\\\brief Converts a double argument after execution on a…",null,null],[5,"cudaLaunchHostFunc","","\\\\brief Enqueues a host function call in a stream",null,null],[5,"cudaOccupancyMaxActiveBlocksPerMultiprocessor","","\\\\brief Returns occupancy for a device function",null,null],[5,"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","","\\\\brief Returns occupancy for a device function with the…",null,null],[5,"cudaMallocManaged","","\\\\brief Allocates memory that will be automatically managed…",null,null],[5,"cudaMalloc","","\\\\brief Allocate memory on the device",null,null],[5,"cudaMallocHost","","\\\\brief Allocates page-locked memory on the host",null,null],[5,"cudaMallocPitch","","\\\\brief Allocates pitched memory on the device",null,null],[5,"cudaMallocArray","","\\\\brief Allocate an array on the device",null,null],[5,"cudaFree","","\\\\brief Frees memory on the device",null,null],[5,"cudaFreeHost","","\\\\brief Frees page-locked memory",null,null],[5,"cudaFreeArray","","\\\\brief Frees an array on the device",null,null],[5,"cudaFreeMipmappedArray","","\\\\brief Frees a mipmapped array on the device",null,null],[5,"cudaHostAlloc","","\\\\brief Allocates page-locked memory on the host",null,null],[5,"cudaHostRegister","","\\\\brief Registers an existing host memory range for use by…",null,null],[5,"cudaHostUnregister","","\\\\brief Unregisters a memory range that was registered with…",null,null],[5,"cudaHostGetDevicePointer","","\\\\brief Passes back device pointer of mapped host memory…",null,null],[5,"cudaHostGetFlags","","\\\\brief Passes back flags used to allocate pinned host…",null,null],[5,"cudaMalloc3D","","\\\\brief Allocates logical 1D, 2D, or 3D memory objects on…",null,null],[5,"cudaMalloc3DArray","","\\\\brief Allocate an array on the device",null,null],[5,"cudaMallocMipmappedArray","","\\\\brief Allocate a mipmapped array on the device",null,null],[5,"cudaGetMipmappedArrayLevel","","\\\\brief Gets a mipmap level of a CUDA mipmapped array",null,null],[5,"cudaMemcpy3D","","\\\\brief Copies data between 3D objects",null,null],[5,"cudaMemcpy3DPeer","","\\\\brief Copies memory between devices",null,null],[5,"cudaMemcpy3DAsync","","\\\\brief Copies data between 3D objects",null,null],[5,"cudaMemcpy3DPeerAsync","","\\\\brief Copies memory between devices asynchronously.",null,null],[5,"cudaMemGetInfo","","\\\\brief Gets free and total device memory",null,null],[5,"cudaArrayGetInfo","","\\\\brief Gets info about the specified cudaArray",null,null],[5,"cudaMemcpy","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpyPeer","","\\\\brief Copies memory between two devices",null,null],[5,"cudaMemcpy2D","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpy2DToArray","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpy2DFromArray","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpy2DArrayToArray","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpyToSymbol","","\\\\brief Copies data to the given symbol on the device",null,null],[5,"cudaMemcpyFromSymbol","","\\\\brief Copies data from the given symbol on the device",null,null],[5,"cudaMemcpyAsync","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpyPeerAsync","","\\\\brief Copies memory between two devices asynchronously.",null,null],[5,"cudaMemcpy2DAsync","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpy2DToArrayAsync","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpy2DFromArrayAsync","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpyToSymbolAsync","","\\\\brief Copies data to the given symbol on the device",null,null],[5,"cudaMemcpyFromSymbolAsync","","\\\\brief Copies data from the given symbol on the device",null,null],[5,"cudaMemset","","\\\\brief Initializes or sets device memory to a value",null,null],[5,"cudaMemset2D","","\\\\brief Initializes or sets device memory to a value",null,null],[5,"cudaMemset3D","","\\\\brief Initializes or sets device memory to a value",null,null],[5,"cudaMemsetAsync","","\\\\brief Initializes or sets device memory to a value",null,null],[5,"cudaMemset2DAsync","","\\\\brief Initializes or sets device memory to a value",null,null],[5,"cudaMemset3DAsync","","\\\\brief Initializes or sets device memory to a value",null,null],[5,"cudaGetSymbolAddress","","\\\\brief Finds the address associated with a CUDA symbol",null,null],[5,"cudaGetSymbolSize","","\\\\brief Finds the size of the object associated with a CUDA…",null,null],[5,"cudaMemPrefetchAsync","","\\\\brief Prefetches memory to the specified destination device",null,null],[5,"cudaMemAdvise","","\\\\brief Advise about the usage of a given memory range",null,null],[5,"cudaMemRangeGetAttribute","","\\\\brief Query an attribute of a given memory range",null,null],[5,"cudaMemRangeGetAttributes","","\\\\brief Query attributes of a given memory range.",null,null],[5,"cudaMemcpyToArray","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpyFromArray","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpyArrayToArray","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpyToArrayAsync","","\\\\brief Copies data between host and device",null,null],[5,"cudaMemcpyFromArrayAsync","","\\\\brief Copies data between host and device",null,null],[5,"cudaPointerGetAttributes","","\\\\brief Returns attributes about a specified pointer",null,null],[5,"cudaDeviceCanAccessPeer","","\\\\brief Queries if a device may directly access a peer…",null,null],[5,"cudaDeviceEnablePeerAccess","","\\\\brief Enables direct access to memory allocations on a…",null,null],[5,"cudaDeviceDisablePeerAccess","","\\\\brief Disables direct access to memory allocations on a…",null,null],[5,"cudaGraphicsUnregisterResource","","\\\\brief Unregisters a graphics resource for access by CUDA",null,null],[5,"cudaGraphicsResourceSetMapFlags","","\\\\brief Set usage flags for mapping a graphics resource",null,null],[5,"cudaGraphicsMapResources","","\\\\brief Map graphics resources for access by CUDA",null,null],[5,"cudaGraphicsUnmapResources","","\\\\brief Unmap graphics resources.",null,null],[5,"cudaGraphicsResourceGetMappedPointer","","\\\\brief Get an device pointer through which to access a…",null,null],[5,"cudaGraphicsSubResourceGetMappedArray","","\\\\brief Get an array through which to access a subresource…",null,null],[5,"cudaGraphicsResourceGetMappedMipmappedArray","","\\\\brief Get a mipmapped array through which to access a…",null,null],[5,"cudaBindTexture","","\\\\brief Binds a memory area to a texture",null,null],[5,"cudaBindTexture2D","","\\\\brief Binds a 2D memory area to a texture",null,null],[5,"cudaBindTextureToArray","","\\\\brief Binds an array to a texture",null,null],[5,"cudaBindTextureToMipmappedArray","","\\\\brief Binds a mipmapped array to a texture",null,null],[5,"cudaUnbindTexture","","\\\\brief Unbinds a texture",null,null],[5,"cudaGetTextureAlignmentOffset","","\\\\brief Get the alignment offset of a texture",null,null],[5,"cudaGetTextureReference","","\\\\brief Get the texture reference associated with a symbol",null,null],[5,"cudaBindSurfaceToArray","","\\\\brief Binds an array to a surface",null,null],[5,"cudaGetSurfaceReference","","\\\\brief Get the surface reference associated with a symbol",null,null],[5,"cudaGetChannelDesc","","\\\\brief Get the channel descriptor of an array",null,null],[5,"cudaCreateChannelDesc","","\\\\brief Returns a channel descriptor using the specified…",null,null],[5,"cudaCreateTextureObject","","\\\\brief Creates a texture object",null,null],[5,"cudaDestroyTextureObject","","\\\\brief Destroys a texture object",null,null],[5,"cudaGetTextureObjectResourceDesc","","\\\\brief Returns a texture object\'s resource descriptor",null,null],[5,"cudaGetTextureObjectTextureDesc","","\\\\brief Returns a texture object\'s texture descriptor",null,null],[5,"cudaGetTextureObjectResourceViewDesc","","\\\\brief Returns a texture object\'s resource view descriptor",null,null],[5,"cudaCreateSurfaceObject","","\\\\brief Creates a surface object",null,null],[5,"cudaDestroySurfaceObject","","\\\\brief Destroys a surface object",null,null],[5,"cudaGetSurfaceObjectResourceDesc","","\\\\brief Returns a surface object\'s resource descriptor…",null,null],[5,"cudaDriverGetVersion","","\\\\brief Returns the latest version of CUDA supported by the…",null,null],[5,"cudaRuntimeGetVersion","","\\\\brief Returns the CUDA Runtime version",null,null],[5,"cudaGraphCreate","","\\\\brief Creates a graph",null,null],[5,"cudaGraphAddKernelNode","","\\\\brief Creates a kernel execution node and adds it to a…",null,null],[5,"cudaGraphKernelNodeGetParams","","\\\\brief Returns a kernel node\'s parameters",null,null],[5,"cudaGraphKernelNodeSetParams","","\\\\brief Sets a kernel node\'s parameters",null,null],[5,"cudaGraphAddMemcpyNode","","\\\\brief Creates a memcpy node and adds it to a graph",null,null],[5,"cudaGraphMemcpyNodeGetParams","","\\\\brief Returns a memcpy node\'s parameters",null,null],[5,"cudaGraphMemcpyNodeSetParams","","\\\\brief Sets a memcpy node\'s parameters",null,null],[5,"cudaGraphAddMemsetNode","","\\\\brief Creates a memset node and adds it to a graph",null,null],[5,"cudaGraphMemsetNodeGetParams","","\\\\brief Returns a memset node\'s parameters",null,null],[5,"cudaGraphMemsetNodeSetParams","","\\\\brief Sets a memset node\'s parameters",null,null],[5,"cudaGraphAddHostNode","","\\\\brief Creates a host execution node and adds it to a graph",null,null],[5,"cudaGraphHostNodeGetParams","","\\\\brief Returns a host node\'s parameters",null,null],[5,"cudaGraphHostNodeSetParams","","\\\\brief Sets a host node\'s parameters",null,null],[5,"cudaGraphAddChildGraphNode","","\\\\brief Creates a child graph node and adds it to a graph",null,null],[5,"cudaGraphChildGraphNodeGetGraph","","\\\\brief Gets a handle to the embedded graph of a child…",null,null],[5,"cudaGraphAddEmptyNode","","\\\\brief Creates an empty node and adds it to a graph",null,null],[5,"cudaGraphClone","","\\\\brief Clones a graph",null,null],[5,"cudaGraphNodeFindInClone","","\\\\brief Finds a cloned version of a node",null,null],[5,"cudaGraphNodeGetType","","\\\\brief Returns a node\'s type",null,null],[5,"cudaGraphGetNodes","","\\\\brief Returns a graph\'s nodes",null,null],[5,"cudaGraphGetRootNodes","","\\\\brief Returns a graph\'s root nodes",null,null],[5,"cudaGraphGetEdges","","\\\\brief Returns a graph\'s dependency edges",null,null],[5,"cudaGraphNodeGetDependencies","","\\\\brief Returns a node\'s dependencies",null,null],[5,"cudaGraphNodeGetDependentNodes","","\\\\brief Returns a node\'s dependent nodes",null,null],[5,"cudaGraphAddDependencies","","\\\\brief Adds dependency edges to a graph.",null,null],[5,"cudaGraphRemoveDependencies","","\\\\brief Removes dependency edges from a graph.",null,null],[5,"cudaGraphDestroyNode","","\\\\brief Remove a node from the graph",null,null],[5,"cudaGraphInstantiate","","\\\\brief Creates an executable graph from a graph",null,null],[5,"cudaGraphExecKernelNodeSetParams","","\\\\brief Sets the parameters for a kernel node in the given…",null,null],[5,"cudaGraphExecMemcpyNodeSetParams","","\\\\brief Sets the parameters for a memcpy node in the given…",null,null],[5,"cudaGraphExecMemsetNodeSetParams","","\\\\brief Sets the parameters for a memset node in the given…",null,null],[5,"cudaGraphExecHostNodeSetParams","","\\\\brief Sets the parameters for a host node in the given…",null,null],[5,"cudaGraphExecUpdate","","\\\\brief Check whether an executable graph can be updated…",null,null],[5,"cudaGraphLaunch","","\\\\brief Launches an executable graph in a stream",null,null],[5,"cudaGraphExecDestroy","","\\\\brief Destroys an executable graph",null,null],[5,"cudaGraphDestroy","","\\\\brief Destroys a graph",null,null],[5,"cudaGetExportTable","","\\\\cond impl_private",null,null],[5,"cudnnGetVersion","","",null,null],[5,"cudnnGetCudartVersion","","",null,null],[5,"cudnnGetErrorString","","",null,null],[5,"cudnnQueryRuntimeError","","",null,null],[5,"cudnnGetProperty","","",null,null],[5,"cudnnCreate","","",null,null],[5,"cudnnDestroy","","",null,null],[5,"cudnnSetStream","","",null,null],[5,"cudnnGetStream","","",null,null],[5,"cudnnCreateTensorDescriptor","","",null,null],[5,"cudnnSetTensor4dDescriptor","","",null,null],[5,"cudnnSetTensor4dDescriptorEx","","",null,null],[5,"cudnnGetTensor4dDescriptor","","",null,null],[5,"cudnnSetTensorNdDescriptor","","",null,null],[5,"cudnnSetTensorNdDescriptorEx","","",null,null],[5,"cudnnGetTensorNdDescriptor","","",null,null],[5,"cudnnGetTensorSizeInBytes","","",null,null],[5,"cudnnDestroyTensorDescriptor","","",null,null],[5,"cudnnInitTransformDest","","Create a destination descriptor for cudnnTransformTensor",null,null],[5,"cudnnCreateTensorTransformDescriptor","","Create an empty tensor transform descriptor",null,null],[5,"cudnnSetTensorTransformDescriptor","","Initialize a previously created tensor transform descriptor.",null,null],[5,"cudnnGetTensorTransformDescriptor","","Retrieves the values stored in a previously initialized…",null,null],[5,"cudnnDestroyTensorTransformDescriptor","","Destroys a previously created tensor transform descriptor.",null,null],[5,"cudnnTransformTensor","","",null,null],[5,"cudnnTransformTensorEx","","",null,null],[5,"cudnnGetFoldedConvBackwardDataDescriptors","","",null,null],[5,"cudnnAddTensor","","",null,null],[5,"cudnnCreateOpTensorDescriptor","","",null,null],[5,"cudnnSetOpTensorDescriptor","","",null,null],[5,"cudnnGetOpTensorDescriptor","","",null,null],[5,"cudnnDestroyOpTensorDescriptor","","",null,null],[5,"cudnnOpTensor","","",null,null],[5,"cudnnCreateReduceTensorDescriptor","","",null,null],[5,"cudnnSetReduceTensorDescriptor","","",null,null],[5,"cudnnGetReduceTensorDescriptor","","",null,null],[5,"cudnnDestroyReduceTensorDescriptor","","",null,null],[5,"cudnnGetReductionIndicesSize","","",null,null],[5,"cudnnGetReductionWorkspaceSize","","",null,null],[5,"cudnnReduceTensor","","",null,null],[5,"cudnnSetTensor","","",null,null],[5,"cudnnScaleTensor","","",null,null],[5,"cudnnCreateFilterDescriptor","","",null,null],[5,"cudnnSetFilter4dDescriptor","","",null,null],[5,"cudnnGetFilter4dDescriptor","","",null,null],[5,"cudnnSetFilterNdDescriptor","","",null,null],[5,"cudnnGetFilterNdDescriptor","","",null,null],[5,"cudnnGetFilterSizeInBytes","","",null,null],[5,"cudnnTransformFilter","","",null,null],[5,"cudnnDestroyFilterDescriptor","","",null,null],[5,"cudnnReorderFilterAndBias","","",null,null],[5,"cudnnCreateConvolutionDescriptor","","",null,null],[5,"cudnnSetConvolutionMathType","","",null,null],[5,"cudnnGetConvolutionMathType","","",null,null],[5,"cudnnSetConvolutionGroupCount","","",null,null],[5,"cudnnGetConvolutionGroupCount","","",null,null],[5,"cudnnSetConvolutionReorderType","","",null,null],[5,"cudnnGetConvolutionReorderType","","",null,null],[5,"cudnnSetConvolution2dDescriptor","","",null,null],[5,"cudnnGetConvolution2dDescriptor","","",null,null],[5,"cudnnGetConvolution2dForwardOutputDim","","",null,null],[5,"cudnnSetConvolutionNdDescriptor","","",null,null],[5,"cudnnGetConvolutionNdDescriptor","","",null,null],[5,"cudnnGetConvolutionNdForwardOutputDim","","",null,null],[5,"cudnnDestroyConvolutionDescriptor","","",null,null],[5,"cudnnGetConvolutionForwardAlgorithmMaxCount","","",null,null],[5,"cudnnFindConvolutionForwardAlgorithm","","",null,null],[5,"cudnnFindConvolutionForwardAlgorithmEx","","",null,null],[5,"cudnnGetConvolutionForwardAlgorithm","","",null,null],[5,"cudnnGetConvolutionForwardAlgorithm_v7","","",null,null],[5,"cudnnGetConvolutionForwardWorkspaceSize","","",null,null],[5,"cudnnConvolutionForward","","",null,null],[5,"cudnnConvolutionBiasActivationForward","","",null,null],[5,"cudnnConvolutionBackwardBias","","",null,null],[5,"cudnnGetConvolutionBackwardFilterAlgorithmMaxCount","","",null,null],[5,"cudnnFindConvolutionBackwardFilterAlgorithm","","",null,null],[5,"cudnnFindConvolutionBackwardFilterAlgorithmEx","","",null,null],[5,"cudnnGetConvolutionBackwardFilterAlgorithm","","",null,null],[5,"cudnnGetConvolutionBackwardFilterAlgorithm_v7","","",null,null],[5,"cudnnGetConvolutionBackwardFilterWorkspaceSize","","",null,null],[5,"cudnnConvolutionBackwardFilter","","",null,null],[5,"cudnnGetConvolutionBackwardDataAlgorithmMaxCount","","",null,null],[5,"cudnnFindConvolutionBackwardDataAlgorithm","","",null,null],[5,"cudnnFindConvolutionBackwardDataAlgorithmEx","","",null,null],[5,"cudnnGetConvolutionBackwardDataAlgorithm","","",null,null],[5,"cudnnGetConvolutionBackwardDataAlgorithm_v7","","",null,null],[5,"cudnnGetConvolutionBackwardDataWorkspaceSize","","",null,null],[5,"cudnnConvolutionBackwardData","","",null,null],[5,"cudnnIm2Col","","",null,null],[5,"cudnnSoftmaxForward","","",null,null],[5,"cudnnSoftmaxBackward","","",null,null],[5,"cudnnCreatePoolingDescriptor","","",null,null],[5,"cudnnSetPooling2dDescriptor","","",null,null],[5,"cudnnGetPooling2dDescriptor","","",null,null],[5,"cudnnSetPoolingNdDescriptor","","",null,null],[5,"cudnnGetPoolingNdDescriptor","","",null,null],[5,"cudnnGetPoolingNdForwardOutputDim","","",null,null],[5,"cudnnGetPooling2dForwardOutputDim","","",null,null],[5,"cudnnDestroyPoolingDescriptor","","",null,null],[5,"cudnnPoolingForward","","",null,null],[5,"cudnnPoolingBackward","","",null,null],[5,"cudnnCreateActivationDescriptor","","",null,null],[5,"cudnnSetActivationDescriptor","","",null,null],[5,"cudnnGetActivationDescriptor","","",null,null],[5,"cudnnDestroyActivationDescriptor","","",null,null],[5,"cudnnActivationForward","","",null,null],[5,"cudnnActivationBackward","","",null,null],[5,"cudnnCreateLRNDescriptor","","",null,null],[5,"cudnnSetLRNDescriptor","","",null,null],[5,"cudnnGetLRNDescriptor","","",null,null],[5,"cudnnDestroyLRNDescriptor","","",null,null],[5,"cudnnLRNCrossChannelForward","","",null,null],[5,"cudnnLRNCrossChannelBackward","","",null,null],[5,"cudnnDivisiveNormalizationForward","","",null,null],[5,"cudnnDivisiveNormalizationBackward","","",null,null],[5,"cudnnDeriveBNTensorDescriptor","","",null,null],[5,"cudnnGetBatchNormalizationForwardTrainingExWorkspaceSize","","",null,null],[5,"cudnnGetBatchNormalizationBackwardExWorkspaceSize","","",null,null],[5,"cudnnGetBatchNormalizationTrainingExReserveSpaceSize","","",null,null],[5,"cudnnBatchNormalizationForwardTraining","","",null,null],[5,"cudnnBatchNormalizationForwardTrainingEx","","",null,null],[5,"cudnnBatchNormalizationForwardInference","","",null,null],[5,"cudnnBatchNormalizationBackward","","",null,null],[5,"cudnnBatchNormalizationBackwardEx","","",null,null],[5,"cudnnCreateSpatialTransformerDescriptor","","",null,null],[5,"cudnnSetSpatialTransformerNdDescriptor","","",null,null],[5,"cudnnDestroySpatialTransformerDescriptor","","",null,null],[5,"cudnnSpatialTfGridGeneratorForward","","",null,null],[5,"cudnnSpatialTfGridGeneratorBackward","","",null,null],[5,"cudnnSpatialTfSamplerForward","","",null,null],[5,"cudnnSpatialTfSamplerBackward","","",null,null],[5,"cudnnCreateDropoutDescriptor","","",null,null],[5,"cudnnDestroyDropoutDescriptor","","",null,null],[5,"cudnnDropoutGetStatesSize","","",null,null],[5,"cudnnDropoutGetReserveSpaceSize","","",null,null],[5,"cudnnSetDropoutDescriptor","","",null,null],[5,"cudnnRestoreDropoutDescriptor","","",null,null],[5,"cudnnGetDropoutDescriptor","","",null,null],[5,"cudnnDropoutForward","","",null,null],[5,"cudnnDropoutBackward","","",null,null],[5,"cudnnCreateRNNDescriptor","","",null,null],[5,"cudnnDestroyRNNDescriptor","","",null,null],[5,"cudnnSetRNNDescriptor","","",null,null],[5,"cudnnGetRNNDescriptor","","",null,null],[5,"cudnnSetRNNMatrixMathType","","",null,null],[5,"cudnnGetRNNMatrixMathType","","",null,null],[5,"cudnnSetRNNBiasMode","","",null,null],[5,"cudnnGetRNNBiasMode","","",null,null],[5,"cudnnRNNSetClip","","",null,null],[5,"cudnnRNNGetClip","","",null,null],[5,"cudnnSetRNNProjectionLayers","","",null,null],[5,"cudnnGetRNNProjectionLayers","","",null,null],[5,"cudnnCreatePersistentRNNPlan","","",null,null],[5,"cudnnDestroyPersistentRNNPlan","","",null,null],[5,"cudnnSetPersistentRNNPlan","","",null,null],[5,"cudnnGetRNNWorkspaceSize","","",null,null],[5,"cudnnGetRNNTrainingReserveSize","","",null,null],[5,"cudnnGetRNNParamsSize","","",null,null],[5,"cudnnGetRNNLinLayerMatrixParams","","",null,null],[5,"cudnnGetRNNLinLayerBiasParams","","",null,null],[5,"cudnnRNNForwardInference","","",null,null],[5,"cudnnRNNForwardTraining","","",null,null],[5,"cudnnRNNBackwardData","","",null,null],[5,"cudnnRNNBackwardWeights","","",null,null],[5,"cudnnSetRNNPaddingMode","","",null,null],[5,"cudnnGetRNNPaddingMode","","",null,null],[5,"cudnnCreateRNNDataDescriptor","","",null,null],[5,"cudnnDestroyRNNDataDescriptor","","",null,null],[5,"cudnnSetRNNDataDescriptor","","",null,null],[5,"cudnnGetRNNDataDescriptor","","",null,null],[5,"cudnnRNNForwardTrainingEx","","",null,null],[5,"cudnnRNNForwardInferenceEx","","",null,null],[5,"cudnnRNNBackwardDataEx","","",null,null],[5,"cudnnRNNBackwardWeightsEx","","",null,null],[5,"cudnnSetRNNAlgorithmDescriptor","","",null,null],[5,"cudnnGetRNNForwardInferenceAlgorithmMaxCount","","",null,null],[5,"cudnnFindRNNForwardInferenceAlgorithmEx","","",null,null],[5,"cudnnGetRNNForwardTrainingAlgorithmMaxCount","","",null,null],[5,"cudnnFindRNNForwardTrainingAlgorithmEx","","",null,null],[5,"cudnnGetRNNBackwardDataAlgorithmMaxCount","","",null,null],[5,"cudnnFindRNNBackwardDataAlgorithmEx","","",null,null],[5,"cudnnGetRNNBackwardWeightsAlgorithmMaxCount","","",null,null],[5,"cudnnFindRNNBackwardWeightsAlgorithmEx","","",null,null],[5,"cudnnCreateSeqDataDescriptor","","",null,null],[5,"cudnnDestroySeqDataDescriptor","","",null,null],[5,"cudnnSetSeqDataDescriptor","","",null,null],[5,"cudnnGetSeqDataDescriptor","","",null,null],[5,"cudnnCreateAttnDescriptor","","",null,null],[5,"cudnnDestroyAttnDescriptor","","",null,null],[5,"cudnnSetAttnDescriptor","","",null,null],[5,"cudnnGetAttnDescriptor","","",null,null],[5,"cudnnGetMultiHeadAttnBuffers","","",null,null],[5,"cudnnGetMultiHeadAttnWeights","","",null,null],[5,"cudnnMultiHeadAttnForward","","",null,null],[5,"cudnnMultiHeadAttnBackwardData","","",null,null],[5,"cudnnMultiHeadAttnBackwardWeights","","",null,null],[5,"cudnnCreateCTCLossDescriptor","","",null,null],[5,"cudnnSetCTCLossDescriptor","","",null,null],[5,"cudnnSetCTCLossDescriptorEx","","",null,null],[5,"cudnnGetCTCLossDescriptor","","",null,null],[5,"cudnnGetCTCLossDescriptorEx","","",null,null],[5,"cudnnDestroyCTCLossDescriptor","","",null,null],[5,"cudnnCTCLoss","","",null,null],[5,"cudnnGetCTCLossWorkspaceSize","","",null,null],[5,"cudnnCreateAlgorithmDescriptor","","",null,null],[5,"cudnnSetAlgorithmDescriptor","","",null,null],[5,"cudnnGetAlgorithmDescriptor","","",null,null],[5,"cudnnCopyAlgorithmDescriptor","","",null,null],[5,"cudnnDestroyAlgorithmDescriptor","","",null,null],[5,"cudnnCreateAlgorithmPerformance","","",null,null],[5,"cudnnSetAlgorithmPerformance","","",null,null],[5,"cudnnGetAlgorithmPerformance","","",null,null],[5,"cudnnDestroyAlgorithmPerformance","","",null,null],[5,"cudnnGetAlgorithmSpaceSize","","",null,null],[5,"cudnnSaveAlgorithm","","",null,null],[5,"cudnnRestoreAlgorithm","","",null,null],[5,"cudnnSetCallback","","",null,null],[5,"cudnnGetCallback","","",null,null],[5,"cudnnCreateFusedOpsConstParamPack","","",null,null],[5,"cudnnDestroyFusedOpsConstParamPack","","",null,null],[5,"cudnnSetFusedOpsConstParamPackAttribute","","",null,null],[5,"cudnnGetFusedOpsConstParamPackAttribute","","",null,null],[5,"cudnnCreateFusedOpsVariantParamPack","","",null,null],[5,"cudnnDestroyFusedOpsVariantParamPack","","",null,null],[5,"cudnnSetFusedOpsVariantParamPackAttribute","","",null,null],[5,"cudnnGetFusedOpsVariantParamPackAttribute","","",null,null],[5,"cudnnCreateFusedOpsPlan","","",null,null],[5,"cudnnDestroyFusedOpsPlan","","",null,null],[5,"cudnnMakeFusedOpsPlan","","",null,null],[5,"cudnnFusedOpsExecute","","",null,null],[5,"cudnnSetRNNDescriptor_v6","","",null,null],[5,"cudnnSetRNNDescriptor_v5","","",null,null],[6,"cudaArray_t","","CUDA array",null,null],[6,"cudaArray_const_t","","CUDA array (as source copy argument)",null,null],[6,"cudaMipmappedArray_t","","CUDA mipmapped array",null,null],[6,"cudaMipmappedArray_const_t","","CUDA mipmapped array (as source argument)",null,null],[6,"cudaHostFn_t","","CUDA host function \\\\param userData Argument value passed…",null,null],[6,"CUuuid","","",null,null],[6,"cudaUUID_t","","",null,null],[6,"cudaIpcEventHandle_t","","CUDA IPC event handle",null,null],[6,"cudaIpcMemHandle_t","","CUDA IPC memory handle",null,null],[6,"cudaStream_t","","CUDA stream",null,null],[6,"cudaEvent_t","","CUDA event types",null,null],[6,"cudaGraphicsResource_t","","CUDA graphics resource types",null,null],[6,"cudaExternalMemory_t","","CUDA external memory",null,null],[6,"cudaExternalSemaphore_t","","CUDA external semaphore",null,null],[6,"cudaGraph_t","","CUDA graph",null,null],[6,"cudaGraphNode_t","","CUDA graph node.",null,null],[6,"cudaGraphExec_t","","CUDA executable (launchable) graph",null,null],[6,"cudaSurfaceObject_t","","An opaque value that represents a CUDA Surface object",null,null],[6,"cudaTextureObject_t","","An opaque value that represents a CUDA texture object",null,null],[6,"libraryPropertyType_t","","",null,null],[6,"libraryPropertyType","","",null,null],[6,"cudaStreamCallback_t","","Type of stream callback functions. \\\\param stream The…",null,null],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"cudnnHandle_t","","",null,null],[6,"cudnnTensorDescriptor_t","","",null,null],[6,"cudnnConvolutionDescriptor_t","","",null,null],[6,"cudnnPoolingDescriptor_t","","",null,null],[6,"cudnnFilterDescriptor_t","","",null,null],[6,"cudnnLRNDescriptor_t","","",null,null],[6,"cudnnActivationDescriptor_t","","",null,null],[6,"cudnnSpatialTransformerDescriptor_t","","",null,null],[6,"cudnnOpTensorDescriptor_t","","",null,null],[6,"cudnnReduceTensorDescriptor_t","","",null,null],[6,"cudnnCTCLossDescriptor_t","","",null,null],[6,"cudnnTensorTransformDescriptor_t","","",null,null],[6,"cudnnDropoutDescriptor_t","","",null,null],[6,"cudnnRNNDescriptor_t","","",null,null],[6,"cudnnPersistentRNNPlan_t","","",null,null],[6,"cudnnRNNDataDescriptor_t","","",null,null],[6,"cudnnAlgorithmDescriptor_t","","",null,null],[6,"cudnnAlgorithmPerformance_t","","",null,null],[6,"cudnnSeqDataDescriptor_t","","",null,null],[6,"cudnnAttnQueryMap_t","","",null,null],[6,"cudnnAttnDescriptor_t","","",null,null],[6,"cudnnCallback_t","","",null,null],[6,"cudnnFusedOpsConstParamPack_t","","",null,null],[6,"cudnnFusedOpsVariantParamPack_t","","",null,null],[6,"cudnnFusedOpsPlan_t","","",null,null],[17,"CUDNN_MAJOR","","",null,null],[17,"CUDNN_MINOR","","",null,null],[17,"CUDNN_PATCHLEVEL","","",null,null],[17,"CUDNN_VERSION","","",null,null],[17,"CUDNN_DIM_MAX","","",null,null],[17,"CUDNN_LRN_MIN_N","","",null,null],[17,"CUDNN_LRN_MAX_N","","",null,null],[17,"CUDNN_LRN_MIN_K","","",null,null],[17,"CUDNN_LRN_MIN_BETA","","",null,null],[17,"CUDNN_BN_MIN_EPSILON","","",null,null],[17,"CUDNN_SEQDATA_DIM_COUNT","","",null,null],[17,"CUDNN_ATTN_QUERYMAP_ALL_TO_ONE","","",null,null],[17,"CUDNN_ATTN_QUERYMAP_ONE_TO_ONE","","",null,null],[17,"CUDNN_ATTN_DISABLE_PROJ_BIASES","","",null,null],[17,"CUDNN_ATTN_ENABLE_PROJ_BIASES","","",null,null],[17,"CUDNN_ATTN_WKIND_COUNT","","",null,null],[17,"libraryPropertyType_t_MAJOR_VERSION","","",null,null],[17,"libraryPropertyType_t_MINOR_VERSION","","",null,null],[17,"libraryPropertyType_t_PATCH_LEVEL","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"clone","","",0,[[],["dim3",3]]],[11,"clone","","",51,[[],["cudaerror",4]]],[11,"clone","","",52,[[],["cudachannelformatkind",4]]],[11,"clone","","",1,[[],["cudachannelformatdesc",3]]],[11,"clone","","",132,[[],["cudaarray",3]]],[11,"clone","","",133,[[],["cudamipmappedarray",3]]],[11,"clone","","",53,[[],["cudamemorytype",4]]],[11,"clone","","",54,[[],["cudamemcpykind",4]]],[11,"clone","","",2,[[],["cudapitchedptr",3]]],[11,"clone","","",3,[[],["cudaextent",3]]],[11,"clone","","",4,[[],["cudapos",3]]],[11,"clone","","",5,[[],["cudamemcpy3dparms",3]]],[11,"clone","","",6,[[],["cudamemcpy3dpeerparms",3]]],[11,"clone","","",7,[[],["cudamemsetparams",3]]],[11,"clone","","",8,[[],["cudahostnodeparams",3]]],[11,"clone","","",55,[[],["cudastreamcapturestatus",4]]],[11,"clone","","",56,[[],["cudastreamcapturemode",4]]],[11,"clone","","",134,[[],["cudagraphicsresource",3]]],[11,"clone","","",57,[[],["cudagraphicsregisterflags",4]]],[11,"clone","","",58,[[],["cudagraphicsmapflags",4]]],[11,"clone","","",59,[[],["cudagraphicscubeface",4]]],[11,"clone","","",60,[[],["cudaresourcetype",4]]],[11,"clone","","",61,[[],["cudaresourceviewformat",4]]],[11,"clone","","",9,[[],["cudaresourcedesc",3]]],[11,"clone","","",45,[[],["cudaresourcedesc__bindgen_ty_1",19]]],[11,"clone","","",10,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",11,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_2",3]]],[11,"clone","","",12,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_3",3]]],[11,"clone","","",13,[[],["cudaresourcedesc__bindgen_ty_1__bindgen_ty_4",3]]],[11,"clone","","",14,[[],["cudaresourceviewdesc",3]]],[11,"clone","","",15,[[],["cudapointerattributes",3]]],[11,"clone","","",16,[[],["cudafuncattributes",3]]],[11,"clone","","",62,[[],["cudafuncattribute",4]]],[11,"clone","","",63,[[],["cudafunccache",4]]],[11,"clone","","",64,[[],["cudasharedmemconfig",4]]],[11,"clone","","",65,[[],["cudasharedcarveout",4]]],[11,"clone","","",66,[[],["cudacomputemode",4]]],[11,"clone","","",67,[[],["cudalimit",4]]],[11,"clone","","",68,[[],["cudamemoryadvise",4]]],[11,"clone","","",69,[[],["cudamemrangeattribute",4]]],[11,"clone","","",70,[[],["cudaoutputmode",4]]],[11,"clone","","",71,[[],["cudadeviceattr",4]]],[11,"clone","","",72,[[],["cudadevicep2pattr",4]]],[11,"clone","","",17,[[],["cuuuid_st",3]]],[11,"clone","","",18,[[],["cudadeviceprop",3]]],[11,"clone","","",19,[[],["cudaipceventhandle_st",3]]],[11,"clone","","",20,[[],["cudaipcmemhandle_st",3]]],[11,"clone","","",73,[[],["cudaexternalmemoryhandletype",4]]],[11,"clone","","",21,[[],["cudaexternalmemoryhandledesc",3]]],[11,"clone","","",46,[[],["cudaexternalmemoryhandledesc__bindgen_ty_1",19]]],[11,"clone","","",22,[[],["cudaexternalmemoryhandledesc__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",23,[[],["cudaexternalmemorybufferdesc",3]]],[11,"clone","","",24,[[],["cudaexternalmemorymipmappedarraydesc",3]]],[11,"clone","","",74,[[],["cudaexternalsemaphorehandletype",4]]],[11,"clone","","",25,[[],["cudaexternalsemaphorehandledesc",3]]],[11,"clone","","",47,[[],["cudaexternalsemaphorehandledesc__bindgen_ty_1",19]]],[11,"clone","","",26,[[],["cudaexternalsemaphorehandledesc__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",27,[[],["cudaexternalsemaphoresignalparams",3]]],[11,"clone","","",28,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1",3]]],[11,"clone","","",29,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",48,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_2",19]]],[11,"clone","","",30,[[],["cudaexternalsemaphoresignalparams__bindgen_ty_1__bindgen_ty_3",3]]],[11,"clone","","",31,[[],["cudaexternalsemaphorewaitparams",3]]],[11,"clone","","",32,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1",3]]],[11,"clone","","",33,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_1",3]]],[11,"clone","","",49,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_2",19]]],[11,"clone","","",34,[[],["cudaexternalsemaphorewaitparams__bindgen_ty_1__bindgen_ty_3",3]]],[11,"clone","","",135,[[],["custream_st",3]]],[11,"clone","","",136,[[],["cuevent_st",3]]],[11,"clone","","",137,[[],["cuexternalmemory_st",3]]],[11,"clone","","",138,[[],["cuexternalsemaphore_st",3]]],[11,"clone","","",139,[[],["cugraph_st",3]]],[11,"clone","","",140,[[],["cugraphnode_st",3]]],[11,"clone","","",75,[[],["cudacgscope",4]]],[11,"clone","","",35,[[],["cudalaunchparams",3]]],[11,"clone","","",36,[[],["cudakernelnodeparams",3]]],[11,"clone","","",76,[[],["cudagraphnodetype",4]]],[11,"clone","","",141,[[],["cugraphexec_st",3]]],[11,"clone","","",77,[[],["cudagraphexecupdateresult",4]]],[11,"clone","","",78,[[],["cudaroundmode",4]]],[11,"clone","","",79,[[],["cudasurfaceboundarymode",4]]],[11,"clone","","",80,[[],["cudasurfaceformatmode",4]]],[11,"clone","","",37,[[],["surfacereference",3]]],[11,"clone","","",81,[[],["cudatextureaddressmode",4]]],[11,"clone","","",82,[[],["cudatexturefiltermode",4]]],[11,"clone","","",83,[[],["cudatexturereadmode",4]]],[11,"clone","","",38,[[],["texturereference",3]]],[11,"clone","","",39,[[],["cudatexturedesc",3]]],[11,"clone","","",84,[[],["cudadatatype_t",4]]],[11,"clone","","",142,[[],["cudnncontext",3]]],[11,"clone","","",85,[[],["cudnnstatus_t",4]]],[11,"clone","","",143,[[],["cudnnruntimetag_t",3]]],[11,"clone","","",86,[[],["cudnnerrquerymode_t",4]]],[11,"clone","","",144,[[],["cudnntensorstruct",3]]],[11,"clone","","",145,[[],["cudnnconvolutionstruct",3]]],[11,"clone","","",146,[[],["cudnnpoolingstruct",3]]],[11,"clone","","",147,[[],["cudnnfilterstruct",3]]],[11,"clone","","",148,[[],["cudnnlrnstruct",3]]],[11,"clone","","",149,[[],["cudnnactivationstruct",3]]],[11,"clone","","",150,[[],["cudnnspatialtransformerstruct",3]]],[11,"clone","","",151,[[],["cudnnoptensorstruct",3]]],[11,"clone","","",152,[[],["cudnnreducetensorstruct",3]]],[11,"clone","","",153,[[],["cudnnctclossstruct",3]]],[11,"clone","","",154,[[],["cudnntensortransformstruct",3]]],[11,"clone","","",87,[[],["cudnndatatype_t",4]]],[11,"clone","","",88,[[],["cudnnmathtype_t",4]]],[11,"clone","","",89,[[],["cudnnnanpropagation_t",4]]],[11,"clone","","",90,[[],["cudnndeterminism_t",4]]],[11,"clone","","",91,[[],["cudnnreordertype_t",4]]],[11,"clone","","",92,[[],["cudnntensorformat_t",4]]],[11,"clone","","",93,[[],["cudnnfoldingdirection_t",4]]],[11,"clone","","",94,[[],["cudnnoptensorop_t",4]]],[11,"clone","","",95,[[],["cudnnreducetensorop_t",4]]],[11,"clone","","",96,[[],["cudnnreducetensorindices_t",4]]],[11,"clone","","",97,[[],["cudnnindicestype_t",4]]],[11,"clone","","",98,[[],["cudnnconvolutionmode_t",4]]],[11,"clone","","",99,[[],["cudnnconvolutionfwdpreference_t",4]]],[11,"clone","","",100,[[],["cudnnconvolutionfwdalgo_t",4]]],[11,"clone","","",40,[[],["cudnnconvolutionfwdalgoperf_t",3]]],[11,"clone","","",101,[[],["cudnnconvolutionbwdfilterpreference_t",4]]],[11,"clone","","",102,[[],["cudnnconvolutionbwdfilteralgo_t",4]]],[11,"clone","","",41,[[],["cudnnconvolutionbwdfilteralgoperf_t",3]]],[11,"clone","","",103,[[],["cudnnconvolutionbwddatapreference_t",4]]],[11,"clone","","",104,[[],["cudnnconvolutionbwddataalgo_t",4]]],[11,"clone","","",42,[[],["cudnnconvolutionbwddataalgoperf_t",3]]],[11,"clone","","",105,[[],["cudnnsoftmaxalgorithm_t",4]]],[11,"clone","","",106,[[],["cudnnsoftmaxmode_t",4]]],[11,"clone","","",107,[[],["cudnnpoolingmode_t",4]]],[11,"clone","","",108,[[],["cudnnactivationmode_t",4]]],[11,"clone","","",109,[[],["cudnnlrnmode_t",4]]],[11,"clone","","",110,[[],["cudnndivnormmode_t",4]]],[11,"clone","","",111,[[],["cudnnbatchnormmode_t",4]]],[11,"clone","","",112,[[],["cudnnbatchnormops_t",4]]],[11,"clone","","",113,[[],["cudnnsamplertype_t",4]]],[11,"clone","","",155,[[],["cudnndropoutstruct",3]]],[11,"clone","","",114,[[],["cudnnrnnalgo_t",4]]],[11,"clone","","",115,[[],["cudnnrnnmode_t",4]]],[11,"clone","","",116,[[],["cudnnrnnbiasmode_t",4]]],[11,"clone","","",117,[[],["cudnndirectionmode_t",4]]],[11,"clone","","",118,[[],["cudnnrnninputmode_t",4]]],[11,"clone","","",119,[[],["cudnnrnnclipmode_t",4]]],[11,"clone","","",120,[[],["cudnnrnndatalayout_t",4]]],[11,"clone","","",121,[[],["cudnnrnnpaddingmode_t",4]]],[11,"clone","","",156,[[],["cudnnrnnstruct",3]]],[11,"clone","","",157,[[],["cudnnpersistentrnnplan",3]]],[11,"clone","","",158,[[],["cudnnrnndatastruct",3]]],[11,"clone","","",159,[[],["cudnnalgorithmstruct",3]]],[11,"clone","","",160,[[],["cudnnalgorithmperformancestruct",3]]],[11,"clone","","",122,[[],["cudnnseqdataaxis_t",4]]],[11,"clone","","",161,[[],["cudnnseqdatastruct",3]]],[11,"clone","","",162,[[],["cudnnattnstruct",3]]],[11,"clone","","",123,[[],["cudnnmultiheadattnweightkind_t",4]]],[11,"clone","","",124,[[],["cudnnwgradmode_t",4]]],[11,"clone","","",125,[[],["cudnnctclossalgo_t",4]]],[11,"clone","","",126,[[],["cudnnlossnormalizationmode_t",4]]],[11,"clone","","",43,[[],["cudnnalgorithm_t",3]]],[11,"clone","","",50,[[],["cudnnalgorithm_t_algorithm",19]]],[11,"clone","","",127,[[],["cudnnseverity_t",4]]],[11,"clone","","",44,[[],["cudnndebug_t",3]]],[11,"clone","","",163,[[],["cudnnfusedopsconstparamstruct",3]]],[11,"clone","","",164,[[],["cudnnfusedopsvariantparamstruct",3]]],[11,"clone","","",165,[[],["cudnnfusedopsplanstruct",3]]],[11,"clone","","",128,[[],["cudnnfusedops_t",4]]],[11,"clone","","",129,[[],["cudnnfusedopsconstparamlabel_t",4]]],[11,"clone","","",130,[[],["cudnnfusedopspointerplaceholder_t",4]]],[11,"clone","","",131,[[],["cudnnfusedopsvariantparamlabel_t",4]]],[11,"default","","",40,[[]]],[11,"default","","",41,[[]]],[11,"default","","",42,[[]]],[11,"eq","","",51,[[["cudaerror",4]]]],[11,"eq","","",52,[[["cudachannelformatkind",4]]]],[11,"eq","","",53,[[["cudamemorytype",4]]]],[11,"eq","","",54,[[["cudamemcpykind",4]]]],[11,"eq","","",55,[[["cudastreamcapturestatus",4]]]],[11,"eq","","",56,[[["cudastreamcapturemode",4]]]],[11,"eq","","",57,[[["cudagraphicsregisterflags",4]]]],[11,"eq","","",58,[[["cudagraphicsmapflags",4]]]],[11,"eq","","",59,[[["cudagraphicscubeface",4]]]],[11,"eq","","",60,[[["cudaresourcetype",4]]]],[11,"eq","","",61,[[["cudaresourceviewformat",4]]]],[11,"eq","","",62,[[["cudafuncattribute",4]]]],[11,"eq","","",63,[[["cudafunccache",4]]]],[11,"eq","","",64,[[["cudasharedmemconfig",4]]]],[11,"eq","","",65,[[["cudasharedcarveout",4]]]],[11,"eq","","",66,[[["cudacomputemode",4]]]],[11,"eq","","",67,[[["cudalimit",4]]]],[11,"eq","","",68,[[["cudamemoryadvise",4]]]],[11,"eq","","",69,[[["cudamemrangeattribute",4]]]],[11,"eq","","",70,[[["cudaoutputmode",4]]]],[11,"eq","","",71,[[["cudadeviceattr",4]]]],[11,"eq","","",72,[[["cudadevicep2pattr",4]]]],[11,"eq","","",73,[[["cudaexternalmemoryhandletype",4]]]],[11,"eq","","",74,[[["cudaexternalsemaphorehandletype",4]]]],[11,"eq","","",75,[[["cudacgscope",4]]]],[11,"eq","","",76,[[["cudagraphnodetype",4]]]],[11,"eq","","",77,[[["cudagraphexecupdateresult",4]]]],[11,"eq","","",78,[[["cudaroundmode",4]]]],[11,"eq","","",79,[[["cudasurfaceboundarymode",4]]]],[11,"eq","","",80,[[["cudasurfaceformatmode",4]]]],[11,"eq","","",81,[[["cudatextureaddressmode",4]]]],[11,"eq","","",82,[[["cudatexturefiltermode",4]]]],[11,"eq","","",83,[[["cudatexturereadmode",4]]]],[11,"eq","","",84,[[["cudadatatype_t",4]]]],[11,"eq","","",85,[[["cudnnstatus_t",4]]]],[11,"eq","","",86,[[["cudnnerrquerymode_t",4]]]],[11,"eq","","",87,[[["cudnndatatype_t",4]]]],[11,"eq","","",88,[[["cudnnmathtype_t",4]]]],[11,"eq","","",89,[[["cudnnnanpropagation_t",4]]]],[11,"eq","","",90,[[["cudnndeterminism_t",4]]]],[11,"eq","","",91,[[["cudnnreordertype_t",4]]]],[11,"eq","","",92,[[["cudnntensorformat_t",4]]]],[11,"eq","","",93,[[["cudnnfoldingdirection_t",4]]]],[11,"eq","","",94,[[["cudnnoptensorop_t",4]]]],[11,"eq","","",95,[[["cudnnreducetensorop_t",4]]]],[11,"eq","","",96,[[["cudnnreducetensorindices_t",4]]]],[11,"eq","","",97,[[["cudnnindicestype_t",4]]]],[11,"eq","","",98,[[["cudnnconvolutionmode_t",4]]]],[11,"eq","","",99,[[["cudnnconvolutionfwdpreference_t",4]]]],[11,"eq","","",100,[[["cudnnconvolutionfwdalgo_t",4]]]],[11,"eq","","",101,[[["cudnnconvolutionbwdfilterpreference_t",4]]]],[11,"eq","","",102,[[["cudnnconvolutionbwdfilteralgo_t",4]]]],[11,"eq","","",103,[[["cudnnconvolutionbwddatapreference_t",4]]]],[11,"eq","","",104,[[["cudnnconvolutionbwddataalgo_t",4]]]],[11,"eq","","",105,[[["cudnnsoftmaxalgorithm_t",4]]]],[11,"eq","","",106,[[["cudnnsoftmaxmode_t",4]]]],[11,"eq","","",107,[[["cudnnpoolingmode_t",4]]]],[11,"eq","","",108,[[["cudnnactivationmode_t",4]]]],[11,"eq","","",109,[[["cudnnlrnmode_t",4]]]],[11,"eq","","",110,[[["cudnndivnormmode_t",4]]]],[11,"eq","","",111,[[["cudnnbatchnormmode_t",4]]]],[11,"eq","","",112,[[["cudnnbatchnormops_t",4]]]],[11,"eq","","",113,[[["cudnnsamplertype_t",4]]]],[11,"eq","","",114,[[["cudnnrnnalgo_t",4]]]],[11,"eq","","",115,[[["cudnnrnnmode_t",4]]]],[11,"eq","","",116,[[["cudnnrnnbiasmode_t",4]]]],[11,"eq","","",117,[[["cudnndirectionmode_t",4]]]],[11,"eq","","",118,[[["cudnnrnninputmode_t",4]]]],[11,"eq","","",119,[[["cudnnrnnclipmode_t",4]]]],[11,"eq","","",120,[[["cudnnrnndatalayout_t",4]]]],[11,"eq","","",121,[[["cudnnrnnpaddingmode_t",4]]]],[11,"eq","","",122,[[["cudnnseqdataaxis_t",4]]]],[11,"eq","","",123,[[["cudnnmultiheadattnweightkind_t",4]]]],[11,"eq","","",124,[[["cudnnwgradmode_t",4]]]],[11,"eq","","",125,[[["cudnnctclossalgo_t",4]]]],[11,"eq","","",126,[[["cudnnlossnormalizationmode_t",4]]]],[11,"eq","","",127,[[["cudnnseverity_t",4]]]],[11,"eq","","",128,[[["cudnnfusedops_t",4]]]],[11,"eq","","",129,[[["cudnnfusedopsconstparamlabel_t",4]]]],[11,"eq","","",130,[[["cudnnfusedopspointerplaceholder_t",4]]]],[11,"eq","","",131,[[["cudnnfusedopsvariantparamlabel_t",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"hash","","",51,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",62,[[]]],[11,"hash","","",63,[[]]],[11,"hash","","",64,[[]]],[11,"hash","","",65,[[]]],[11,"hash","","",66,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",68,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",70,[[]]],[11,"hash","","",71,[[]]],[11,"hash","","",72,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",76,[[]]],[11,"hash","","",77,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",80,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",82,[[]]],[11,"hash","","",83,[[]]],[11,"hash","","",84,[[]]],[11,"hash","","",85,[[]]],[11,"hash","","",86,[[]]],[11,"hash","","",87,[[]]],[11,"hash","","",88,[[]]],[11,"hash","","",89,[[]]],[11,"hash","","",90,[[]]],[11,"hash","","",91,[[]]],[11,"hash","","",92,[[]]],[11,"hash","","",93,[[]]],[11,"hash","","",94,[[]]],[11,"hash","","",95,[[]]],[11,"hash","","",96,[[]]],[11,"hash","","",97,[[]]],[11,"hash","","",98,[[]]],[11,"hash","","",99,[[]]],[11,"hash","","",100,[[]]],[11,"hash","","",101,[[]]],[11,"hash","","",102,[[]]],[11,"hash","","",103,[[]]],[11,"hash","","",104,[[]]],[11,"hash","","",105,[[]]],[11,"hash","","",106,[[]]],[11,"hash","","",107,[[]]],[11,"hash","","",108,[[]]],[11,"hash","","",109,[[]]],[11,"hash","","",110,[[]]],[11,"hash","","",111,[[]]],[11,"hash","","",112,[[]]],[11,"hash","","",113,[[]]],[11,"hash","","",114,[[]]],[11,"hash","","",115,[[]]],[11,"hash","","",116,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",118,[[]]],[11,"hash","","",119,[[]]],[11,"hash","","",120,[[]]],[11,"hash","","",121,[[]]],[11,"hash","","",122,[[]]],[11,"hash","","",123,[[]]],[11,"hash","","",124,[[]]],[11,"hash","","",125,[[]]],[11,"hash","","",126,[[]]],[11,"hash","","",127,[[]]],[11,"hash","","",128,[[]]],[11,"hash","","",129,[[]]],[11,"hash","","",130,[[]]],[11,"hash","","",131,[[]]]],"p":[[3,"dim3"],[3,"cudaChannelFormatDesc"],[3,"cudaPitchedPtr"],[3,"cudaExtent"],[3,"cudaPos"],[3,"cudaMemcpy3DParms"],[3,"cudaMemcpy3DPeerParms"],[3,"cudaMemsetParams"],[3,"cudaHostNodeParams"],[3,"cudaResourceDesc"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_2"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_3"],[3,"cudaResourceDesc__bindgen_ty_1__bindgen_ty_4"],[3,"cudaResourceViewDesc"],[3,"cudaPointerAttributes"],[3,"cudaFuncAttributes"],[3,"CUuuid_st"],[3,"cudaDeviceProp"],[3,"cudaIpcEventHandle_st"],[3,"cudaIpcMemHandle_st"],[3,"cudaExternalMemoryHandleDesc"],[3,"cudaExternalMemoryHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalMemoryBufferDesc"],[3,"cudaExternalMemoryMipmappedArrayDesc"],[3,"cudaExternalSemaphoreHandleDesc"],[3,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_3"],[3,"cudaExternalSemaphoreWaitParams"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_1"],[3,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_3"],[3,"cudaLaunchParams"],[3,"cudaKernelNodeParams"],[3,"surfaceReference"],[3,"textureReference"],[3,"cudaTextureDesc"],[3,"cudnnConvolutionFwdAlgoPerf_t"],[3,"cudnnConvolutionBwdFilterAlgoPerf_t"],[3,"cudnnConvolutionBwdDataAlgoPerf_t"],[3,"cudnnAlgorithm_t"],[3,"cudnnDebug_t"],[19,"cudaResourceDesc__bindgen_ty_1"],[19,"cudaExternalMemoryHandleDesc__bindgen_ty_1"],[19,"cudaExternalSemaphoreHandleDesc__bindgen_ty_1"],[19,"cudaExternalSemaphoreSignalParams__bindgen_ty_1__bindgen_ty_2"],[19,"cudaExternalSemaphoreWaitParams__bindgen_ty_1__bindgen_ty_2"],[19,"cudnnAlgorithm_t_Algorithm"],[4,"cudaError"],[4,"cudaChannelFormatKind"],[4,"cudaMemoryType"],[4,"cudaMemcpyKind"],[4,"cudaStreamCaptureStatus"],[4,"cudaStreamCaptureMode"],[4,"cudaGraphicsRegisterFlags"],[4,"cudaGraphicsMapFlags"],[4,"cudaGraphicsCubeFace"],[4,"cudaResourceType"],[4,"cudaResourceViewFormat"],[4,"cudaFuncAttribute"],[4,"cudaFuncCache"],[4,"cudaSharedMemConfig"],[4,"cudaSharedCarveout"],[4,"cudaComputeMode"],[4,"cudaLimit"],[4,"cudaMemoryAdvise"],[4,"cudaMemRangeAttribute"],[4,"cudaOutputMode"],[4,"cudaDeviceAttr"],[4,"cudaDeviceP2PAttr"],[4,"cudaExternalMemoryHandleType"],[4,"cudaExternalSemaphoreHandleType"],[4,"cudaCGScope"],[4,"cudaGraphNodeType"],[4,"cudaGraphExecUpdateResult"],[4,"cudaRoundMode"],[4,"cudaSurfaceBoundaryMode"],[4,"cudaSurfaceFormatMode"],[4,"cudaTextureAddressMode"],[4,"cudaTextureFilterMode"],[4,"cudaTextureReadMode"],[4,"cudaDataType_t"],[4,"cudnnStatus_t"],[4,"cudnnErrQueryMode_t"],[4,"cudnnDataType_t"],[4,"cudnnMathType_t"],[4,"cudnnNanPropagation_t"],[4,"cudnnDeterminism_t"],[4,"cudnnReorderType_t"],[4,"cudnnTensorFormat_t"],[4,"cudnnFoldingDirection_t"],[4,"cudnnOpTensorOp_t"],[4,"cudnnReduceTensorOp_t"],[4,"cudnnReduceTensorIndices_t"],[4,"cudnnIndicesType_t"],[4,"cudnnConvolutionMode_t"],[4,"cudnnConvolutionFwdPreference_t"],[4,"cudnnConvolutionFwdAlgo_t"],[4,"cudnnConvolutionBwdFilterPreference_t"],[4,"cudnnConvolutionBwdFilterAlgo_t"],[4,"cudnnConvolutionBwdDataPreference_t"],[4,"cudnnConvolutionBwdDataAlgo_t"],[4,"cudnnSoftmaxAlgorithm_t"],[4,"cudnnSoftmaxMode_t"],[4,"cudnnPoolingMode_t"],[4,"cudnnActivationMode_t"],[4,"cudnnLRNMode_t"],[4,"cudnnDivNormMode_t"],[4,"cudnnBatchNormMode_t"],[4,"cudnnBatchNormOps_t"],[4,"cudnnSamplerType_t"],[4,"cudnnRNNAlgo_t"],[4,"cudnnRNNMode_t"],[4,"cudnnRNNBiasMode_t"],[4,"cudnnDirectionMode_t"],[4,"cudnnRNNInputMode_t"],[4,"cudnnRNNClipMode_t"],[4,"cudnnRNNDataLayout_t"],[4,"cudnnRNNPaddingMode_t"],[4,"cudnnSeqDataAxis_t"],[4,"cudnnMultiHeadAttnWeightKind_t"],[4,"cudnnWgradMode_t"],[4,"cudnnCTCLossAlgo_t"],[4,"cudnnLossNormalizationMode_t"],[4,"cudnnSeverity_t"],[4,"cudnnFusedOps_t"],[4,"cudnnFusedOpsConstParamLabel_t"],[4,"cudnnFusedOpsPointerPlaceHolder_t"],[4,"cudnnFusedOpsVariantParamLabel_t"],[3,"cudaArray"],[3,"cudaMipmappedArray"],[3,"cudaGraphicsResource"],[3,"CUstream_st"],[3,"CUevent_st"],[3,"CUexternalMemory_st"],[3,"CUexternalSemaphore_st"],[3,"CUgraph_st"],[3,"CUgraphNode_st"],[3,"CUgraphExec_st"],[3,"cudnnContext"],[3,"cudnnRuntimeTag_t"],[3,"cudnnTensorStruct"],[3,"cudnnConvolutionStruct"],[3,"cudnnPoolingStruct"],[3,"cudnnFilterStruct"],[3,"cudnnLRNStruct"],[3,"cudnnActivationStruct"],[3,"cudnnSpatialTransformerStruct"],[3,"cudnnOpTensorStruct"],[3,"cudnnReduceTensorStruct"],[3,"cudnnCTCLossStruct"],[3,"cudnnTensorTransformStruct"],[3,"cudnnDropoutStruct"],[3,"cudnnRNNStruct"],[3,"cudnnPersistentRNNPlan"],[3,"cudnnRNNDataStruct"],[3,"cudnnAlgorithmStruct"],[3,"cudnnAlgorithmPerformanceStruct"],[3,"cudnnSeqDataStruct"],[3,"cudnnAttnStruct"],[3,"cudnnFusedOpsConstParamStruct"],[3,"cudnnFusedOpsVariantParamStruct"],[3,"cudnnFusedOpsPlanStruct"]]},\
"rust_blas":{"doc":"BLAS bindings and wrappers.","i":[[0,"attribute","rust_blas","Various attributes of vectors and matrices.",null,null],[4,"Order","rust_blas::attribute","",null,null],[13,"RowMajor","","",0,null],[13,"ColMajor","","",0,null],[4,"Transpose","","",null,null],[13,"NoTrans","","",1,null],[13,"Trans","","",1,null],[13,"ConjTrans","","",1,null],[4,"Symmetry","","",null,null],[13,"Upper","","",2,null],[13,"Lower","","",2,null],[4,"Diagonal","","",null,null],[13,"NonUnit","","",3,null],[13,"Unit","","",3,null],[4,"Side","","",null,null],[13,"Left","","",4,null],[13,"Right","","",4,null],[0,"default","rust_blas","",null,null],[8,"Default","rust_blas::default","",null,null],[10,"one","","",5,[[]]],[10,"zero","","",5,[[]]],[10,"neg_one","","",5,[[]]],[0,"matrix","rust_blas","Matrix operations.",null,null],[0,"ll","rust_blas::matrix","Bindings for matrix functions.",null,null],[0,"cblas_s","rust_blas::matrix::ll","",null,null],[5,"cblas_sgemm","rust_blas::matrix::ll::cblas_s","",null,null],[5,"cblas_ssymm","","",null,null],[5,"cblas_strmm","","",null,null],[5,"cblas_strsm","","",null,null],[5,"cblas_ssyrk","","",null,null],[5,"cblas_ssyr2k","","",null,null],[0,"cblas_d","rust_blas::matrix::ll","",null,null],[5,"cblas_dgemm","rust_blas::matrix::ll::cblas_d","",null,null],[5,"cblas_dsymm","","",null,null],[5,"cblas_dtrmm","","",null,null],[5,"cblas_dtrsm","","",null,null],[5,"cblas_dsyrk","","",null,null],[5,"cblas_dsyr2k","","",null,null],[0,"cblas_c","rust_blas::matrix::ll","",null,null],[5,"cblas_cgemm","rust_blas::matrix::ll::cblas_c","",null,null],[5,"cblas_csymm","","",null,null],[5,"cblas_chemm","","",null,null],[5,"cblas_ctrmm","","",null,null],[5,"cblas_ctrsm","","",null,null],[5,"cblas_cherk","","",null,null],[5,"cblas_cher2k","","",null,null],[5,"cblas_csyrk","","",null,null],[5,"cblas_csyr2k","","",null,null],[0,"cblas_z","rust_blas::matrix::ll","",null,null],[5,"cblas_zgemm","rust_blas::matrix::ll::cblas_z","",null,null],[5,"cblas_zsymm","","",null,null],[5,"cblas_zhemm","","",null,null],[5,"cblas_ztrmm","","",null,null],[5,"cblas_ztrsm","","",null,null],[5,"cblas_zherk","","",null,null],[5,"cblas_zher2k","","",null,null],[5,"cblas_zsyrk","","",null,null],[5,"cblas_zsyr2k","","",null,null],[0,"ops","rust_blas::matrix","Wrappers for matrix functions.",null,null],[8,"Gemm","rust_blas::matrix::ops","",null,null],[10,"gemm","","",6,[[["transpose",4],["matrix",8],["matrix",8]]]],[8,"Symm","","",null,null],[10,"symm","","",7,[[["matrix",8],["matrix",8],["side",4],["symmetry",4]]]],[8,"Hemm","","",null,null],[10,"hemm","","",8,[[["matrix",8],["matrix",8],["side",4],["symmetry",4]]]],[8,"Trmm","","",null,null],[10,"trmm","","",9,[[["matrix",8],["matrix",8],["transpose",4],["side",4],["symmetry",4],["diagonal",4]]]],[8,"Trsm","","",null,null],[10,"trsm","","",10,[[["matrix",8],["matrix",8],["transpose",4],["side",4],["symmetry",4],["diagonal",4]]]],[8,"Herk","","",null,null],[10,"herk","","",11,[[["matrix",8],["transpose",4],["symmetry",4],["matrix",8]]]],[8,"Her2k","","",null,null],[10,"her2k","","",12,[[["matrix",8],["matrix",8],["transpose",4],["symmetry",4],["complex",3]]]],[8,"Syrk","","",null,null],[10,"syrk","","",13,[[["matrix",8],["matrix",8],["transpose",4],["symmetry",4]]]],[8,"Syr2k","","",null,null],[10,"syr2k","","",14,[[["matrix",8],["matrix",8],["transpose",4],["symmetry",4]]]],[8,"Matrix","rust_blas::matrix","Methods that allow a type to be used in BLAS functions as…",null,null],[11,"lead_dim","","The leading dimension of the matrix. Defaults to `cols`…",15,[[]]],[11,"order","","The order of the matrix. Defaults to `RowMajor`.",15,[[],["order",4]]],[10,"rows","","Returns the number of rows.",15,[[]]],[10,"cols","","Returns the number of columns.",15,[[]]],[10,"as_ptr","","An unsafe pointer to a contiguous block of memory.",15,[[]]],[10,"as_mut_ptr","","An unsafe pointer to a contiguous block of memory.",15,[[]]],[8,"BandMatrix","","",null,null],[10,"sub_diagonals","","",16,[[]]],[10,"sup_diagonals","","",16,[[]]],[10,"as_matrix","","",16,[[],["matrix",8]]],[0,"matrix_vector","rust_blas","Matrix-vector operations.",null,null],[0,"ll","rust_blas::matrix_vector","Bindings for matrix-vector functions.",null,null],[0,"cblas_s","rust_blas::matrix_vector::ll","",null,null],[5,"cblas_sgemv","rust_blas::matrix_vector::ll::cblas_s","",null,null],[5,"cblas_ssymv","","",null,null],[5,"cblas_strmv","","",null,null],[5,"cblas_strsv","","",null,null],[5,"cblas_sger","","",null,null],[5,"cblas_ssyr","","",null,null],[5,"cblas_ssyr2","","",null,null],[5,"cblas_sspmv","","",null,null],[5,"cblas_sgbmv","","",null,null],[5,"cblas_ssbmv","","",null,null],[5,"cblas_stbmv","","",null,null],[5,"cblas_stbsv","","",null,null],[5,"cblas_stpmv","","",null,null],[5,"cblas_stpsv","","",null,null],[5,"cblas_sspr","","",null,null],[5,"cblas_sspr2","","",null,null],[0,"cblas_d","rust_blas::matrix_vector::ll","",null,null],[5,"cblas_dgemv","rust_blas::matrix_vector::ll::cblas_d","",null,null],[5,"cblas_dsymv","","",null,null],[5,"cblas_dtrmv","","",null,null],[5,"cblas_dtrsv","","",null,null],[5,"cblas_dger","","",null,null],[5,"cblas_dsyr","","",null,null],[5,"cblas_dsyr2","","",null,null],[5,"cblas_dspmv","","",null,null],[5,"cblas_dgbmv","","",null,null],[5,"cblas_dsbmv","","",null,null],[5,"cblas_dtbmv","","",null,null],[5,"cblas_dtbsv","","",null,null],[5,"cblas_dtpmv","","",null,null],[5,"cblas_dtpsv","","",null,null],[5,"cblas_dspr","","",null,null],[5,"cblas_dspr2","","",null,null],[0,"cblas_c","rust_blas::matrix_vector::ll","",null,null],[5,"cblas_cgemv","rust_blas::matrix_vector::ll::cblas_c","",null,null],[5,"cblas_csymv","","",null,null],[5,"cblas_chemv","","",null,null],[5,"cblas_ctrmv","","",null,null],[5,"cblas_ctrsv","","",null,null],[5,"cblas_cgeru","","",null,null],[5,"cblas_cgerc","","",null,null],[5,"cblas_cher","","",null,null],[5,"cblas_cher2","","",null,null],[5,"cblas_cgbmv","","",null,null],[5,"cblas_chbmv","","",null,null],[5,"cblas_ctbmv","","",null,null],[5,"cblas_ctbsv","","",null,null],[5,"cblas_chpmv","","",null,null],[5,"cblas_ctpmv","","",null,null],[5,"cblas_ctpsv","","",null,null],[5,"cblas_chpr","","",null,null],[5,"cblas_chpr2","","",null,null],[0,"cblas_z","rust_blas::matrix_vector::ll","",null,null],[5,"cblas_zgemv","rust_blas::matrix_vector::ll::cblas_z","",null,null],[5,"cblas_zsymv","","",null,null],[5,"cblas_zhemv","","",null,null],[5,"cblas_ztrmv","","",null,null],[5,"cblas_ztrsv","","",null,null],[5,"cblas_zgeru","","",null,null],[5,"cblas_zgerc","","",null,null],[5,"cblas_zher","","",null,null],[5,"cblas_zher2","","",null,null],[5,"cblas_zgbmv","","",null,null],[5,"cblas_zhbmv","","",null,null],[5,"cblas_ztbmv","","",null,null],[5,"cblas_ztbsv","","",null,null],[5,"cblas_zhpmv","","",null,null],[5,"cblas_ztpmv","","",null,null],[5,"cblas_ztpsv","","",null,null],[5,"cblas_zhpr","","",null,null],[5,"cblas_zhpr2","","",null,null],[0,"ops","rust_blas::matrix_vector","Wrappers for matrix-vector functions.",null,null],[8,"Gemv","rust_blas::matrix_vector::ops","General multiply with vector",null,null],[10,"gemv","","",17,[[["transpose",4],["matrix",8]]]],[8,"Symv","","Symmetric multiply with vector",null,null],[10,"symv","","",18,[[["matrix",8],["symmetry",4]]]],[8,"Hemv","","Hermitian multiply with vector",null,null],[10,"hemv","","",19,[[["matrix",8],["symmetry",4]]]],[8,"Ger","","General rank-1 update",null,null],[10,"ger","","",20,[[["matrix",8]]]],[8,"Gerc","","General rank-1 update (using hermitian conjugate)",null,null],[11,"gerc","","",21,[[["matrix",8]]]],[8,"Syr","","Symmetric rank-1 update",null,null],[10,"syr","","",22,[[["matrix",8],["symmetry",4]]]],[8,"Her","","Hermitian rank-1 update",null,null],[10,"her","","",23,[[["symmetry",4],["matrix",8]]]],[8,"Syr2","","Symmetric rank-2 update",null,null],[10,"syr2","","",24,[[["matrix",8],["symmetry",4]]]],[8,"Her2","","Hermitian rank-2 update",null,null],[10,"her2","","",25,[[["matrix",8],["symmetry",4]]]],[8,"Gbmv","","General band matrix multiply with vector.",null,null],[10,"gbmv","","",26,[[["transpose",4],["bandmatrix",8]]]],[8,"Sbmv","","Symmetric band matrix multiply with vector",null,null],[10,"sbmv","","",27,[[["symmetry",4],["bandmatrix",8]]]],[8,"Hbmv","","Hermitian band matrix multiply with vector",null,null],[10,"hbmv","","",28,[[["symmetry",4],["bandmatrix",8]]]],[8,"Tbmv","","Triangular band matrix multiply with vector",null,null],[10,"tbmv","","",29,[[["bandmatrix",8],["transpose",4],["diagonal",4],["symmetry",4]]]],[8,"Tbsv","","Solve triangular band matrix system",null,null],[10,"tbsv","","",30,[[["bandmatrix",8],["transpose",4],["diagonal",4],["symmetry",4]]]],[8,"Spmv","","Symmetric packed matrix multiply with vector",null,null],[10,"spmv","","",31,[[["matrix",8],["symmetry",4]]]],[8,"Hpmv","","Hermitian packed matrix multiply with vector",null,null],[10,"hpmv","","",32,[[["matrix",8],["symmetry",4]]]],[8,"Tpmv","","Triangular packed matrix multiply with vector",null,null],[10,"tpmv","","",33,[[["matrix",8],["transpose",4],["diagonal",4],["symmetry",4]]]],[8,"Tpsv","","Solve triangular packed matrix system",null,null],[10,"tpsv","","",34,[[["matrix",8],["transpose",4],["diagonal",4],["symmetry",4]]]],[8,"Hpr","","Hermitian packed matrix rank-1 update",null,null],[10,"hpr","","",35,[[["symmetry",4],["matrix",8]]]],[8,"Spr","","Symmetric packed matrix rank-1 update",null,null],[10,"spr","","",36,[[["matrix",8],["symmetry",4]]]],[8,"Spr2","","Symmetric packed matrix rank-2 update",null,null],[10,"spr2","","",37,[[["matrix",8],["symmetry",4]]]],[8,"Hpr2","","Hermitian packed matrix rank-2 update",null,null],[10,"hpr2","","",38,[[["matrix",8],["symmetry",4]]]],[0,"vector","rust_blas","Vector operations.",null,null],[0,"ll","rust_blas::vector","Bindings for vector functions.",null,null],[0,"cblas_s","rust_blas::vector::ll","",null,null],[5,"cblas_scopy","rust_blas::vector::ll::cblas_s","",null,null],[5,"cblas_saxpy","","",null,null],[5,"cblas_sscal","","",null,null],[5,"cblas_sswap","","",null,null],[5,"cblas_sdsdot","","",null,null],[5,"cblas_sdot","","",null,null],[5,"cblas_sasum","","",null,null],[5,"cblas_scasum","","",null,null],[5,"cblas_snrm2","","",null,null],[5,"cblas_scnrm2","","",null,null],[5,"cblas_srot","","",null,null],[5,"cblas_srotm","","",null,null],[5,"cblas_srotg","","",null,null],[5,"cblas_srotmg","","",null,null],[0,"cblas_d","rust_blas::vector::ll","",null,null],[5,"cblas_dcopy","rust_blas::vector::ll::cblas_d","",null,null],[5,"cblas_daxpy","","",null,null],[5,"cblas_dscal","","",null,null],[5,"cblas_dswap","","",null,null],[5,"cblas_dsdot","","",null,null],[5,"cblas_ddot","","",null,null],[5,"cblas_dasum","","",null,null],[5,"cblas_dzasum","","",null,null],[5,"cblas_dnrm2","","",null,null],[5,"cblas_dznrm2","","",null,null],[5,"cblas_drot","","",null,null],[5,"cblas_drotm","","",null,null],[5,"cblas_drotg","","",null,null],[5,"cblas_drotmg","","",null,null],[0,"cblas_c","rust_blas::vector::ll","",null,null],[5,"cblas_ccopy","rust_blas::vector::ll::cblas_c","",null,null],[5,"cblas_caxpy","","",null,null],[5,"cblas_cscal","","",null,null],[5,"cblas_csscal","","",null,null],[5,"cblas_cswap","","",null,null],[5,"cblas_cdotu_sub","","",null,null],[5,"cblas_cdotc_sub","","",null,null],[0,"cblas_z","rust_blas::vector::ll","",null,null],[5,"cblas_zcopy","rust_blas::vector::ll::cblas_z","",null,null],[5,"cblas_zaxpy","","",null,null],[5,"cblas_zscal","","",null,null],[5,"cblas_zdscal","","",null,null],[5,"cblas_zswap","","",null,null],[5,"cblas_zdotu_sub","","",null,null],[5,"cblas_zdotc_sub","","",null,null],[0,"cblas_i","rust_blas::vector::ll","",null,null],[5,"cblas_isamax","rust_blas::vector::ll::cblas_i","",null,null],[5,"cblas_idamax","","",null,null],[5,"cblas_icamax","","",null,null],[5,"cblas_izamax","","",null,null],[0,"ops","rust_blas::vector","Wrappers for vector functions.",null,null],[8,"Copy","rust_blas::vector::ops","",null,null],[10,"copy","","Copies `src.len()` elements of `src` into `dst`.",39,[[]]],[10,"copy_mat","","Copies the entire matrix `dst` into `src`.",39,[[["matrix",8],["matrix",8]]]],[8,"Axpy","","Computes `a * x + y` and stores the result in `y`.",null,null],[10,"axpy","","",40,[[]]],[10,"axpy_mat","","",40,[[["matrix",8],["matrix",8]]]],[8,"Scal","","Computes `a * x` and stores the result in `x`.",null,null],[10,"scal","","",41,[[]]],[10,"scal_mat","","",41,[[["matrix",8]]]],[8,"Swap","","Swaps the content of `x` and `y`.",null,null],[10,"swap","","If they are different lengths, the shorter length is used.",42,[[]]],[8,"Dot","","Computes `x^T * y`.",null,null],[10,"dot","","",43,[[]]],[8,"Dotc","","Computes `x^H * y`.",null,null],[11,"dotc","","",44,[[]]],[8,"Asum","","Computes the sum of the absolute values of elements in a…",null,null],[10,"asum","","",45,[[]]],[8,"Nrm2","","Computes the L2 norm (Euclidian length) of a vector.",null,null],[10,"nrm2","","",46,[[]]],[8,"Iamax","","Finds the index of the element with maximum absolute value…",null,null],[10,"iamax","","",47,[[]]],[8,"Rot","","Applies a Givens rotation matrix to a pair of vectors,…",null,null],[10,"rot","","",48,[[]]],[8,"Vector","rust_blas::vector","Methods that allow a type to be used in BLAS functions as…",null,null],[11,"inc","","The stride within the vector. For example, if `inc`…",49,[[]]],[10,"len","","The number of elements in the vector.",49,[[]]],[10,"as_ptr","","An unsafe pointer to a contiguous block of memory.",49,[[]]],[10,"as_mut_ptr","","An unsafe mutable pointer to a contiguous block of memory.",49,[[]]],[11,"is_empty","","Check if Vector is empty",49,[[]]],[8,"VectorOperations","","",null,null],[11,"update","","",50,[[["vector",8]]]],[11,"scale","","",50,[[]]],[11,"dot","","",50,[[["vector",8]]]],[11,"abs_sum","","",50,[[]]],[11,"norm","","",50,[[]]],[11,"max_index","","",50,[[]]],[0,"math","rust_blas","",null,null],[4,"Trans","rust_blas::math","",null,null],[13,"T","","",51,null],[13,"H","","",51,null],[4,"Marker","","",null,null],[13,"T","","",52,null],[13,"H","","",52,null],[0,"mat","","",null,null],[3,"Mat","rust_blas::math::mat","",null,null],[11,"new_from_data","","",53,[[["vec",3]],["mat",3]]],[11,"new","","",53,[[],["mat",3]]],[11,"rows","","",53,[[]]],[11,"cols","","",53,[[]]],[11,"set_rows","","Set Matrix Rows Manually # Safety This only sets the value…",53,[[]]],[11,"set_cols","","Set Matrix Columns Manually # Safety This only sets the…",53,[[]]],[11,"push","","Push a single value to matrix data backing # Safety This…",53,[[]]],[11,"fill","","",53,[[],["mat",3]]],[0,"bandmat","rust_blas::math","",null,null],[3,"BandMat","rust_blas::math::bandmat","Banded Matrix A banded matrix is a matrix where only the…",null,null],[11,"new","","",54,[[],["bandmat",3]]],[11,"rows","","",54,[[]]],[11,"cols","","",54,[[]]],[11,"set_rows","","Set Rows Manually # Safety No guarantees are made about…",54,[[]]],[11,"set_cols","","Set Columns Manually # Safety No guarantees are made about…",54,[[]]],[11,"set_sub_diagonals","","",54,[[]]],[11,"set_sup_diagonals","","",54,[[]]],[11,"push","","",54,[[]]],[11,"from_matrix","","Converts a [`Mat`] into a [`BandMat`].",54,[[["mat",3]],["bandmat",3]]],[11,"to_matrix","","Converts a [`BandMat`] back into a [`Mat`].",54,[[],["mat",3]]],[11,"fill","","",54,[[],["bandmat",3]]],[0,"matrix","rust_blas::math","",null,null],[0,"matrix_vector","","",null,null],[0,"vector","","",null,null],[14,"mat","rust_blas","",null,null],[11,"from","rust_blas::attribute","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","rust_blas::math","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","rust_blas::math::mat","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","rust_blas::math::bandmat","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"rows","rust_blas::math::mat","",53,[[]]],[11,"cols","","",53,[[]]],[11,"as_ptr","","",53,[[]]],[11,"as_mut_ptr","","",53,[[]]],[11,"lead_dim","rust_blas::math::bandmat","",54,[[]]],[11,"rows","","",54,[[]]],[11,"cols","","",54,[[]]],[11,"as_ptr","","",54,[[]]],[11,"as_mut_ptr","","",54,[[]]],[11,"sub_diagonals","","",54,[[]]],[11,"sup_diagonals","","",54,[[]]],[11,"as_matrix","","",54,[[],["matrix",8]]],[11,"from","rust_blas::math::mat","",53,[[["matrix",8]],["mat",3]]],[11,"from","rust_blas::math::bandmat","",54,[[["bandmatrix",8]],["bandmat",3]]],[11,"clone","rust_blas::attribute","",0,[[],["order",4]]],[11,"clone","","",1,[[],["transpose",4]]],[11,"clone","","",2,[[],["symmetry",4]]],[11,"clone","","",3,[[],["diagonal",4]]],[11,"clone","","",4,[[],["side",4]]],[11,"eq","rust_blas::math::mat","",53,[[["mat",3]]]],[11,"ne","","",53,[[["mat",3]]]],[11,"eq","rust_blas::math::bandmat","",54,[[["bandmat",3]]]],[11,"ne","","",54,[[["bandmat",3]]]],[11,"deref","rust_blas::math","",51,[[]]],[11,"fmt","rust_blas::math::mat","",53,[[["formatter",3]],["result",6]]],[11,"fmt","rust_blas::math::bandmat","",54,[[["formatter",3]],["result",6]]],[11,"fmt","rust_blas::math::mat","",53,[[["formatter",3]],["result",6]]],[11,"fmt","rust_blas::math::bandmat","",54,[[["formatter",3]],["result",6]]],[11,"mul","rust_blas::math","",51,[[["matrix",8]],["mat",3]]],[11,"mul","","",51,[[["trans",4],["matrix",8]],["mat",3]]],[11,"mul","","",51,[[["vector",8]]]],[11,"index","rust_blas::math::mat","",53,[[]]],[11,"index","rust_blas::math::bandmat","",54,[[]]]],"p":[[4,"Order"],[4,"Transpose"],[4,"Symmetry"],[4,"Diagonal"],[4,"Side"],[8,"Default"],[8,"Gemm"],[8,"Symm"],[8,"Hemm"],[8,"Trmm"],[8,"Trsm"],[8,"Herk"],[8,"Her2k"],[8,"Syrk"],[8,"Syr2k"],[8,"Matrix"],[8,"BandMatrix"],[8,"Gemv"],[8,"Symv"],[8,"Hemv"],[8,"Ger"],[8,"Gerc"],[8,"Syr"],[8,"Her"],[8,"Syr2"],[8,"Her2"],[8,"Gbmv"],[8,"Sbmv"],[8,"Hbmv"],[8,"Tbmv"],[8,"Tbsv"],[8,"Spmv"],[8,"Hpmv"],[8,"Tpmv"],[8,"Tpsv"],[8,"Hpr"],[8,"Spr"],[8,"Spr2"],[8,"Hpr2"],[8,"Copy"],[8,"Axpy"],[8,"Scal"],[8,"Swap"],[8,"Dot"],[8,"Dotc"],[8,"Asum"],[8,"Nrm2"],[8,"Iamax"],[8,"Rot"],[8,"Vector"],[8,"VectorOperations"],[4,"Trans"],[4,"Marker"],[3,"Mat"],[3,"BandMat"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);